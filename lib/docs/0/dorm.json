{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"uri":"dart-sdk/lib/core/errors.dart","name":"Error","id":"Error","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"comment":"\nSafely convert a value to a [String] description.\n\nThe conversion is guaranteed to not throw, so it won't use the object's\ntoString method.\n","name":"safeToString","id":"safeToString1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"object","id":"object","kind":"param"}],"line":"14","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"_objectToString","isPrivate":true,"id":"_objectToString1()","children":[{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"object","id":"object","kind":"param"}],"line":"32","kind":"method"},{"ref":{"refId":"dart.core/StackTrace","name":"StackTrace"},"name":"stackTrace","id":"stackTrace","line":"34","kind":"property"}],"line":"7","kind":"class"}],"line":"5","kind":"library"},{"comment":"\n*Warning*: this library is experimental, and APIs are subject to change.\n\nThis library is used to observe changes to [Observable] types. It also\nhas helpers to implement [Observable] objects.\n\nFor example:\n\n    class Monster extends Unit with ObservableMixin {\n      int _health = 100;\n      get health => _health;\n      set health(value) {\n        _health = notifyChange(const Symbol('health'), _health, value);\n      }\n\n      void damage(int amount) {\n        print('$this takes $amount damage!');\n        health -= amount;\n      }\n\n      toString() => 'Monster with $health hit points';\n    }\n\n    main() {\n      var obj = new Monster();\n      obj.changes.listen((records) {\n        print('Changes to $obj were: $records');\n      });\n      // Schedules asynchronous delivery of these changes\n      obj.damage(10);\n      obj.damage(20);\n      print('done!');\n    }\n","uri":"package:observe/observe.dart","name":"package:observe/observe.dart","id":"observe","children":[{"isAbstract":true,"interfaces":[{"refId":"observe/Observable","name":"Observable"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nMixin for implementing [Observable] objects.\n\nWhen a field, property, or indexable item is changed, a derived class should\ncall [notifyPropertyChange]. See that method for an example.\n","name":"ObservableMixin","id":"ObservableMixin","children":[{"returnType":{"refId":"void","name":"void"},"name":"_deliverChanges","isPrivate":true,"id":"_deliverChanges0()","line":"98","kind":"method"},{"comment":"\nNotify that the field [name] of this object has been changed.\n\nThe [oldValue] and [newValue] are also recorded. If the two values are\nidentical, no change will be recorded.\n\nFor convenience this returns [newValue]. This makes it easy to use in a\nsetter:\n\n    var _myField;\n    get myField => _myField;\n    set myField(value) {\n      _myField = notifyPropertyChange(\n          const Symbol('myField'), _myField, value);\n    }\n","name":"notifyPropertyChange","id":"notifyPropertyChange3()","children":[{"ref":{"refId":"dart.core/Symbol","name":"Symbol"},"name":"field","id":"field","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"oldValue","id":"oldValue","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"newValue","id":"newValue","kind":"param"}],"line":"132","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nNotify observers of a change. For most objects [notifyPropertyChange] is\nmore convenient, but collections sometimes deliver other types of changes\nsuch as a [ListChangeRecord].\n","name":"notifyChange","id":"notifyChange1()","children":[{"ref":{"refId":"observe/ChangeRecord","name":"ChangeRecord"},"name":"record","id":"record","kind":"param"}],"line":"144","kind":"method"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"observe/ChangeRecord","name":"ChangeRecord"}],"name":"List"}],"name":"Stream"},"name":"changes","id":"changes","line":"90","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nTrue if this object has any observers, and should call\n[notifyPropertyChange] for changes.\n","name":"hasObservers","id":"hasObservers","line":"111","kind":"property"},{"ref":{"refId":"dart.async/StreamController","name":"StreamController"},"name":"_broadcastController","isPrivate":true,"id":"_broadcastController","line":"87","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"observe/ChangeRecord","name":"ChangeRecord"}],"name":"List"},"name":"_changes","isPrivate":true,"id":"_changes","line":"88","kind":"variable"}],"line":"86","kind":"class"},{"interfaces":[{"refId":"observe/ObservableMixin","name":"ObservableMixin"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nBase class implementing [Observable].\n\nWhen a field, property, or indexable item is changed, a derived class should\ncall [notifyPropertyChange]. See that method for an example.\n","name":"ObservableBase","id":"ObservableBase","children":[{"returnType":{"refId":"void","name":"void"},"name":"_deliverChanges","isPrivate":true,"id":"_deliverChanges0()","line":"98","kind":"method"},{"comment":"\nNotify that the field [name] of this object has been changed.\n\nThe [oldValue] and [newValue] are also recorded. If the two values are\nidentical, no change will be recorded.\n\nFor convenience this returns [newValue]. This makes it easy to use in a\nsetter:\n\n    var _myField;\n    get myField => _myField;\n    set myField(value) {\n      _myField = notifyPropertyChange(\n          const Symbol('myField'), _myField, value);\n    }\n","name":"notifyPropertyChange","id":"notifyPropertyChange3()","children":[{"ref":{"refId":"dart.core/Symbol","name":"Symbol"},"name":"field","id":"field","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"oldValue","id":"oldValue","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"newValue","id":"newValue","kind":"param"}],"line":"132","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"\nNotify observers of a change. For most objects [notifyPropertyChange] is\nmore convenient, but collections sometimes deliver other types of changes\nsuch as a [ListChangeRecord].\n","name":"notifyChange","id":"notifyChange1()","children":[{"ref":{"refId":"observe/ChangeRecord","name":"ChangeRecord"},"name":"record","id":"record","kind":"param"}],"line":"144","kind":"method"},{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"observe/ChangeRecord","name":"ChangeRecord"}],"name":"List"}],"name":"Stream"},"name":"changes","id":"changes","line":"90","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"\nTrue if this object has any observers, and should call\n[notifyPropertyChange] for changes.\n","name":"hasObservers","id":"hasObservers","line":"111","kind":"property"},{"ref":{"refId":"dart.async/StreamController","name":"StreamController"},"name":"_broadcastController","isPrivate":true,"id":"_broadcastController","line":"87","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"observe/ChangeRecord","name":"ChangeRecord"}],"name":"List"},"name":"_changes","isPrivate":true,"id":"_changes","line":"88","kind":"variable"}],"line":"78","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"\nInterface representing an observable object. This is used by data in\nmodel-view architectures to notify interested parties of [changes].\n\nThis object does not require any specific technique to implement\nobservability.\n\nYou can use [ObservableMixin] as a base class or mixin to implement this.\n","name":"Observable","id":"Observable","children":[{"ref":{"refId":"dart.async/Stream","arguments":[{"refId":"dart.core/List","arguments":[{"refId":"observe/ChangeRecord","name":"ChangeRecord"}],"name":"List"}],"name":"Stream"},"comment":"\nThe stream of change records to this object.\n\nChanges should be delivered in asynchronous batches by calling\n[queueChangeRecords].\n\n[deliverChangeRecords] can be called to force delivery.\n","name":"changes","id":"changes","line":"69","kind":"property"}],"line":"60","kind":"class"}],"line":"39","kind":"library"}],"comment":"\r\n*Warning*: this library is experimental, and APIs are subject to change.\n\nThis library is to be used in conjunction with a server-side ORM implementation.\n\nYou can however acquire a small Dart test server,\nwhich mimics a Hibernate server to fetch and commit to a JSON based database.\n\nThis test server can be found here: https://github.com/frankpepermans/dorm_mockserver\n\nFor example:\n     \n    // Define a fetch service, this can hook up to an existing server-side webservice\n    FetchService fetchService = new FetchService(url, port, serializer, handleConflictAcceptClient);\n    \n    // Define an entity in Dart, this will need to match with a server-side entity via a DTO\n    // Classes like these can be easily generated on the server for the Dart client\n    @Ref('entities.person')\n    class Person extends MutableEntity {\n     \n     //---------------------------------\n     //\n     // Public properties\n     //\n     //---------------------------------\n     \n     //---------------------------------\n     // refClassName\n     //---------------------------------\n    \n     String get refClassName => 'entities.person';\n    \n     //---------------------------------\n     // id\n     //---------------------------------\n    \n     @Property(ID_SYMBOL, 'id')\n     @Id()\n     @NotNullable()\n     @DefaultValue(0)\n     @Immutable()\n     DormProxy<int> _id;\n     \n     static const String ID = 'id';\n     static const Symbol ID_SYMBOL = const Symbol('orm_domain.Person.id');\n     \n     int get id => _id.value;\n     set id(int value) => _id.value = notifyPropertyChange(ID_SYMBOL, _id.value, value)\n     \n     //---------------------------------\n     // name\n     //---------------------------------\n     \n     @Property(NAME_SYMBOL, 'name')\n     @LabelField()\n     \n     DormProxy<String> _name;\n     \n     static const String NAME = 'name';\n     static const Symbol NAME_SYMBOL = const Symbol('orm_domain.Person.name');\n     \n     String get name => _name.value;\n     set name(String value) => _name.value = notifyPropertyChange(NAME_SYMBOL, _name.value, value);\n     \n     //---------------------------------\n     //\n     // Constructor\n     //\n     //---------------------------------\n     \n     Person() : super() {\n       EntityAssembler assembler = new EntityAssembler();\n       \n       _id = new DormProxy()\n       ..property = 'id'\n       ..propertySymbol = ID_SYMBOL;\n       \n       _name = new DormProxy()\n       ..property = 'name'\n       ..propertySymbol = NAME_SYMBOL;\n       \n       assembler.registerProxies(this, <DormProxy>[_id, _name]);\n     }\n     \n     static Person construct() {\n       return new Person();\n     }\n     \n    }\n\n    main() {\n     fetchService.ormEntityLoad('Person').then(\n       (ObservableList resultList) {\n         resultList.forEach(\n           (Person person) => print(person.name);\n         );\n       }\n     );\n    }\n","uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/dorm.dart","id":"dorm","children":[{"interfaces":[{"refId":"dorm/Serializer","name":"Serializer"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/serialization/serializer_json.dart","name":"SerializerJson","id":"SerializerJson","children":[{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"}],"name":"List"},"name":"incoming","id":"incoming1()","children":[{"ref":{"refId":"dorm/SerializerJson/T","name":"T"},"name":"data","id":"data","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"outgoing","id":"outgoing1()","children":[{"name":"data","id":"data","kind":"param"}],"line":"29","kind":"method"},{"name":"SerializerJson._contruct","isPrivate":true,"id":"SerializerJson._contruct0()","line":"11","kind":"constructor"},{"returnType":{"refId":"dorm/SerializerJson","arguments":[{"refId":"dorm/SerializerJson/T","name":"T"}],"name":"SerializerJson"},"name":"SerializerJson","id":"SerializerJson0()","line":"19","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"3","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/serialization/serializer.dart","name":"Serializer","id":"Serializer","children":[{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"}],"name":"List"},"name":"incoming","id":"incoming1()","children":[{"ref":{"refId":"dorm/Serializer/T","name":"T"},"name":"data","id":"data","kind":"param"}],"line":"11","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"outgoing","id":"outgoing1()","children":[{"name":"data","id":"data","kind":"param"}],"line":"12","kind":"method"},{"name":"T","id":"T","kind":"typeparam"}],"line":"3","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/serialization/serialization_type.dart","name":"SerializationType","id":"SerializationType","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"ENTITY_TYPE","id":"ENTITY_TYPE","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"POINTER","id":"POINTER","line":"12","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isStatic":true,"name":"UID","id":"UID","line":"13","kind":"variable"}],"line":"3","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/serialization/externalizable.dart","name":"IExternalizable","id":"IExternalizable","children":[{"returnType":{"refId":"void","name":"void"},"name":"readExternal","id":"readExternal2()","children":[{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"},"name":"data","id":"data","kind":"param"},{"ref":{"refId":"dorm/OnConflictFunction","name":"OnConflictFunction"},"name":"onConflict","id":"onConflict","kind":"param"}],"line":"11","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"writeExternal","id":"writeExternal1()","children":[{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"},"name":"data","id":"data","kind":"param"}],"line":"12","kind":"method"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/net/service_base.dart","name":"ServiceBase","id":"ServiceBase","children":[{"returnType":{"refId":"dart.async/Future","name":"Future"},"name":"apply","id":"apply3()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"operation","id":"operation","kind":"param"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"},"name":"arguments","id":"arguments","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isUniqueResult","id":"isUniqueResult","kind":"param"}],"line":"30","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"host","id":"host","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"port","id":"port","line":"12","kind":"variable"},{"ref":{"refId":"dorm/Serializer","name":"Serializer"},"isFinal":true,"name":"serializer","id":"serializer","line":"13","kind":"variable"},{"ref":{"refId":"dorm/OnConflictFunction","name":"OnConflictFunction"},"isFinal":true,"name":"onConflict","id":"onConflict","line":"14","kind":"variable"},{"name":"ServiceBase","id":"ServiceBase4()","children":[{"initializedField":{"refId":"dorm/ServiceBase/host","name":"host"},"ref":{"refId":"dart.core/String","name":"String"},"name":"host","id":"host","kind":"param"},{"initializedField":{"refId":"dorm/ServiceBase/port","name":"port"},"ref":{"refId":"dart.core/String","name":"String"},"name":"port","id":"port","kind":"param"},{"initializedField":{"refId":"dorm/ServiceBase/serializer","name":"serializer"},"ref":{"refId":"dorm/Serializer","name":"Serializer"},"name":"serializer","id":"serializer","kind":"param"},{"initializedField":{"refId":"dorm/ServiceBase/onConflict","name":"onConflict"},"ref":{"refId":"dorm/OnConflictFunction","name":"OnConflictFunction"},"name":"onConflict","id":"onConflict","kind":"param"}],"line":"22","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/domain/meta.dart","name":"Annotation","id":"Annotation","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"127","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"maxStringLength","id":"maxStringLength","line":"123","kind":"variable"},{"name":"Annotation","id":"Annotation1()","children":[{"isNamed":true,"ref":{"refId":"dart.core/int","name":"int"},"isOptional":true,"name":"maxStringLength","id":"maxStringLength","kind":"param"}],"line":"125","kind":"constructor"}],"line":"121","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/domain/meta.dart","name":"LabelField","id":"LabelField","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"114","kind":"method"},{"name":"LabelField","id":"LabelField0()","line":"112","kind":"constructor"}],"line":"110","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/domain/meta.dart","name":"Lazy","id":"Lazy","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"102","kind":"method"},{"name":"Lazy","id":"Lazy0()","line":"100","kind":"constructor"}],"line":"98","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/domain/meta.dart","name":"Immutable","id":"Immutable","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"90","kind":"method"},{"name":"Immutable","id":"Immutable0()","line":"88","kind":"constructor"}],"line":"86","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/domain/meta.dart","name":"Id","id":"Id","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"78","kind":"method"},{"name":"Id","id":"Id0()","line":"76","kind":"constructor"}],"line":"74","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/domain/meta.dart","name":"Transient","id":"Transient","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"66","kind":"method"},{"name":"Transient","id":"Transient0()","line":"64","kind":"constructor"}],"line":"62","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/domain/meta.dart","name":"DefaultValue","id":"DefaultValue","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"54","kind":"method"},{"isFinal":true,"name":"value","id":"value","line":"50","kind":"variable"},{"name":"DefaultValue","id":"DefaultValue1()","children":[{"initializedField":{"refId":"dorm/DefaultValue/value","name":"value"},"name":"value","id":"value","kind":"param"}],"line":"52","kind":"constructor"}],"line":"48","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/domain/meta.dart","name":"NotNullable","id":"NotNullable","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"40","kind":"method"},{"name":"NotNullable","id":"NotNullable0()","line":"38","kind":"constructor"}],"line":"36","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/domain/meta.dart","name":"Property","id":"Property","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"28","kind":"method"},{"ref":{"refId":"dart.core/Symbol","name":"Symbol"},"isFinal":true,"name":"propertySymbol","id":"propertySymbol","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"property","id":"property","line":"24","kind":"variable"},{"name":"Property","id":"Property2()","children":[{"initializedField":{"refId":"dorm/Property/propertySymbol","name":"propertySymbol"},"ref":{"refId":"dart.core/Symbol","name":"Symbol"},"name":"propertySymbol","id":"propertySymbol","kind":"param"},{"initializedField":{"refId":"dorm/Property/property","name":"property"},"ref":{"refId":"dart.core/String","name":"String"},"name":"property","id":"property","kind":"param"}],"line":"26","kind":"constructor"}],"line":"21","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/domain/meta.dart","name":"Ref","id":"Ref","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"13","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"path","id":"path","line":"9","kind":"variable"},{"name":"Ref","id":"Ref1()","children":[{"initializedField":{"refId":"dorm/Ref/path","name":"path"},"ref":{"refId":"dart.core/String","name":"String"},"name":"path","id":"path","kind":"param"}],"line":"11","kind":"constructor"}],"line":"7","kind":"class"},{"isAbstract":true,"interfaces":[{"refId":"dorm/IExternalizable","name":"IExternalizable"}],"superclass":{"refId":"observe/ObservableBase","name":"ObservableBase"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/domain/entity.dart","name":"Entity","id":"Entity","children":[{"isOperator":true,"name":"[]","id":"[]1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"propertyName","id":"propertyName","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"void","name":"void"},"isOperator":true,"name":"[]=","id":"[]=2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"propertyName","id":"propertyName","kind":"param"},{"name":"propertyValue","id":"propertyValue","kind":"param"}],"line":"51","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"validate","id":"validate0()","line":"77","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"isDirty","id":"isDirty0()","line":"86","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"readExternal","id":"readExternal2()","children":[{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"},"name":"data","id":"data","kind":"param"},{"ref":{"refId":"dorm/OnConflictFunction","name":"OnConflictFunction"},"name":"onConflict","id":"onConflict","kind":"param"}],"line":"102","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"writeExternal","id":"writeExternal1()","children":[{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"},"name":"data","id":"data","kind":"param"}],"line":"132","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toJson","id":"toJson1()","children":[{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"}],"name":"Map"},"isOptional":true,"name":"convertedEntities","id":"convertedEntities","kind":"param"}],"line":"136","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"144","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_identityKeyListener","isPrivate":true,"id":"_identityKeyListener1()","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"observe/ChangeRecord","name":"ChangeRecord"}],"name":"List"},"name":"changes","id":"changes","kind":"param"}],"line":"164","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_writeExternalImpl","isPrivate":true,"id":"_writeExternalImpl2()","children":[{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"},"name":"data","id":"data","kind":"param"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/int","name":"int"},{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"}],"name":"Map"},"name":"convertedEntities","id":"convertedEntities","kind":"param"}],"line":"184","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"refClassName","id":"refClassName","line":"27","kind":"property"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dorm/DormProxy","name":"DormProxy"}],"name":"List"},"name":"_proxies","isPrivate":true,"id":"_proxies","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/Map","name":"Map"},"name":"_source","isPrivate":true,"id":"_source","line":"12","kind":"variable"},{"ref":{"refId":"dorm/EntityScan","name":"EntityScan"},"name":"_scan","isPrivate":true,"id":"_scan","line":"13","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isPointer","isPrivate":true,"id":"_isPointer","line":"14","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_isRegistered","isPrivate":true,"id":"_isRegistered","line":"14","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_uid","isPrivate":true,"id":"_uid","line":"15","kind":"variable"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/core/metadata_cache.dart","name":"_PropertyMetadataCache","isPrivate":true,"id":"_PropertyMetadataCache","children":[{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"property","id":"property","line":"62","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isId","id":"isId","line":"64","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isTransient","id":"isTransient","line":"65","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isNullable","id":"isNullable","line":"66","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isLabelField","id":"isLabelField","line":"67","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isMutable","id":"isMutable","line":"68","kind":"variable"},{"name":"initialValue","id":"initialValue","line":"70","kind":"variable"},{"name":"_PropertyMetadataCache","id":"_PropertyMetadataCache1()","children":[{"initializedField":{"refId":"dorm/_PropertyMetadataCache/property","name":"property"},"ref":{"refId":"dart.core/String","name":"String"},"name":"property","id":"property","kind":"param"}],"line":"72","kind":"constructor"}],"line":"60","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/core/metadata_cache.dart","name":"MetadataCache","id":"MetadataCache","children":[{"returnType":{"refId":"dorm/_PropertyMetadataCache","name":"_PropertyMetadataCache"},"name":"obtainTagForProperty","id":"obtainTagForProperty1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"property","id":"property","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"registerTagForProperty","id":"registerTagForProperty2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"property","id":"property","kind":"param"},{"ref":{"refId":"dart.core/Object","name":"Object"},"name":"reflectee","id":"reflectee","kind":"param"}],"line":"40","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dorm/_PropertyMetadataCache","name":"_PropertyMetadataCache"}],"name":"List"},"name":"propertyMetadataCacheList","id":"propertyMetadataCacheList","line":"11","kind":"variable"},{"name":"MetadataCache","id":"MetadataCache0()","line":"19","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/core/entity_scan.dart","name":"_ProxyEntry","isPrivate":true,"id":"_ProxyEntry","children":[{"returnType":{"refId":"dorm/_ProxyEntry","name":"_ProxyEntry"},"name":"clone","id":"clone0()","line":"127","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"property","id":"property","line":"120","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"isFinal":true,"name":"isIdentity","id":"isIdentity","line":"121","kind":"variable"},{"ref":{"refId":"dorm/DormProxy","name":"DormProxy"},"name":"proxy","id":"proxy","line":"123","kind":"variable"},{"name":"_ProxyEntry","id":"_ProxyEntry2()","children":[{"initializedField":{"refId":"dorm/_ProxyEntry/property","name":"property"},"ref":{"refId":"dart.core/String","name":"String"},"name":"property","id":"property","kind":"param"},{"initializedField":{"refId":"dorm/_ProxyEntry/isIdentity","name":"isIdentity"},"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isIdentity","id":"isIdentity","kind":"param"}],"line":"125","kind":"constructor"}],"line":"118","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/core/entity_scan.dart","name":"EntityScan","id":"EntityScan","children":[{"returnType":{"refId":"void","name":"void"},"name":"buildKey","id":"buildKey0()","line":"33","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"addProxy","id":"addProxy2()","children":[{"ref":{"refId":"dorm/Property","name":"Property"},"name":"property","id":"property","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isIdentity","id":"isIdentity","kind":"param"}],"line":"97","kind":"method"},{"ref":{"refId":"dorm/EntityScan","name":"EntityScan"},"name":"_original","isPrivate":true,"id":"_original","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dorm/_ProxyEntry","name":"_ProxyEntry"}],"name":"List"},"name":"_proxies","isPrivate":true,"id":"_proxies","line":"13","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dorm/_ProxyEntry","name":"_ProxyEntry"}],"name":"List"},"name":"_identityProxies","isPrivate":true,"id":"_identityProxies","line":"14","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dorm/EntityScan","name":"EntityScan"}],"name":"List"},"name":"_keyCollection","isPrivate":true,"id":"_keyCollection","line":"15","kind":"variable"},{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"entity","id":"entity","line":"23","kind":"variable"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"contructorMethod","id":"contructorMethod","line":"24","kind":"variable"},{"ref":{"refId":"dorm/MetadataCache","name":"MetadataCache"},"name":"metadataCache","id":"metadataCache","line":"25","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"refClassName","id":"refClassName","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isMutableEntity","id":"isMutableEntity","line":"27","kind":"variable"},{"name":"EntityScan","id":"EntityScan0()","line":"64","kind":"constructor"},{"name":"EntityScan.fromScan","id":"EntityScan.fromScan2()","children":[{"ref":{"refId":"dorm/EntityScan","name":"EntityScan"},"name":"original","id":"original","kind":"param"},{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"}],"line":"68","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/core/entity_key.dart","name":"EntityKey","id":"EntityKey","children":[{"returnType":{"refId":"void","name":"void"},"isOperator":true,"name":"[]=","id":"[]=2()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"key","id":"key","kind":"param"},{"name":"value","id":"value","kind":"param"}],"line":"35","kind":"method"},{"returnType":{"refId":"dorm/EntityKey","name":"EntityKey"},"isOperator":true,"name":"[]","id":"[]1()","children":[{"ref":{"refId":"dart.core/List","name":"List"},"name":"otherKey","id":"otherKey","kind":"param"}],"line":"41","kind":"method"},{"returnType":{"refId":"dorm/Entity","name":"Entity"},"name":"getExistingEntity","id":"getExistingEntity1()","children":[{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"forEntity","id":"forEntity","kind":"param"}],"line":"49","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"areSameKeySignature","id":"areSameKeySignature2()","children":[{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"},{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"compareEntity","id":"compareEntity","kind":"param"}],"line":"58","kind":"method"},{"returnType":{"refId":"dart.core/bool","name":"bool"},"name":"remove","id":"remove1()","children":[{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"}],"line":"60","kind":"method"},{"returnType":{"refId":"dart.core/List","arguments":[{"refId":"dorm/EntityScan","name":"EntityScan"}],"name":"List"},"name":"getExistingEntityScans","id":"getExistingEntityScans1()","children":[{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"forEntity","id":"forEntity","kind":"param"}],"line":"62","kind":"method"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/int","name":"int"},{"refId":"dart.core/Map","arguments":[{"refId":"dorm/EntityKey","name":"EntityKey"}],"name":"Map"}],"name":"Map"},"name":"_map","isPrivate":true,"id":"_map","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dorm/EntityScan","name":"EntityScan"}],"name":"List"},"name":"entityScans","id":"entityScans","line":"19","kind":"variable"},{"name":"EntityKey","id":"EntityKey0()","line":"27","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/core/dorm_proxy.dart","name":"DormProxy","id":"DormProxy","children":[{"isSetter":true,"name":"_initialValue=","isPrivate":true,"id":"_initialValue=1()","children":[{"ref":{"refId":"dorm/DormProxy/T","name":"T"},"name":"value","id":"value","kind":"param"}],"line":"14","kind":"method"},{"isSetter":true,"name":"value=","id":"value=1()","children":[{"ref":{"refId":"dorm/DormProxy/T","name":"T"},"name":"newValue","id":"newValue","kind":"param"}],"line":"30","kind":"method"},{"returnType":{"refId":"dorm/DormProxy/T","name":"T"},"isOperator":true,"name":"~","id":"~0()","line":"47","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"validate","id":"validate0()","line":"63","kind":"method"},{"ref":{"refId":"dorm/DormProxy/T","name":"T"},"name":"value","id":"value","line":"29","kind":"property"},{"ref":{"refId":"dorm/DormProxy/T","name":"T"},"name":"_defaultValue","isPrivate":true,"id":"_defaultValue","line":"11","kind":"variable"},{"ref":{"refId":"dorm/DormProxy/T","name":"T"},"name":"_value","isPrivate":true,"id":"_value","line":"12","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"property","id":"property","line":"32","kind":"variable"},{"ref":{"refId":"dart.core/Symbol","name":"Symbol"},"name":"propertySymbol","id":"propertySymbol","line":"33","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dorm/Entity","name":"Entity"}],"name":"List"},"name":"owner","id":"owner","line":"34","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isId","id":"isId","line":"35","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isTransient","id":"isTransient","line":"36","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isMutable","id":"isMutable","line":"37","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isNullable","id":"isNullable","line":"38","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"isLabelField","id":"isLabelField","line":"39","kind":"variable"},{"name":"DormProxy","id":"DormProxy0()","line":"55","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/core/dorm_manager.dart","name":"DormManagerCommitStructure","id":"DormManagerCommitStructure","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dorm/Entity","name":"Entity"}],"name":"List"},"isFinal":true,"name":"dataToCommit","id":"dataToCommit","line":"131","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dorm/Entity","name":"Entity"}],"name":"List"},"isFinal":true,"name":"dataToDelete","id":"dataToDelete","line":"132","kind":"variable"},{"name":"DormManagerCommitStructure","id":"DormManagerCommitStructure2()","children":[{"initializedField":{"refId":"dorm/DormManagerCommitStructure/dataToCommit","name":"dataToCommit"},"ref":{"refId":"dart.core/List","arguments":[{"refId":"dorm/Entity","name":"Entity"}],"name":"List"},"name":"dataToCommit","id":"dataToCommit","kind":"param"},{"initializedField":{"refId":"dorm/DormManagerCommitStructure/dataToDelete","name":"dataToDelete"},"ref":{"refId":"dart.core/List","arguments":[{"refId":"dorm/Entity","name":"Entity"}],"name":"List"},"name":"dataToDelete","id":"dataToDelete","kind":"param"}],"line":"134","kind":"constructor"}],"line":"129","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/core/dorm_manager.dart","name":"DormManager","id":"DormManager","children":[{"returnType":{"refId":"void","name":"void"},"name":"queueAsDeleted","id":"queueAsDeleted1()","children":[{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"}],"line":"38","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"queue","id":"queue1()","children":[{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"}],"line":"47","kind":"method"},{"returnType":{"refId":"dorm/DormManagerCommitStructure","name":"DormManagerCommitStructure"},"name":"getCommitStructure","id":"getCommitStructure0()","line":"57","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_scanRecursively","isPrivate":true,"id":"_scanRecursively2()","children":[{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dorm/Entity","name":"Entity"}],"name":"List"},"name":"list","id":"list","kind":"param"}],"line":"94","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_flushInternal","isPrivate":true,"id":"_flushInternal0()","line":"116","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dorm/Entity","name":"Entity"}],"name":"List"},"name":"_queue","isPrivate":true,"id":"_queue","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dorm/Entity","name":"Entity"}],"name":"List"},"name":"_deleteQueue","isPrivate":true,"id":"_deleteQueue","line":"12","kind":"variable"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"id","id":"id","line":"20","kind":"variable"},{"name":"DormManager","id":"DormManager1()","children":[{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"id","id":"id","kind":"param"}],"line":"28","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/core/entity_factory.dart","name":"EntityFactory","id":"EntityFactory","children":[{"returnType":{"refId":"observe/ObservableList","arguments":[{"refId":"dorm/EntityFactory/T","name":"T"}],"name":"ObservableList"},"name":"spawn","id":"spawn1()","children":[{"ref":{"refId":"dart.core/Iterable","arguments":[{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"}],"name":"Iterable"},"name":"rawData","id":"rawData","kind":"param"}],"line":"30","kind":"method"},{"ref":{"refId":"dorm/EntityAssembler","name":"EntityAssembler"},"name":"_assembler","isPrivate":true,"id":"_assembler","line":"11","kind":"variable"},{"ref":{"refId":"dorm/OnConflictFunction","name":"OnConflictFunction"},"isFinal":true,"name":"_onConflict","isPrivate":true,"id":"_onConflict","line":"12","kind":"variable"},{"name":"EntityFactory","id":"EntityFactory1()","children":[{"initializedField":{"refId":"dorm/EntityFactory/_onConflict","name":"_onConflict"},"ref":{"refId":"dorm/OnConflictFunction","name":"OnConflictFunction"},"name":"_onConflict","isPrivate":true,"id":"_onConflict","kind":"param"}],"line":"20","kind":"constructor"},{"name":"T","id":"T","kind":"typeparam"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/core/entity_assembler.dart","name":"EntityAssembler","id":"EntityAssembler","children":[{"returnType":{"refId":"dorm/EntityScan","name":"EntityScan"},"name":"scan","id":"scan3()","children":[{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"forType","id":"forType","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"refClassName","id":"refClassName","kind":"param"},{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"constructorMethod","id":"constructorMethod","kind":"param"}],"line":"47","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"registerProxies","id":"registerProxies2()","children":[{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dorm/DormProxy","name":"DormProxy"}],"name":"List"},"name":"proxies","id":"proxies","kind":"param"}],"line":"113","kind":"method"},{"returnType":{"refId":"dorm/EntityScan","name":"EntityScan"},"name":"_getScanForInstance","isPrivate":true,"id":"_getScanForInstance1()","children":[{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"}],"line":"166","kind":"method"},{"returnType":{"refId":"dorm/Entity","name":"Entity"},"name":"_assemble","isPrivate":true,"id":"_assemble2()","children":[{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"},"name":"rawData","id":"rawData","kind":"param"},{"ref":{"refId":"dorm/OnConflictFunction","name":"OnConflictFunction"},"name":"onConflict","id":"onConflict","kind":"param"}],"line":"176","kind":"method"},{"returnType":{"refId":"dorm/Entity","name":"Entity"},"name":"_registerSpawnedEntity","isPrivate":true,"id":"_registerSpawnedEntity4()","children":[{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"spawnee","id":"spawnee","kind":"param"},{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"existingEntity","id":"existingEntity","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"refClassName","id":"refClassName","kind":"param"},{"ref":{"refId":"dorm/OnConflictFunction","name":"OnConflictFunction"},"name":"onConflict","id":"onConflict","kind":"param"}],"line":"224","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_removeEntityProxies","isPrivate":true,"id":"_removeEntityProxies1()","children":[{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"}],"line":"285","kind":"method"},{"returnType":{"refId":"void","name":"void"},"name":"_swap","isPrivate":true,"id":"_swap2()","children":[{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"actualEntity","id":"actualEntity","kind":"param"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"swapPointers","id":"swapPointers","kind":"param"}],"line":"296","kind":"method"},{"returnType":{"refId":"dorm/Entity","name":"Entity"},"name":"_existingFromSpawnRegistry","isPrivate":true,"id":"_existingFromSpawnRegistry2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"refClassName","id":"refClassName","kind":"param"},{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"entity","id":"entity","kind":"param"}],"line":"338","kind":"method"},{"returnType":{"refId":"dorm/EntityScan","name":"EntityScan"},"name":"_getExistingScan","isPrivate":true,"id":"_getExistingScan1()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"refClassName","id":"refClassName","kind":"param"}],"line":"351","kind":"method"},{"returnType":{"refId":"dorm/ConflictManager","name":"ConflictManager"},"name":"_handleConflictAcceptClient","isPrivate":true,"id":"_handleConflictAcceptClient2()","children":[{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"serverEntity","id":"serverEntity","kind":"param"},{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"clientEntity","id":"clientEntity","kind":"param"}],"line":"366","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dorm/EntityScan","name":"EntityScan"}],"name":"List"},"isFinal":true,"name":"_entityScans","isPrivate":true,"id":"_entityScans","line":"11","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dorm/DormProxy","name":"DormProxy"}],"name":"List"},"isFinal":true,"name":"_proxyRegistry","isPrivate":true,"id":"_proxyRegistry","line":"12","kind":"variable"},{"ref":{"refId":"dorm/EntityKey","name":"EntityKey"},"isFinal":true,"name":"_keyChain","isPrivate":true,"id":"_keyChain","line":"13","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_proxyCount","isPrivate":true,"id":"_proxyCount","line":"15","kind":"variable"},{"ref":{"refId":"dorm/EntityAssembler","name":"EntityAssembler"},"isStatic":true,"name":"_instance","isPrivate":true,"id":"_instance","line":"31","kind":"variable"},{"name":"EntityAssembler._construct","isPrivate":true,"id":"EntityAssembler._construct0()","line":"23","kind":"constructor"},{"returnType":{"refId":"dorm/EntityAssembler","name":"EntityAssembler"},"name":"EntityAssembler","id":"EntityAssembler0()","line":"33","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Error","name":"Error"},"isThrowable":true,"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/core/dorm_error.dart","name":"DormError","id":"DormError","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"9","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"message","id":"message","line":"5","kind":"variable"},{"name":"DormError","id":"DormError1()","children":[{"initializedField":{"refId":"dorm/DormError/message","name":"message"},"ref":{"refId":"dart.core/String","name":"String"},"name":"message","id":"message","kind":"param"}],"line":"7","kind":"constructor"}],"line":"3","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"uri":"file:///c:/Users/fpe/Documents/GitHub/dorm/lib/src/core/conflict_manager.dart","name":"ConflictManager","id":"ConflictManager","children":[{"ref":{"refId":"dorm/ConflictManager","name":"ConflictManager"},"isFinal":true,"isStatic":true,"name":"ACCEPT_SERVER","id":"ACCEPT_SERVER","line":"11","kind":"variable"},{"ref":{"refId":"dorm/ConflictManager","name":"ConflictManager"},"isFinal":true,"isStatic":true,"name":"ACCEPT_CLIENT","id":"ACCEPT_CLIENT","line":"12","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"type","id":"type","line":"20","kind":"variable"},{"returnType":{"refId":"dorm/ConflictManager","name":"ConflictManager"},"name":"ConflictManager._acceptServer","isPrivate":true,"id":"ConflictManager._acceptServer0()","line":"28","kind":"constructor"},{"returnType":{"refId":"dorm/ConflictManager","name":"ConflictManager"},"name":"ConflictManager._acceptClient","isPrivate":true,"id":"ConflictManager._acceptClient0()","line":"32","kind":"constructor"},{"name":"ConflictManager._construct","isPrivate":true,"id":"ConflictManager._construct1()","children":[{"initializedField":{"refId":"dorm/ConflictManager/type","name":"type"},"ref":{"refId":"dart.core/int","name":"int"},"name":"type","id":"type","kind":"param"}],"line":"42","kind":"constructor"}],"line":"3","kind":"class"},{"returnType":{"refId":"dorm/ConflictManager","name":"ConflictManager"},"name":"OnConflictFunction","id":"OnConflictFunction","children":[{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"serverEntity","id":"serverEntity","kind":"param"},{"ref":{"refId":"dorm/Entity","name":"Entity"},"name":"clientEntity","id":"clientEntity","kind":"param"}],"line":"133","kind":"typedef"}],"line":"103","kind":"library"}