// Generated by dart2js, the Dart to JavaScript compiler version: 1.1.0-dev.5.0.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
(function($) {
function dart() {}var A = new dart;
delete A.x;
var B = new dart;
delete B.x;
var C = new dart;
delete C.x;
var D = new dart;
delete D.x;
var E = new dart;
delete E.x;
var F = new dart;
delete F.x;
var G = new dart;
delete G.x;
var H = new dart;
delete H.x;
var J = new dart;
delete J.x;
var K = new dart;
delete K.x;
var L = new dart;
delete L.x;
var M = new dart;
delete M.x;
var N = new dart;
delete N.x;
var O = new dart;
delete O.x;
var P = new dart;
delete P.x;
var Q = new dart;
delete Q.x;
var R = new dart;
delete R.x;
var S = new dart;
delete S.x;
var T = new dart;
delete T.x;
var U = new dart;
delete U.x;
var V = new dart;
delete V.x;
var W = new dart;
delete W.x;
var X = new dart;
delete X.x;
var Y = new dart;
delete Y.x;
var Z = new dart;
delete Z.x;
function Isolate() {}
init();

$ = Isolate.$isolateProperties;
var $$ = {};

init.mangledNames = {get$E_0: "E_0", get$K_0: "K_0", get$S_1: "S_1", get$T_0: "T_0", get$T_2: "T_2", get$__interceptors$_string: "_string", get$__isolate_helper$_controller: "_controller", get$__isolate_helper$_id: "_id", get$__js_helper$_current: "_current", get$__js_helper$_memberName: "_memberName", get$__js_helper$_name: "_name", get$__js_mirrors$_defaultValue: "_defaultValue", get$__js_mirrors$_source: "_source", get$_accumulated: "_accumulated", get$_addStreamState: "_addStreamState", get$_addedCount: "_addedCount", get$_allowInvalid: "_allowInvalid", get$_allowMalformed: "_allowMalformed", get$_arguments: "_arguments", get$_argumentsExpr: "_argumentsExpr", get$_assembler: "_assembler", get$_async$_controller: "_controller", get$_async$_current: "_current", get$_async$_equals: "_equals", get$_async$_iterator: "_iterator", get$_async$_map: "_map", get$_async$_next: "_next", get$_async$_previous: "_previous", get$_async$_source: "_source", get$_async$_target: "_target", get$_backedList: "_backedList", get$_buffer: "_buffer", get$_bufferIndex: "_bufferIndex", get$_cachedClasses: "_cachedClasses", get$_cachedConstructors: "_cachedConstructors", get$_cachedDeclarations: "_cachedDeclarations", get$_cachedFields: "_cachedFields", get$_cachedFunctionMirrors: "_cachedFunctionMirrors", get$_cachedFunctions: "_cachedFunctions", get$_cachedGetters: "_cachedGetters", get$_cachedLibraries: "_cachedLibraries", get$_cachedMembers: "_cachedMembers", get$_cachedMetadata: "_cachedMetadata", get$_cachedMethods: "_cachedMethods", get$_cachedMethodsMap: "_cachedMethodsMap", get$_cachedParameters: "_cachedParameters", get$_cachedReturnType: "_cachedReturnType", get$_cachedSetters: "_cachedSetters", get$_cachedSimpleName: "_cachedSimpleName", get$_cachedSuperinterfaces: "_cachedSuperinterfaces", get$_cachedToString: "_cachedToString", get$_cachedTypeArguments: "_cachedTypeArguments", get$_cachedTypeVariables: "_cachedTypeVariables", get$_cachedUpperBound: "_cachedUpperBound", get$_cachedVariables: "_cachedVariables", get$_callback: "_callback", get$_cancelFuture: "_cancelFuture", get$_carry: "_carry", get$_cell: "_cell", get$_change_notifier$_changes: "_changes", get$_change_notifier$_records: "_records", get$_changes: "_changes", get$_children: "_children", get$_chunkedSink: "_chunkedSink", get$_class: "_class", get$_className: "_className", get$_classes: "_classes", get$_codec: "_codec", get$_collection$_current: "_current", get$_collection$_iterator: "_iterator", get$_collection$_length: "_length", get$_collection$_list: "_list", get$_collection$_map: "_map", get$_collection$_state: "_state", get$_collections: "_collections", get$_compactFieldSpecification: "_compactFieldSpecification", get$_comparator: "_comparator", get$_compound_path_observer$_computeValue: "_computeValue", get$_compound_path_observer$_observers: "_observers", get$_compound_path_observer$_scheduled: "_scheduled", get$_compound_path_observer$_subs: "_subs", get$_compound_path_observer$_value: "_value", get$_computeValue: "_computeValue", get$_contents: "_contents", get$_controlPort: "_controlPort", get$_controller: "_controller", get$_convert$_first: "_first", get$_convert$_name: "_name", get$_convert$_sink: "_sink", get$_convert$_value: "_value", get$_convertors: "_convertors", get$_core$_arguments: "_arguments", get$_core$_count: "_count", get$_core$_current: "_current", get$_core$_index: "_index", get$_core$_map: "_map", get$_core$_position: "_position", get$_core$_receiver: "_receiver", get$_count: "_count", get$_current: "_current", get$_currentCodePoint: "_currentCodePoint", get$_currentExpansion: "_currentExpansion", get$_currentNode: "_currentNode", get$_cyclicReference: "_cyclicReference", get$_date: "_date", get$_decoder: "_decoder", get$_defaultValue: "_defaultValue", get$_degelationTarget: "_degelationTarget", get$_deleteQueue: "_deleteQueue", get$_deserialized: "_deserialized", get$_dev$_remaining: "_remaining", get$_dev$_source: "_source", get$_dev$_start: "_start", get$_dev$_values: "_values", get$_doneFuture: "_doneFuture", get$_dorm$_queue: "_queue", get$_dorm$_value: "_value", get$_dorm_test$_name: "_name", get$_dummy: "_dummy", get$_duration: "_duration", get$_element: "_element", get$_elementCount: "_elementCount", get$_elements: "_elements", get$_end: "_end", get$_endOrLength: "_endOrLength", get$_entityCtor: "_entityCtor", get$_entityScans: "_entityScans", get$_equality: "_equality", get$_equals: "_equals", get$_errorTestCallback: "_errorTestCallback", get$_escape: "_escape", get$_eventSink: "_eventSink", get$_eventState: "_eventState", get$_exception: "_exception", get$_existingArgumentNames: "_existingArgumentNames", get$_expand: "_expand", get$_expectedUnits: "_expectedUnits", get$_expr: "_expr", get$_extraUnits: "_extraUnits", get$_f: "_f", get$_fieldsDescriptor: "_fieldsDescriptor", get$_fieldsMetadata: "_fieldsMetadata", get$_first: "_first", get$_forcedDirtyStatus: "_forcedDirtyStatus", get$_functions: "_functions", get$_futureOrPrefetch: "_futureOrPrefetch", get$_generator: "_generator", get$_globalObject: "_globalObject", get$_handle: "_handle", get$_handleData: "_handleData", get$_handleDone: "_handleDone", get$_handleError: "_handleError", get$_handler: "_handler", get$_handlers: "_handlers", get$_hasFailed: "_hasFailed", get$_hasSkipped: "_hasSkipped", get$_hashCode: "_hashCode", get$_hasher: "_hasher", get$_head: "_head", get$_hi: "_hi", get$_host: "_host", get$_id: "_id", get$_identityProxies: "_identityProxies", get$_inEventLoop: "_inEventLoop", get$_index: "_index", get$_insertValue: "_insertValue", get$_internalName: "_internalName", get$_isClosed: "_isClosed", get$_isCommitRequired: "_isCommitRequired", get$_isDone: "_isDone", get$_isFinished: "_isFinished", get$_isFirstCharacter: "_isFirstCharacter", get$_isPointer: "_isPointer", get$_isRoot: "_isRoot", get$_isUsed: "_isUsed", get$_isValid: "_isValid", get$_isolateContext: "_isolateContext", get$_isolateId: "_isolateId", get$_itemPath: "_itemPath", get$_iterable: "_iterable", get$_iterator: "_iterator", get$_jsConstructorCache: "_jsConstructorCache", get$_jsConstructorOrInterceptor: "_jsConstructorOrInterceptor", get$_jsFunction: "_jsFunction", get$_jsName: "_jsName", get$_key: "_key", get$_keyChain: "_keyChain", get$_keyCollection: "_keyCollection", get$_keys: "_keys", get$_kind: "_kind", get$_last: "_last", get$_lazyFuture: "_lazyFuture", get$_length: "_length", get$_level: "_level", get$_list: "_list", get$_listChanges: "_listChanges", get$_listRecords: "_listRecords", get$_list_diff$_index: "_index", get$_list_path_observer$_subs: "_subs", get$_list_path_observer$_value: "_value", get$_lo: "_lo", get$_mangledName: "_mangledName", get$_map: "_map", get$_match: "_match", get$_memberName: "_memberName", get$_message: "_message", get$_metadata: "_metadata", get$_metadataCache: "_metadataCache", get$_metadataFunction: "_metadataFunction", get$_metadataIndex: "_metadataIndex", get$_method: "_method", get$_mirror: "_mirror", get$_modificationCount: "_modificationCount", get$_modifications: "_modifications", get$_name: "_name", get$_namedArgumentNames: "_namedArgumentNames", get$_namedArguments: "_namedArguments", get$_namedIndices: "_namedIndices", get$_nativeAnchoredRegExp: "_nativeAnchoredRegExp", get$_nativeGlobalRegExp: "_nativeGlobalRegExp", get$_nativeRegExp: "_nativeRegExp", get$_next: "_next", get$_nextEntry: "_nextEntry", get$_nextFreeRefId: "_nextFreeRefId", get$_nextListener: "_nextListener", get$_nextPosition: "_nextPosition", get$_nums: "_nums", get$_observable_box$_value: "_value", get$_observable_map$_map: "_map", get$_observeList: "_observeList", get$_observers: "_observers", get$_offset: "_offset", get$_onCancel: "_onCancel", get$_onCancelHandler: "_onCancelHandler", get$_onData: "_onData", get$_onDone: "_onDone", get$_onError: "_onError", get$_onErrorCallback: "_onErrorCallback", get$_onListen: "_onListen", get$_onListenHandler: "_onListenHandler", get$_onPause: "_onPause", get$_onResume: "_onResume", get$_onValueCallback: "_onValueCallback", get$_once: "_once", get$_original: "_original", get$_owner: "_owner", get$_parameterCount: "_parameterCount", get$_parameters: "_parameters", get$_path: "_path", get$_pathSegments: "_pathSegments", get$_path_observer$_values: "_values", get$_pattern: "_pattern", get$_pauseCount: "_pauseCount", get$_pauseCounter: "_pauseCounter", get$_pending: "_pending", get$_pendingProxies: "_pendingProxies", get$_port: "_port", get$_position: "_position", get$_postProcessors: "_postProcessors", get$_previous: "_previous", get$_property: "_property", get$_propertySymbol: "_propertySymbol", get$_proxies: "_proxies", get$_queryParameters: "_queryParameters", get$_queue: "_queue", get$_rawPort: "_rawPort", get$_re: "_re", get$_receivePort: "_receivePort", get$_receivePortId: "_receivePortId", get$_receiver: "_receiver", get$_records: "_records", get$_regExp: "_regExp", get$_remaining: "_remaining", get$_removed: "_removed", get$_rest: "_rest", get$_resultOrListeners: "_resultOrListeners", get$_returnType: "_returnType", get$_reviver: "_reviver", get$_root: "_root", get$_s: "_s", get$_scan: "_scan", get$_scheduled: "_scheduled", get$_second: "_second", get$_segments: "_segments", get$_self: "_self", get$_sentinel: "_sentinel", get$_set: "_set", get$_sink: "_sink", get$_sinkMapper: "_sinkMapper", get$_skipCount: "_skipCount", get$_source: "_source", get$_specification: "_specification", get$_splayCount: "_splayCount", get$_start: "_start", get$_started: "_started", get$_state: "_state", get$_stop: "_stop", get$_stream: "_stream", get$_string: "_string", get$_stringSink: "_stringSink", get$_strings: "_strings", get$_sub: "_sub", get$_subs: "_subs", get$_subscription: "_subscription", get$_subsetMask: "_subsetMask", get$_superclass: "_superclass", get$_table: "_table", get$_tail: "_tail", get$_takeCount: "_takeCount", get$_target: "_target", get$_test: "_test", get$_toEncodableFunction: "_toEncodableFunction", get$_trace: "_trace", get$_transform: "_transform", get$_transformer: "_transformer", get$_transformerSink: "_transformerSink", get$_tree: "_tree", get$_type: "_type", get$_typeArguments: "_typeArguments", get$_typeData: "_typeData", get$_typeName: "_typeName", get$_typeVariable: "_typeVariable", get$_unmangledName: "_unmangledName", get$_unmodifiableRemoved: "_unmodifiableRemoved", get$_unmodifiable_collection$_source: "_source", get$_unusedInstance: "_unusedInstance", get$_utf8Sink: "_utf8Sink", get$_validKey: "_validKey", get$_value: "_value", get$_values: "_values", get$_varData: "_varData", get$_visited: "_visited", get$_whenCompleteActionCallback: "_whenCompleteActionCallback", get$_workList: "_workList", get$_workerId: "_workerId", get$_zone: "_zone", get$action_2: "action_2", get$action_4: "action_4", get$activeTimerCount: "activeTimerCount", get$actualEntity_2: "actualEntity_2", get$addStreamFuture: "addStreamFuture", get$addSubscription: "addSubscription", get$addTypeArgument_1: "addTypeArgument_1", get$allowPointers_1: "allowPointers_1", get$areOptionalParametersNamed: "areOptionalParametersNamed", get$arg1_11: "arg1_11", get$arg1_2: "arg1_2", get$arg1_4: "arg1_4", get$arg1_7: "arg1_7", get$arg2_12: "arg2_12", get$arg2_5: "arg2_5", get$arg2_8: "arg2_8", get$arg3_13: "arg3_13", get$arg3_9: "arg3_9", get$arg4_14: "arg4_14", get$args_1: "args_1", get$argumentError_0: "argumentError_0", get$arguments_1: "arguments_1", get$asDeleted_1: "asDeleted_1", get$bound: "bound", get$box_0: "box_0", get$box_1: "box_1", get$box_2: "box_2", get$buffer_4: "buffer_4", get$buffer_7: "buffer_7", get$cachedInterceptor: "cachedInterceptor", get$callback_1: "callback_1", get$callback_3: "callback_3", get$cause: "cause", get$children: "children", get$clone: "clone", get$clonedEntities_2: "clonedEntities_2", get$clonedEntities_3: "clonedEntities_3", get$closure_0: "closure_0", get$closure_1: "closure_1", get$closure_10: "closure_10", get$closure_3: "closure_3", get$closure_6: "closure_6", get$code: "code", get$combine_2: "combine_2", get$combine_4: "combine_4", get$completer_1: "completer_1", get$component_1: "component_1", get$component_4: "component_4", get$component_5: "component_5", get$computation_0: "computation_0", get$constructorName_0: "constructorName_0", get$constructorName_2: "constructorName_2", get$controller_0: "controller_0", get$controller_1: "controller_1", get$copiedMap_0: "copiedMap_0", get$createPeriodicTimer: "createPeriodicTimer", get$createTimer: "createTimer", get$currentContext: "currentContext", get$currentManagerId: "currentManagerId", get$data: "data", get$dataList_6: "dataList_6", get$dataToCommit: "dataToCommit", get$dataToDelete: "dataToDelete", get$dataType: "dataType", get$data_0: "data_0", get$data_1: "data_1", get$defaultArguments_0: "defaultArguments_0", get$defaultArguments_1: "defaultArguments_1", get$defaultValue_7: "defaultValue_7", get$defaultValue_8: "defaultValue_8", get$deleteQueueRecursive_3: "deleteQueueRecursive_3", get$dispatch_1: "dispatch_1", get$doneSignal_1: "doneSignal_1", get$duration: "duration", get$eagerError_1: "eagerError_1", get$eagerError_2: "eagerError_2", get$element_5: "element_5", get$encoding_0: "encoding_0", get$enqueueDirtyCheck_1: "enqueueDirtyCheck_1", get$enqueueDirtyCheck_2: "enqueueDirtyCheck_2", get$enqueueDirtyCheck_6: "enqueueDirtyCheck_6", get$enqueueDirtyCheck_7: "enqueueDirtyCheck_7", get$entity: "entity", get$entityScans: "entityScans", get$entity_0: "entity_0", get$entity_5: "entity_5", get$entry: "entry", get$entryA_2: "entryA_2", get$entryPoint_0: "entryPoint_0", get$entry_0: "entry_0", get$entry_1: "entry_1", get$entry_5: "entry_5", get$error: "error", get$error_0: "error_0", get$error_1: "error_1", get$error_2: "error_2", get$escapeApos: "escapeApos", get$escapeLtGt: "escapeLtGt", get$escapeQuot: "escapeQuot", get$escapeSlash: "escapeSlash", get$events: "events", get$ex_0: "ex_0", get$existingEntity_1: "existingEntity_1", get$expires: "expires", get$f_0: "f_0", get$f_10: "f_10", get$f_3: "f_3", get$f_5: "f_5", get$firstPendingEvent: "firstPendingEvent", get$fn: "fn", get$forEntity_0: "forEntity_0", get$forSymbol: "forSymbol", get$forSymbol_0: "forSymbol_0", get$forType: "forType", get$forType_0: "forType_0", get$fork: "fork", get$fragment: "fragment", get$fromCommandLine: "fromCommandLine", get$functionName_0: "functionName_0", get$functionType: "functionType", get$future: "future", get$futureValue_0: "futureValue_0", get$future_0: "future_0", get$future_1: "future_1", get$future_2: "future_2", get$future_3: "future_3", get$future_6: "future_6", get$future_7: "future_7", get$future_8: "future_8", get$future_9: "future_9", get$getTypeArgument_1: "getTypeArgument_1", get$handleUncaughtError: "handleUncaughtError", get$handler: "handler", get$hasDelta: "hasDelta", get$hasError_4: "hasError_4", get$height: "height", get$host_0: "host_0", get$i_1: "i_1", get$i_4: "i_4", get$id: "id", get$incoming: "incoming", get$info: "info", get$initialSplayCount_2: "initialSplayCount_2", get$initialValue: "initialValue", get$input: "input", get$insertValue: "insertValue", get$interceptor: "interceptor", get$isAccessor: "isAccessor", get$isConstructor: "isConstructor", get$isDocComment: "isDocComment", get$isFinal: "isFinal", get$isGetter: "isGetter", get$isId: "isId", get$isInsert: "isInsert", get$isIntercepted: "isIntercepted", get$isLabelField: "isLabelField", get$isLazy: "isLazy", get$isLowerCaseHexDigit_3: "isLowerCaseHexDigit_3", get$isMutable: "isMutable", get$isMutableEntity: "isMutableEntity", get$isNamed: "isNamed", get$isNormalizedHexDigit_2: "isNormalizedHexDigit_2", get$isNullable: "isNullable", get$isOperator: "isOperator", get$isOptional: "isOptional", get$isRemove: "isRemove", get$isSetter: "isSetter", get$isSpawnUri_3: "isSpawnUri_3", get$isStatic: "isStatic", get$isTransient: "isTransient", get$isUtc: "isUtc", get$isWorker: "isWorker", get$isolate: "isolate", get$isolateStatics: "isolateStatics", get$isolates: "isolates", get$iterator_2: "iterator_2", get$iterator_4: "iterator_4", get$jsFunction: "jsFunction", get$key: "key", get$lastPendingEvent: "lastPendingEvent", get$left: "left", get$level: "level", get$libraryName: "libraryName", get$libraryName_0: "libraryName_0", get$list: "list", get$listClone_4: "listClone_4", get$list_1: "list_1", get$list_3: "list_3", get$listener_1: "listener_1", get$listener_3: "listener_3", get$listener_5: "listener_5", get$listener_6: "listener_6", get$listener_7: "listener_7", get$loggerName: "loggerName", get$mainManager: "mainManager", get$manager: "manager", get$managers: "managers", get$map_0: "map_0", get$maxStringLength: "maxStringLength", get$message: "message", get$message_2: "message_2", get$metaTargets: "metaTargets", get$metadataCache: "metadataCache", get$method: "method", get$method_0: "method_0", get$millisecondsSinceEpoch: "millisecondsSinceEpoch", get$mixin: "mixin", get$mode: "mode", get$modifiedObject: "modifiedObject", get$name: "name", get$name_0: "name_0", get$namedArgumentList_2: "namedArgumentList_2", get$namedArguments_4: "namedArguments_4", get$namedParameters: "namedParameters", get$needle_2: "needle_2", get$needle_4: "needle_4", get$newScan_1: "newScan_1", get$newValue: "newValue", get$next: "next", get$nextIsolateId: "nextIsolateId", get$nextManagerId: "nextManagerId", get$object: "object", get$oldValue: "oldValue", get$onConflict_2: "onConflict_2", get$onData_6: "onData_6", get$onDone_8: "onDone_8", get$onError_0: "onError_0", get$onError_7: "onError_7", get$optionalParameterCount: "optionalParameterCount", get$optionalParameterTypes: "optionalParameterTypes", get$original: "original", get$outgoing: "outgoing", get$override: "override", get$owner: "owner", get$owner_0: "owner_0", get$parameterTypes: "parameterTypes", get$parent: "parent", get$parent_3: "parent_3", get$parent_8: "parent_8", get$parts_2: "parts_2", get$path: "path", get$pattern: "pattern", get$period_2: "period_2", get$period_8: "period_8", get$pointerMap_3: "pointerMap_3", get$pointerMap_7: "pointerMap_7", get$ports: "ports", get$pos_3: "pos_3", get$positionalArguments_3: "positionalArguments_3", get$postProcessor_0: "postProcessor_0", get$print: "print", get$property: "property", get$propertyField: "propertyField", get$propertyField_0: "propertyField_0", get$propertySymbol: "propertySymbol", get$proxy: "proxy", get$proxy_3: "proxy_3", get$query: "query", get$queueRecursive_1: "queueRecursive_1", get$reasonFailed: "reasonFailed", get$refClassName: "refClassName", get$refClassName_0: "refClassName_0", get$referent: "referent", get$reflectee: "reflectee", get$registerBinaryCallback: "registerBinaryCallback", get$registerCallback: "registerCallback", get$registerUnaryCallback: "registerUnaryCallback", get$registered_1: "registered_1", get$registered_3: "registered_3", get$replyPort_4: "replyPort_4", get$replyTo_4: "replyTo_4", get$requiredParameterCount: "requiredParameterCount", get$result_0: "result_0", get$result_1: "result_1", get$result_2: "result_2", get$result_3: "result_3", get$result_5: "result_5", get$result_6: "result_6", get$result_7: "result_7", get$results_4: "results_4", get$returnType: "returnType", get$revive_0: "revive_0", get$right: "right", get$rollbackCommit: "rollbackCommit", get$rollbackDelete: "rollbackDelete", get$rootContext: "rootContext", get$run: "run", get$runBinary: "runBinary", get$runUnary: "runUnary", get$scheduleMicrotask: "scheduleMicrotask", get$scheme: "scheme", get$seen: "seen", get$segment_2: "segment_2", get$segment_5: "segment_5", get$sendEvent_10: "sendEvent_10", get$sendEvent_12: "sendEvent_12", get$sendEvent_3: "sendEvent_3", get$sendEvent_4: "sendEvent_4", get$separator_2: "separator_2", get$sequenceNumber: "sequenceNumber", get$serializer_1: "serializer_1", get$serializer_2: "serializer_2", get$serializer_4: "serializer_4", get$shouldSerialize_2: "shouldSerialize_2", get$simpleName: "simpleName", get$sink: "sink", get$source: "source", get$sourceName_0: "sourceName_0", get$spawnee_0: "spawnee_0", get$stackTrace: "stackTrace", get$stackTrace_1: "stackTrace_1", get$stackTrace_2: "stackTrace_2", get$stackTrace_3: "stackTrace_3", get$start: "start", get$startPeriodicTimer_11: "startPeriodicTimer_11", get$startPeriodicTimer_13: "startPeriodicTimer_13", get$startPeriodicTimer_6: "startPeriodicTimer_6", get$streamConsumer_0: "streamConsumer_0", get$string: "string", get$subscription_0: "subscription_0", get$superclass: "superclass", get$supportsWorkers: "supportsWorkers", get$symbols: "symbols", get$tagged: "tagged", get$target_0: "target_0", get$target_1: "target_1", get$targets: "targets", get$test_1: "test_1", get$test_2: "test_2", get$test_4: "test_4", get$text: "text", get$this_0: "this_0", get$this_1: "this_1", get$this_2: "this_2", get$this_3: "this_3", get$this_4: "this_4", get$this_5: "this_5", get$this_6: "this_6", get$time: "time", get$timeLimit_1: "timeLimit_1", get$timeLimit_11: "timeLimit_11", get$timeLimit_2: "timeLimit_2", get$timeLimit_3: "timeLimit_3", get$timeLimit_5: "timeLimit_5", get$timeLimit_9: "timeLimit_9", get$toEncodable: "toEncodable", get$top: "top", get$topEventLoop: "topEventLoop", get$tree_0: "tree_0", get$tree_1: "tree_1", get$trimmedText: "trimmedText", get$type: "type", get$unsupportedObject: "unsupportedObject", get$uri: "uri", get$userInfo: "userInfo", get$validationResultList_2: "validationResultList_2", get$value: "value", get$value_1: "value_1", get$value_5: "value_5", get$value_6: "value_6", get$value_7: "value_7", get$varData: "varData", get$variableName: "variableName", get$watch_1: "watch_1", get$watch_5: "watch_5", get$watch_7: "watch_7", get$watch_9: "watch_9", get$weakPorts: "weakPorts", get$width: "width", get$wrapper_10: "wrapper_10", get$x: "x", get$y: "y", get$zone_4: "zone_4", get$zone_9: "zone_9"};
init.mangledGlobalNames = {ASCII: "ASCII", Closure_CALL_NAME_INDEX: "CALL_NAME_INDEX", Closure_DEFAULT_ARGUMENTS_INDEX: "DEFAULT_ARGUMENTS_INDEX", Closure_FUNCTION_INDEX: "FUNCTION_INDEX", Closure_NAME_INDEX: "NAME_INDEX", Closure_OPTIONAL_PARAMETER_INDEX: "OPTIONAL_PARAMETER_INDEX", Closure_REQUIRED_PARAMETER_INDEX: "REQUIRED_PARAMETER_INDEX", ConflictManager_ACCEPT_CLIENT: "ACCEPT_CLIENT", ConflictManager_ACCEPT_SERVER: "ACCEPT_SERVER", DISCRIMINATED_MARK: "DISCRIMINATED_MARK", DateTime_APRIL: "APRIL", DateTime_AUGUST: "AUGUST", DateTime_DAYS_PER_WEEK: "DAYS_PER_WEEK", DateTime_DECEMBER: "DECEMBER", DateTime_FEBRUARY: "FEBRUARY", DateTime_FRIDAY: "FRIDAY", DateTime_JANUARY: "JANUARY", DateTime_JULY: "JULY", DateTime_JUNE: "JUNE", DateTime_MARCH: "MARCH", DateTime_MAY: "MAY", DateTime_MONDAY: "MONDAY", DateTime_MONTHS_PER_YEAR: "MONTHS_PER_YEAR", DateTime_NOVEMBER: "NOVEMBER", DateTime_OCTOBER: "OCTOBER", DateTime_SATURDAY: "SATURDAY", DateTime_SEPTEMBER: "SEPTEMBER", DateTime_SUNDAY: "SUNDAY", DateTime_THURSDAY: "THURSDAY", DateTime_TUESDAY: "TUESDAY", DateTime_WEDNESDAY: "WEDNESDAY", DateTime__MAX_MILLISECONDS_SINCE_EPOCH: "_MAX_MILLISECONDS_SINCE_EPOCH", DormManager_IS_COMMIT_NOT_REQUIRED: "IS_COMMIT_NOT_REQUIRED", DormManager_IS_COMMIT_REQUIRED: "IS_COMMIT_REQUIRED", Duration_HOURS_PER_DAY: "HOURS_PER_DAY", Duration_MICROSECONDS_PER_DAY: "MICROSECONDS_PER_DAY", Duration_MICROSECONDS_PER_HOUR: "MICROSECONDS_PER_HOUR", Duration_MICROSECONDS_PER_MILLISECOND: "MICROSECONDS_PER_MILLISECOND", Duration_MICROSECONDS_PER_MINUTE: "MICROSECONDS_PER_MINUTE", Duration_MICROSECONDS_PER_SECOND: "MICROSECONDS_PER_SECOND", Duration_MILLISECONDS_PER_DAY: "MILLISECONDS_PER_DAY", Duration_MILLISECONDS_PER_HOUR: "MILLISECONDS_PER_HOUR", Duration_MILLISECONDS_PER_MINUTE: "MILLISECONDS_PER_MINUTE", Duration_MILLISECONDS_PER_SECOND: "MILLISECONDS_PER_SECOND", Duration_MINUTES_PER_DAY: "MINUTES_PER_DAY", Duration_MINUTES_PER_HOUR: "MINUTES_PER_HOUR", Duration_SECONDS_PER_DAY: "SECONDS_PER_DAY", Duration_SECONDS_PER_HOUR: "SECONDS_PER_HOUR", Duration_SECONDS_PER_MINUTE: "SECONDS_PER_MINUTE", Duration_ZERO: "ZERO", E: "E", ESCAPE_REGEXP: "ESCAPE_REGEXP", Encoding__nameToEncoding: "_nameToEncoding", EntityAssembler_ENTITY_SYMBOL: "ENTITY_SYMBOL", EntityAssembler__instance: "_instance", EntityFactory__instance: "_instance", Entity_ASSEMBLER: "ASSEMBLER", Entity_FACTORY: "FACTORY", Entity__observableDirtyCheckTimeout: "_observableDirtyCheckTimeout", Entity__serializerWorkaround: "_serializerWorkaround", Expando__EXPANDO_PROPERTY_NAME: "_EXPANDO_PROPERTY_NAME", Expando__KEY_PROPERTY_NAME: "_KEY_PROPERTY_NAME", Expando__keyCount: "_keyCount", HTML_ESCAPE: "HTML_ESCAPE", HasNextIterator__HAS_NEXT_AND_NEXT_IN_CURRENT: "_HAS_NEXT_AND_NEXT_IN_CURRENT", HasNextIterator__NOT_MOVED_YET: "_NOT_MOVED_YET", HasNextIterator__NO_NEXT: "_NO_NEXT", HtmlEscapeMode_ATTRIBUTE: "ATTRIBUTE", HtmlEscapeMode_ELEMENT: "ELEMENT", HtmlEscapeMode_UNKNOWN: "UNKNOWN", INSTANCE_CACHED_MARK: "INSTANCE_CACHED_MARK", INTERIOR_MARK: "INTERIOR_MARK", JSInvocationMirror_GETTER: "GETTER", JSInvocationMirror_METHOD: "METHOD", JSInvocationMirror_SETTER: "SETTER", JSNumber__MAX_INT32: "_MAX_INT32", JSNumber__MIN_INT32: "_MIN_INT32", JSON: "JSON", JsMirrorSystem__dynamicType: "_dynamicType", JsMirrorSystem__voidType: "_voidType", JsMirrorSystem_librariesByName: "librariesByName", LATIN1: "LATIN1", LEAF_MARK: "LEAF_MARK", LN10: "LN10", LN2: "LN2", LOG10E: "LOG10E", LOG2E: "LOG2E", Level_ALL: "ALL", Level_CONFIG: "CONFIG", Level_FINE: "FINE", Level_FINER: "FINER", Level_FINEST: "FINEST", Level_INFO: "INFO", Level_OFF: "OFF", Level_SEVERE: "SEVERE", Level_SHOUT: "SHOUT", Level_WARNING: "WARNING", ListQueue__INITIAL_CAPACITY: "_INITIAL_CAPACITY", LogRecord__nextNumber: "_nextNumber", Logger__loggers: "_loggers", MAX_DIRTY_CHECK_CYCLES: "MAX_DIRTY_CHECK_CYCLES", METHODS_WITH_OPTIONAL_ARGUMENTS: "METHODS_WITH_OPTIONAL_ARGUMENTS", Maps__toStringList: "_toStringList", MetadataValidationReason_ENTITY_NOT_MUTABLE: "ENTITY_NOT_MUTABLE", MetadataValidationReason_PROPERTY_NOT_MUTABLE: "PROPERTY_NOT_MUTABLE", MetadataValidationReason_PROPERTY_NOT_NULLABLE: "PROPERTY_NOT_NULLABLE", PI: "PI", RawReceivePortImpl__nextFreeId: "_nextFreeId", ReflectionInfo_FIRST_DEFAULT_ARGUMENT: "FIRST_DEFAULT_ARGUMENT", ReflectionInfo_FUNCTION_TYPE_INDEX: "FUNCTION_TYPE_INDEX", ReflectionInfo_OPTIONAL_PARAMETERS_INFO: "OPTIONAL_PARAMETERS_INFO", ReflectionInfo_REQUIRED_PARAMETERS_INFO: "REQUIRED_PARAMETERS_INFO", RuntimeFunctionType_inAssert: "inAssert", SQRT1_2: "SQRT1_2", SQRT2: "SQRT2", SerializationType_ENTITY_TYPE: "ENTITY_TYPE", SerializationType_POINTER: "POINTER", SerializationType_UID: "UID", Symbol_validationPattern: "validationPattern", TestEntitySuperClass_ID: "ID", TestEntitySuperClass_ID_SYMBOL: "ID_SYMBOL", TestEntity_CYCLIC_REFERENCE: "CYCLIC_REFERENCE", TestEntity_CYCLIC_REFERENCE_SYMBOL: "CYCLIC_REFERENCE_SYMBOL", TestEntity_DATE: "DATE", TestEntity_DATE_SYMBOL: "DATE_SYMBOL", TestEntity_NAME: "NAME", TestEntity_NAME_SYMBOL: "NAME_SYMBOL", TypeErrorDecoder_noSuchMethodPattern: "noSuchMethodPattern", TypeErrorDecoder_notClosurePattern: "notClosurePattern", TypeErrorDecoder_nullCallPattern: "nullCallPattern", TypeErrorDecoder_nullLiteralCallPattern: "nullLiteralCallPattern", TypeErrorDecoder_nullLiteralPropertyPattern: "nullLiteralPropertyPattern", TypeErrorDecoder_nullPropertyPattern: "nullPropertyPattern", TypeErrorDecoder_undefinedCallPattern: "undefinedCallPattern", TypeErrorDecoder_undefinedLiteralCallPattern: "undefinedLiteralCallPattern", TypeErrorDecoder_undefinedLiteralPropertyPattern: "undefinedLiteralPropertyPattern", TypeErrorDecoder_undefinedPropertyPattern: "undefinedPropertyPattern", UNCACHED_MARK: "UNCACHED_MARK", UNICODE_BOM_CHARACTER_RUNE: "UNICODE_BOM_CHARACTER_RUNE", UNICODE_REPLACEMENT_CHARACTER_RUNE: "UNICODE_REPLACEMENT_CHARACTER_RUNE", UTF8: "UTF8", Uri__ASTERISK: "_ASTERISK", Uri__AT_SIGN: "_AT_SIGN", Uri__BACKSLASH: "_BACKSLASH", Uri__BAR: "_BAR", Uri__COLON: "_COLON", Uri__COMPONENT_FRAGMENT: "_COMPONENT_FRAGMENT", Uri__COMPONENT_HOST: "_COMPONENT_HOST", Uri__COMPONENT_HOST_IPV6: "_COMPONENT_HOST_IPV6", Uri__COMPONENT_PATH: "_COMPONENT_PATH", Uri__COMPONENT_PORT: "_COMPONENT_PORT", Uri__COMPONENT_QUERY_DATA: "_COMPONENT_QUERY_DATA", Uri__COMPONENT_SCHEME: "_COMPONENT_SCHEME", Uri__COMPONENT_USER_INFO: "_COMPONENT_USER_INFO", Uri__DOUBLE_QUOTE: "_DOUBLE_QUOTE", Uri__GREATER: "_GREATER", Uri__LEFT_BRACKET: "_LEFT_BRACKET", Uri__LESS: "_LESS", Uri__LOWER_CASE_A: "_LOWER_CASE_A", Uri__LOWER_CASE_F: "_LOWER_CASE_F", Uri__LOWER_CASE_Z: "_LOWER_CASE_Z", Uri__NINE: "_NINE", Uri__PERCENT: "_PERCENT", Uri__PLUS: "_PLUS", Uri__QUESTION: "_QUESTION", Uri__RIGHT_BRACKET: "_RIGHT_BRACKET", Uri__SLASH: "_SLASH", Uri__SPACE: "_SPACE", Uri__UPPER_CASE_A: "_UPPER_CASE_A", Uri__UPPER_CASE_F: "_UPPER_CASE_F", Uri__UPPER_CASE_Z: "_UPPER_CASE_Z", Uri__ZERO: "_ZERO", Uri__encodeFullTable: "_encodeFullTable", Uri__pathCharTable: "_pathCharTable", Uri__queryCharTable: "_queryCharTable", Uri__schemeLowerTable: "_schemeLowerTable", Uri__schemeTable: "_schemeTable", Uri__splitRe: "_splitRe", Uri__subDelimitersTable: "_subDelimitersTable", Uri__unreserved2396Table: "_unreserved2396Table", Uri__unreservedTable: "_unreservedTable", Zone_ROOT: "ROOT", Zone__current: "_current", _ASCII_MASK: "_ASCII_MASK", _BroadcastStreamController__STATE_ADDSTREAM: "_STATE_ADDSTREAM", _BroadcastStreamController__STATE_CLOSED: "_STATE_CLOSED", _BroadcastStreamController__STATE_EVENT_ID: "_STATE_EVENT_ID", _BroadcastStreamController__STATE_FIRING: "_STATE_FIRING", _BroadcastStreamController__STATE_INITIAL: "_STATE_INITIAL", _BroadcastSubscription__STATE_EVENT_ID: "_STATE_EVENT_ID", _BroadcastSubscription__STATE_FIRING: "_STATE_FIRING", _BroadcastSubscription__STATE_REMOVE_AFTER_FIRING: "_STATE_REMOVE_AFTER_FIRING", _BufferingStreamSubscription__STATE_CANCELED: "_STATE_CANCELED", _BufferingStreamSubscription__STATE_CANCEL_ON_ERROR: "_STATE_CANCEL_ON_ERROR", _BufferingStreamSubscription__STATE_CLOSED: "_STATE_CLOSED", _BufferingStreamSubscription__STATE_HAS_PENDING: "_STATE_HAS_PENDING", _BufferingStreamSubscription__STATE_INPUT_PAUSED: "_STATE_INPUT_PAUSED", _BufferingStreamSubscription__STATE_IN_CALLBACK: "_STATE_IN_CALLBACK", _BufferingStreamSubscription__STATE_PAUSE_COUNT: "_STATE_PAUSE_COUNT", _BufferingStreamSubscription__STATE_PAUSE_COUNT_SHIFT: "_STATE_PAUSE_COUNT_SHIFT", _BufferingStreamSubscription__STATE_WAIT_FOR_CANCEL: "_STATE_WAIT_FOR_CANCEL", _ByteCallbackSink__INITIAL_BUFFER_SIZE: "_INITIAL_BUFFER_SIZE", _DistinctStream__SENTINEL: "_SENTINEL", _EDIT_ADD: "_EDIT_ADD", _EDIT_DELETE: "_EDIT_DELETE", _EDIT_LEAVE: "_EDIT_LEAVE", _EDIT_UPDATE: "_EDIT_UPDATE", _FOUR_BYTE_LIMIT: "_FOUR_BYTE_LIMIT", _Future__CHAINED: "_CHAINED", _Future__ERROR: "_ERROR", _Future__INCOMPLETE: "_INCOMPLETE", _Future__PENDING_COMPLETE: "_PENDING_COMPLETE", _Future__VALUE: "_VALUE", _JsonStringifier_BACKSLASH: "BACKSLASH", _JsonStringifier_BACKSPACE: "BACKSPACE", _JsonStringifier_CARRIAGE_RETURN: "CARRIAGE_RETURN", _JsonStringifier_CHAR_b: "CHAR_b", _JsonStringifier_CHAR_f: "CHAR_f", _JsonStringifier_CHAR_n: "CHAR_n", _JsonStringifier_CHAR_r: "CHAR_r", _JsonStringifier_CHAR_t: "CHAR_t", _JsonStringifier_CHAR_u: "CHAR_u", _JsonStringifier_FORM_FEED: "FORM_FEED", _JsonStringifier_NEWLINE: "NEWLINE", _JsonStringifier_QUOTE: "QUOTE", _JsonStringifier_TAB: "TAB", _LATIN1_MASK: "_LATIN1_MASK", _LEAD_SURROGATE_MIN: "_LEAD_SURROGATE_MIN", _LineSplitterSink__CR: "_CR", _LineSplitterSink__LF: "_LF", _ONE_BYTE_LIMIT: "_ONE_BYTE_LIMIT", _POW2_32: "_POW2_32", _PendingEvents__STATE_CANCELED: "_STATE_CANCELED", _PendingEvents__STATE_SCHEDULED: "_STATE_SCHEDULED", _PendingEvents__STATE_UNSCHEDULED: "_STATE_UNSCHEDULED", _ROOT_ZONE: "_ROOT_ZONE", _Random__MASK32: "_MASK32", _Random__POW2_27_D: "_POW2_27_D", _Random__POW2_53_D: "_POW2_53_D", _SPAWNED_SIGNAL: "_SPAWNED_SIGNAL", _SURROGATE_MASK: "_SURROGATE_MASK", _SURROGATE_TAG_MASK: "_SURROGATE_TAG_MASK", _SURROGATE_VALUE_MASK: "_SURROGATE_VALUE_MASK", _StreamController__STATE_ADDSTREAM: "_STATE_ADDSTREAM", _StreamController__STATE_CANCELED: "_STATE_CANCELED", _StreamController__STATE_CLOSED: "_STATE_CLOSED", _StreamController__STATE_INITIAL: "_STATE_INITIAL", _StreamController__STATE_SUBSCRIBED: "_STATE_SUBSCRIBED", _StreamController__STATE_SUBSCRIPTION_MASK: "_STATE_SUBSCRIPTION_MASK", _StreamIteratorImpl__STATE_DONE: "_STATE_DONE", _StreamIteratorImpl__STATE_EXTRA_DATA: "_STATE_EXTRA_DATA", _StreamIteratorImpl__STATE_EXTRA_DONE: "_STATE_EXTRA_DONE", _StreamIteratorImpl__STATE_EXTRA_ERROR: "_STATE_EXTRA_ERROR", _StreamIteratorImpl__STATE_FOUND: "_STATE_FOUND", _StreamIteratorImpl__STATE_MOVING: "_STATE_MOVING", _StringConversionSinkAsStringSinkAdapter__MIN_STRING_SIZE: "_MIN_STRING_SIZE", _TAIL_SURROGATE_MIN: "_TAIL_SURROGATE_MIN", _THREE_BYTE_LIMIT: "_THREE_BYTE_LIMIT", _TWO_BYTE_LIMIT: "_TWO_BYTE_LIMIT", _Utf8Decoder__LIMITS: "_LIMITS", _Utf8Encoder__DEFAULT_BYTE_BUFFER_SIZE: "_DEFAULT_BYTE_BUFFER_SIZE", _allObservables: "_allObservables", _allObservablesCount: "_allObservablesCount", _asyncCallbacks: "_asyncCallbacks", _baseHooks: "_baseHooks", _callbacksAreEnqueued: "_callbacksAreEnqueued", _constructorNameFallback: "_constructorNameFallback", _dartExperimentalFixupGetTagHooksTransformer: "_dartExperimentalFixupGetTagHooksTransformer", _delivering: "_delivering", _fallbackConstructorHooksTransformerGenerator: "_fallbackConstructorHooksTransformerGenerator", _firefoxHooksTransformer: "_firefoxHooksTransformer", _fixDocumentHooksTransformer: "_fixDocumentHooksTransformer", _ieHooksTransformer: "_ieHooksTransformer", _loadedLibraries: "_loadedLibraries", _logger: "_logger", _logger0: "_logger", _operaHooksTransformer: "_operaHooksTransformer", _pathRegExp: "_pathRegExp", _rootLevel: "_rootLevel", _safariHooksTransformer: "_safariHooksTransformer", _spacesRegExp: "_spacesRegExp", _toStringVisiting: "_toStringVisiting", alternateTagFunction: "alternateTagFunction", classMirrors: "classMirrors", controlPort: "controlPort", counter: "counter", currentJsMirrorSystem: "currentJsMirrorSystem", deprecated: "deprecated", dispatchRecordsForInstanceTags: "dispatchRecordsForInstanceTags", double_INFINITY: "INFINITY", double_MAX_FINITE: "MAX_FINITE", double_MIN_POSITIVE: "MIN_POSITIVE", double_NAN: "NAN", double_NEGATIVE_INFINITY: "NEGATIVE_INFINITY", entityFactory: "entityFactory", getTagFunction: "getTagFunction", globalPostMessageDefined: "globalPostMessageDefined", globalThis: "globalThis", globalWindow: "globalWindow", globalWorker: "globalWorker", hierarchicalLoggingEnabled: "hierarchicalLoggingEnabled", initNativeDispatchFlag: "initNativeDispatchFlag", interceptedNames: "interceptedNames", interceptorsForUncacheableTags: "interceptorsForUncacheableTags", jsonData: "jsonData", lazyLoader: "lazyLoader", mangledGlobalNames: "mangledGlobalNames", mangledNames: "mangledNames", mapTypeToInterceptor: "mapTypeToInterceptor", objectType: "objectType", observable: "observable", override: "override", printToZone: "printToZone", prototypeForTagFunction: "prototypeForTagFunction", proxy: "proxy", reflectable: "reflectable", reflectiveGlobalNames: "reflectiveGlobalNames", reflectiveNames: "reflectiveNames", serializer: "serializer"};
(function (reflectionData) {
  "use strict";
  function map(x){x={x:x};delete x.x;return x}
    function processStatics(descriptor) {
      for (var property in descriptor) {
        if (!hasOwnProperty.call(descriptor, property)) continue;
        if (property === "") continue;
        var element = descriptor[property];
        var firstChar = property.substring(0, 1);
        var previousProperty;
        if (firstChar === "+") {
          mangledGlobalNames[previousProperty] = property.substring(1);
          if (descriptor[property] == 1) descriptor[previousProperty].$reflectable = 1;
          if (element && element.length) init.typeInformation[previousProperty] = element;
        } else if (firstChar === "@") {
          property = property.substring(1);
          $[property]["@"] = element;
        } else if (firstChar === "*") {
          globalObject[previousProperty].$defaultValues = element;
          var optionalMethods = descriptor.$methodsWithOptionalArguments;
          if (!optionalMethods) {
            descriptor.$methodsWithOptionalArguments = optionalMethods = {}
          }
          optionalMethods[property] = previousProperty;
        } else if (typeof element === "function") {
          globalObject[previousProperty = property] = element;
          functions.push(property);
          init.globalFunctions[property] = element;
        } else if (element.constructor === Array) {
          addStubs(globalObject, element, property, true, descriptor, functions);
        } else {
          previousProperty = property;
          var newDesc = {};
          var previousProp;
          for (var prop in element) {
            if (!hasOwnProperty.call(element, prop)) continue;
            firstChar = prop.substring(0, 1);
            if (prop === "static") {
              processStatics(init.statics[property] = element[prop]);
            } else if (firstChar === "+") {
              mangledNames[previousProp] = prop.substring(1);
              if (element[prop] == 1) element[previousProp].$reflectable = 1;
            } else if (firstChar === "@" && prop !== "@") {
              newDesc[prop.substring(1)]["@"] = element[prop];
            } else if (firstChar === "*") {
              newDesc[previousProp].$defaultValues = element[prop];
              var optionalMethods = newDesc.$methodsWithOptionalArguments;
              if (!optionalMethods) {
                newDesc.$methodsWithOptionalArguments = optionalMethods={}
              }
              optionalMethods[prop] = previousProp;
            } else {
              var elem = element[prop];
              if (prop && elem != null && elem.constructor === Array && prop !== "<>") {
                addStubs(newDesc, elem, prop, false, element, []);
              } else {
                newDesc[previousProp = prop] = elem;
              }
            }
          }
          $$[property] = [globalObject, newDesc];
          classes.push(property);
        }
      }
    }
  function addStubs(descriptor, array, name, isStatic, originalDescriptor, functions) {
    var f, funcs = [originalDescriptor[name] = descriptor[name] = f = (function() {
  var result = array[0];
  if (result != null && typeof result != "function") {
    throw new Error(
        name + ": expected value of type 'function' at index " + (0) +
        " but got " + (typeof result));
  }
  return result;
})()];
    f.$stubName = name;
    functions.push(name);
    for (var index = 0; index < array.length; index += 2) {
      f = array[index + 1];
      if (typeof f != "function") break;
      f.$stubName = (function() {
  var result = array[index + 2];
  if (result != null && typeof result != "string") {
    throw new Error(
        name + ": expected value of type 'string' at index " + (index + 2) +
        " but got " + (typeof result));
  }
  return result;
})();
      funcs.push(f);
      if (f.$stubName) {
        originalDescriptor[f.$stubName] = descriptor[f.$stubName] = f;
        functions.push(f.$stubName);
      }
    }
    for (var i = 0; i < funcs.length; index++, i++) {
      funcs[i].$callName = (function() {
  var result = array[index + 1];
  if (result != null && typeof result != "string") {
    throw new Error(
        name + ": expected value of type 'string' at index " + (index + 1) +
        " but got " + (typeof result));
  }
  return result;
})();
    }
    var getterStubName = (function() {
  var result = array[++index];
  if (result != null && typeof result != "string") {
    throw new Error(
        name + ": expected value of type 'string' at index " + (++index) +
        " but got " + (typeof result));
  }
  return result;
})();
    array = array.slice(++index);
    var requiredParameterInfo = (function() {
  var result = array[0];
  if (result != null && (typeof result != "number" || (result|0) !== result)) {
    throw new Error(
        name + ": expected value of type 'int' at index " + (0) +
        " but got " + (typeof result));
  }
  return result;
})();
    var requiredParameterCount = requiredParameterInfo >> 1;
    var isAccessor = (requiredParameterInfo & 1) === 1;
    var isSetter = requiredParameterInfo === 3;
    var isGetter = requiredParameterInfo === 1;
    var optionalParameterInfo = (function() {
  var result = array[1];
  if (result != null && (typeof result != "number" || (result|0) !== result)) {
    throw new Error(
        name + ": expected value of type 'int' at index " + (1) +
        " but got " + (typeof result));
  }
  return result;
})();
    var optionalParameterCount = optionalParameterInfo >> 1;
    var optionalParametersAreNamed = (optionalParameterInfo & 1) === 1;
    var functionTypeIndex = (function() {
  var result = array[2];
  if (result != null && (typeof result != "number" || (result|0) !== result) && typeof result != "function") {
    throw new Error(
        name + ": expected value of type 'function or int' at index " + (2) +
        " but got " + (typeof result));
  }
  return result;
})();
    var isReflectable = array.length > requiredParameterCount + optionalParameterCount + 3;
    if (getterStubName) {
      f = tearOff(funcs, array, isStatic, name);
      if (isStatic) init.globalFunctions[name] = f;
      originalDescriptor[getterStubName] = descriptor[getterStubName] = f;
      funcs.push(f);
      if (getterStubName) functions.push(getterStubName);
      f.$stubName = getterStubName;
      f.$callName = null;
    }
    if (isReflectable) {
      for (var i = 0; i < funcs.length; i++) {
        funcs[i].$reflectable = 1;
        funcs[i].$reflectionInfo = array;
      }
    }
    if (isReflectable) {
      var unmangledNameIndex = optionalParameterCount * 2 + requiredParameterCount + 3;
      var unmangledName = (function() {
  var result = array[unmangledNameIndex];
  if (result != null && typeof result != "string") {
    throw new Error(
        name + ": expected value of type 'string' at index " + (unmangledNameIndex) +
        " but got " + (typeof result));
  }
  return result;
})();
      var reflectionName = unmangledName + ":" + requiredParameterCount + ":" + optionalParameterCount;
      if (isGetter) {
        reflectionName = unmangledName;
      } else if (isSetter) {
        reflectionName = unmangledName + "=";
      }
      if (isStatic) {
        init.mangledGlobalNames[name] = reflectionName;
      } else {
        init.mangledNames[name] = reflectionName;
      }
      funcs[0].$reflectionName = reflectionName;
      funcs[0].$metadataIndex = unmangledNameIndex + 1;
      if (optionalParameterCount) descriptor[unmangledName + "*"] = funcs[0];
    }
  }
  function tearOff(funcs, reflectionInfo, isStatic, name) {
    return function() {
      return H.closureFromTearOff(this, funcs, reflectionInfo, isStatic, arguments, name);
    }
  }
  if (!init.libraries) init.libraries = [];
  if (!init.mangledNames) init.mangledNames = map();
  if (!init.mangledGlobalNames) init.mangledGlobalNames = map();
  if (!init.statics) init.statics = map();
  if (!init.typeInformation) init.typeInformation = map();
  if (!init.globalFunctions) init.globalFunctions = map();
  var libraries = init.libraries;
  var mangledNames = init.mangledNames;
  var mangledGlobalNames = init.mangledGlobalNames;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var length = reflectionData.length;
  for (var i = 0; i < length; i++) {
    var data = reflectionData[i];
    var name = data[0];
    var uri = data[1];
    var metadata = data[2];
    var globalObject = data[3];
    var descriptor = data[4];
    var isRoot = !!data[5];
    var fields = descriptor && descriptor[""];
    var classes = [];
    var functions = [];
    processStatics(descriptor);
    libraries.push([name, uri, classes, functions, metadata, fields, isRoot,
                    globalObject]);
  }
})
([
["_foreign_helper", "dart:_foreign_helper", , H, {
  "": "",
  JS_CONST: {
    "": "Object;code<-1039"
  },
  "+JS_CONST": [0]
}],
["_interceptors", "dart:_interceptors", , J, {
  "": "",
  getInterceptor: [function(object) {
    return void 0;
  }, "call$1" /* tearOffInfo */, "getInterceptor$closure", 2, 0, 241, 242, "getInterceptor"],
  Interceptor: {
    "": "Object;",
    $eq: [function(receiver, other) {
      return receiver === other;
    }, "call$1" /* tearOffInfo */, "get$==", 2, 0, 273, 403, "=="],
    get$hashCode: [function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    toString$0: [function(receiver) {
      return H.Primitives_objectToString(receiver);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    noSuchMethod$1: [function(receiver, invocation) {
      throw H.wrapException(P.NoSuchMethodError$(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
    }, "call$1" /* tearOffInfo */, "get$noSuchMethod", 2, 0, 1040, 284, "noSuchMethod"],
    get$runtimeType: [function(receiver) {
      return new H.TypeImpl(H.getRuntimeTypeString(receiver), null);
    }, null /* tearOffInfo */, null, 1, 0, 1041, "runtimeType"],
    $isInterceptor: true
  },
  "+Interceptor": [0],
  JSBool: {
    "": "bool/Interceptor;",
    toString$0: [function(receiver) {
      return String(receiver);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    get$hashCode: [function(receiver) {
      return receiver ? 519018 : 218159;
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    get$runtimeType: [function(receiver) {
      return C.Type_EsU;
    }, null /* tearOffInfo */, null, 1, 0, 1041, "runtimeType"],
    $isbool: true
  },
  "+JSBool": [1042, 1043],
  JSNull: {
    "": "Interceptor;",
    $eq: [function(receiver, other) {
      return null == other;
    }, "call$1" /* tearOffInfo */, "get$==", 2, 0, 273, 403, "=="],
    toString$0: [function(receiver) {
      return "null";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    get$hashCode: [function(receiver) {
      return 0;
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    get$runtimeType: [function(receiver) {
      return C.Type_eZO;
    }, null /* tearOffInfo */, null, 1, 0, 1041, "runtimeType"]
  },
  "+JSNull": [1042, 1044],
  JavaScriptObject: {
    "": "Interceptor;",
    get$hashCode: [function(_) {
      return 0;
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    get$runtimeType: [function(_) {
      return C.Type_XXD;
    }, null /* tearOffInfo */, null, 1, 0, 1041, "runtimeType"]
  },
  "+JavaScriptObject": [1042, 1045],
  PlainJavaScriptObject: {
    "": "JavaScriptObject;"
  },
  "+PlainJavaScriptObject": [1046],
  UnknownJavaScriptObject: {
    "": "JavaScriptObject;"
  },
  "+UnknownJavaScriptObject": [1046],
  JSArray: {
    "": "List/Interceptor;",
    add$1: [function(receiver, value) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("add"));
      receiver.push(value);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E", void: true, args: [E]};
      }, this.$receiver, "JSArray");
    }, 280, "add"],
    removeAt$1: [function(receiver, index) {
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(new P.ArgumentError(index));
      if (index < 0 || index >= receiver.length)
        throw H.wrapException(P.RangeError$value(index));
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeAt"));
      return receiver.splice(index, 1)[0];
    }, "call$1" /* tearOffInfo */, "get$removeAt", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int3", ret: E, args: [J.JSInt]};
      }, this.$receiver, "JSArray");
    }, 321, "removeAt"],
    insert$2: [function(receiver, index, value) {
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(new P.ArgumentError(index));
      if (index < 0 || index > receiver.length)
        throw H.wrapException(P.RangeError$value(index));
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("insert"));
      receiver.splice(index, 0, value);
    }, "call$2" /* tearOffInfo */, "get$insert", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_E", void: true, args: [J.JSInt, E]};
      }, this.$receiver, "JSArray");
    }, 321, 280, "insert"],
    insertAll$2: [function(receiver, index, iterable) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("insertAll"));
      H.IterableMixinWorkaround_insertAllList(receiver, index, iterable);
    }, "call$2" /* tearOffInfo */, "get$insertAll", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_Iterable", void: true, args: [J.JSInt, [P.Iterable, E]]};
      }, this.$receiver, "JSArray");
    }, 321, 417, "insertAll"],
    setAll$2: [function(receiver, index, iterable) {
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("setAll"));
      H.IterableMixinWorkaround_setAllList(receiver, index, iterable);
    }, "call$2" /* tearOffInfo */, "get$setAll", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_Iterable", void: true, args: [J.JSInt, [P.Iterable, E]]};
      }, this.$receiver, "JSArray");
    }, 321, 417, "setAll"],
    removeLast$0: [function(receiver) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeLast"));
      if (receiver.length === 0)
        throw H.wrapException(P.RangeError$value(-1));
      return receiver.pop();
    }, "call$0" /* tearOffInfo */, "get$removeLast", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_", ret: E};
      }, this.$receiver, "JSArray");
    }, "removeLast"],
    remove$1: [function(receiver, element) {
      var i;
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("remove"));
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq(receiver[i], element)) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, 1047, 453, "remove"],
    removeWhere$1: [function(receiver, test) {
      H.IterableMixinWorkaround_removeWhereList(receiver, test);
    }, "call$1" /* tearOffInfo */, "get$removeWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E", void: true, args: [{func: "bool__E", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "JSArray");
    }, 428, "removeWhere"],
    retainWhere$1: [function(receiver, test) {
      H.IterableMixinWorkaround_removeWhereList(receiver, new J.JSArray_retainWhere_closure(receiver, test));
    }, "call$1" /* tearOffInfo */, "get$retainWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E", void: true, args: [{func: "bool__E", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "JSArray");
    }, 428, "retainWhere"],
    where$1: [function(receiver, f) {
      return H.setRuntimeTypeInfo(new H.WhereIterable(receiver, f), [null]);
    }, "call$1" /* tearOffInfo */, "get$where", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E", ret: [P.Iterable, E], args: [{func: "bool__E", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "JSArray");
    }, 412, "where"],
    expand$1: [function(receiver, f) {
      return H.setRuntimeTypeInfo(new H.ExpandIterable(receiver, f), [null, null]);
    }, "call$1" /* tearOffInfo */, "get$expand", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__Iterable__E", ret: P.Iterable, args: [{func: "Iterable__E", ret: P.Iterable, args: [E]}]};
      }, this.$receiver, "JSArray");
    }, 412, "expand"],
    addAll$1: [function(receiver, collection) {
      var t1;
      for (t1 = J.get$iterator$a(collection); t1.moveNext$0() === true;)
        this.add$1(receiver, t1.get$current());
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__Iterable", void: true, args: [[P.Iterable, E]]};
      }, this.$receiver, "JSArray");
    }, 1048, "addAll"],
    clear$0: [function(receiver) {
      this.set$length(receiver, 0);
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    forEach$1: [function(receiver, f) {
      return H.IterableMixinWorkaround_forEach(receiver, f);
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__void__E", void: true, args: [{func: "void__E", void: true, args: [E]}]};
      }, this.$receiver, "JSArray");
    }, 412, "forEach"],
    map$1: [function(receiver, f) {
      return H.setRuntimeTypeInfo(new H.MappedListIterable(receiver, f), [null, null]);
    }, "call$1" /* tearOffInfo */, "get$map", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__dynamic__E", ret: P.Iterable, args: [{func: "dynamic__E0", args: [E]}]};
      }, this.$receiver, "JSArray");
    }, 412, "map"],
    join$1: [function(receiver, separator) {
      var t1, list, i, t2;
      t1 = receiver.length;
      list = Array(t1);
      list.fixed$length = init;
      for (i = 0; i < receiver.length; ++i) {
        t2 = H.S(receiver[i]);
        if (i >= t1)
          return H.ioore(list, i);
        list[i] = t2;
      }
      return list.join(separator);
    }, "call$1" /* tearOffInfo */, "get$join", 0, 2, 1049, 806, 1050, "join"],
    take$1: [function(receiver, n) {
      return H.SubListIterable$(receiver, 0, n, null);
    }, "call$1" /* tearOffInfo */, "get$take", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int", ret: [P.Iterable, E], args: [J.JSInt]};
      }, this.$receiver, "JSArray");
    }, 1051, "take"],
    takeWhile$1: [function(receiver, test) {
      return H.setRuntimeTypeInfo(new H.TakeWhileIterable(receiver, test), [null]);
    }, "call$1" /* tearOffInfo */, "get$takeWhile", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E", ret: [P.Iterable, E], args: [{func: "bool__E", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "JSArray");
    }, 428, "takeWhile"],
    skip$1: [function(receiver, n) {
      return H.SubListIterable$(receiver, n, null, null);
    }, "call$1" /* tearOffInfo */, "get$skip", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int", ret: [P.Iterable, E], args: [J.JSInt]};
      }, this.$receiver, "JSArray");
    }, 1051, "skip"],
    skipWhile$1: [function(receiver, test) {
      return H.setRuntimeTypeInfo(new H.SkipWhileIterable(receiver, test), [null]);
    }, "call$1" /* tearOffInfo */, "get$skipWhile", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E", ret: [P.Iterable, E], args: [{func: "bool__E", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "JSArray");
    }, 428, "skipWhile"],
    reduce$1: [function(receiver, combine) {
      return H.IterableMixinWorkaround_reduce(receiver, combine);
    }, "call$1" /* tearOffInfo */, "get$reduce", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__E__E_E", ret: E, args: [{func: "E__E_E", ret: E, args: [E, E]}]};
      }, this.$receiver, "JSArray");
    }, 424, "reduce"],
    fold$2: [function(receiver, initialValue, combine) {
      return H.IterableMixinWorkaround_fold(receiver, initialValue, combine);
    }, "call$2" /* tearOffInfo */, "get$fold", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__dynamic_dynamic__dynamic_E", args: [null, {func: "dynamic__dynamic_E", args: [null, E]}]};
      }, this.$receiver, "JSArray");
    }, 426, 424, "fold"],
    firstWhere$2$orElse: [function(receiver, test, orElse) {
      return H.IterableMixinWorkaround_firstWhere(receiver, test, orElse);
    }, "call$2$orElse" /* tearOffInfo */, "get$firstWhere", 2, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__bool__E__Object_", args: [{func: "bool__E", ret: J.JSBool, args: [E]}], named: {orElse: {func: "Object_", ret: P.Object}}};
      }, this.$receiver, "JSArray");
    }, 370, 428, 430, "firstWhere"],
    lastWhere$2$orElse: [function(receiver, test, orElse) {
      return H.IterableMixinWorkaround_lastWhereList(receiver, test, orElse);
    }, "call$2$orElse" /* tearOffInfo */, "get$lastWhere", 2, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__bool__E__Object_", args: [{func: "bool__E", ret: J.JSBool, args: [E]}], named: {orElse: {func: "Object_", ret: P.Object}}};
      }, this.$receiver, "JSArray");
    }, 370, 428, 430, "lastWhere"],
    singleWhere$1: [function(receiver, test) {
      return H.IterableMixinWorkaround_singleWhere(receiver, test);
    }, "call$1" /* tearOffInfo */, "get$singleWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__bool__E", ret: E, args: [{func: "bool__E", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "JSArray");
    }, 428, "singleWhere"],
    elementAt$1: [function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        return H.ioore(receiver, index);
      return receiver[index];
    }, "call$1" /* tearOffInfo */, "get$elementAt", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int3", ret: E, args: [J.JSInt]};
      }, this.$receiver, "JSArray");
    }, 321, "elementAt"],
    sublist$2: [function(receiver, start, end) {
      if (start == null)
        H.throwExpression(P.ArgumentError$(null));
      if (typeof start !== "number" || Math.floor(start) !== start)
        throw H.wrapException(P.ArgumentError$(start));
      if (start < 0 || start > receiver.length)
        throw H.wrapException(P.RangeError$range(start, 0, receiver.length));
      if (end == null)
        end = receiver.length;
      else {
        if (typeof end !== "number" || Math.floor(end) !== end)
          throw H.wrapException(P.ArgumentError$(end));
        if (end < start || end > receiver.length)
          throw H.wrapException(P.RangeError$range(end, start, receiver.length));
      }
      if (start == null ? end == null : start === end)
        return H.setRuntimeTypeInfo([], [H.getTypeArgumentByIndex(receiver, 0)]);
      return H.setRuntimeTypeInfo(receiver.slice(start, end), [H.getTypeArgumentByIndex(receiver, 0)]);
    }, function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }, "sublist$1", "call$2" /* tearOffInfo */, null /* tearOffInfo */, "get$sublist", 2, 2, function() {
      return H.computeSignature(function(E) {
        return {func: "List__int__int", ret: [J.JSArray, E], args: [J.JSInt], opt: [J.JSInt]};
      }, this.$receiver, "JSArray");
    }, 370, 439, 440, "sublist"],
    getRange$2: [function(receiver, start, end) {
      H.IterableMixinWorkaround__rangeCheck(receiver, start, end);
      return H.SubListIterable$(receiver, start, end, null);
    }, "call$2" /* tearOffInfo */, "get$getRange", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int_int", ret: [P.Iterable, E], args: [J.JSInt, J.JSInt]};
      }, this.$receiver, "JSArray");
    }, 439, 440, "getRange"],
    get$first: [function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(new P.StateError("No elements"));
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_", ret: E};
      }, this.$receiver, "JSArray");
    }, "first"],
    get$last: [function(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw H.wrapException(P.StateError$("No elements"));
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_", ret: E};
      }, this.$receiver, "JSArray");
    }, "last"],
    get$single: [function(receiver) {
      var t1 = receiver.length;
      if (t1 === 1) {
        if (0 >= t1)
          return H.ioore(receiver, 0);
        return receiver[0];
      }
      if (t1 === 0)
        throw H.wrapException(new P.StateError("No elements"));
      throw H.wrapException(new P.StateError("More than one element"));
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_", ret: E};
      }, this.$receiver, "JSArray");
    }, "single"],
    removeRange$2: [function(receiver, start, end) {
      var receiverLength, t1;
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeRange"));
      receiverLength = receiver.length;
      t1 = J.getInterceptor$n(start);
      if (t1.$lt(start, 0) || t1.$gt(start, receiverLength))
        throw H.wrapException(P.RangeError$range(start, 0, receiverLength));
      t1 = J.getInterceptor$n(end);
      if (t1.$lt(end, start) || t1.$gt(end, receiverLength))
        throw H.wrapException(P.RangeError$range(end, start, receiverLength));
      if (typeof end !== "number")
        return H.iae(end);
      H.Lists_copy(receiver, end, receiver, start, receiverLength - end);
      if (typeof start !== "number")
        return H.iae(start);
      this.set$length(receiver, receiverLength - (end - start));
    }, "call$2" /* tearOffInfo */, "get$removeRange", 4, 0, 1052, 439, 440, "removeRange"],
    setRange$4: [function(receiver, start, end, iterable, skipCount) {
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("set range"));
      H.IterableMixinWorkaround_setRangeList(receiver, start, end, iterable, skipCount);
    }, function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    }, "setRange$3", "call$4" /* tearOffInfo */, null /* tearOffInfo */, "get$setRange", 6, 2, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_int_Iterable__int", void: true, args: [J.JSInt, J.JSInt, [P.Iterable, E]], opt: [J.JSInt]};
      }, this.$receiver, "JSArray");
    }, 778, 439, 440, 417, 419, "setRange"],
    fillRange$3: [function(receiver, start, end, fillValue) {
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("fill range"));
      H.IterableMixinWorkaround_fillRangeList(receiver, start, end, fillValue);
    }, "call$3" /* tearOffInfo */, "get$fillRange", 4, 2, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_int__E", void: true, args: [J.JSInt, J.JSInt], opt: [E]};
      }, this.$receiver, "JSArray");
    }, 370, 439, 440, 443, "fillRange"],
    replaceRange$3: [function(receiver, start, end, iterable) {
      var t1, removeLength, insertLength, t2, delta, insertEnd, newEnd, newLength;
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeRange"));
      H.IterableMixinWorkaround__rangeCheck(receiver, start, end);
      t1 = J.getInterceptor$a(iterable);
      if (typeof iterable !== "object" || iterable === null || !t1.$isEfficientLength)
        iterable = t1.toList$0(iterable);
      removeLength = J.$sub$n(end, start);
      insertLength = J.get$length$as(iterable);
      t1 = J.getInterceptor$n(removeLength);
      t2 = J.getInterceptor$ns(start);
      if (t1.$ge(removeLength, insertLength)) {
        delta = t1.$sub(removeLength, insertLength);
        insertEnd = t2.$add(start, insertLength);
        t1 = receiver.length;
        if (typeof delta !== "number")
          return H.iae(delta);
        newEnd = t1 - delta;
        this.setRange$3(receiver, start, insertEnd, iterable);
        if (delta !== 0) {
          this.setRange$4(receiver, insertEnd, newEnd, receiver, end);
          this.set$length(receiver, newEnd);
        }
      } else {
        delta = J.$sub$n(insertLength, removeLength);
        t1 = receiver.length;
        if (typeof delta !== "number")
          return H.iae(delta);
        newLength = t1 + delta;
        insertEnd = t2.$add(start, insertLength);
        this.set$length(receiver, newLength);
        this.setRange$4(receiver, insertEnd, newLength, receiver, end);
        this.setRange$3(receiver, start, insertEnd, iterable);
      }
    }, "call$3" /* tearOffInfo */, "get$replaceRange", 6, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_int_Iterable", void: true, args: [J.JSInt, J.JSInt, [P.Iterable, E]]};
      }, this.$receiver, "JSArray");
    }, 439, 440, 417, "replaceRange"],
    any$1: [function(receiver, f) {
      return H.IterableMixinWorkaround_any(receiver, f);
    }, "call$1" /* tearOffInfo */, "get$any", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__bool__E", ret: J.JSBool, args: [{func: "bool__E", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "JSArray");
    }, 412, "any"],
    every$1: [function(receiver, f) {
      return H.IterableMixinWorkaround_every(receiver, f);
    }, "call$1" /* tearOffInfo */, "get$every", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__bool__E", ret: J.JSBool, args: [{func: "bool__E", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "JSArray");
    }, 412, "every"],
    get$reversed: [function(receiver) {
      return H.setRuntimeTypeInfo(new H.ReversedListIterable(receiver), [null]);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable_", ret: [P.Iterable, E]};
      }, this.$receiver, "JSArray");
    }, "reversed"],
    sort$1: [function(receiver, compare) {
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("sort"));
      if (compare == null)
        compare = P.Comparable_compare$closure();
      H.Sort__doSort(receiver, 0, receiver.length - 1, compare);
    }, "call$1" /* tearOffInfo */, "get$sort", 0, 2, function() {
      return H.computeSignature(function(E) {
        return {func: "void___int__E_E", void: true, opt: [{func: "int__E_E0", ret: J.JSInt, args: [E, E]}]};
      }, this.$receiver, "JSArray");
    }, 370, 459, "sort"],
    shuffle$1: [function(receiver, random) {
      H.IterableMixinWorkaround_shuffleList(receiver, random);
    }, "call$1" /* tearOffInfo */, "get$shuffle", 0, 2, 1053, 370, 437, "shuffle"],
    indexOf$2: [function(receiver, element, start) {
      return H.Lists_indexOf(receiver, element, start, receiver.length);
    }, function($receiver, element) {
      return this.indexOf$2($receiver, element, 0);
    }, "indexOf$1", "call$2" /* tearOffInfo */, null /* tearOffInfo */, "get$indexOf", 2, 2, 1054, 778, 453, 439, "indexOf"],
    lastIndexOf$2: [function(receiver, element, start) {
      return H.Lists_lastIndexOf(receiver, element, start == null ? receiver.length - 1 : start);
    }, function($receiver, element) {
      return this.lastIndexOf$2($receiver, element, null);
    }, "lastIndexOf$1", "call$2" /* tearOffInfo */, null /* tearOffInfo */, "get$lastIndexOf", 2, 2, 1054, 370, 453, 439, "lastIndexOf"],
    contains$1: [function(receiver, other) {
      var i;
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq(receiver[i], other))
          return true;
      return false;
    }, "call$1" /* tearOffInfo */, "get$contains", 2, 0, 1047, 403, "contains"],
    get$isEmpty: [function(receiver) {
      return receiver.length === 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$isNotEmpty: [function(receiver) {
      return receiver.length !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty"],
    toString$0: [function(receiver) {
      return H.IterableMixinWorkaround_toStringIterable(receiver, "[", "]");
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    toList$1$growable: [function(receiver, growable) {
      var t1;
      if (growable === true)
        return H.setRuntimeTypeInfo(receiver.slice(), [H.getTypeArgumentByIndex(receiver, 0)]);
      else {
        t1 = H.setRuntimeTypeInfo(receiver.slice(), [H.getTypeArgumentByIndex(receiver, 0)]);
        t1.fixed$length = init;
        return t1;
      }
    }, function($receiver) {
      return this.toList$1$growable($receiver, true);
    }, "toList$0", "call$1$growable" /* tearOffInfo */, null /* tearOffInfo */, "get$toList", 0, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "List___bool", ret: [J.JSArray, E], named: {growable: J.JSBool}};
      }, this.$receiver, "JSArray");
    }, 816, 817, "toList"],
    toSet$0: [function(receiver) {
      var t1 = P.LinkedHashSet_LinkedHashSet(null, null, null, H.getTypeArgumentByIndex(receiver, 0));
      t1.addAll$1(0, receiver);
      return t1;
    }, "call$0" /* tearOffInfo */, "get$toSet", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set_0", ret: [P.Set, E]};
      }, this.$receiver, "JSArray");
    }, "toSet"],
    get$iterator: [function(receiver) {
      return H.setRuntimeTypeInfo(new H.ListIterator(receiver, receiver.length, 0, null), [H.getTypeArgumentByIndex(receiver, 0)]);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterator_", ret: [P.Iterator, E]};
      }, this.$receiver, "JSArray");
    }, "iterator"],
    get$hashCode: [function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    get$length: [function(receiver) {
      return receiver.length;
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    set$length: [function(receiver, newLength) {
      if (typeof newLength !== "number" || Math.floor(newLength) !== newLength)
        throw H.wrapException(P.ArgumentError$(newLength));
      if (newLength < 0)
        throw H.wrapException(P.RangeError$value(newLength));
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("set length"));
      receiver.length = newLength;
    }, null /* tearOffInfo */, null, 3, 0, 1055, 1056, "length"],
    $index: [function(receiver, index) {
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(P.ArgumentError$(index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      return receiver[index];
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int3", ret: E, args: [J.JSInt]};
      }, this.$receiver, "JSArray");
    }, 321, "[]"],
    $indexSet: [function(receiver, index, value) {
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("indexed set"));
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(P.ArgumentError$(index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      receiver[index] = value;
    }, "call$2" /* tearOffInfo */, "get$[]=", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_E", void: true, args: [J.JSInt, E]};
      }, this.$receiver, "JSArray");
    }, 321, 280, "[]="],
    asMap$0: [function(receiver) {
      return H.setRuntimeTypeInfo(new H.ListMapView(receiver), [null]);
    }, "call$0" /* tearOffInfo */, "get$asMap", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Map_1", ret: [P.Map, J.JSInt, E]};
      }, this.$receiver, "JSArray");
    }, "asMap"],
    $isList: true,
    $asList: null,
    $asIterable: null,
    $isList: true,
    $isEfficientLength: true,
    $isIterable: true,
    "<>": [3],
    static: {JSArray_JSArray$fixed: [function($length, $E) {
        var t1;
        if (typeof $length !== "number" || Math.floor($length) !== $length || $length < 0)
          throw H.wrapException(P.ArgumentError$("Length must be a non-negative integer: " + H.S($length)));
        t1 = H.setRuntimeTypeInfo(new Array($length), [$E]);
        t1.fixed$length = init;
        return t1;
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "JSArray__int", ret: [J.JSArray, E], args: [J.JSInt]};
        }, this.$receiver, "JSArray");
      }, 243, "new JSArray$fixed" /* new JSArray$fixed:1:0 */]}
  },
  "+JSArray": [1042, 1057, 1058],
  JSArray_retainWhere_closure: {
    "": "Closure;this_0-370,test_1-1059",
    call$1: [function(element) {
      return this.test_1.call$1(element) !== true;
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__E0", args: [E]};
      }, this.$receiver, "JSArray");
    }, 453, "call"],
    $signature: function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__E0", args: [E]};
      }, this.this_0, "JSArray");
    }
  },
  "+JSArray_retainWhere_closure": [1060],
  JSMutableArray: {
    "": "JSArray;",
    $isJSMutableArray: true,
    $asJSArray: null,
    $asList: null,
    $asIterable: null,
    "<>": [4]
  },
  "+JSMutableArray": [1061, 1062],
  JSFixedArray: {
    "": "JSMutableArray;",
    $asJSMutableArray: null,
    $asJSArray: null,
    $asList: null,
    $asIterable: null,
    "<>": [6]
  },
  "+JSFixedArray": [1063],
  JSExtendableArray: {
    "": "JSMutableArray;",
    $isJSExtendableArray: true,
    $asJSMutableArray: null,
    $asJSArray: null,
    $asList: null,
    $asIterable: null,
    "<>": [7]
  },
  "+JSExtendableArray": [1064],
  JSNumber: {
    "": "num/Interceptor;",
    compareTo$1: [function(receiver, b) {
      var bIsNegative;
      if (typeof b !== "number")
        throw H.wrapException(new P.ArgumentError(b));
      if (receiver < b)
        return -1;
      else if (receiver > b)
        return 1;
      else if (receiver === b) {
        if (receiver === 0) {
          bIsNegative = this.get$isNegative(b);
          if (this.get$isNegative(receiver) === bIsNegative)
            return 0;
          if (this.get$isNegative(receiver))
            return -1;
          return 1;
        }
        return 0;
      } else if (isNaN(receiver)) {
        if (this.get$isNaN(b))
          return 0;
        return 1;
      } else
        return -1;
    }, "call$1" /* tearOffInfo */, "get$compareTo", 2, 0, 1065, 649, "compareTo"],
    get$isNegative: [function(receiver) {
      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNegative"],
    get$isNaN: [function(receiver) {
      return isNaN(receiver);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNaN"],
    get$isInfinite: [function(receiver) {
      return receiver == Infinity || receiver == -Infinity;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isInfinite"],
    get$isFinite: [function(receiver) {
      return isFinite(receiver);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isFinite"],
    remainder$1: [function(receiver, b) {
      if (b == null)
        H.throwExpression(new P.ArgumentError(null));
      if (typeof b !== "number")
        throw H.wrapException(new P.ArgumentError(b));
      return receiver % b;
    }, "call$1" /* tearOffInfo */, "get$remainder", 2, 0, 1066, 649, "remainder"],
    abs$0: [function(receiver) {
      return Math.abs(receiver);
    }, "call$0" /* tearOffInfo */, "get$abs", 0, 0, 297, "abs"],
    get$sign: [function(receiver) {
      var t1;
      if (receiver > 0)
        t1 = 1;
      else
        t1 = receiver < 0 ? -1 : receiver;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 297, "sign"],
    toInt$0: [function(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw H.wrapException(P.UnsupportedError$('' + receiver));
    }, "call$0" /* tearOffInfo */, "get$toInt", 0, 0, 823, "toInt"],
    truncate$0: [function(receiver) {
      return this.toInt$0(receiver);
    }, "call$0" /* tearOffInfo */, "get$truncate", 0, 0, 823, "truncate"],
    ceil$0: [function(receiver) {
      return this.toInt$0(Math.ceil(receiver));
    }, "call$0" /* tearOffInfo */, "get$ceil", 0, 0, 823, "ceil"],
    floor$0: [function(receiver) {
      return this.toInt$0(Math.floor(receiver));
    }, "call$0" /* tearOffInfo */, "get$floor", 0, 0, 823, "floor"],
    round$0: [function(receiver) {
      return this.toInt$0(this.roundToDouble$0(receiver));
    }, "call$0" /* tearOffInfo */, "get$round", 0, 0, 823, "round"],
    ceilToDouble$0: [function(receiver) {
      return Math.ceil(receiver);
    }, "call$0" /* tearOffInfo */, "get$ceilToDouble", 0, 0, 1067, "ceilToDouble"],
    floorToDouble$0: [function(receiver) {
      return Math.floor(receiver);
    }, "call$0" /* tearOffInfo */, "get$floorToDouble", 0, 0, 1067, "floorToDouble"],
    roundToDouble$0: [function(receiver) {
      if (receiver < 0)
        return -Math.round(-receiver);
      else
        return Math.round(receiver);
    }, "call$0" /* tearOffInfo */, "get$roundToDouble", 0, 0, 1067, "roundToDouble"],
    truncateToDouble$0: [function(receiver) {
      return receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
    }, "call$0" /* tearOffInfo */, "get$truncateToDouble", 0, 0, 1067, "truncateToDouble"],
    clamp$2: [function(receiver, lowerLimit, upperLimit) {
      if (typeof lowerLimit !== "number")
        throw H.wrapException(new P.ArgumentError(lowerLimit));
      if (typeof upperLimit !== "number")
        throw H.wrapException(new P.ArgumentError(upperLimit));
      if (this.compareTo$1(lowerLimit, upperLimit) > 0)
        throw H.wrapException(new P.ArgumentError(lowerLimit));
      if (this.compareTo$1(receiver, lowerLimit) < 0)
        return lowerLimit;
      if (this.compareTo$1(receiver, upperLimit) > 0)
        return upperLimit;
      return receiver;
    }, "call$2" /* tearOffInfo */, "get$clamp", 4, 0, 1068, 1069, 1070, "clamp"],
    toDouble$0: [function(receiver) {
      return receiver;
    }, "call$0" /* tearOffInfo */, "get$toDouble", 0, 0, 319, "toDouble"],
    toStringAsFixed$1: [function(receiver, fractionDigits) {
      var t1, result;
      if (typeof fractionDigits !== "number")
        H.throwExpression(new P.ArgumentError(fractionDigits));
      t1 = J.getInterceptor$n(fractionDigits);
      if (t1.$lt(fractionDigits, 0) || t1.$gt(fractionDigits, 20))
        throw H.wrapException(P.RangeError$(fractionDigits));
      result = receiver.toFixed(fractionDigits);
      if (receiver === 0 && this.get$isNegative(receiver))
        return "-" + result;
      return result;
    }, "call$1" /* tearOffInfo */, "get$toStringAsFixed", 2, 0, 825, 1071, "toStringAsFixed"],
    toStringAsExponential$1: [function(receiver, fractionDigits) {
      var t1, result;
      if (fractionDigits != null) {
        if (typeof fractionDigits !== "number")
          H.throwExpression(new P.ArgumentError(fractionDigits));
        t1 = J.getInterceptor$n(fractionDigits);
        if (t1.$lt(fractionDigits, 0) || t1.$gt(fractionDigits, 20))
          throw H.wrapException(P.RangeError$(fractionDigits));
        result = receiver.toExponential(fractionDigits);
      } else
        result = receiver.toExponential();
      if (receiver === 0 && this.get$isNegative(receiver))
        return "-" + result;
      return result;
    }, "call$1" /* tearOffInfo */, "get$toStringAsExponential", 0, 2, 1072, 370, 1071, "toStringAsExponential"],
    toStringAsPrecision$1: [function(receiver, precision) {
      var t1, result;
      if (typeof precision !== "number")
        H.throwExpression(new P.ArgumentError(precision));
      t1 = J.getInterceptor$n(precision);
      if (t1.$lt(precision, 1) || t1.$gt(precision, 21))
        throw H.wrapException(P.RangeError$(precision));
      result = receiver.toPrecision(precision);
      if (receiver === 0 && this.get$isNegative(receiver))
        return "-" + result;
      return result;
    }, "call$1" /* tearOffInfo */, "get$toStringAsPrecision", 2, 0, 825, 1073, "toStringAsPrecision"],
    toRadixString$1: [function(receiver, radix) {
      var t1;
      if (typeof radix !== "number")
        H.throwExpression(new P.ArgumentError(radix));
      t1 = J.getInterceptor$n(radix);
      if (t1.$lt(radix, 2) || t1.$gt(radix, 36))
        throw H.wrapException(P.RangeError$(radix));
      return receiver.toString(radix);
    }, "call$1" /* tearOffInfo */, "get$toRadixString", 2, 0, 825, 293, "toRadixString"],
    toString$0: [function(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    get$hashCode: [function(receiver) {
      return receiver & 0x1FFFFFFF;
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    $negate: [function(receiver) {
      return -receiver;
    }, "call$0" /* tearOffInfo */, "get$unary-", 0, 0, 297, "unary-"],
    $add: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver + other;
    }, "call$1" /* tearOffInfo */, "get$+", 2, 0, 1066, 403, "+"],
    $sub: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver - other;
    }, "call$1" /* tearOffInfo */, "get$-", 2, 0, 1066, 403, "-"],
    $div: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      return receiver / other;
    }, "call$1" /* tearOffInfo */, "get$/", 2, 0, 1066, 403, "/"],
    $mul: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver * other;
    }, "call$1" /* tearOffInfo */, "get$*", 2, 0, 1066, 403, "*"],
    $mod: [function(receiver, other) {
      var result;
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      if (other < 0)
        return result - other;
      else
        return result + other;
    }, "call$1" /* tearOffInfo */, "get$%", 2, 0, 1066, 403, "%"],
    $tdiv: [function(receiver, other) {
      if ((receiver | 0) === receiver && (other | 0) === other && 0 !== other && -1 !== other)
        return receiver / other | 0;
      else {
        if (typeof other !== "number")
          H.throwExpression(P.ArgumentError$(other));
        return this.toInt$0(receiver / other);
      }
    }, "call$1" /* tearOffInfo */, "get$~/", 2, 0, 1066, 403, "~/"],
    _tdivFast$1: [function(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this.toInt$0(receiver / other);
    }, "call$1" /* tearOffInfo */, "get$_tdivFast", 2, 0, 1066, 403, "_tdivFast"],
    $shl: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      if (other < 0)
        throw H.wrapException(new P.ArgumentError(other));
      return other > 31 ? 0 : receiver << other >>> 0;
    }, "call$1" /* tearOffInfo */, "get$<<", 2, 0, 1066, 403, "<<"],
    _shlPositive$1: [function(receiver, other) {
      return other > 31 ? 0 : receiver << other >>> 0;
    }, "call$1" /* tearOffInfo */, "get$_shlPositive", 2, 0, 1066, 403, "_shlPositive"],
    $shr: [function(receiver, other) {
      var t1;
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      if (other < 0)
        throw H.wrapException(P.ArgumentError$(other));
      if (receiver > 0)
        t1 = other > 31 ? 0 : receiver >>> other;
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    }, "call$1" /* tearOffInfo */, "get$>>", 2, 0, 1066, 403, ">>"],
    _shrOtherPositive$1: [function(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = other > 31 ? 0 : receiver >>> other;
      else {
        t1 = J.$gt$n(other, 31) ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    }, "call$1" /* tearOffInfo */, "get$_shrOtherPositive", 2, 0, 1066, 403, "_shrOtherPositive"],
    $and: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return (receiver & other) >>> 0;
    }, "call$1" /* tearOffInfo */, "get$&", 2, 0, 1066, 403, "&"],
    $or: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      return (receiver | other) >>> 0;
    }, "call$1" /* tearOffInfo */, "get$|", 2, 0, 1066, 403, "|"],
    $xor: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return (receiver ^ other) >>> 0;
    }, "call$1" /* tearOffInfo */, "get$^", 2, 0, 1066, 403, "^"],
    $lt: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver < other;
    }, "call$1" /* tearOffInfo */, "get$<", 2, 0, 1074, 403, "<"],
    $gt: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver > other;
    }, "call$1" /* tearOffInfo */, "get$>", 2, 0, 1074, 403, ">"],
    $le: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver <= other;
    }, "call$1" /* tearOffInfo */, "get$<=", 2, 0, 1074, 403, "<="],
    $ge: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver >= other;
    }, "call$1" /* tearOffInfo */, "get$>=", 2, 0, 1074, 403, ">="],
    $isnum: true,
    static: {"": "JSNumber__MIN_INT32<-1075,JSNumber__MAX_INT32<-1075"}
  },
  "+JSNumber": [1042, 188],
  JSInt: {
    "": "int/JSNumber;",
    get$isEven: [function(receiver) {
      return (receiver & 1) === 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEven"],
    get$isOdd: [function(receiver) {
      return (receiver & 1) === 1;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isOdd"],
    toUnsigned$1: [function(receiver, width) {
      if (typeof width !== "number")
        return H.iae(width);
      return (receiver & this.$shl(1, width) - 1) >>> 0;
    }, "call$1" /* tearOffInfo */, "get$toUnsigned", 2, 0, 244, 904, "toUnsigned"],
    toSigned$1: [function(receiver, width) {
      var t1, signMask;
      t1 = J.$sub$n(width, 1);
      if (typeof t1 !== "number")
        return H.iae(t1);
      signMask = this.$shl(1, t1);
      return ((receiver & signMask - 1) >>> 0) - ((receiver & signMask) >>> 0);
    }, "call$1" /* tearOffInfo */, "get$toSigned", 2, 0, 244, 904, "toSigned"],
    get$bitLength: [function(receiver) {
      var nonneg = receiver < 0 ? -receiver - 1 : receiver;
      if (nonneg >= 4294967296)
        return J.JSInt__bitCount(J.JSInt__spread(this._tdivFast$1(nonneg, 4294967296))) + 32;
      return J.JSInt__bitCount(J.JSInt__spread(nonneg));
    }, null /* tearOffInfo */, null, 1, 0, 823, "bitLength"],
    get$runtimeType: [function(receiver) {
      return C.Type_SnA;
    }, null /* tearOffInfo */, null, 1, 0, 1041, "runtimeType"],
    $not: [function(receiver) {
      return ~receiver >>> 0;
    }, "call$0" /* tearOffInfo */, "get$~", 0, 0, 823, "~"],
    $isdouble: true,
    $isnum: true,
    $isint: true,
    static: {JSInt__bitCount: [function(i) {
        i = (i >>> 0) - (i >>> 1 & 1431655765);
        i = (i & 858993459) + (i >>> 2 & 858993459);
        i = 252645135 & i + (i >>> 4);
        i += i >>> 8;
        return i + (i >>> 16) & 63;
      }, "call$1" /* tearOffInfo */, "JSInt__bitCount$closure", 2, 0, 244, 245, "_bitCount"], JSInt__spread: [function(i) {
        i |= i >> 1;
        i |= i >> 2;
        i |= i >> 4;
        i |= i >> 8;
        return (i | i >> 16) >>> 0;
      }, "call$1" /* tearOffInfo */, "JSInt__spread$closure", 2, 0, 244, 245, "_spread"]}
  },
  "+JSInt": [188, 1076, 1075],
  JSDouble: {
    "": "double/JSNumber;",
    get$runtimeType: [function(receiver) {
      return C.Type_qq1;
    }, null /* tearOffInfo */, null, 1, 0, 1041, "runtimeType"],
    $isdouble: true,
    $isnum: true
  },
  "+JSDouble": [188, 1076],
  JSPositiveInt: {
    "": "JSInt;"
  },
  "+JSPositiveInt": [1075],
  JSUInt32: {
    "": "JSPositiveInt;"
  },
  "+JSUInt32": [1077],
  JSUInt31: {
    "": "JSUInt32;"
  },
  "+JSUInt31": [1078],
  JSString: {
    "": "String/Interceptor;",
    codeUnitAt$1: [function(receiver, index) {
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(P.ArgumentError$(index));
      if (index < 0)
        throw H.wrapException(P.RangeError$value(index));
      if (index >= receiver.length)
        throw H.wrapException(P.RangeError$value(index));
      return receiver.charCodeAt(index);
    }, "call$1" /* tearOffInfo */, "get$codeUnitAt", 2, 0, 244, 321, "codeUnitAt"],
    allMatches$1: [function(receiver, str) {
      if (typeof str !== "string")
        H.throwExpression(P.ArgumentError$(str));
      return H.allMatchesInStringUnchecked(receiver, str);
    }, "call$1" /* tearOffInfo */, "get$allMatches", 2, 0, 1079, 1080, "allMatches"],
    matchAsPrefix$2: [function(receiver, string, start) {
      var t1, t2, t3, i, t4;
      t1 = J.getInterceptor$n(start);
      if (t1.$lt(start, 0) || t1.$gt(start, J.get$length$as(string)))
        throw H.wrapException(P.RangeError$range(start, 0, J.get$length$as(string)));
      t2 = receiver.length;
      t3 = J.getInterceptor$as(string);
      if (J.$gt$n(t1.$add(start, t2), t3.get$length(string)))
        return;
      for (i = 0; i < t2; ++i) {
        t4 = t3.codeUnitAt$1(string, t1.$add(start, i));
        if (i >= t2)
          H.throwExpression(P.RangeError$value(i));
        if (t4 !== receiver.charCodeAt(i))
          return;
      }
      return new H.StringMatch(start, string, receiver);
    }, "call$2" /* tearOffInfo */, "get$matchAsPrefix", 2, 2, 1081, 778, 290, 439, "matchAsPrefix"],
    $add: [function(receiver, other) {
      if (typeof other !== "string")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver + other;
    }, "call$1" /* tearOffInfo */, "get$+", 2, 0, 407, 403, "+"],
    endsWith$1: [function(receiver, other) {
      var t1, otherLength, t2;
      if (typeof other !== "string")
        H.throwExpression(P.ArgumentError$(other));
      t1 = J.getInterceptor$as(other);
      otherLength = t1.get$length(other);
      t2 = receiver.length;
      if (J.$gt$n(otherLength, t2))
        return false;
      if (typeof otherLength !== "number")
        return H.iae(otherLength);
      return t1.$eq(other, this.substring$1(receiver, t2 - otherLength));
    }, "call$1" /* tearOffInfo */, "get$endsWith", 2, 0, 493, 403, "endsWith"],
    replaceAll$2: [function(receiver, from, to) {
      if (typeof to !== "string")
        H.throwExpression(new P.ArgumentError(to));
      return H.stringReplaceAllUnchecked(receiver, from, to);
    }, "call$2" /* tearOffInfo */, "get$replaceAll", 4, 0, 1082, 404, 405, "replaceAll"],
    replaceAllMapped$2: [function(receiver, from, convert) {
      return H.stringReplaceAllFuncUnchecked(receiver, from, convert, null);
    }, "call$2" /* tearOffInfo */, "get$replaceAllMapped", 4, 0, 1083, 404, 1084, "replaceAllMapped"],
    splitMapJoin$3$onMatch$onNonMatch: [function(receiver, from, onMatch, onNonMatch) {
      return H.stringReplaceAllFuncUnchecked(receiver, from, onMatch, onNonMatch);
    }, "call$3$onMatch$onNonMatch" /* tearOffInfo */, "get$splitMapJoin", 2, 5, 1085, 370, 370, 404, 409, 410, "splitMapJoin"],
    replaceFirst$2: [function(receiver, from, to) {
      if (typeof to !== "string")
        H.throwExpression(new P.ArgumentError(to));
      return H.stringReplaceFirstUnchecked(receiver, from, to);
    }, "call$2" /* tearOffInfo */, "get$replaceFirst", 4, 0, 1082, 404, 405, "replaceFirst"],
    split$1: [function(receiver, pattern) {
      var t1;
      if (pattern == null)
        H.throwExpression(new P.ArgumentError(null));
      if (typeof pattern === "string")
        return receiver.split(pattern);
      else {
        t1 = J.getInterceptor(pattern);
        if (typeof pattern === "object" && pattern !== null && !!t1.$isJSSyntaxRegExp)
          return receiver.split(pattern._nativeRegExp);
        else
          throw H.wrapException("String.split(Pattern) UNIMPLEMENTED");
      }
    }, "call$1" /* tearOffInfo */, "get$split", 2, 0, 1086, 394, "split"],
    startsWith$2: [function(receiver, pattern, index) {
      var t1, endIndex;
      if (typeof index !== "number" || Math.floor(index) !== index)
        H.throwExpression(P.ArgumentError$(index));
      t1 = J.getInterceptor$n(index);
      if (t1.$lt(index, 0) || t1.$gt(index, receiver.length))
        throw H.wrapException(P.RangeError$range(index, 0, receiver.length));
      if (typeof pattern === "string") {
        endIndex = t1.$add(index, pattern.length);
        if (J.$gt$n(endIndex, receiver.length))
          return false;
        return pattern === receiver.substring(index, endIndex);
      }
      return J.matchAsPrefix$2$s(pattern, receiver, index) != null;
    }, function($receiver, pattern) {
      return this.startsWith$2($receiver, pattern, 0);
    }, "startsWith$1", "call$2" /* tearOffInfo */, null /* tearOffInfo */, "get$startsWith", 2, 2, 1087, 778, 394, 321, "startsWith"],
    substring$2: [function(receiver, startIndex, endIndex) {
      var t1;
      if (typeof startIndex !== "number" || Math.floor(startIndex) !== startIndex)
        H.throwExpression(P.ArgumentError$(startIndex));
      if (endIndex == null)
        endIndex = receiver.length;
      if (typeof endIndex !== "number" || Math.floor(endIndex) !== endIndex)
        H.throwExpression(P.ArgumentError$(endIndex));
      t1 = J.getInterceptor$n(startIndex);
      if (t1.$lt(startIndex, 0))
        throw H.wrapException(P.RangeError$value(startIndex));
      if (t1.$gt(startIndex, endIndex))
        throw H.wrapException(P.RangeError$value(startIndex));
      if (J.$gt$n(endIndex, receiver.length))
        throw H.wrapException(P.RangeError$value(endIndex));
      return receiver.substring(startIndex, endIndex);
    }, function($receiver, startIndex) {
      return this.substring$2($receiver, startIndex, null);
    }, "substring$1", "call$2" /* tearOffInfo */, null /* tearOffInfo */, "get$substring", 2, 2, 1088, 370, 375, 454, "substring"],
    toLowerCase$0: [function(receiver) {
      return receiver.toLowerCase();
    }, "call$0" /* tearOffInfo */, "get$toLowerCase", 0, 0, 253, "toLowerCase"],
    toUpperCase$0: [function(receiver) {
      return receiver.toUpperCase();
    }, "call$0" /* tearOffInfo */, "get$toUpperCase", 0, 0, 253, "toUpperCase"],
    trim$0: [function(receiver) {
      var endIndex, startIndex, codeUnit, endIndex0, endIndex1;
      for (endIndex = receiver.length, startIndex = 0; startIndex < endIndex;) {
        if (startIndex >= endIndex)
          H.throwExpression(P.RangeError$value(startIndex));
        codeUnit = receiver.charCodeAt(startIndex);
        if (codeUnit === 32 || codeUnit === 13 || J.JSString__isWhitespace(codeUnit))
          ++startIndex;
        else
          break;
      }
      if (startIndex === endIndex)
        return "";
      for (endIndex0 = endIndex; true; endIndex0 = endIndex1) {
        endIndex1 = endIndex0 - 1;
        if (endIndex1 < 0)
          H.throwExpression(P.RangeError$value(endIndex1));
        if (endIndex1 >= endIndex)
          H.throwExpression(P.RangeError$value(endIndex1));
        codeUnit = receiver.charCodeAt(endIndex1);
        if (codeUnit === 32 || codeUnit === 13 || J.JSString__isWhitespace(codeUnit))
          ;
        else
          break;
      }
      if (startIndex === 0 && endIndex0 === endIndex)
        return receiver;
      return receiver.substring(startIndex, endIndex0);
    }, "call$0" /* tearOffInfo */, "get$trim", 0, 0, 253, "trim"],
    get$codeUnits: [function(receiver) {
      return new J._CodeUnits(receiver);
    }, null /* tearOffInfo */, null, 1, 0, 1089, "codeUnits"],
    get$runes: [function(receiver) {
      return new P.Runes(receiver);
    }, null /* tearOffInfo */, null, 1, 0, 1090, "runes"],
    indexOf$2: [function(receiver, pattern, start) {
      var t1, match, t2, i;
      if (pattern == null)
        H.throwExpression(new P.ArgumentError(null));
      if (typeof start !== "number" || Math.floor(start) !== start)
        throw H.wrapException(new P.ArgumentError(start));
      if (start < 0 || start > receiver.length)
        throw H.wrapException(P.RangeError$range(start, 0, receiver.length));
      if (typeof pattern === "string")
        return receiver.indexOf(pattern, start);
      t1 = J.getInterceptor$s(pattern);
      if (typeof pattern === "object" && pattern !== null && !!t1.$isJSSyntaxRegExp) {
        match = pattern._execGlobal$2(receiver, start);
        return match == null ? -1 : match._match.index;
      }
      for (t2 = receiver.length, i = start; i <= t2; ++i)
        if (t1.matchAsPrefix$2(pattern, receiver, i) != null)
          return i;
      return -1;
    }, function($receiver, pattern) {
      return this.indexOf$2($receiver, pattern, 0);
    }, "indexOf$1", "call$2" /* tearOffInfo */, null /* tearOffInfo */, "get$indexOf", 2, 2, 1091, 778, 394, 439, "indexOf"],
    lastIndexOf$2: [function(receiver, pattern, start) {
      var t1, t2, i;
      if (pattern == null)
        H.throwExpression(P.ArgumentError$(null));
      if (start == null)
        start = receiver.length;
      else if (typeof start !== "number" || Math.floor(start) !== start)
        throw H.wrapException(P.ArgumentError$(start));
      else if (start < 0 || start > receiver.length)
        throw H.wrapException(P.RangeError$range(start, 0, receiver.length));
      if (typeof pattern === "string") {
        t1 = pattern.length;
        t2 = receiver.length;
        if (J.$add$ns(start, t1) > t2)
          start = t2 - t1;
        return receiver.lastIndexOf(pattern, start);
      }
      for (t1 = J.getInterceptor$s(pattern), i = start; t2 = J.getInterceptor$n(i), t2.$ge(i, 0); i = t2.$sub(i, 1))
        if (t1.matchAsPrefix$2(pattern, receiver, i) != null)
          return i;
      return -1;
    }, function($receiver, pattern) {
      return this.lastIndexOf$2($receiver, pattern, null);
    }, "lastIndexOf$1", "call$2" /* tearOffInfo */, null /* tearOffInfo */, "get$lastIndexOf", 2, 2, 1091, 370, 394, 439, "lastIndexOf"],
    contains$2: [function(receiver, other, startIndex) {
      var t1;
      if (other == null)
        H.throwExpression(P.ArgumentError$(null));
      t1 = J.getInterceptor$n(startIndex);
      if (t1.$lt(startIndex, 0) || t1.$gt(startIndex, receiver.length))
        throw H.wrapException(P.RangeError$range(startIndex, 0, receiver.length));
      return H.stringContainsUnchecked(receiver, other, startIndex);
    }, function($receiver, other) {
      return this.contains$2($receiver, other, 0);
    }, "contains$1", "call$2" /* tearOffInfo */, null /* tearOffInfo */, "get$contains", 2, 2, 1087, 778, 403, 375, "contains"],
    get$isEmpty: [function(receiver) {
      return receiver.length === 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$isNotEmpty: [function(receiver) {
      return receiver.length !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty"],
    compareTo$1: [function(receiver, other) {
      var t1;
      if (typeof other !== "string")
        throw H.wrapException(new P.ArgumentError(other));
      if (receiver === other)
        t1 = 0;
      else
        t1 = receiver < other ? -1 : 1;
      return t1;
    }, "call$1" /* tearOffInfo */, "get$compareTo", 2, 0, 859, 403, "compareTo"],
    toString$0: [function(receiver) {
      return receiver;
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    get$hashCode: [function(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = 536870911 & hash + receiver.charCodeAt(i);
        hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
        hash ^= hash >> 6;
      }
      hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
      hash ^= hash >> 11;
      return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    get$runtimeType: [function(receiver) {
      return C.Type_Ejg;
    }, null /* tearOffInfo */, null, 1, 0, 1041, "runtimeType"],
    get$length: [function(receiver) {
      return receiver.length;
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    $index: [function(receiver, index) {
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(P.ArgumentError$(index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      return receiver[index];
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, 825, 321, "[]"],
    $isString: true,
    $isPattern: true,
    static: {JSString__isWhitespace: [function(codeUnit) {
        if (J.$lt$n(codeUnit, 256))
          switch (codeUnit) {
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 32:
            case 133:
            case 160:
              return true;
            default:
              return false;
          }
        switch (codeUnit) {
          case 5760:
          case 6158:
          case 8192:
          case 8193:
          case 8194:
          case 8195:
          case 8196:
          case 8197:
          case 8198:
          case 8199:
          case 8200:
          case 8201:
          case 8202:
          case 8232:
          case 8233:
          case 8239:
          case 8287:
          case 12288:
          case 65279:
            return true;
          default:
            return false;
        }
      }, "call$1" /* tearOffInfo */, "JSString__isWhitespace$closure", 2, 0, 246, 247, "_isWhitespace"]}
  },
  "+JSString": [1042, 1057, 1039],
  _CodeUnits: {
    "": "UnmodifiableListBase;__interceptors$_string@-1039",
    get$length: [function(_) {
      return J.get$length$as(this.__interceptors$_string);
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    $index: [function(_, i) {
      return J.codeUnitAt$1$s(this.__interceptors$_string, i);
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, 244, 245, "[]"],
    $asUnmodifiableListBase: function() {
      return [J.JSInt];
    },
    $asList: function() {
      return [J.JSInt];
    },
    $asIterable: function() {
      return [J.JSInt];
    },
    "<>": []
  },
  "+_CodeUnits": [1092],
  "": "mapTypeToInterceptor@-370,interceptedNames@-370"
}],
["_isolate_helper", "dart:_isolate_helper", , H, {
  "": "",
  _callInIsolate: [function(isolate, $function) {
    var result = isolate.eval$1($function);
    init.globalState.topEventLoop.run$0();
    return result;
  }, "call$2" /* tearOffInfo */, "_callInIsolate$closure", 4, 0, 248, 249, 250, "_callInIsolate"],
  startRootIsolate: [function(entry) {
    var t1, t2, rootContext;
    t1 = new H._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null, entry);
    t1._Manager$1(entry);
    init.globalState = t1;
    if (init.globalState.isWorker === true)
      return;
    t1 = init.globalState;
    t2 = t1.nextIsolateId;
    t1.nextIsolateId = J.$add$ns(t2, 1);
    rootContext = new H._IsolateContext(t2, P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H.RawReceivePortImpl), P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSInt), new Isolate());
    init.globalState.rootContext = rootContext;
    init.globalState.currentContext = rootContext;
    t1 = H.getDynamicRuntimeType();
    t2 = H.buildFunctionType(t1, [t1])._isTest$1(entry);
    if (t2)
      rootContext.eval$1(new H.startRootIsolate_closure(entry));
    else {
      t1 = H.buildFunctionType(t1, [t1, t1])._isTest$1(entry);
      if (t1)
        rootContext.eval$1(new H.startRootIsolate_closure0(entry));
      else
        rootContext.eval$1(entry);
    }
    init.globalState.topEventLoop.run$0();
  }, "call$1" /* tearOffInfo */, "startRootIsolate$closure", 2, 0, 251, 252, "startRootIsolate"],
  IsolateNatives_computeThisScript: [function() {
    var currentScript = init.currentScript;
    if (currentScript != null)
      return String(currentScript.src);
    if (typeof version == "function" && typeof os == "object" && "system" in os)
      return H.IsolateNatives_computeThisScriptD8();
    if (typeof version == "function" && typeof system == "function")
      return thisFilename();
    return;
  }, "call$0" /* tearOffInfo */, "IsolateNatives_computeThisScript$closure", 0, 0, 253, "computeThisScript"],
  IsolateNatives_computeThisScriptD8: [function() {
    var stack, matches;
    stack = new Error().stack;
    if (stack == null) {
      stack = (function() {try { throw new Error() } catch(e) { return e.stack }})();
      if (stack == null)
        throw H.wrapException(P.UnsupportedError$("No stack trace"));
    }
    matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
    if (matches != null)
      return matches[1];
    matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
    if (matches != null)
      return matches[1];
    throw H.wrapException(P.UnsupportedError$("Cannot extract URI from \"" + stack + "\""));
  }, "call$0" /* tearOffInfo */, "IsolateNatives_computeThisScriptD8$closure", 0, 0, 253, "computeThisScriptD8"],
  IsolateNatives__processWorkerMessage: [function(sender, e) {
    var msg, t1, functionName, entryPoint, args, message, isSpawnUri, replyTo, t2, context;
    msg = H._deserializeMessage(e.data);
    t1 = J.getInterceptor$as(msg);
    switch (t1.$index(msg, "command")) {
      case "start":
        init.globalState.currentManagerId = t1.$index(msg, "id");
        functionName = t1.$index(msg, "functionName");
        entryPoint = functionName == null ? init.globalState.entry : init.globalFunctions[functionName]();
        args = t1.$index(msg, "args");
        message = H._deserializeMessage(t1.$index(msg, "msg"));
        isSpawnUri = t1.$index(msg, "isSpawnUri");
        replyTo = H._deserializeMessage(t1.$index(msg, "replyTo"));
        t1 = init.globalState;
        t2 = t1.nextIsolateId;
        t1.nextIsolateId = J.$add$ns(t2, 1);
        context = new H._IsolateContext(t2, P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H.RawReceivePortImpl), P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSInt), new Isolate());
        init.globalState.topEventLoop.enqueue$3(context, new H.IsolateNatives__processWorkerMessage_closure(entryPoint, args, message, isSpawnUri, replyTo), "worker-start");
        init.globalState.currentContext = context;
        init.globalState.topEventLoop.run$0();
        break;
      case "spawn-worker":
        H.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "args"), t1.$index(msg, "msg"), t1.$index(msg, "isSpawnUri"), t1.$index(msg, "replyPort"));
        break;
      case "message":
        if (t1.$index(msg, "port") != null)
          t1.$index(msg, "port").send$1(t1.$index(msg, "msg"));
        init.globalState.topEventLoop.run$0();
        break;
      case "close":
        J.remove$1$a(init.globalState.managers, $.get$IsolateNatives_workerIds().$index(0, sender));
        sender.terminate();
        init.globalState.topEventLoop.run$0();
        break;
      case "log":
        H.IsolateNatives__log(t1.$index(msg, "msg"));
        break;
      case "print":
        if (init.globalState.isWorker === true)
          init.globalState.mainManager.postMessage$1(H._serializeMessage(H.fillLiteralMap(["command", "print", "msg", msg], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))));
        else
          P.print(t1.$index(msg, "msg"));
        break;
      case "error":
        throw H.wrapException(t1.$index(msg, "msg"));
      default:
    }
  }, "call$2" /* tearOffInfo */, "IsolateNatives__processWorkerMessage$closure", 4, 0, 254, 255, 256, "_processWorkerMessage"],
  IsolateNatives__log: [function(msg) {
    var trace, exception;
    if (init.globalState.isWorker === true)
      init.globalState.mainManager.postMessage$1(H._serializeMessage(H.fillLiteralMap(["command", "log", "msg", msg], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))));
    else
      try {
        $.get$globalThis().console.log(msg);
      } catch (exception) {
        H.unwrapException(exception);
        trace = new H._StackTrace(exception, null);
        throw H.wrapException(P.Exception_Exception(trace));
      }

  }, "call$1" /* tearOffInfo */, "IsolateNatives__log$closure", 2, 0, 241, 257, "_log"],
  IsolateNatives_spawn: [function(functionName, uri, args, message, isLight, isSpawnUri) {
    var port, result, signalReply;
    if (uri != null && J.endsWith$1$s(uri, ".dart"))
      uri = J.$add$ns(uri, ".js");
    port = P.ReceivePort_ReceivePort();
    result = port.get$first(0).then$1(new H.IsolateNatives_spawn_closure());
    signalReply = port._rawPort.get$sendPort();
    if (init.globalState.supportsWorkers === true && isLight !== true)
      if (init.globalState.isWorker === true)
        init.globalState.mainManager.postMessage$1(H._serializeMessage(H.fillLiteralMap(["command", "spawn-worker", "functionName", functionName, "args", args, "msg", message, "uri", uri, "isSpawnUri", isSpawnUri, "replyPort", signalReply], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))));
      else
        H.IsolateNatives__spawnWorker(functionName, uri, args, message, isSpawnUri, signalReply);
    else
      H.IsolateNatives__startNonWorker(functionName, uri, args, message, isSpawnUri, signalReply);
    return result;
  }, "call$6" /* tearOffInfo */, "IsolateNatives_spawn$closure", 12, 0, 258, 259, 260, 261, 262, 263, 264, "spawn"],
  IsolateNatives__startNonWorker: [function(functionName, uri, args, message, isSpawnUri, replyPort) {
    var t1, t2, t3;
    if (uri != null)
      throw H.wrapException(P.UnsupportedError$("Currently spawnUri is not supported without web workers."));
    t1 = init.globalState.topEventLoop;
    t2 = init.globalState;
    t3 = t2.nextIsolateId;
    t2.nextIsolateId = J.$add$ns(t3, 1);
    t1.enqueue$3(new H._IsolateContext(t3, P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H.RawReceivePortImpl), P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSInt), new Isolate()), new H.IsolateNatives__startNonWorker_closure(functionName, args, message, isSpawnUri, replyPort), "nonworker start");
  }, "call$6" /* tearOffInfo */, "IsolateNatives__startNonWorker$closure", 12, 0, 265, 259, 260, 261, 262, 264, 266, "_startNonWorker"],
  IsolateNatives__startIsolate: [function(topLevel, args, message, isSpawnUri, replyTo) {
    var t1, t2;
    t1 = init.globalState.currentContext.get$id();
    $.Primitives_mirrorFunctionCacheName = J.$add$ns($.Primitives_mirrorFunctionCacheName, "_" + H.S(t1));
    $.Primitives_mirrorInvokeCacheName = J.$add$ns($.Primitives_mirrorInvokeCacheName, "_" + H.S(t1));
    t1 = $.RawReceivePortImpl__nextFreeId;
    $.RawReceivePortImpl__nextFreeId = J.$add$ns(t1, 1);
    t2 = new H.RawReceivePortImpl(t1, null, false);
    init.globalState.currentContext.registerWeak$2(t1, t2);
    t1 = new H.ReceivePortImpl(t2, null);
    t1.ReceivePortImpl$fromRawReceivePort$1(t2);
    $.controlPort = t1;
    replyTo.send$1(["spawned", t1.get$sendPort()]);
    if (isSpawnUri !== true)
      topLevel.call$1(message);
    else {
      t1 = H.getDynamicRuntimeType();
      t2 = H.buildFunctionType(t1, [t1, t1])._isTest$1(topLevel);
      if (t2)
        topLevel.call$2(args, message);
      else {
        t1 = H.buildFunctionType(t1, [t1])._isTest$1(topLevel);
        if (t1)
          topLevel.call$1(args);
        else
          topLevel.call$0();
      }
    }
  }, "call$5" /* tearOffInfo */, "IsolateNatives__startIsolate$closure", 10, 0, 267, 268, 261, 262, 264, 269, "_startIsolate"],
  IsolateNatives__spawnWorker: [function(functionName, uri, args, message, isSpawnUri, replyPort) {
    var worker, t1, workerId;
    if (uri == null)
      uri = $.get$IsolateNatives_thisScript();
    worker = new Worker(uri);
    worker.onmessage = function(e) { H.IsolateNatives__processWorkerMessage$closure().call$2(worker, e); };
    t1 = init.globalState;
    workerId = t1.nextManagerId;
    t1.nextManagerId = J.$add$ns(workerId, 1);
    $.get$IsolateNatives_workerIds().$indexSet(0, worker, workerId);
    J.$indexSet$a(init.globalState.managers, workerId, worker);
    worker.postMessage(H._serializeMessage(H.fillLiteralMap(["command", "start", "id", workerId, "replyTo", H._serializeMessage(replyPort), "args", args, "msg", H._serializeMessage(message), "isSpawnUri", isSpawnUri, "functionName", functionName], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))));
  }, "call$6" /* tearOffInfo */, "IsolateNatives__spawnWorker$closure", 12, 0, 270, 259, 260, 261, 262, 264, 266, "_spawnWorker"],
  _serializeMessage: [function(message) {
    var t1;
    if (init.globalState.supportsWorkers === true) {
      t1 = new H._JsSerializer(0, new H._MessageTraverserVisitedMap());
      t1._visited = new H._JsVisitedMap(null);
      return t1.traverse$1(message);
    } else {
      t1 = new H._JsCopier(new H._MessageTraverserVisitedMap());
      t1._visited = new H._JsVisitedMap(null);
      return t1.traverse$1(message);
    }
  }, "call$1" /* tearOffInfo */, "_serializeMessage$closure", 2, 0, 241, 262, "_serializeMessage"],
  _deserializeMessage: [function(message) {
    if (init.globalState.supportsWorkers === true)
      return new H._JsDeserializer(null).deserialize$1(message);
    else
      return message;
  }, "call$1" /* tearOffInfo */, "_deserializeMessage$closure", 2, 0, 241, 262, "_deserializeMessage"],
  _MessageTraverser_isPrimitive: [function(x) {
    return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
  }, "call$1" /* tearOffInfo */, "_MessageTraverser_isPrimitive$closure", 2, 0, 273, 274, "isPrimitive"],
  _Deserializer_isPrimitive: [function(x) {
    return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
  }, "call$1" /* tearOffInfo */, "_Deserializer_isPrimitive$closure", 2, 0, 273, 274, "isPrimitive"],
  startRootIsolate_closure: {
    "": "Closure:319;entry_0-370",
    call$0: [function() {
      this.entry_0.call$1([]);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+startRootIsolate_closure": [1060],
  startRootIsolate_closure0: {
    "": "Closure:319;entry_1-370",
    call$0: [function() {
      this.entry_1.call$2([], null);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+startRootIsolate_closure": [1060],
  _Manager: {
    "": "Object;nextIsolateId@-1075,currentManagerId@-1075,nextManagerId@-1075,currentContext@-1093,rootContext@-1093,topEventLoop@-1094,fromCommandLine@-1043,isWorker@-1043,supportsWorkers@-1043,isolates@-1095,mainManager@-1096,managers@-1097,entry<-1098",
    _Manager$1: [function(entry) {
      var t1, t2, t3, $function;
      t1 = $.get$globalWindow() == null;
      t2 = $.get$globalWorker();
      t3 = t1 && $.get$globalPostMessageDefined() === true;
      this.isWorker = t3;
      if (!t3)
        t2 = t2 != null && $.get$IsolateNatives_thisScript() != null;
      else
        t2 = true;
      this.supportsWorkers = t2;
      this.fromCommandLine = t1 && !t3;
      this.topEventLoop = new H._EventLoop(P.ListQueue$(null, H._IsolateEvent), 0);
      this.isolates = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H._IsolateContext);
      this.managers = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, null);
      if (this.isWorker === true) {
        t1 = new H._MainManagerStub();
        this.mainManager = t1;
        $function = function (e) { H.IsolateNatives__processWorkerMessage$closure().call$2(t1, e); };
        $.get$globalThis().onmessage = $function;
        $.get$globalThis().dartPrint = function (object) {};
      }
    }, null /* tearOffInfo */, null, 2, 0, 1099, 252, ""]
  },
  "+_Manager": [0],
  _IsolateContext: {
    "": "Object;id<-1075,ports<-1100,weakPorts<-1101,isolateStatics<-370",
    eval$1: [function(code) {
      var old, result;
      old = init.globalState.currentContext;
      init.globalState.currentContext = this;
      $ = this.isolateStatics;
      result = null;
      try {
        result = code.call$0();
      } finally {
        init.globalState.currentContext = old;
        if (old != null)
          old._setGlobals$0();
      }
      return result;
    }, "call$1" /* tearOffInfo */, "get$eval", 2, 0, 1099, 481, "eval"],
    _setGlobals$0: [function() {
      $ = this.isolateStatics;
    }, "call$0" /* tearOffInfo */, "get$_setGlobals", 0, 0, 494, "_setGlobals"],
    lookup$1: [function(portId) {
      return J.$index$as(this.ports, portId);
    }, "call$1" /* tearOffInfo */, "get$lookup", 2, 0, 1102, 1103, "lookup"],
    register$2: [function(portId, port) {
      var t1 = this.ports;
      if (t1.containsKey$1(portId))
        throw H.wrapException(P.Exception_Exception("Registry: ports must be registered only once."));
      J.$indexSet$a(t1, portId, port);
      this._updateGlobalState$0();
    }, "call$2" /* tearOffInfo */, "get$register", 4, 0, 1104, 1103, 837, "register"],
    registerWeak$2: [function(portId, port) {
      J.add$1$a(this.weakPorts, portId);
      this.register$2(portId, port);
    }, "call$2" /* tearOffInfo */, "get$registerWeak", 4, 0, 1104, 1103, 837, "registerWeak"],
    _updateGlobalState$0: [function() {
      var t1 = this.id;
      if (J.$gt$n(J.$sub$n(J.get$length$as(this.ports), J.get$length$as(this.weakPorts)), 0))
        J.$indexSet$a(init.globalState.isolates, t1, this);
      else
        J.remove$1$a(init.globalState.isolates, t1);
    }, "call$0" /* tearOffInfo */, "get$_updateGlobalState", 0, 0, 319, "_updateGlobalState"],
    unregister$1: [function(portId) {
      J.remove$1$a(this.ports, portId);
      this._updateGlobalState$0();
    }, "call$1" /* tearOffInfo */, "get$unregister", 2, 0, 1055, 1103, "unregister"],
    $is_IsolateContext: true
  },
  "+_IsolateContext": [0, 1105],
  _EventLoop: {
    "": "Object;events<-1106,activeTimerCount@-1075",
    enqueue$3: [function(isolate, fn, msg) {
      this.events.addLast$1(new H._IsolateEvent(isolate, fn, msg));
    }, "call$3" /* tearOffInfo */, "get$enqueue", 6, 0, 313, 249, 1107, 257, "enqueue"],
    dequeue$0: [function() {
      var t1 = this.events;
      if (J.get$isEmpty$as(t1) === true)
        return;
      return t1.removeFirst$0();
    }, "call$0" /* tearOffInfo */, "get$dequeue", 0, 0, 1108, "dequeue"],
    runIteration$0: [function() {
      var $event, t1;
      $event = this.dequeue$0();
      if ($event == null) {
        if (init.globalState.rootContext != null && init.globalState.isolates.containsKey$1(init.globalState.rootContext.get$id()) && init.globalState.fromCommandLine === true && J.get$isEmpty$as(init.globalState.rootContext.get$ports()) === true)
          H.throwExpression(P.Exception_Exception("Program exited with open ReceivePorts."));
        t1 = init.globalState;
        if (t1.isWorker === true && J.get$isEmpty$as(t1.isolates) === true && J.$eq(t1.topEventLoop.get$activeTimerCount(), 0))
          t1.mainManager.postMessage$1(H._serializeMessage(H.fillLiteralMap(["command", "close"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))));
        return false;
      }
      $event.process$0();
      return true;
    }, "call$0" /* tearOffInfo */, "get$runIteration", 0, 0, 849, "runIteration"],
    _runHelper$0: [function() {
      if ($.get$globalWindow() != null)
        new H._EventLoop__runHelper_next(this).call$0();
      else
        for (; this.runIteration$0();)
          ;
    }, "call$0" /* tearOffInfo */, "get$_runHelper", 0, 0, 494, "_runHelper"],
    run$0: [function() {
      var e, trace, exception, t1;
      if (init.globalState.isWorker !== true)
        this._runHelper$0();
      else
        try {
          this._runHelper$0();
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          trace = new H._StackTrace(exception, null);
          init.globalState.mainManager.postMessage$1(H._serializeMessage(H.fillLiteralMap(["command", "error", "msg", H.S(e) + "\n" + H.S(trace)], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))));
        }

    }, "call$0" /* tearOffInfo */, "get$run", 0, 0, 494, "run"]
  },
  "+_EventLoop": [0],
  _EventLoop__runHelper_next: {
    "": "Closure:494;this_0-370",
    call$0: [function() {
      if (!this.this_0.runIteration$0())
        return;
      P.Timer_Timer(C.Duration_0, this);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 494, "call"]
  },
  "+_EventLoop__runHelper_next": [1060],
  _IsolateEvent: {
    "": "Object;isolate@-1093,fn@-1098,message@-1039",
    process$0: [function() {
      this.isolate.eval$1(this.fn);
    }, "call$0" /* tearOffInfo */, "get$process", 0, 0, 494, "process"],
    $is_IsolateEvent: true
  },
  "+_IsolateEvent": [0],
  _MainManagerStub: {
    "": "Object;",
    postMessage$1: [function(msg) {
      self.postMessage(msg);
    }, "call$1" /* tearOffInfo */, "get$postMessage", 2, 0, 251, 257, "postMessage"]
  },
  "+_MainManagerStub": [0],
  IsolateNatives__processWorkerMessage_closure: {
    "": "Closure:319;entryPoint_0-1098,args_1-370,message_2-370,isSpawnUri_3-370,replyTo_4-370",
    call$0: [function() {
      H.IsolateNatives__startIsolate(this.entryPoint_0, this.args_1, this.message_2, this.isSpawnUri_3, this.replyTo_4);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+IsolateNatives__processWorkerMessage_closure": [1060],
  IsolateNatives_spawn_closure: {
    "": "Closure:241;",
    call$1: [function(msg) {
      return J.$index$as(msg, 1);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 257, "call"]
  },
  "+IsolateNatives_spawn_closure": [1060],
  IsolateNatives__startNonWorker_closure: {
    "": "Closure:319;functionName_0-1039,args_1-1109,message_2-370,isSpawnUri_3-1043,replyPort_4-1110",
    call$0: [function() {
      H.IsolateNatives__startIsolate(init.globalFunctions[this.functionName_0](), this.args_1, this.message_2, this.isSpawnUri_3, this.replyPort_4);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+IsolateNatives__startNonWorker_closure": [1060],
  _BaseSendPort: {
    "": "Object;_isolateId<-1075",
    $isSendPort: true
  },
  "+_BaseSendPort": [0, 1110],
  _NativeJsSendPort: {
    "": "_BaseSendPort;_receivePort<-1111,_isolateId-1075",
    send$1: [function(message) {
      var t1, t2, isolate, shouldSerialize;
      t1 = {};
      t2 = this._isolateId;
      isolate = J.$index$as(init.globalState.isolates, t2);
      if (isolate == null)
        return;
      if (this._receivePort.get$_isClosed() === true)
        return;
      shouldSerialize = init.globalState.currentContext != null && !J.$eq(init.globalState.currentContext.get$id(), t2);
      t1.msg_0 = message;
      if (shouldSerialize)
        t1.msg_0 = H._serializeMessage(message);
      init.globalState.topEventLoop.enqueue$3(isolate, new H._NativeJsSendPort_send_closure(t1, this, shouldSerialize), "receive " + H.S(message));
    }, "call$1" /* tearOffInfo */, "get$send", 2, 0, 251, 262, "send"],
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$is_NativeJsSendPort && J.$eq(this._receivePort, other._receivePort);
    }, "call$1" /* tearOffInfo */, "get$==", 2, 0, 273, 403, "=="],
    get$hashCode: [function(_) {
      return this._receivePort.get$__isolate_helper$_id();
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    $is_NativeJsSendPort: true,
    $isSendPort: true
  },
  "+_NativeJsSendPort": [1112, 1110],
  _NativeJsSendPort_send_closure: {
    "": "Closure:319;box_0-370,this_1-370,shouldSerialize_2-370",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_1;
      if (t1.get$_receivePort().get$_isClosed() !== true) {
        if (this.shouldSerialize_2 === true) {
          t2 = this.box_0;
          t2.msg_0 = H._deserializeMessage(t2.msg_0);
        }
        t1.get$_receivePort().__isolate_helper$_add$1(this.box_0.msg_0);
      }
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_NativeJsSendPort_send_closure": [1060],
  _WorkerSendPort: {
    "": "_BaseSendPort;_workerId<-1075,_receivePortId<-1075,_isolateId-1075",
    send$1: [function(message) {
      var workerMessage, manager;
      workerMessage = H._serializeMessage(H.fillLiteralMap(["command", "message", "port", this, "msg", message], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
      if (init.globalState.isWorker === true)
        init.globalState.mainManager.postMessage$1(workerMessage);
      else {
        manager = J.$index$as(init.globalState.managers, this._workerId);
        if (manager != null)
          manager.postMessage(workerMessage);
      }
    }, "call$1" /* tearOffInfo */, "get$send", 2, 0, 251, 262, "send"],
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$is_WorkerSendPort && J.$eq(this._workerId, other._workerId) && J.$eq(this._isolateId, other._isolateId) && J.$eq(this._receivePortId, other._receivePortId);
    }, "call$1" /* tearOffInfo */, "get$==", 2, 0, 273, 403, "=="],
    get$hashCode: [function(_) {
      var t1, t2, t3;
      t1 = J.$shl$n(this._workerId, 16);
      t2 = J.$shl$n(this._isolateId, 8);
      t3 = this._receivePortId;
      if (typeof t3 !== "number")
        return H.iae(t3);
      return (t1 ^ t2 ^ t3) >>> 0;
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    $is_WorkerSendPort: true,
    $isSendPort: true
  },
  "+_WorkerSendPort": [1112, 1110],
  RawReceivePortImpl: {
    "": "Object;__isolate_helper$_id<-1075,_handler@-1098,_isClosed@-1043",
    _handler$1: function(arg0) {
      return this._handler.call$1(arg0);
    },
    set$handler: [function(newHandler) {
      this._handler = newHandler;
    }, null /* tearOffInfo */, null, 3, 0, 1113, 1114, "handler"],
    close$0: [function() {
      if (this._isClosed === true)
        return;
      this._isClosed = true;
      this._handler = null;
      init.globalState.currentContext.unregister$1(this.__isolate_helper$_id);
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    __isolate_helper$_add$1: [function(dataEvent) {
      if (this._isClosed === true)
        return;
      this._handler$1(dataEvent);
    }, "call$1" /* tearOffInfo */, "get$__isolate_helper$_add", 2, 0, 251, 1115, "_add"],
    get$sendPort: [function() {
      return new H._NativeJsSendPort(this, init.globalState.currentContext.get$id());
    }, null /* tearOffInfo */, null, 1, 0, 1116, "sendPort"],
    $isRawReceivePortImpl: true,
    static: {"": "RawReceivePortImpl__nextFreeId@-1075"}
  },
  "+RawReceivePortImpl": [0, 1117],
  ReceivePortImpl: {
    "": "Stream;_rawPort<-1117,__isolate_helper$_controller@-1118",
    listen$4$cancelOnError$onDone$onError: [function(onData, cancelOnError, onDone, onError) {
      return this.__isolate_helper$_controller.get$stream().listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
    }, function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }, "listen$3$onDone$onError", function(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    }, "listen$2$cancelOnError", "call$4$cancelOnError$onDone$onError" /* tearOffInfo */, null /* tearOffInfo */, null /* tearOffInfo */, "get$listen", 2, 7, 1119, 370, 370, 370, 1120, 516, 1121, 581, "listen"],
    close$0: [function() {
      this._rawPort.close$0();
      this.__isolate_helper$_controller.close$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    get$sendPort: [function() {
      return this._rawPort.get$sendPort();
    }, null /* tearOffInfo */, null, 1, 0, 1116, "sendPort"],
    ReceivePortImpl$fromRawReceivePort$1: [function(_rawPort) {
      var t1 = P.StreamController_StreamController(this.get$close(), null, null, null, true, null);
      this.__isolate_helper$_controller = t1;
      this._rawPort.set$handler(t1.get$add(0));
    }, null /* tearOffInfo */, null, 2, 0, 271, 272, "fromRawReceivePort"],
    $asStream: function() {
      return [null];
    },
    "<>": [],
    static: {ReceivePortImpl$fromRawReceivePort: [function(_rawPort) {
        var t1 = new H.ReceivePortImpl(_rawPort, null);
        t1.ReceivePortImpl$fromRawReceivePort$1(_rawPort);
        return t1;
      }, null /* tearOffInfo */, null, 2, 0, 271, 272, "new ReceivePortImpl$fromRawReceivePort" /* new ReceivePortImpl$fromRawReceivePort:1:0 */]}
  },
  "+ReceivePortImpl": [1122, 1123],
  _JsSerializer: {
    "": "_Serializer;_nextFreeRefId-1075,_visited-1124",
    visitSendPort$1: [function(x) {
      var t1 = J.getInterceptor(x);
      if (typeof x === "object" && x !== null && !!t1.$is_NativeJsSendPort)
        return ["sendport", init.globalState.currentManagerId, x._isolateId, x._receivePort.get$__isolate_helper$_id()];
      if (typeof x === "object" && x !== null && !!t1.$is_WorkerSendPort)
        return ["sendport", x._workerId, x._isolateId, x._receivePortId];
      throw H.wrapException("Illegal underlying port " + H.S(x));
    }, "call$1" /* tearOffInfo */, "get$visitSendPort", 2, 0, 880, 274, "visitSendPort"]
  },
  "+_JsSerializer": [1125],
  _JsCopier: {
    "": "_Copier;_visited-1124",
    visitSendPort$1: [function(x) {
      var t1, t2;
      t1 = J.getInterceptor(x);
      if (typeof x === "object" && x !== null && !!t1.$is_NativeJsSendPort)
        return new H._NativeJsSendPort(x._receivePort, x._isolateId);
      if (typeof x === "object" && x !== null && !!t1.$is_WorkerSendPort) {
        t1 = x._workerId;
        t2 = x._isolateId;
        return new H._WorkerSendPort(t1, x._receivePortId, t2);
      }
      throw H.wrapException("Illegal underlying port " + H.S(x));
    }, "call$1" /* tearOffInfo */, "get$visitSendPort", 2, 0, 880, 274, "visitSendPort"]
  },
  "+_JsCopier": [1126],
  _JsDeserializer: {
    "": "_Deserializer;_deserialized-1097",
    deserializeSendPort$1: [function(list) {
      var t1, managerId, isolateId, receivePortId, isolate, receivePort;
      t1 = J.getInterceptor$as(list);
      managerId = t1.$index(list, 1);
      isolateId = t1.$index(list, 2);
      receivePortId = t1.$index(list, 3);
      if (J.$eq(managerId, init.globalState.currentManagerId)) {
        isolate = J.$index$as(init.globalState.isolates, isolateId);
        if (isolate == null)
          return;
        receivePort = isolate.lookup$1(receivePortId);
        if (receivePort == null)
          return;
        return new H._NativeJsSendPort(receivePort, isolateId);
      } else
        return new H._WorkerSendPort(managerId, receivePortId, isolateId);
    }, "call$1" /* tearOffInfo */, "get$deserializeSendPort", 2, 0, 1127, 352, "deserializeSendPort"]
  },
  "+_JsDeserializer": [1128],
  _JsVisitedMap: {
    "": "Object;tagged@-1129",
    $index: [function(_, object) {
      return object.__MessageTraverser__attached_info__;
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, 241, 242, "[]"],
    $indexSet: [function(_, object, info) {
      J.add$1$a(this.tagged, object);
      object.__MessageTraverser__attached_info__ = info;
    }, "call$2" /* tearOffInfo */, "get$[]=", 4, 0, 254, 242, 1130, "[]="],
    reset$0: [function() {
      this.tagged = [];
    }, "call$0" /* tearOffInfo */, "get$reset", 0, 0, 494, "reset"],
    cleanup$0: [function() {
      var $length, i;
      $length = J.get$length$as(this.tagged);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i)
        J.$index$as(this.tagged, i).__MessageTraverser__attached_info__ = null;
      this.tagged = null;
    }, "call$0" /* tearOffInfo */, "get$cleanup", 0, 0, 494, "cleanup"]
  },
  "+_JsVisitedMap": [0, 1124],
  _MessageTraverserVisitedMap: {
    "": "Object;",
    $index: [function(_, object) {
      return;
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, 241, 242, "[]"],
    $indexSet: [function(_, object, info) {
    }, "call$2" /* tearOffInfo */, "get$[]=", 4, 0, 254, 242, 1130, "[]="],
    reset$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, "get$reset", 0, 0, 494, "reset"],
    cleanup$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, "get$cleanup", 0, 0, 494, "cleanup"]
  },
  "+_MessageTraverserVisitedMap": [0],
  _MessageTraverser: {
    "": "Object;_visited@-1124",
    traverse$1: [function(x) {
      var result;
      if (H._MessageTraverser_isPrimitive(x))
        return this.visitPrimitive$1(x);
      this._visited.reset$0();
      result = null;
      try {
        result = this._dispatch$1(x);
      } finally {
        this._visited.cleanup$0();
      }
      return result;
    }, "call$1" /* tearOffInfo */, "get$traverse", 2, 0, 241, 274, "traverse"],
    _dispatch$1: [function(x) {
      var t1;
      if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
        return this.visitPrimitive$1(x);
      t1 = J.getInterceptor(x);
      if (typeof x === "object" && x !== null && (x.constructor === Array || !!t1.$isList))
        return this.visitList$1(x);
      if (typeof x === "object" && x !== null && !!t1.$isMap)
        return this.visitMap$1(x);
      if (typeof x === "object" && x !== null && !!t1.$isSendPort)
        return this.visitSendPort$1(x);
      return this.visitObject$1(x);
    }, "call$1" /* tearOffInfo */, "get$_dispatch", 2, 0, 241, 274, "_dispatch"],
    visitObject$1: [function(x) {
      throw H.wrapException("Message serialization: Illegal value " + H.S(x) + " passed");
    }, "call$1" /* tearOffInfo */, "get$visitObject", 2, 0, 362, 274, "visitObject"]
  },
  "+_MessageTraverser": [0],
  _Copier: {
    "": "_MessageTraverser;",
    visitPrimitive$1: [function(x) {
      return x;
    }, "call$1" /* tearOffInfo */, "get$visitPrimitive", 2, 0, 241, 274, "visitPrimitive"],
    visitList$1: [function(list) {
      var copy, t1, len, t2, i, t3;
      copy = J.$index$as(this._visited, list);
      if (copy != null)
        return copy;
      t1 = J.getInterceptor$as(list);
      len = t1.get$length(list);
      if (typeof len !== "number")
        return H.iae(len);
      copy = Array(len);
      copy.fixed$length = init;
      J.$indexSet$a(this._visited, list, copy);
      for (t2 = copy.length, i = 0; i < len; ++i) {
        t3 = this._dispatch$1(t1.$index(list, i));
        if (i >= t2)
          return H.ioore(copy, i);
        copy[i] = t3;
      }
      return copy;
    }, "call$1" /* tearOffInfo */, "get$visitList", 2, 0, 1131, 352, "visitList"],
    visitMap$1: [function(map) {
      var t1, copy;
      t1 = {};
      copy = J.$index$as(this._visited, map);
      t1.copy_0 = copy;
      if (copy != null)
        return copy;
      copy = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      t1.copy_0 = copy;
      J.$indexSet$a(this._visited, map, copy);
      J.forEach$1$a(map, new H._Copier_visitMap_closure(t1, this));
      return t1.copy_0;
    }, "call$1" /* tearOffInfo */, "get$visitMap", 2, 0, 1132, 499, "visitMap"],
    visitSendPort$1: [function(x) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1" /* tearOffInfo */, "get$visitSendPort", 2, 0, 880, 274, "visitSendPort"]
  },
  "+_Copier": [1133],
  _Copier_visitMap_closure: {
    "": "Closure:311;box_0-370,this_1-370",
    call$2: [function(key, val) {
      var t1 = this.this_1;
      J.$indexSet$a(this.box_0.copy_0, t1._dispatch$1(key), t1._dispatch$1(val));
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 312, 858, "call"]
  },
  "+_Copier_visitMap_closure": [1060],
  _Serializer: {
    "": "_MessageTraverser;_nextFreeRefId@-1075",
    visitPrimitive$1: [function(x) {
      return x;
    }, "call$1" /* tearOffInfo */, "get$visitPrimitive", 2, 0, 241, 274, "visitPrimitive"],
    visitList$1: [function(list) {
      var copyId, id;
      copyId = J.$index$as(this._visited, list);
      if (copyId != null)
        return ["ref", copyId];
      id = this._nextFreeRefId;
      this._nextFreeRefId = J.$add$ns(id, 1);
      J.$indexSet$a(this._visited, list, id);
      return ["list", id, this._serializeList$1(list)];
    }, "call$1" /* tearOffInfo */, "get$visitList", 2, 0, 1134, 352, "visitList"],
    visitMap$1: [function(map) {
      var copyId, id;
      copyId = J.$index$as(this._visited, map);
      if (copyId != null)
        return ["ref", copyId];
      id = this._nextFreeRefId;
      this._nextFreeRefId = J.$add$ns(id, 1);
      J.$indexSet$a(this._visited, map, id);
      return ["map", id, this._serializeList$1(map.get$keys().toList$0(0)), this._serializeList$1(map.get$values().toList$0(0))];
    }, "call$1" /* tearOffInfo */, "get$visitMap", 2, 0, 664, 499, "visitMap"],
    _serializeList$1: [function(list) {
      var t1, len, result, i, t2;
      t1 = J.getInterceptor$as(list);
      len = t1.get$length(list);
      result = [];
      C.JSArray_methods.set$length(result, len);
      if (typeof len !== "number")
        return H.iae(len);
      i = 0;
      for (; i < len; ++i) {
        t2 = this._dispatch$1(t1.$index(list, i));
        if (i >= result.length)
          return H.ioore(result, i);
        result[i] = t2;
      }
      return result;
    }, "call$1" /* tearOffInfo */, "get$_serializeList", 2, 0, 1134, 352, "_serializeList"],
    visitSendPort$1: [function(x) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1" /* tearOffInfo */, "get$visitSendPort", 2, 0, 880, 274, "visitSendPort"]
  },
  "+_Serializer": [1133],
  _Deserializer: {
    "": "Object;_deserialized@-1097",
    deserialize$1: [function(x) {
      if (H._Deserializer_isPrimitive(x))
        return x;
      this._deserialized = P.HashMap_HashMap(null, null, null, null, null);
      return this._deserializeHelper$1(x);
    }, "call$1" /* tearOffInfo */, "get$deserialize", 2, 0, 241, 274, "deserialize"],
    _deserializeHelper$1: [function(x) {
      var t1, id;
      if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
        return x;
      t1 = J.getInterceptor$as(x);
      switch (t1.$index(x, 0)) {
        case "ref":
          id = t1.$index(x, 1);
          return J.$index$as(this._deserialized, id);
        case "list":
          return this._deserializeList$1(x);
        case "map":
          return this._deserializeMap$1(x);
        case "sendport":
          return this.deserializeSendPort$1(x);
        default:
          return this.deserializeObject$1(x);
      }
    }, "call$1" /* tearOffInfo */, "get$_deserializeHelper", 2, 0, 241, 274, "_deserializeHelper"],
    _deserializeList$1: [function(x) {
      var t1, id, dartList, len, i;
      t1 = J.getInterceptor$as(x);
      id = t1.$index(x, 1);
      dartList = t1.$index(x, 2);
      J.$indexSet$a(this._deserialized, id, dartList);
      t1 = J.getInterceptor$as(dartList);
      len = t1.get$length(dartList);
      if (typeof len !== "number")
        return H.iae(len);
      i = 0;
      for (; i < len; ++i)
        t1.$indexSet(dartList, i, this._deserializeHelper$1(t1.$index(dartList, i)));
      return dartList;
    }, "call$1" /* tearOffInfo */, "get$_deserializeList", 2, 0, 1131, 274, "_deserializeList"],
    _deserializeMap$1: [function(x) {
      var result, t1, id, keys, values, len, t2, i;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      t1 = J.getInterceptor$as(x);
      id = t1.$index(x, 1);
      J.$indexSet$a(this._deserialized, id, result);
      keys = t1.$index(x, 2);
      values = t1.$index(x, 3);
      t1 = J.getInterceptor$as(keys);
      len = t1.get$length(keys);
      if (typeof len !== "number")
        return H.iae(len);
      t2 = J.getInterceptor$as(values);
      i = 0;
      for (; i < len; ++i)
        result.$indexSet(0, this._deserializeHelper$1(t1.$index(keys, i)), this._deserializeHelper$1(t2.$index(values, i)));
      return result;
    }, "call$1" /* tearOffInfo */, "get$_deserializeMap", 2, 0, 1135, 274, "_deserializeMap"],
    deserializeObject$1: [function(x) {
      throw H.wrapException("Unexpected serialized object");
    }, "call$1" /* tearOffInfo */, "get$deserializeObject", 2, 0, 1134, 274, "deserializeObject"]
  },
  "+_Deserializer": [0],
  TimerImpl: {
    "": "Object;_once<-1043,_inEventLoop@-1043,_handle@-1075",
    cancel$0: [function() {
      if ($.get$globalThis().setTimeout != null) {
        if (this._inEventLoop === true)
          throw H.wrapException(P.UnsupportedError$("Timer in event loop cannot be canceled."));
        if (this._handle == null)
          return;
        var t1 = init.globalState.topEventLoop;
        t1.set$activeTimerCount(J.$sub$n(t1.get$activeTimerCount(), 1));
        if (this._once === true)
          $.get$globalThis().clearTimeout(this._handle);
        else
          $.get$globalThis().clearInterval(this._handle);
        this._handle = null;
      } else
        throw H.wrapException(P.UnsupportedError$("Canceling a timer."));
    }, "call$0" /* tearOffInfo */, "get$cancel", 0, 0, 494, "cancel"],
    get$isActive: [function() {
      return this._handle != null;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isActive"],
    TimerImpl$periodic$2: [function(milliseconds, callback) {
      var t1;
      if ($.get$globalThis().setTimeout != null) {
        t1 = init.globalState.topEventLoop;
        t1.set$activeTimerCount(J.$add$ns(t1.get$activeTimerCount(), 1));
        this._handle = $.get$globalThis().setInterval(H.convertDartClosureToJS(new H.TimerImpl$periodic_closure(this, callback), 0), milliseconds);
      } else
        throw H.wrapException(P.UnsupportedError$("Periodic timer."));
    }, null /* tearOffInfo */, null, 4, 0, 278, 276, 277, "periodic"],
    TimerImpl$2: [function(milliseconds, callback) {
      var t1;
      if (J.$eq(milliseconds, 0))
        t1 = $.get$globalThis().setTimeout == null || init.globalState.isWorker === true;
      else
        t1 = false;
      if (t1) {
        this._handle = 1;
        init.globalState.topEventLoop.enqueue$3(init.globalState.currentContext, new H.TimerImpl_internalCallback(this, callback), "timer");
        this._inEventLoop = true;
      } else if ($.get$globalThis().setTimeout != null) {
        t1 = init.globalState.topEventLoop;
        t1.set$activeTimerCount(J.$add$ns(t1.get$activeTimerCount(), 1));
        this._handle = $.get$globalThis().setTimeout(H.convertDartClosureToJS(new H.TimerImpl_internalCallback0(this, callback), 0), milliseconds);
      } else
        throw H.wrapException(P.UnsupportedError$("Timer greater than 0."));
    }, null /* tearOffInfo */, null, 4, 0, 275, 276, 277, ""],
    static: {TimerImpl$: [function(milliseconds, callback) {
        var t1 = new H.TimerImpl(true, false, null);
        t1.TimerImpl$2(milliseconds, callback);
        return t1;
      }, null /* tearOffInfo */, null, 4, 0, 275, 276, 277, "new TimerImpl" /* new TimerImpl:2:0 */], TimerImpl$periodic: [function(milliseconds, callback) {
        var t1 = new H.TimerImpl(false, false, null);
        t1.TimerImpl$periodic$2(milliseconds, callback);
        return t1;
      }, null /* tearOffInfo */, null, 4, 0, 278, 276, 277, "new TimerImpl$periodic" /* new TimerImpl$periodic:2:0 */]}
  },
  "+TimerImpl": [0, 1136],
  TimerImpl_internalCallback: {
    "": "Closure:494;this_0-370,callback_1-494",
    call$0: [function() {
      this.this_0.set$_handle(null);
      this.callback_1.call$0();
    }, "call$0" /* tearOffInfo */, null, 0, 0, 494, "call"]
  },
  "+TimerImpl_internalCallback": [1060],
  TimerImpl_internalCallback0: {
    "": "Closure:494;this_2-370,callback_3-494",
    call$0: [function() {
      this.this_2.set$_handle(null);
      var t1 = init.globalState.topEventLoop;
      t1.set$activeTimerCount(J.$sub$n(t1.get$activeTimerCount(), 1));
      this.callback_3.call$0();
    }, "call$0" /* tearOffInfo */, null, 0, 0, 494, "call"]
  },
  "+TimerImpl_internalCallback": [1060],
  TimerImpl$periodic_closure: {
    "": "Closure:319;this_0-370,callback_1-1137",
    call$0: [function() {
      this.callback_1.call$1(this.this_0);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+TimerImpl$periodic_closure": [1060],
  "": "globalPostMessageDefined@-1043,globalWorker@-370,globalWindow@-370,globalThis@-370,_SPAWNED_SIGNAL<-1039,controlPort@-1123"
}],
["_js_helper", "dart:_js_helper", , H, {
  "": "",
  S: [function(value) {
    var res;
    if (typeof value === "string")
      return value;
    if (typeof value === "number") {
      if (value !== 0)
        return "" + value;
    } else if (true === value)
      return "true";
    else if (false === value)
      return "false";
    else if (value == null)
      return "null";
    res = J.toString$0(value);
    if (typeof res !== "string")
      throw H.wrapException(P.ArgumentError$(value));
    return res;
  }, "call$1" /* tearOffInfo */, "S$closure", 2, 0, 279, 280, "S"],
  throwInvalidReflectionError: [function(memberName) {
    throw H.wrapException(P.UnsupportedError$("Can't use '" + H.S(memberName) + "' in reflection because it is not included in a @MirrorsUsed annotation."));
  }, "call$1" /* tearOffInfo */, "throwInvalidReflectionError$closure", 2, 0, 281, 282, "throwInvalidReflectionError"],
  Primitives_objectHashCode: [function(object) {
    var hash = object.$identityHash;
    if (hash == null) {
      hash = Math.random() * 0x3fffffff | 0;
      object.$identityHash = hash;
    }
    return hash;
  }, "call$1" /* tearOffInfo */, "Primitives_objectHashCode$closure", 2, 0, 288, 242, "objectHashCode"],
  Primitives__throwFormatException: [function(string) {
    throw H.wrapException(P.FormatException$(string));
  }, "call$1" /* tearOffInfo */, "Primitives__throwFormatException$closure", 2, 0, 289, 290, "_throwFormatException"],
  Primitives_parseInt: [function(source, radix, handleError) {
    var match, t1, maxCharCode, digitsPart, i, t2;
    if (handleError == null)
      handleError = H.Primitives__throwFormatException$closure();
    if (typeof source !== "string")
      H.throwExpression(P.ArgumentError$(source));
    match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
    if (radix == null) {
      if (match != null) {
        t1 = match.length;
        if (2 >= t1)
          return H.ioore(match, 2);
        if (match[2] != null)
          return parseInt(source, 16);
        if (3 >= t1)
          return H.ioore(match, 3);
        if (match[3] != null)
          return parseInt(source, 10);
        return handleError.call$1(source);
      }
      radix = 10;
    } else {
      if (typeof radix !== "number" || Math.floor(radix) !== radix)
        throw H.wrapException(P.ArgumentError$("Radix is not an integer"));
      if (radix < 2 || radix > 36)
        throw H.wrapException(P.RangeError$("Radix " + H.S(radix) + " not in range 2..36"));
      if (match != null) {
        if (radix === 10) {
          if (3 >= match.length)
            return H.ioore(match, 3);
          t1 = match[3] != null;
        } else
          t1 = false;
        if (t1)
          return parseInt(source, 10);
        if (!(radix < 10)) {
          if (3 >= match.length)
            return H.ioore(match, 3);
          t1 = match[3] == null;
        } else
          t1 = true;
        if (t1) {
          maxCharCode = radix <= 10 ? 48 + radix - 1 : 97 + radix - 10 - 1;
          if (1 >= match.length)
            return H.ioore(match, 1);
          digitsPart = match[1];
          t1 = J.getInterceptor$as(digitsPart);
          i = 0;
          while (true) {
            t2 = t1.get$length(digitsPart);
            if (typeof t2 !== "number")
              return H.iae(t2);
            if (!(i < t2))
              break;
            t1.codeUnitAt$1(digitsPart, 0);
            if (t1.codeUnitAt$1(digitsPart, i) > maxCharCode)
              return handleError.call$1(source);
            ++i;
          }
        }
      }
    }
    if (match == null)
      return handleError.call$1(source);
    return parseInt(source, radix);
  }, "call$3" /* tearOffInfo */, "Primitives_parseInt$closure", 6, 0, 291, 292, 293, 294, "parseInt"],
  Primitives_parseDouble: [function(source, handleError) {
    var result, trimmed;
    if (typeof source !== "string")
      H.throwExpression(new P.ArgumentError(source));
    if (handleError == null)
      handleError = H.Primitives__throwFormatException$closure();
    if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(source))
      return handleError.call$1(source);
    result = parseFloat(source);
    if (isNaN(result)) {
      trimmed = J.trim$0$s(source);
      if (trimmed === "NaN" || trimmed === "+NaN" || trimmed === "-NaN")
        return result;
      return handleError.call$1(source);
    }
    return result;
  }, "call$2" /* tearOffInfo */, "Primitives_parseDouble$closure", 4, 0, 295, 292, 294, "parseDouble"],
  Primitives_objectTypeName: [function(object) {
    var $name, decompiled, t1;
    $name = C.JS_CONST_IX5(J.getInterceptor(object));
    if ($name === "Object") {
      decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
      if (typeof decompiled === "string")
        $name = decompiled;
    }
    t1 = J.getInterceptor$s($name);
    if (t1.codeUnitAt$1($name, 0) === 36)
      $name = t1.substring$1($name, 1);
    t1 = H.getRuntimeTypeInfo(object);
    return H.S($name) + H.joinArguments(t1, 0, null);
  }, "call$1" /* tearOffInfo */, "Primitives_objectTypeName$closure", 2, 0, 296, 242, "objectTypeName"],
  Primitives_objectToString: [function(object) {
    return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
  }, "call$1" /* tearOffInfo */, "Primitives_objectToString$closure", 2, 0, 296, 242, "objectToString"],
  Primitives_numMicroseconds: [function() {
    if (typeof window != "undefined" && window !== null) {
      var performance = window.performance;
      if (performance != null && typeof performance.webkitNow == "function")
        return C.JSNumber_methods.toInt$0(Math.floor(1000 * performance.webkitNow()));
    }
    return 1000 * Date.now();
  }, "call$0" /* tearOffInfo */, "Primitives_numMicroseconds$closure", 0, 0, 297, "numMicroseconds"],
  Primitives_currentUri: [function() {
    var workingDirectory, $length, t1;
    if (typeof self != "undefined")
      return self.location.href;
    if (typeof version == "function" && typeof os == "object" && "system" in os) {
      workingDirectory = os.system("pwd");
      $length = workingDirectory.length;
      t1 = $length - 1;
      if (t1 < 0)
        return H.ioore(workingDirectory, t1);
      if (workingDirectory[t1] === "\n")
        workingDirectory = C.JSString_methods.substring$2(workingDirectory, 0, t1);
    } else
      workingDirectory = null;
    if (typeof version == "function" && typeof system == "function")
      workingDirectory = environment.PWD;
    return workingDirectory != null ? C.JSString_methods.$add("file://", workingDirectory) + "/" : null;
  }, "call$0" /* tearOffInfo */, "Primitives_currentUri$closure", 0, 0, 253, "currentUri"],
  Primitives__fromCharCodeApply: [function(array) {
    var end, t1, result, i, subarray, t2;
    end = J.get$length$as(array);
    if (typeof end !== "number")
      return H.iae(end);
    t1 = end <= 500;
    result = "";
    i = 0;
    for (; i < end; i += 500) {
      if (t1)
        subarray = array;
      else {
        t2 = i + 500;
        if (t2 < end)
          ;
        else
          t2 = end;
        subarray = array.slice(i, t2);
      }
      result += String.fromCharCode.apply(null, subarray);
    }
    return result;
  }, "call$1" /* tearOffInfo */, "Primitives__fromCharCodeApply$closure", 2, 0, 298, 299, "_fromCharCodeApply"],
  Primitives_stringFromCodePoints: [function(codePoints) {
    var a, t1, i;
    a = [];
    a.$builtinTypeInfo = [J.JSInt];
    for (t1 = J.get$iterator$a(codePoints); t1.moveNext$0() === true;) {
      i = t1.get$current();
      if (typeof i !== "number" || Math.floor(i) !== i)
        throw H.wrapException(P.ArgumentError$(i));
      if (i <= 65535)
        a.push(i);
      else if (i <= 1114111) {
        a.push(55296 + (C.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
        a.push(56320 + (i & 1023));
      } else
        throw H.wrapException(P.ArgumentError$(i));
    }
    return H.Primitives__fromCharCodeApply(a);
  }, "call$1" /* tearOffInfo */, "Primitives_stringFromCodePoints$closure", 2, 0, 279, 300, "stringFromCodePoints"],
  Primitives_stringFromCharCodes: [function(charCodes) {
    var t1, i;
    for (t1 = J.get$iterator$a(charCodes); t1.moveNext$0() === true;) {
      i = t1.get$current();
      if (typeof i !== "number" || Math.floor(i) !== i)
        throw H.wrapException(P.ArgumentError$(i));
      if (i < 0)
        throw H.wrapException(P.ArgumentError$(i));
      if (i > 65535)
        return H.Primitives_stringFromCodePoints(charCodes);
    }
    return H.Primitives__fromCharCodeApply(charCodes);
  }, "call$1" /* tearOffInfo */, "Primitives_stringFromCharCodes$closure", 2, 0, 279, 301, "stringFromCharCodes"],
  Primitives_getTimeZoneName: [function(receiver) {
    var d, match;
    d = H.Primitives_lazyAsJsDate(receiver);
    match = /\((.*)\)/.exec(d.toString());
    if (match != null) {
      if (1 >= match.length)
        return H.ioore(match, 1);
      return match[1];
    }
    match = /^[A-Z,a-z]{3}\s[A-Z,a-z]{3}\s\d+\s\d{2}:\d{2}:\d{2}\s([A-Z]{3,5})\s\d{4}$/.exec(d.toString());
    if (match != null) {
      if (1 >= match.length)
        return H.ioore(match, 1);
      return match[1];
    }
    match = /(?:GMT|UTC)[+-]\d{4}/.exec(d.toString());
    if (match != null) {
      if (0 >= match.length)
        return H.ioore(match, 0);
      return match[0];
    }
    return "";
  }, "call$1" /* tearOffInfo */, "Primitives_getTimeZoneName$closure", 2, 0, 279, 302, "getTimeZoneName"],
  Primitives_valueFromDecomposedDate: [function(years, month, day, hours, minutes, seconds, milliseconds, isUtc) {
    var jsMonth, t1, value, t2, date;
    if (typeof years !== "number" || Math.floor(years) !== years)
      H.throwExpression(new P.ArgumentError(years));
    if (typeof month !== "number" || Math.floor(month) !== month)
      H.throwExpression(new P.ArgumentError(month));
    if (typeof day !== "number" || Math.floor(day) !== day)
      H.throwExpression(new P.ArgumentError(day));
    if (typeof hours !== "number" || Math.floor(hours) !== hours)
      H.throwExpression(new P.ArgumentError(hours));
    if (typeof minutes !== "number" || Math.floor(minutes) !== minutes)
      H.throwExpression(new P.ArgumentError(minutes));
    if (typeof seconds !== "number" || Math.floor(seconds) !== seconds)
      H.throwExpression(new P.ArgumentError(seconds));
    if (typeof milliseconds !== "number" || Math.floor(milliseconds) !== milliseconds)
      H.throwExpression(new P.ArgumentError(milliseconds));
    if (typeof isUtc !== "boolean")
      H.throwExpression(new P.ArgumentError(isUtc));
    jsMonth = J.$sub$n(month, 1);
    t1 = isUtc === true;
    value = t1 ? Date.UTC(years, jsMonth, day, hours, minutes, seconds, milliseconds) : new Date(years, jsMonth, day, hours, minutes, seconds, milliseconds).valueOf();
    if (isNaN(value) || value < -8640000000000000 || value > 8640000000000000)
      throw H.wrapException(new P.ArgumentError(null));
    t2 = J.getInterceptor$n(years);
    if (t2.$le(years, 0) || t2.$lt(years, 100)) {
      date = new Date(value);
      if (t1)
        date.setUTCFullYear(years);
      else
        date.setFullYear(years);
      return date.valueOf();
    }
    return value;
  }, "call$8" /* tearOffInfo */, "Primitives_valueFromDecomposedDate$closure", 16, 0, 303, 304, 305, 306, 307, 308, 309, 276, 310, "valueFromDecomposedDate"],
  Primitives_lazyAsJsDate: [function(receiver) {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.get$millisecondsSinceEpoch());
    return receiver.date;
  }, "call$1" /* tearOffInfo */, "Primitives_lazyAsJsDate$closure", 2, 0, 241, 302, "lazyAsJsDate"],
  Primitives_getProperty: [function(object, key) {
    if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
      throw H.wrapException(new P.ArgumentError(object));
    return object[key];
  }, "call$2" /* tearOffInfo */, "Primitives_getProperty$closure", 4, 0, 311, 242, 312, "getProperty"],
  Primitives_setProperty: [function(object, key, value) {
    if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
      throw H.wrapException(new P.ArgumentError(object));
    object[key] = value;
  }, "call$3" /* tearOffInfo */, "Primitives_setProperty$closure", 6, 0, 313, 242, 312, 280, "setProperty"],
  Primitives_functionNoSuchMethod: [function($function, positionalArguments, namedArguments) {
    var t1, $arguments, namedArgumentList, t2;
    t1 = {};
    t1.argumentCount_0 = 0;
    $arguments = [];
    namedArgumentList = [];
    if (positionalArguments != null) {
      t2 = J.get$length$as(positionalArguments);
      if (typeof t2 !== "number")
        return H.iae(t2);
      t1.argumentCount_0 = 0 + t2;
      C.JSArray_methods.addAll$1($arguments, positionalArguments);
    }
    t1.names_1 = "";
    if (namedArguments != null && J.get$isEmpty$as(namedArguments) !== true)
      J.forEach$1$a(namedArguments, new H.Primitives_functionNoSuchMethod_closure(t1, $arguments, namedArgumentList));
    return J.noSuchMethod$1($function, new H.JSInvocationMirror(C.Symbol_call, "call$" + H.S(t1.argumentCount_0) + H.S(t1.names_1), 0, $arguments, namedArgumentList, null));
  }, "call$3" /* tearOffInfo */, "Primitives_functionNoSuchMethod$closure", 6, 0, 314, 250, 315, 316, "functionNoSuchMethod"],
  Primitives_applyFunction: [function($function, positionalArguments, namedArguments) {
    var t1, jsFunction, info, t2, defaultArguments, t3, t4, i, t5, $arguments, argumentCount;
    t1 = {};
    if (namedArguments != null && J.get$isEmpty$as(namedArguments) !== true) {
      jsFunction = J.getInterceptor($function)["call*"];
      if (jsFunction == null)
        return H.Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments);
      info = H.ReflectionInfo_ReflectionInfo(jsFunction);
      if (info == null || info.areOptionalParametersNamed !== true)
        return H.Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments);
      positionalArguments = positionalArguments != null ? P.List_List$from(positionalArguments, true, null) : [];
      t2 = info.requiredParameterCount;
      if (!J.$eq(t2, positionalArguments.length))
        return H.Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments);
      defaultArguments = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      t3 = info.optionalParameterCount;
      if (typeof t3 !== "number")
        return H.iae(t3);
      t4 = info.data;
      i = 0;
      for (; i < t3; ++i) {
        if (typeof t2 !== "number")
          return H.iae(t2);
        t5 = i + t2;
        defaultArguments.$indexSet(0, init.metadata[t4[t5 + t3 + 3]], init.metadata[info.defaultValue$1(t5)]);
      }
      t1.bad_0 = false;
      J.forEach$1$a(namedArguments, new H.Primitives_applyFunction_closure(t1, defaultArguments));
      if (t1.bad_0 === true)
        return H.Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments);
      C.JSArray_methods.addAll$1(positionalArguments, defaultArguments.get$values());
      return jsFunction.apply($function, positionalArguments);
    }
    $arguments = [];
    if (positionalArguments != null) {
      t1 = J.get$length$as(positionalArguments);
      if (typeof t1 !== "number")
        return H.iae(t1);
      argumentCount = 0 + t1;
      C.JSArray_methods.addAll$1($arguments, positionalArguments);
    } else
      argumentCount = 0;
    jsFunction = $function["call$" + H.S(argumentCount)];
    if (jsFunction == null)
      return H.Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments);
    return jsFunction.apply($function, $arguments);
  }, "call$3" /* tearOffInfo */, "Primitives_applyFunction$closure", 6, 0, 317, 250, 315, 316, "applyFunction"],
  Primitives_getConstructorOrInterceptor: [function(className) {
    if (className == "String")
      return C.C_JSString;
    if (className == "int")
      return C.C_JSInt;
    if (className == "double")
      return C.C_JSDouble;
    if (className == "num")
      return C.C_JSNumber;
    if (className == "bool")
      return C.C_JSBool;
    if (className == "List")
      return C.C_JSArray;
    return init.allClasses[className];
  }, "call$1" /* tearOffInfo */, "Primitives_getConstructorOrInterceptor$closure", 2, 0, 289, 318, "getConstructorOrInterceptor"],
  JsCache_allocate: [function() {
    var result = {x:0};
    delete result.x;
    return result;
  }, "call$0" /* tearOffInfo */, "JsCache_allocate$closure", 0, 0, 319, "allocate"],
  iae: [function(argument) {
    throw H.wrapException(P.ArgumentError$(argument));
  }, "call$1" /* tearOffInfo */, "iae$closure", 2, 0, 241, 320, "iae"],
  ioore: [function(receiver, index) {
    if (receiver == null)
      J.get$length$as(receiver);
    if (typeof index !== "number" || Math.floor(index) !== index)
      H.iae(index);
    throw H.wrapException(P.RangeError$value(index));
  }, "call$2" /* tearOffInfo */, "ioore$closure", 4, 0, 311, 302, 321, "ioore"],
  wrapException: [function(ex) {
    var wrapper;
    if (ex == null)
      ex = new P.NullThrownError();
    wrapper = new Error();
    wrapper.dartException = ex;
    if ("defineProperty" in Object) {
      Object.defineProperty(wrapper, "message", { get: H.toStringWrapper$closure().call$0 });
      wrapper.name = "";
    } else
      wrapper.toString = H.toStringWrapper$closure().call$0;
    return wrapper;
  }, "call$1" /* tearOffInfo */, "wrapException$closure", 2, 0, 241, 322, "wrapException"],
  toStringWrapper: [function() {
    return J.toString$0(this.dartException);
  }, "call$0" /* tearOffInfo */, "toStringWrapper$closure", 0, 0, 319, "toStringWrapper"],
  throwExpression: [function(ex) {
    var wrapper;
    if (ex == null)
      ex = new P.NullThrownError();
    wrapper = new Error();
    wrapper.dartException = ex;
    if ("defineProperty" in Object) {
      Object.defineProperty(wrapper, "message", { get: H.toStringWrapper$closure().call$0 });
      wrapper.name = "";
    } else
      wrapper.toString = H.toStringWrapper$closure().call$0;
    throw wrapper;
  }, "call$1" /* tearOffInfo */, "throwExpression$closure", 2, 0, 241, 322, "throwExpression"],
  unwrapException: [function(ex) {
    var t1, message, number, ieErrorCode, t2, t3, t4, nullLiteralCall, t5, t6, t7, t8, t9, match;
    t1 = new H.unwrapException_saveStackTrace(ex);
    if (ex == null)
      return;
    if (typeof ex !== "object")
      return ex;
    if ("dartException" in ex)
      return t1.call$1(ex.dartException);
    else if (!("message" in ex))
      return ex;
    message = ex.message;
    if ("number" in ex && typeof ex.number == "number") {
      number = ex.number;
      ieErrorCode = number & 65535;
      if ((C.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
        switch (ieErrorCode) {
          case 438:
            return t1.call$1(H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", null));
          case 445:
          case 5007:
            t2 = H.S(message) + " (Error " + ieErrorCode + ")";
            return t1.call$1(new H.NullError(t2, null));
          default:
        }
    }
    if (ex instanceof TypeError) {
      t2 = $.get$TypeErrorDecoder_noSuchMethodPattern();
      t3 = $.get$TypeErrorDecoder_notClosurePattern();
      t4 = $.get$TypeErrorDecoder_nullCallPattern();
      nullLiteralCall = $.get$TypeErrorDecoder_nullLiteralCallPattern();
      t5 = $.get$TypeErrorDecoder_undefinedCallPattern();
      t6 = $.get$TypeErrorDecoder_undefinedLiteralCallPattern();
      t7 = $.get$TypeErrorDecoder_nullPropertyPattern();
      $.get$TypeErrorDecoder_nullLiteralPropertyPattern();
      t8 = $.get$TypeErrorDecoder_undefinedPropertyPattern();
      t9 = $.get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
      match = t2.matchTypeError$1(message);
      if (match != null)
        return t1.call$1(H.JsNoSuchMethodError$(message, match));
      else {
        match = t3.matchTypeError$1(message);
        if (match != null) {
          match.method = "call";
          return t1.call$1(H.JsNoSuchMethodError$(message, match));
        } else {
          match = t4.matchTypeError$1(message);
          if (match == null) {
            match = nullLiteralCall.matchTypeError$1(message);
            if (match == null) {
              match = t5.matchTypeError$1(message);
              if (match == null) {
                match = t6.matchTypeError$1(message);
                if (match == null) {
                  match = t7.matchTypeError$1(message);
                  if (match == null) {
                    match = nullLiteralCall.matchTypeError$1(message);
                    if (match == null) {
                      match = t8.matchTypeError$1(message);
                      if (match == null) {
                        match = t9.matchTypeError$1(message);
                        t2 = match != null;
                      } else
                        t2 = true;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
          } else
            t2 = true;
          if (t2) {
            t2 = match == null ? null : match.method;
            return t1.call$1(new H.NullError(message, t2));
          }
        }
      }
      t2 = typeof message === "string" ? message : "";
      return t1.call$1(new H.UnknownJsTypeError(t2));
    }
    if (ex instanceof RangeError) {
      if (typeof message === "string" && message.indexOf("call stack") !== -1)
        return new P.StackOverflowError();
      return t1.call$1(new P.ArgumentError(null));
    }
    if (typeof InternalError == "function" && ex instanceof InternalError)
      if (typeof message === "string" && message === "too much recursion")
        return new P.StackOverflowError();
    return ex;
  }, "call$1" /* tearOffInfo */, "unwrapException$closure", 2, 0, 241, 322, "unwrapException"],
  objectHashCode: [function(object) {
    if (object == null || typeof object != 'object')
      return J.get$hashCode$(object);
    else
      return H.Primitives_objectHashCode(object);
  }, "call$1" /* tearOffInfo */, "objectHashCode$closure", 2, 0, 288, 242, "objectHashCode"],
  fillLiteralMap: [function(keyValuePairs, result) {
    var $length, t1, index, index0, index1;
    $length = keyValuePairs.length;
    for (t1 = J.getInterceptor$a(result), index = 0; index < $length; index = index1) {
      index0 = index + 1;
      index1 = index0 + 1;
      t1.$indexSet(result, keyValuePairs[index], keyValuePairs[index0]);
    }
    return result;
  }, "call$2" /* tearOffInfo */, "fillLiteralMap$closure", 4, 0, 327, 328, 329, "fillLiteralMap"],
  invokeClosure: [function(closure, isolate, numberOfArguments, arg1, arg2, arg3, arg4) {
    var t1 = J.getInterceptor(numberOfArguments);
    if (t1.$eq(numberOfArguments, 0))
      return H._callInIsolate(isolate, new H.invokeClosure_closure(closure));
    else if (t1.$eq(numberOfArguments, 1))
      return H._callInIsolate(isolate, new H.invokeClosure_closure0(closure, arg1));
    else if (t1.$eq(numberOfArguments, 2))
      return H._callInIsolate(isolate, new H.invokeClosure_closure1(closure, arg1, arg2));
    else if (t1.$eq(numberOfArguments, 3))
      return H._callInIsolate(isolate, new H.invokeClosure_closure2(closure, arg1, arg2, arg3));
    else if (t1.$eq(numberOfArguments, 4))
      return H._callInIsolate(isolate, new H.invokeClosure_closure3(closure, arg1, arg2, arg3, arg4));
    else
      throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
  }, "call$7" /* tearOffInfo */, "invokeClosure$closure", 14, 0, 330, 331, 249, 332, 333, 334, 335, 336, "invokeClosure"],
  convertDartClosureToJS: [function(closure, arity) {
    var $function;
    if (closure == null)
      return;
    $function = closure.$identity;
    if (!!$function)
      return $function;
    $function = (function(closure, arity, context, invoke) {  return function(a1, a2, a3, a4) {     return invoke(closure, context, arity, a1, a2, a3, a4);  };})(closure,arity,init.globalState.currentContext,H.invokeClosure$closure().call$7);
    closure.$identity = $function;
    return $function;
  }, "call$2" /* tearOffInfo */, "convertDartClosureToJS$closure", 4, 0, 337, 331, 338, "convertDartClosureToJS"],
  Closure_Closure$fromTearOff: [function(receiver, functions, reflectionInfo, isStatic, jsArguments, propertyName) {
    var $function, t1, $name, callName, functionType, t2, argument, trampoline, closure, signatureFunction, i, t3, stub, stubCallName;
    $function = functions[0];
    t1 = isStatic === true;
    if (t1 && "$tearOff" in $function)
      return $function.$tearOff;
    $name = $function.$stubName;
    callName = $function.$callName;
    $function.$reflectionInfo = reflectionInfo;
    functionType = H.ReflectionInfo_ReflectionInfo($function).functionType;
    t2 = !t1;
    if (t2)
      if (jsArguments.length == 1) {
        argument = jsArguments[0];
        trampoline = function(i,s,f){return function(){return f.call.bind(f,i,s).apply(i,arguments)}}(receiver,argument,$function);
        closure = new H.BoundClosure(receiver, $function, argument, $name);
      } else {
        trampoline = function(r,f){return function(){return f.apply(r,arguments)}}(receiver,$function);
        closure = new H.BoundClosure(receiver, $function, null, $name);
      }
    else {
      closure = new H.TearOffClosure();
      $function.$tearOff = closure;
      closure.$name = propertyName;
      trampoline = $function;
    }
    if (typeof functionType == "number")
      signatureFunction = (function(s){return function(){return init.metadata[s]}})(functionType);
    else {
      if (t2 && typeof functionType == "function")
        closure.$receiver = receiver;
      else
        throw H.wrapException("Error in reflectionInfo.");
      signatureFunction = functionType;
    }
    closure.$signature = signatureFunction;
    closure[callName] = trampoline;
    t2 = J.getInterceptor$as(functions);
    i = 1;
    while (true) {
      t3 = t2.get$length(functions);
      if (typeof t3 !== "number")
        return H.iae(t3);
      if (!(i < t3))
        break;
      stub = t2.$index(functions, i);
      stubCallName = stub.$callName;
      t3 = t1 ? stub : function(r,f){return function(){return f.apply(r,arguments)}}(receiver,stub);
      closure[stubCallName] = t3;
      ++i;
    }
    closure["call*"] = $function;
    return closure;
  }, "call$6" /* tearOffInfo */, null, 12, 0, 339, 302, 340, 341, 342, 343, 344, "new Closure$fromTearOff" /* new Closure$fromTearOff:6:0 */],
  closureFromTearOff: [function(receiver, functions, reflectionInfo, isStatic, jsArguments, $name) {
    functions.fixed$length = init;
    reflectionInfo.fixed$length = init;
    return H.Closure_Closure$fromTearOff(receiver, functions, reflectionInfo, !!isStatic, jsArguments, $name);
  }, "call$6" /* tearOffInfo */, "closureFromTearOff$closure", 12, 0, 345, 302, 340, 341, 342, 343, 346, "closureFromTearOff"],
  propertyTypeCastError: [function(value, property) {
    var t1 = J.getInterceptor$as(property);
    throw H.wrapException(H.CastErrorImplementation$(H.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
  }, "call$2" /* tearOffInfo */, "propertyTypeCastError$closure", 4, 0, 254, 280, 347, "propertyTypeCastError"],
  interceptedTypeCast: [function(value, property) {
    var t1;
    if (value != null)
      t1 = typeof value === "object" && J.getInterceptor(value)[property];
    else
      t1 = true;
    if (t1)
      return value;
    H.propertyTypeCastError(value, property);
  }, "call$2" /* tearOffInfo */, "interceptedTypeCast$closure", 4, 0, 311, 280, 347, "interceptedTypeCast"],
  throwCyclicInit: [function(staticName) {
    throw H.wrapException(P.CyclicInitializationError$("Cyclic initialization for static " + H.S(staticName)));
  }, "call$1" /* tearOffInfo */, "throwCyclicInit$closure", 2, 0, 281, 351, "throwCyclicInit"],
  buildFunctionType: [function(returnType, parameterTypes, optionalParameterTypes) {
    return new H.RuntimeFunctionType(returnType, parameterTypes, optionalParameterTypes, null);
  }, "call$3" /* tearOffInfo */, "buildFunctionType$closure", 6, 0, 353, 354, 355, 356, "buildFunctionType"],
  getDynamicRuntimeType: [function() {
    return C.C_DynamicRuntimeType;
  }, "call$0" /* tearOffInfo */, "getDynamicRuntimeType$closure", 0, 0, 357, "getDynamicRuntimeType"],
  createRuntimeType: [function($name) {
    return new H.TypeImpl($name, null);
  }, "call$1" /* tearOffInfo */, "createRuntimeType$closure", 2, 0, 358, 346, "createRuntimeType"],
  setRuntimeTypeInfo: [function(target, typeInfo) {
    if (target != null)
      target.$builtinTypeInfo = typeInfo;
    return target;
  }, "call$2" /* tearOffInfo */, "setRuntimeTypeInfo$closure", 4, 0, 359, 360, 361, "setRuntimeTypeInfo"],
  getRuntimeTypeInfo: [function(target) {
    if (target == null)
      return;
    return target.$builtinTypeInfo;
  }, "call$1" /* tearOffInfo */, "getRuntimeTypeInfo$closure", 2, 0, 362, 360, "getRuntimeTypeInfo"],
  getRuntimeTypeArguments: [function(target, substitutionName) {
    return H.substitute(target["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(target));
  }, "call$2" /* tearOffInfo */, "getRuntimeTypeArguments$closure", 4, 0, 311, 360, 363, "getRuntimeTypeArguments"],
  getRuntimeTypeArgument: [function(target, substitutionName, index) {
    var $arguments = H.getRuntimeTypeArguments(target, substitutionName);
    return $arguments == null ? null : $arguments[index];
  }, "call$3" /* tearOffInfo */, "getRuntimeTypeArgument$closure", 6, 0, 364, 360, 363, 321, "getRuntimeTypeArgument", 365, 366, 367],
  getTypeArgumentByIndex: [function(target, index) {
    var rti = H.getRuntimeTypeInfo(target);
    return rti == null ? null : rti[index];
  }, "call$2" /* tearOffInfo */, "getTypeArgumentByIndex$closure", 4, 0, 368, 360, 321, "getTypeArgumentByIndex", 365, 366, 367],
  runtimeTypeToString: [function(type, onTypeVariable) {
    if (type == null)
      return "dynamic";
    else if (typeof type === "object" && type !== null && type.constructor === Array)
      return type[0].builtin$cls + H.joinArguments(type, 1, onTypeVariable);
    else if (typeof type == "function")
      return type.builtin$cls;
    else if (typeof type === "number" && Math.floor(type) === type)
      if (onTypeVariable == null)
        return C.JSInt_methods.toString$0(type);
      else
        return onTypeVariable.call$1(type);
    else
      return;
  }, "call$2$onTypeVariable" /* tearOffInfo */, "runtimeTypeToString$closure", 2, 3, 369, 370, 371, 372, "runtimeTypeToString"],
  joinArguments: [function(types, startIndex, onTypeVariable) {
    var buffer, index, firstArgument, allDynamic, t1, argument, str;
    if (types == null)
      return "";
    buffer = P.StringBuffer$("");
    for (index = startIndex, firstArgument = true, allDynamic = true; t1 = J.getInterceptor$n(index), t1.$lt(index, types.length); index = t1.$add(index, 1)) {
      if (firstArgument)
        firstArgument = false;
      else
        buffer._contents = buffer._contents + ", ";
      argument = types[index];
      if (argument != null)
        allDynamic = false;
      str = H.runtimeTypeToString(argument, onTypeVariable);
      str = typeof str === "string" ? str : H.S(str);
      buffer._contents = buffer._contents + str;
    }
    return allDynamic ? "" : "<" + H.S(buffer) + ">";
  }, "call$3$onTypeVariable" /* tearOffInfo */, "joinArguments$closure", 4, 3, 373, 370, 374, 375, 372, "joinArguments"],
  getRuntimeTypeString: [function(object) {
    var className = typeof object === "object" && object !== null && object.constructor === Array ? "List" : J.getInterceptor(object).constructor.builtin$cls;
    return className + H.joinArguments(object.$builtinTypeInfo, 0, null);
  }, "call$1" /* tearOffInfo */, "getRuntimeTypeString$closure", 2, 0, 279, 242, "getRuntimeTypeString"],
  substitute: [function(substitution, $arguments) {
    if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
      $arguments = substitution;
    else if (typeof substitution == "function") {
      substitution = H.invokeOn(substitution, null, $arguments);
      if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
        $arguments = substitution;
      else if (typeof substitution == "function")
        $arguments = H.invokeOn(substitution, null, $arguments);
    }
    return $arguments;
  }, "call$2" /* tearOffInfo */, "substitute$closure", 4, 0, 311, 376, 377, "substitute"],
  checkSubtype: [function(object, isField, checks, asField) {
    var $arguments, interceptor;
    if (object == null)
      return false;
    $arguments = H.getRuntimeTypeInfo(object);
    interceptor = J.getInterceptor(object);
    if (interceptor[isField] == null)
      return false;
    return H.areSubtypes(H.substitute(interceptor[asField], $arguments), checks);
  }, "call$4" /* tearOffInfo */, "checkSubtype$closure", 8, 0, 378, 242, 379, 380, 381, "checkSubtype"],
  areSubtypes: [function(s, t) {
    var len, i;
    if (s == null || t == null)
      return true;
    len = s.length;
    for (i = 0; i < len; ++i)
      if (!H.isSubtype(s[i], t[i]))
        return false;
    return true;
  }, "call$2" /* tearOffInfo */, "areSubtypes$closure", 4, 0, 382, 383, 384, "areSubtypes"],
  computeSignature: [function(signature, context, contextName) {
    return H.invokeOn(signature, context, H.getRuntimeTypeArguments(context, contextName));
  }, "call$3" /* tearOffInfo */, "computeSignature$closure", 6, 0, 385, 386, 387, 388, "computeSignature"],
  checkSubtypeOfRuntimeType: [function(o, t) {
    var rti, type;
    if (o == null)
      return t == null || t.builtin$cls === "Object" || t.builtin$cls === "Null";
    if (t == null)
      return true;
    rti = H.getRuntimeTypeInfo(o);
    o = J.getInterceptor(o);
    if (rti != null) {
      type = rti.slice();
      type.splice(0, 0, o);
    } else
      type = o;
    return H.isSubtype(type, t);
  }, "call$2" /* tearOffInfo */, "checkSubtypeOfRuntimeType$closure", 4, 0, 382, 389, 384, "checkSubtypeOfRuntimeType"],
  subtypeOfRuntimeTypeCast: [function(object, type) {
    if (object != null && !H.checkSubtypeOfRuntimeType(object, type))
      throw H.wrapException(H.CastErrorImplementation$(H.Primitives_objectTypeName(object), H.runtimeTypeToString(type, null)));
    return object;
  }, "call$2" /* tearOffInfo */, "subtypeOfRuntimeTypeCast$closure", 4, 0, 359, 242, 371, "subtypeOfRuntimeTypeCast"],
  isSubtype: [function(s, t) {
    var targetSignatureFunction, t1, typeOfS, t2, typeOfT, $name, substitution;
    if (s === t)
      return true;
    if (s == null || t == null)
      return true;
    if ("func" in t) {
      if (!("func" in s)) {
        if ("$is_" + H.S(t.func) in s)
          return true;
        targetSignatureFunction = s.$signature;
        if (targetSignatureFunction == null)
          return false;
        s = targetSignatureFunction.apply(s, null);
      }
      return H.isFunctionSubtype(s, t);
    }
    if (t.builtin$cls === "Function" && "func" in s)
      return true;
    t1 = typeof s === "object" && s !== null && s.constructor === Array;
    typeOfS = t1 ? s[0] : s;
    t2 = typeof t === "object" && t !== null && t.constructor === Array;
    typeOfT = t2 ? t[0] : t;
    $name = H.runtimeTypeToString(typeOfT, null);
    if (typeOfT !== typeOfS) {
      if (!("$is" + H.S($name) in typeOfS))
        return false;
      substitution = typeOfS["$as" + H.S(H.runtimeTypeToString(typeOfT, null))];
    } else
      substitution = null;
    if (!t1 && substitution == null || !t2)
      return true;
    t1 = t1 ? s.slice(1) : null;
    t2 = t2 ? t.slice(1) : null;
    return H.areSubtypes(H.substitute(substitution, t1), t2);
  }, "call$2" /* tearOffInfo */, "isSubtype$closure", 4, 0, 382, 383, 384, "isSubtype"],
  isAssignable: [function(s, t) {
    return H.isSubtype(s, t) || H.isSubtype(t, s);
  }, "call$2" /* tearOffInfo */, "isAssignable$closure", 4, 0, 382, 383, 384, "isAssignable"],
  areAssignable: [function(s, t, allowShorter) {
    var sLength, tLength, i, t1, t2;
    if (t == null && s == null)
      return true;
    if (t == null)
      return allowShorter;
    if (s == null)
      return false;
    sLength = s.length;
    tLength = t.length;
    if (allowShorter === true) {
      if (sLength < tLength)
        return false;
    } else if (sLength !== tLength)
      return false;
    for (i = 0; i < tLength; ++i) {
      t1 = s[i];
      t2 = t[i];
      if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
        return false;
    }
    return true;
  }, "call$3" /* tearOffInfo */, "areAssignable$closure", 6, 0, 390, 383, 384, 391, "areAssignable"],
  areAssignableMaps: [function(s, t) {
    if (t == null)
      return true;
    if (s == null)
      return false;
    return      function (t, s, isAssignable) {
       for (var $name in t) {
         if (!s.hasOwnProperty($name)) {
           return false;
         }
         var tType = t[$name];
         var sType = s[$name];
         if (!isAssignable.call$2(sType, tType)) {
          return false;
         }
       }
       return true;
     }(t, s, H.isAssignable$closure())
  ;
  }, "call$2" /* tearOffInfo */, "areAssignableMaps$closure", 4, 0, 382, 383, 384, "areAssignableMaps"],
  isFunctionSubtype: [function(s, t) {
    var sReturnType, tReturnType, sParameterTypes, tParameterTypes, sOptionalParameterTypes, tOptionalParameterTypes, sParametersLen, tParametersLen, sOptionalParametersLen, tOptionalParametersLen, pos, t1, t2, tPos, sPos;
    if (!("func" in s))
      return false;
    if ("void" in s) {
      if (!("void" in t) && "ret" in t)
        return false;
    } else if (!("void" in t)) {
      sReturnType = s.ret;
      tReturnType = t.ret;
      if (!(H.isSubtype(sReturnType, tReturnType) || H.isSubtype(tReturnType, sReturnType)))
        return false;
    }
    sParameterTypes = s.args;
    tParameterTypes = t.args;
    sOptionalParameterTypes = s.opt;
    tOptionalParameterTypes = t.opt;
    sParametersLen = sParameterTypes != null ? sParameterTypes.length : 0;
    tParametersLen = tParameterTypes != null ? tParameterTypes.length : 0;
    sOptionalParametersLen = sOptionalParameterTypes != null ? sOptionalParameterTypes.length : 0;
    tOptionalParametersLen = tOptionalParameterTypes != null ? tOptionalParameterTypes.length : 0;
    if (sParametersLen > tParametersLen)
      return false;
    if (sParametersLen + sOptionalParametersLen < tParametersLen + tOptionalParametersLen)
      return false;
    if (sParametersLen === tParametersLen) {
      if (H.areAssignable(sParameterTypes, tParameterTypes, false) !== true)
        return false;
      if (H.areAssignable(sOptionalParameterTypes, tOptionalParameterTypes, true) !== true)
        return false;
    } else {
      for (pos = 0; pos < sParametersLen; ++pos) {
        t1 = sParameterTypes[pos];
        t2 = tParameterTypes[pos];
        if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
          return false;
      }
      for (tPos = pos, sPos = 0; tPos < tParametersLen; ++sPos, ++tPos) {
        t1 = sOptionalParameterTypes[sPos];
        t2 = tParameterTypes[tPos];
        if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
          return false;
      }
      for (tPos = 0; tPos < tOptionalParametersLen; ++sPos, ++tPos) {
        t1 = sOptionalParameterTypes[sPos];
        t2 = tOptionalParameterTypes[tPos];
        if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
          return false;
      }
    }
    return H.areAssignableMaps(s.named, t.named);
  }, "call$2" /* tearOffInfo */, "isFunctionSubtype$closure", 4, 0, 382, 383, 384, "isFunctionSubtype"],
  invokeOn: [function($function, receiver, $arguments) {
    return $function.apply(receiver, $arguments);
  }, "call$3" /* tearOffInfo */, "invokeOn$closure", 6, 0, 392, 250, 302, 377, "invokeOn"],
  allMatchesInStringUnchecked: [function(needle, haystack) {
    var result, t1, $length, patternLength, startIndex, position, t2, endIndex;
    result = H.setRuntimeTypeInfo([], [P.Match]);
    t1 = J.getInterceptor$as(haystack);
    $length = t1.get$length(haystack);
    patternLength = J.get$length$as(needle);
    for (startIndex = 0; true;) {
      position = t1.indexOf$2(haystack, needle, startIndex);
      t2 = J.getInterceptor(position);
      if (t2.$eq(position, -1))
        break;
      result.push(new H.StringMatch(position, haystack, needle));
      endIndex = t2.$add(position, patternLength);
      if (J.$eq(endIndex, $length))
        break;
      else
        startIndex = t2.$eq(position, endIndex) ? J.$add$ns(startIndex, 1) : endIndex;
    }
    return result;
  }, "call$2" /* tearOffInfo */, "allMatchesInStringUnchecked$closure", 4, 0, 400, 401, 402, "allMatchesInStringUnchecked"],
  stringContainsUnchecked: [function(receiver, other, startIndex) {
    var t1, t2;
    if (typeof other === "string")
      return !J.$eq(J.indexOf$2$as(receiver, other, startIndex), -1);
    else {
      t1 = J.getInterceptor$s(other);
      t2 = J.getInterceptor$s(receiver);
      if (typeof other === "object" && other !== null && !!t1.$isJSSyntaxRegExp) {
        t1 = t2.substring$1(receiver, startIndex);
        t2 = other._nativeRegExp;
        return t2.test(t1);
      } else
        return J.get$isNotEmpty$as(t1.allMatches$1(other, t2.substring$1(receiver, startIndex)));
    }
  }, "call$3" /* tearOffInfo */, "stringContainsUnchecked$closure", 6, 0, 385, 302, 403, 375, "stringContainsUnchecked"],
  stringReplaceAllUnchecked: [function(receiver, from, to) {
    var t1, t2, result, $length, i, str, nativeRegexp;
    t1 = typeof to === "string";
    if (!t1)
      H.throwExpression(P.ArgumentError$(to));
    if (typeof from === "string")
      if (from === "") {
        t2 = J.getInterceptor(receiver);
        if (t2.$eq(receiver, ""))
          return to;
        else {
          result = P.StringBuffer$("");
          $length = t2.get$length(receiver);
          result.write$1(to);
          if (typeof $length !== "number")
            return H.iae($length);
          i = 0;
          for (; i < $length; ++i) {
            str = t2.$index(receiver, i);
            str = typeof str === "string" ? str : H.S(str);
            result._contents = result._contents + str;
            str = t1 ? to : H.S(to);
            result._contents = result._contents + str;
          }
          return result._contents;
        }
      } else
        return receiver.replace(new RegExp(from.replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), "\\$&"), 'g'), to.replace("$", "$$$$"));
    else {
      t1 = J.getInterceptor(from);
      if (typeof from === "object" && from !== null && !!t1.$isJSSyntaxRegExp) {
        nativeRegexp = from.get$_nativeGlobalVersion();
        nativeRegexp.lastIndex = 0;
        return receiver.replace(nativeRegexp, to.replace("$", "$$$$"));
      } else {
        if (from == null)
          H.throwExpression(P.ArgumentError$(null));
        throw H.wrapException("String.replaceAll(Pattern) UNIMPLEMENTED");
      }
    }
  }, "call$3" /* tearOffInfo */, "stringReplaceAllUnchecked$closure", 6, 0, 385, 302, 404, 405, "stringReplaceAllUnchecked"],
  _matchString: [function(match) {
    return J.$index$as(match, 0);
  }, "call$1" /* tearOffInfo */, "_matchString$closure", 2, 0, 406, 326, "_matchString"],
  _stringIdentity: [function(string) {
    return string;
  }, "call$1" /* tearOffInfo */, "_stringIdentity$closure", 2, 0, 407, 290, "_stringIdentity"],
  stringReplaceAllFuncUnchecked: [function(receiver, pattern, onMatch, onNonMatch) {
    var t1, buffer, t2, startIndex, match, str;
    t1 = J.getInterceptor$s(pattern);
    if (typeof pattern !== "string" && (typeof pattern !== "object" || pattern === null || !t1.$isPattern))
      throw H.wrapException(new P.ArgumentError(H.S(pattern) + " is not a Pattern"));
    if (onMatch == null)
      onMatch = H._matchString$closure();
    if (onNonMatch == null)
      onNonMatch = H._stringIdentity$closure();
    if (typeof pattern === "string")
      return H.stringReplaceAllStringFuncUnchecked(receiver, pattern, onMatch, onNonMatch);
    buffer = P.StringBuffer$("");
    for (t1 = J.get$iterator$a(t1.allMatches$1(pattern, receiver)), t2 = J.getInterceptor$s(receiver), startIndex = 0; t1.moveNext$0();) {
      match = t1.get$current();
      str = onNonMatch.call$1(t2.substring$2(receiver, startIndex, match.get$start()));
      str = typeof str === "string" ? str : H.S(str);
      buffer._contents = buffer._contents + str;
      str = onMatch.call$1(match);
      str = typeof str === "string" ? str : H.S(str);
      buffer._contents = buffer._contents + str;
      startIndex = match.get$end();
    }
    buffer.write$1(onNonMatch.call$1(t2.substring$1(receiver, startIndex)));
    return buffer._contents;
  }, "call$4" /* tearOffInfo */, "stringReplaceAllFuncUnchecked$closure", 8, 0, 408, 302, 394, 409, 410, "stringReplaceAllFuncUnchecked"],
  stringReplaceAllEmptyFuncUnchecked: [function(receiver, onMatch, onNonMatch) {
    var buffer, t1, $length, i, str, i0;
    buffer = P.StringBuffer$("");
    t1 = J.getInterceptor$as(receiver);
    $length = t1.get$length(receiver);
    buffer.write$1(onNonMatch.call$1(""));
    if (typeof $length !== "number")
      return H.iae($length);
    i = 0;
    for (; i < $length;) {
      str = onMatch.call$1(new H.StringMatch(i, receiver, ""));
      str = typeof str === "string" ? str : H.S(str);
      buffer._contents = buffer._contents + str;
      if ((t1.codeUnitAt$1(receiver, i) & 4294966272) === 55296 && $length > i + 1)
        if ((t1.codeUnitAt$1(receiver, i + 1) & 4294966272) === 56320) {
          i0 = i + 2;
          str = onNonMatch.call$1(t1.substring$2(receiver, i, i0));
          str = typeof str === "string" ? str : H.S(str);
          buffer._contents = buffer._contents + str;
          i = i0;
          continue;
        }
      str = onNonMatch.call$1(t1.$index(receiver, i));
      str = typeof str === "string" ? str : H.S(str);
      buffer._contents = buffer._contents + str;
      ++i;
    }
    buffer.write$1(onMatch.call$1(new H.StringMatch(i, receiver, "")));
    buffer.write$1(onNonMatch.call$1(""));
    return buffer._contents;
  }, "call$3" /* tearOffInfo */, "stringReplaceAllEmptyFuncUnchecked$closure", 6, 0, 385, 302, 409, 410, "stringReplaceAllEmptyFuncUnchecked"],
  stringReplaceAllStringFuncUnchecked: [function(receiver, pattern, onMatch, onNonMatch) {
    var patternLength, t1, $length, buffer, startIndex, position, t2, str;
    patternLength = J.get$length$as(pattern);
    if (J.$eq(patternLength, 0))
      return H.stringReplaceAllEmptyFuncUnchecked(receiver, onMatch, onNonMatch);
    t1 = J.getInterceptor$as(receiver);
    $length = t1.get$length(receiver);
    buffer = P.StringBuffer$("");
    for (startIndex = 0; J.$lt$n(startIndex, $length);) {
      position = t1.indexOf$2(receiver, pattern, startIndex);
      t2 = J.getInterceptor(position);
      if (t2.$eq(position, -1))
        break;
      str = onNonMatch.call$1(t1.substring$2(receiver, startIndex, position));
      str = typeof str === "string" ? str : H.S(str);
      buffer._contents = buffer._contents + str;
      str = onMatch.call$1(new H.StringMatch(position, receiver, pattern));
      str = typeof str === "string" ? str : H.S(str);
      buffer._contents = buffer._contents + str;
      startIndex = t2.$add(position, patternLength);
    }
    buffer.write$1(onNonMatch.call$1(t1.substring$1(receiver, startIndex)));
    return buffer._contents;
  }, "call$4" /* tearOffInfo */, "stringReplaceAllStringFuncUnchecked$closure", 8, 0, 408, 302, 394, 409, 410, "stringReplaceAllStringFuncUnchecked"],
  stringReplaceFirstUnchecked: [function(receiver, from, to) {
    var t1;
    if (typeof from === "string")
      return receiver.replace(from, to.replace("$", "$$$$"));
    else {
      t1 = J.getInterceptor(from);
      if (typeof from === "object" && from !== null && !!t1.$isJSSyntaxRegExp)
        return receiver.replace(from._nativeRegExp, to.replace("$", "$$$$"));
      else {
        if (from == null)
          H.throwExpression(new P.ArgumentError(null));
        throw H.wrapException("String.replace(Pattern) UNIMPLEMENTED");
      }
    }
  }, "call$3" /* tearOffInfo */, "stringReplaceFirstUnchecked$closure", 6, 0, 385, 302, 404, 405, "stringReplaceFirstUnchecked"],
  NoSideEffects: {
    "": "Object;"
  },
  "+NoSideEffects": [0],
  NoThrows: {
    "": "Object;"
  },
  "+NoThrows": [0],
  NoInline: {
    "": "Object;"
  },
  "+NoInline": [0],
  JSInvocationMirror: {
    "": "Object;__js_helper$_memberName@-370,_internalName<-1039,_kind<-1075,_arguments<-1129,_namedArgumentNames<-1129,_namedIndices@-1138",
    get$memberName: [function() {
      var $name, t1, unmangledName;
      $name = this.__js_helper$_memberName;
      t1 = J.getInterceptor($name);
      if (typeof $name === "object" && $name !== null && !!t1.$isSymbol0)
        return $name;
      unmangledName = $.get$mangledNames().$index(0, $name);
      if (unmangledName != null) {
        t1 = J.split$1$s(unmangledName, ":");
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        $name = t1[0];
      }
      t1 = new H.Symbol($name);
      this.__js_helper$_memberName = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1139, "memberName"],
    get$isMethod: [function() {
      return J.$eq(this._kind, 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isMethod"],
    get$isGetter: [function() {
      return J.$eq(this._kind, 1);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isGetter"],
    get$isSetter: [function() {
      return J.$eq(this._kind, 2);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isSetter"],
    get$isAccessor: [function() {
      return !J.$eq(this._kind, 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isAccessor"],
    get$positionalArguments: [function() {
      var t1, t2, argumentCount, list, index;
      if (J.$eq(this._kind, 1))
        return C.List_empty0;
      t1 = this._arguments;
      t2 = J.getInterceptor$as(t1);
      argumentCount = J.$sub$n(t2.get$length(t1), J.get$length$as(this._namedArgumentNames));
      if (J.$eq(argumentCount, 0))
        return C.List_empty0;
      list = [];
      if (typeof argumentCount !== "number")
        return H.iae(argumentCount);
      index = 0;
      for (; index < argumentCount; ++index)
        list.push(t2.$index(t1, index));
      list.immutable$list = true;
      list.fixed$length = true;
      return list;
    }, null /* tearOffInfo */, null, 1, 0, 1140, "positionalArguments"],
    get$namedArguments: [function() {
      var t1, t2, namedArgumentCount, t3, t4, namedArgumentsStartIndex, map, t5, i;
      if (!J.$eq(this._kind, 0))
        return H.setRuntimeTypeInfo(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [P.Symbol0, null]);
      t1 = this._namedArgumentNames;
      t2 = J.getInterceptor$as(t1);
      namedArgumentCount = t2.get$length(t1);
      t3 = this._arguments;
      t4 = J.getInterceptor$as(t3);
      namedArgumentsStartIndex = J.$sub$n(t4.get$length(t3), namedArgumentCount);
      if (J.$eq(namedArgumentCount, 0))
        return H.setRuntimeTypeInfo(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [P.Symbol0, null]);
      map = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, null);
      if (typeof namedArgumentCount !== "number")
        return H.iae(namedArgumentCount);
      t5 = J.getInterceptor$ns(namedArgumentsStartIndex);
      i = 0;
      for (; i < namedArgumentCount; ++i)
        map.$indexSet(0, new H.Symbol(t2.$index(t1, i)), t4.$index(t3, t5.$add(namedArgumentsStartIndex, i)));
      return map;
    }, null /* tearOffInfo */, null, 1, 0, 1141, "namedArguments"],
    _getCachedInvocation$1: [function(object) {
      var interceptor, $name, isIntercepted, interceptor0, receiver, method, baseName, isCatchAll;
      interceptor = J.getInterceptor(object);
      $name = this._internalName;
      isIntercepted = $.interceptedNames.indexOf($name) !== -1;
      if (isIntercepted) {
        interceptor0 = object === interceptor ? null : interceptor;
        receiver = interceptor;
        interceptor = interceptor0;
      } else {
        receiver = object;
        interceptor = null;
      }
      method = receiver[$name];
      if (typeof method != "function") {
        baseName = this.get$memberName().get$_name();
        method = receiver[baseName + "*"];
        if (method == null) {
          interceptor = J.getInterceptor(object);
          method = interceptor[baseName + "*"];
          if (method != null)
            isIntercepted = true;
          else
            interceptor = null;
        }
        isCatchAll = true;
      } else
        isCatchAll = false;
      if (typeof method == "function") {
        if (!("$reflectable" in method))
          H.throwInvalidReflectionError(this.get$memberName().get$_name());
        if (isCatchAll)
          return new H.CachedCatchAllInvocation(H.ReflectionInfo_ReflectionInfo(method), method, isIntercepted, interceptor);
        else
          return new H.CachedInvocation(method, isIntercepted, interceptor);
      } else
        return new H.CachedNoSuchMethodInvocation(interceptor);
    }, "call$1" /* tearOffInfo */, "get$_getCachedInvocation", 2, 0, 362, 242, "_getCachedInvocation"],
    static: {"": "JSInvocationMirror_METHOD<-370,JSInvocationMirror_GETTER<-370,JSInvocationMirror_SETTER<-370", JSInvocationMirror_invokeFromMirror: [function(invocation, victim) {
        var cached = invocation._getCachedInvocation$1(victim);
        if (cached.get$isNoSuchMethod())
          return cached.invokeOn$2(victim, invocation);
        else
          return cached.invokeOn$2(victim, invocation.get$_arguments());
      }, "call$2" /* tearOffInfo */, "JSInvocationMirror_invokeFromMirror$closure", 4, 0, 283, 284, 285, "invokeFromMirror"]}
  },
  "+JSInvocationMirror": [0, 1142],
  CachedInvocation: {
    "": "Object;jsFunction@-370,isIntercepted@-1043,cachedInterceptor@-1042",
    get$isNoSuchMethod: [function() {
      return false;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNoSuchMethod"],
    invokeOn$2: [function(victim, $arguments) {
      var receiver, arguments0;
      if (this.isIntercepted !== true) {
        if (typeof $arguments !== "object" || $arguments === null || $arguments.constructor !== Array)
          $arguments = P.List_List$from($arguments, true, null);
        receiver = victim;
      } else {
        arguments0 = [victim];
        C.JSArray_methods.addAll$1(arguments0, $arguments);
        receiver = this.cachedInterceptor;
        receiver = receiver != null ? receiver : victim;
        $arguments = arguments0;
      }
      return this.jsFunction.apply(receiver, $arguments);
    }, "call$2" /* tearOffInfo */, "get$invokeOn", 4, 0, 1143, 285, 377, "invokeOn"]
  },
  "+CachedInvocation": [0],
  CachedCatchAllInvocation: {
    "": "CachedInvocation;info<-1144,jsFunction-370,isIntercepted-1043,cachedInterceptor-1042",
    info$3: function(arg0, arg1, arg2) {
      return this.info.call$3(arg0, arg1, arg2);
    },
    invokeOn$2: [function(victim, $arguments) {
      var providedArgumentCount, receiver, arguments0, t1, fullParameterCount, t2, i, t3;
      if (this.isIntercepted !== true) {
        if (typeof $arguments !== "object" || $arguments === null || $arguments.constructor !== Array)
          $arguments = P.List_List$from($arguments, true, null);
        providedArgumentCount = J.get$length$as($arguments);
        receiver = victim;
      } else {
        arguments0 = [victim];
        C.JSArray_methods.addAll$1(arguments0, $arguments);
        receiver = this.cachedInterceptor;
        receiver = receiver != null ? receiver : victim;
        providedArgumentCount = arguments0.length - 1;
        $arguments = arguments0;
      }
      t1 = this.info;
      fullParameterCount = J.$add$ns(t1.get$requiredParameterCount(), t1.get$optionalParameterCount());
      if (t1.get$areOptionalParametersNamed() === true && J.$gt$n(providedArgumentCount, t1.get$requiredParameterCount()))
        throw H.wrapException(H.UnimplementedNoSuchMethodError$("Invocation of unstubbed method '" + t1.get$reflectionName() + "' with " + H.S(J.get$length$as($arguments)) + " arguments."));
      else {
        t2 = J.getInterceptor$n(providedArgumentCount);
        if (t2.$lt(providedArgumentCount, t1.get$requiredParameterCount()))
          throw H.wrapException(H.UnimplementedNoSuchMethodError$("Invocation of unstubbed method '" + t1.get$reflectionName() + "' with " + H.S(providedArgumentCount) + " arguments (too few)."));
        else if (t2.$gt(providedArgumentCount, fullParameterCount))
          throw H.wrapException(H.UnimplementedNoSuchMethodError$("Invocation of unstubbed method '" + t1.get$reflectionName() + "' with " + H.S(providedArgumentCount) + " arguments (too many)."));
      }
      for (t2 = J.getInterceptor$a($arguments), i = providedArgumentCount; t3 = J.getInterceptor$n(i), t3.$lt(i, fullParameterCount); i = t3.$add(i, 1))
        t2.add$1($arguments, init.metadata[t1.defaultValue$1(i)]);
      return this.jsFunction.apply(receiver, $arguments);
    }, "call$2" /* tearOffInfo */, "get$invokeOn", 4, 0, 1143, 285, 377, "invokeOn"]
  },
  "+CachedCatchAllInvocation": [1145],
  CachedNoSuchMethodInvocation: {
    "": "Object;interceptor@-370",
    get$isNoSuchMethod: [function() {
      return true;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNoSuchMethod"],
    invokeOn$2: [function(victim, invocation) {
      var receiver = this.interceptor;
      return J.noSuchMethod$1(receiver == null ? victim : receiver, invocation);
    }, "call$2" /* tearOffInfo */, "get$invokeOn", 4, 0, 1146, 285, 284, "invokeOn"]
  },
  "+CachedNoSuchMethodInvocation": [0],
  ReflectionInfo: {
    "": "Object;jsFunction<-370,data<-1129,isAccessor<-1043,requiredParameterCount<-1075,optionalParameterCount<-1075,areOptionalParametersNamed<-1043,functionType<-370",
    defaultValue$1: [function(parameter) {
      var t1 = this.requiredParameterCount;
      if (J.$lt$n(parameter, t1))
        return;
      return this.data[3 + parameter - t1];
    }, "call$1" /* tearOffInfo */, "get$defaultValue", 2, 0, 244, 1147, "defaultValue"],
    computeFunctionRti$1: [function(jsConstructor) {
      var t1, fakeInstance;
      t1 = this.functionType;
      if (typeof t1 == "number")
        return init.metadata[t1];
      else if (typeof t1 == "function") {
        fakeInstance = new jsConstructor();
        H.setRuntimeTypeInfo(fakeInstance, fakeInstance["<>"]);
        return t1.apply({$receiver:fakeInstance});
      } else
        throw H.wrapException(H.RuntimeError$("Unexpected function type"));
    }, "call$1" /* tearOffInfo */, "get$computeFunctionRti", 2, 0, 241, 1148, "computeFunctionRti", 1149],
    get$reflectionName: [function() {
      return this.jsFunction.$reflectionName;
    }, null /* tearOffInfo */, null, 1, 0, 253, "reflectionName"],
    static: {"": "ReflectionInfo_REQUIRED_PARAMETERS_INFO<-1075,ReflectionInfo_OPTIONAL_PARAMETERS_INFO<-1075,ReflectionInfo_FUNCTION_TYPE_INDEX<-1075,ReflectionInfo_FIRST_DEFAULT_ARGUMENT<-1075", ReflectionInfo_ReflectionInfo: [function(jsFunction) {
        var data, requiredParametersInfo, requiredParameterCount, optionalParametersInfo;
        data = jsFunction.$reflectionInfo;
        if (data == null)
          return;
        data.fixed$length = init;
        data = data;
        requiredParametersInfo = data[0];
        requiredParameterCount = requiredParametersInfo >> 1;
        optionalParametersInfo = data[1];
        return new H.ReflectionInfo(jsFunction, data, (requiredParametersInfo & 1) === 1, requiredParameterCount, optionalParametersInfo >> 1, (optionalParametersInfo & 1) === 1, data[2]);
      }, "call$1" /* tearOffInfo */, null, 2, 0, 286, 287, "new ReflectionInfo" /* new ReflectionInfo:1:0 */]}
  },
  "+ReflectionInfo": [0],
  Primitives_functionNoSuchMethod_closure: {
    "": "Closure:324;box_0-370,arguments_1-1129,namedArgumentList_2-1129",
    call$2: [function($name, argument) {
      var t1 = this.box_0;
      t1.names_1 = H.S(t1.names_1) + "$" + H.S($name);
      J.add$1$a(this.namedArgumentList_2, $name);
      J.add$1$a(this.arguments_1, argument);
      t1.argumentCount_0 = J.$add$ns(t1.argumentCount_0, 1);
    }, "call$2" /* tearOffInfo */, null, 4, 0, 324, 346, 320, "call"]
  },
  "+Primitives_functionNoSuchMethod_closure": [1060],
  Primitives_applyFunction_closure: {
    "": "Closure:324;box_0-370,defaultArguments_1-370",
    call$2: [function(parameter, value) {
      var t1 = this.defaultArguments_1;
      if (t1.containsKey$1(parameter))
        J.$indexSet$a(t1, parameter, value);
      else
        this.box_0.bad_0 = true;
    }, "call$2" /* tearOffInfo */, null, 4, 0, 324, 1147, 280, "call"]
  },
  "+Primitives_applyFunction_closure": [1060],
  TypeErrorDecoder: {
    "": "Object;_pattern<-1039,_arguments<-1075,_argumentsExpr<-1075,_expr<-1075,_method<-1075,_receiver<-1075",
    matchTypeError$1: [function(message) {
      var match, result, t1;
      match = new RegExp(this._pattern).exec(message);
      if (match == null)
        return;
      result = {};
      t1 = this._arguments;
      if (!J.$eq(t1, -1))
        result.arguments = match[t1 + 1];
      t1 = this._argumentsExpr;
      if (!J.$eq(t1, -1))
        result.argumentsExpr = match[t1 + 1];
      t1 = this._expr;
      if (!J.$eq(t1, -1))
        result.expr = match[t1 + 1];
      t1 = this._method;
      if (!J.$eq(t1, -1))
        result.method = match[t1 + 1];
      t1 = this._receiver;
      if (!J.$eq(t1, -1))
        result.receiver = match[t1 + 1];
      return result;
    }, "call$1" /* tearOffInfo */, "get$matchTypeError", 2, 0, 241, 262, "matchTypeError"],
    static: {"": "TypeErrorDecoder_noSuchMethodPattern<-1150,TypeErrorDecoder_notClosurePattern<-1150,TypeErrorDecoder_nullCallPattern<-1150,TypeErrorDecoder_nullLiteralCallPattern<-1150,TypeErrorDecoder_undefinedCallPattern<-1150,TypeErrorDecoder_undefinedLiteralCallPattern<-1150,TypeErrorDecoder_nullPropertyPattern<-1150,TypeErrorDecoder_nullLiteralPropertyPattern<-1150,TypeErrorDecoder_undefinedPropertyPattern<-1150,TypeErrorDecoder_undefinedLiteralPropertyPattern<-1150", TypeErrorDecoder_extractPattern: [function(message) {
        var match, $arguments, argumentsExpr, expr, method, receiver;
        message = message.replace(String({}), '$receiver$').replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), '\\$&');
        match = message.match(/\\\$[a-zA-Z]+\\\$/g);
        if (match == null)
          match = [];
        $arguments = match.indexOf("\\$arguments\\$");
        argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
        expr = match.indexOf("\\$expr\\$");
        method = match.indexOf("\\$method\\$");
        receiver = match.indexOf("\\$receiver\\$");
        return new H.TypeErrorDecoder(message.replace('\\$arguments\\$', '((?:x|[^x])*)').replace('\\$argumentsExpr\\$', '((?:x|[^x])*)').replace('\\$expr\\$', '((?:x|[^x])*)').replace('\\$method\\$', '((?:x|[^x])*)').replace('\\$receiver\\$', '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
      }, "call$1" /* tearOffInfo */, "TypeErrorDecoder_extractPattern$closure", 2, 0, 289, 262, "extractPattern"], TypeErrorDecoder_provokeCallErrorOn: [function(expression) {
        return function($expr$) {
  var $argumentsExpr$ = '$arguments$'
  try {
    $expr$.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}(expression);
      }, "call$1" /* tearOffInfo */, "TypeErrorDecoder_provokeCallErrorOn$closure", 2, 0, 279, 323, "provokeCallErrorOn"], TypeErrorDecoder_provokePropertyErrorOn: [function(expression) {
        return function($expr$) {
  try {
    $expr$.$method$;
  } catch (e) {
    return e.message;
  }
}(expression);
      }, "call$1" /* tearOffInfo */, "TypeErrorDecoder_provokePropertyErrorOn$closure", 2, 0, 279, 323, "provokePropertyErrorOn"]}
  },
  "+TypeErrorDecoder": [0],
  NullError: {
    "": "Error;_message<-1039,_method<-1039",
    toString$0: [function(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NullError: " + H.S(this._message);
      return "NullError: Cannot call \"" + H.S(t1) + "\" on null";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isNoSuchMethodError: true,
    $isError: true
  },
  "+NullError": [1151, 1152],
  JsNoSuchMethodError: {
    "": "Error;_message<-1039,_method<-1039,_receiver<-1039",
    toString$0: [function(_) {
      var t1, t2;
      t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + H.S(this._message);
      t2 = this._receiver;
      if (t2 == null)
        return "NoSuchMethodError: Cannot call \"" + H.S(t1) + "\" (" + H.S(this._message) + ")";
      return "NoSuchMethodError: Cannot call \"" + H.S(t1) + "\" on \"" + H.S(t2) + "\" (" + H.S(this._message) + ")";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isNoSuchMethodError: true,
    $isError: true,
    static: {JsNoSuchMethodError$: [function(_message, match) {
        var t1, t2;
        t1 = match == null;
        t2 = t1 ? null : match.method;
        t1 = t1 ? null : match.receiver;
        return new H.JsNoSuchMethodError(_message, t2, t1);
      }, null /* tearOffInfo */, null, 4, 0, 324, 325, 326, "new JsNoSuchMethodError" /* new JsNoSuchMethodError:2:0 */]}
  },
  "+JsNoSuchMethodError": [1151, 1152],
  UnknownJsTypeError: {
    "": "Error;_message<-1039",
    toString$0: [function(_) {
      var t1 = this._message;
      return J.get$isEmpty$as(t1) === true ? "Error" : "Error: " + H.S(t1);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"]
  },
  "+UnknownJsTypeError": [1151],
  unwrapException_saveStackTrace: {
    "": "Closure:241;ex_0-370",
    call$1: [function(error) {
      var t1 = J.getInterceptor(error);
      if (typeof error === "object" && error !== null && !!t1.$isError)
        if (error.$thrownJsError == null)
          error.$thrownJsError = this.ex_0;
      return error;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 507, "call"]
  },
  "+unwrapException_saveStackTrace": [1060],
  _StackTrace: {
    "": "Object;_exception@-370,_trace@-1039",
    toString$0: [function(_) {
      var t1, trace;
      t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = typeof t1 === "object" ? t1.stack : null;
      t1 = trace == null ? "" : trace;
      this._trace = t1;
      return t1;
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"]
  },
  "+_StackTrace": [0, 1153],
  invokeClosure_closure: {
    "": "Closure:319;closure_0-1098",
    call$0: [function() {
      return this.closure_0.call$0();
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+invokeClosure_closure": [1060],
  invokeClosure_closure0: {
    "": "Closure:319;closure_1-1098,arg1_2-370",
    call$0: [function() {
      return this.closure_1.call$1(this.arg1_2);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+invokeClosure_closure": [1060],
  invokeClosure_closure1: {
    "": "Closure:319;closure_3-1098,arg1_4-370,arg2_5-370",
    call$0: [function() {
      return this.closure_3.call$2(this.arg1_4, this.arg2_5);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+invokeClosure_closure": [1060],
  invokeClosure_closure2: {
    "": "Closure:319;closure_6-1098,arg1_7-370,arg2_8-370,arg3_9-370",
    call$0: [function() {
      return this.closure_6.call$3(this.arg1_7, this.arg2_8, this.arg3_9);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+invokeClosure_closure": [1060],
  invokeClosure_closure3: {
    "": "Closure:319;closure_10-1098,arg1_11-370,arg2_12-370,arg3_13-370,arg4_14-370",
    call$0: [function() {
      return this.closure_10.call$4(this.arg1_11, this.arg2_12, this.arg3_13, this.arg4_14);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+invokeClosure_closure": [1060],
  Closure: {
    "": "Object;",
    toString$0: [function(_) {
      return "Closure";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isClosure: true,
    static: {"": "Closure_FUNCTION_INDEX<-370,Closure_NAME_INDEX<-370,Closure_CALL_NAME_INDEX<-370,Closure_REQUIRED_PARAMETER_INDEX<-370,Closure_OPTIONAL_PARAMETER_INDEX<-370,Closure_DEFAULT_ARGUMENTS_INDEX<-370"}
  },
  "+Closure": [0, 1098],
  TearOffClosure: {
    "": "Closure;"
  },
  "+TearOffClosure": [1060],
  BoundClosure: {
    "": "TearOffClosure;_self<-370,_target<-370,_receiver<-370,__js_helper$_name<-1039",
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isBoundClosure)
        return false;
      return this._self === other._self && this._target === other._target && this._receiver === other._receiver;
    }, "call$1" /* tearOffInfo */, "get$==", 2, 0, 273, 403, "=="],
    get$hashCode: [function(_) {
      var t1, receiverHashCode;
      t1 = this._receiver;
      if (t1 == null)
        receiverHashCode = H.Primitives_objectHashCode(this._self);
      else
        receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
      return J.$xor$n(receiverHashCode, H.Primitives_objectHashCode(this._target));
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    $isBoundClosure: true
  },
  "+BoundClosure": [1154],
  CastErrorImplementation: {
    "": "Error;message<-1039",
    toString$0: [function(_) {
      return this.message;
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isError: true,
    static: {CastErrorImplementation$: [function(actualType, expectedType) {
        return new H.CastErrorImplementation("CastError: Casting value of type " + H.S(actualType) + " to incompatible type " + H.S(expectedType));
      }, null /* tearOffInfo */, null, 4, 0, 348, 349, 350, "new CastErrorImplementation" /* new CastErrorImplementation:2:0 */]}
  },
  "+CastErrorImplementation": [1151, 1155],
  RuntimeError: {
    "": "Error;message<-370",
    toString$0: [function(_) {
      return "RuntimeError: " + H.S(this.message);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {RuntimeError$: [function(message) {
        return new H.RuntimeError(message);
      }, null /* tearOffInfo */, null, 2, 0, 241, 262, "new RuntimeError" /* new RuntimeError:1:0 */]}
  },
  "+RuntimeError": [1151],
  RuntimeType: {
    "": "Object;"
  },
  "+RuntimeType": [0],
  RuntimeFunctionType: {
    "": "RuntimeType;returnType<-1156,parameterTypes<-1157,optionalParameterTypes<-1157,namedParameters<-370",
    _isTest$1: [function(expression) {
      var functionTypeObject = this._extractFunctionTypeObjectFrom$1(expression);
      return functionTypeObject == null ? false : H.isFunctionSubtype(functionTypeObject, this.toRti$0());
    }, "call$1" /* tearOffInfo */, "get$_isTest", 2, 0, 273, 323, "_isTest", 367, 366],
    _extractFunctionTypeObjectFrom$1: [function(o) {
      var interceptor = J.getInterceptor(o);
      return "$signature" in interceptor ? interceptor.$signature() : null;
    }, "call$1" /* tearOffInfo */, "get$_extractFunctionTypeObjectFrom", 2, 0, 241, 389, "_extractFunctionTypeObjectFrom"],
    toRti$0: [function() {
      var result, t1, t2, namedRti, keys, i, $name;
      result = { "func": "dynafunc" };
      t1 = this.returnType;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isVoidRuntimeType)
        result.void = true;
      else if (typeof t1 !== "object" || t1 === null || !t2.$isDynamicRuntimeType)
        result.ret = t1.toRti$0();
      t1 = this.parameterTypes;
      if (t1 != null && J.get$isEmpty$as(t1) !== true)
        result.args = H.RuntimeFunctionType_listToRti(t1);
      t1 = this.optionalParameterTypes;
      if (t1 != null && J.get$isEmpty$as(t1) !== true)
        result.opt = H.RuntimeFunctionType_listToRti(t1);
      t1 = this.namedParameters;
      if (t1 != null) {
        namedRti = {};
        keys = H.extractKeys(t1);
        for (t2 = keys.length, i = 0; i < t2; ++i) {
          $name = keys[i];
          namedRti[$name] = t1[$name].toRti$0();
        }
        result.named = namedRti;
      }
      return result;
    }, "call$0" /* tearOffInfo */, "get$toRti", 0, 0, 319, "toRti"],
    toString$0: [function(_) {
      var t1, t2, result, needsComma, i, t3, type, keys, $name;
      t1 = this.parameterTypes;
      if (t1 != null) {
        t2 = J.getInterceptor$as(t1);
        result = "(";
        needsComma = false;
        i = 0;
        while (true) {
          t3 = t2.get$length(t1);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (!(i < t3))
            break;
          type = t2.$index(t1, i);
          if (needsComma)
            result += ", ";
          result += H.S(type);
          ++i;
          needsComma = true;
        }
      } else {
        result = "(";
        needsComma = false;
      }
      t1 = this.optionalParameterTypes;
      if (t1 != null && J.get$isEmpty$as(t1) !== true) {
        result = (needsComma ? result + ", " : result) + "[";
        t2 = J.getInterceptor$as(t1);
        needsComma = false;
        i = 0;
        while (true) {
          t3 = t2.get$length(t1);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (!(i < t3))
            break;
          type = t2.$index(t1, i);
          if (needsComma)
            result += ", ";
          result += H.S(type);
          ++i;
          needsComma = true;
        }
        result += "]";
      } else {
        t1 = this.namedParameters;
        if (t1 != null) {
          result = (needsComma ? result + ", " : result) + "{";
          keys = H.extractKeys(t1);
          for (t2 = keys.length, needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
            $name = keys[i];
            if (needsComma)
              result += ", ";
            result += H.S(t1[$name].toRti$0()) + " " + $name;
          }
          result += "}";
        }
      }
      return result + (") -> " + H.S(this.returnType));
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {"": "RuntimeFunctionType_inAssert@-370", RuntimeFunctionType_listToRti: [function(list) {
        var result, t1, i;
        list = list;
        result = [];
        for (t1 = list.length, i = 0; i < t1; ++i)
          result.push(list[i].toRti$0());
        return result;
      }, "call$1" /* tearOffInfo */, "RuntimeFunctionType_listToRti$closure", 2, 0, 241, 352, "listToRti"]}
  },
  "+RuntimeFunctionType": [1156],
  DynamicRuntimeType: {
    "": "RuntimeType;",
    toString$0: [function(_) {
      return "dynamic";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    toRti$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, "get$toRti", 0, 0, 319, "toRti"],
    $isDynamicRuntimeType: true
  },
  "+DynamicRuntimeType": [1156],
  UnimplementedNoSuchMethodError: {
    "": "Error;_message<-1039",
    toString$0: [function(_) {
      return "Unsupported operation: " + H.S(this._message);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isNoSuchMethodError: true,
    $isError: true,
    static: {UnimplementedNoSuchMethodError$: [function(_message) {
        return new H.UnimplementedNoSuchMethodError(_message);
      }, null /* tearOffInfo */, null, 2, 0, 289, 325, "new UnimplementedNoSuchMethodError" /* new UnimplementedNoSuchMethodError:1:0 */]}
  },
  "+UnimplementedNoSuchMethodError": [1151, 1152],
  TypeImpl: {
    "": "Object;_typeName<-1039,_unmangledName@-1039",
    toString$0: [function(_) {
      var t1, unmangledName, unmangledName0;
      t1 = this._unmangledName;
      if (t1 != null)
        return t1;
      unmangledName = this._typeName;
      unmangledName0 = init.mangledGlobalNames[unmangledName];
      unmangledName = unmangledName0 == null ? unmangledName : unmangledName0;
      this._unmangledName = unmangledName;
      return unmangledName;
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    get$hashCode: [function(_) {
      return J.get$hashCode$(this._typeName);
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$isTypeImpl && J.$eq(this._typeName, other._typeName);
    }, "call$1" /* tearOffInfo */, "get$==", 2, 0, 273, 403, "=="],
    $isTypeImpl: true,
    $isType: true
  },
  "+TypeImpl": [0, 1158],
  TypeVariable: {
    "": "Object;owner<-1158,name<-1039,bound<-1075"
  },
  "+TypeVariable": [0],
  JSSyntaxRegExp: {
    "": "Object;_nativeRegExp<-370,_nativeGlobalRegExp@-370,_nativeAnchoredRegExp@-370",
    get$_nativeGlobalVersion: [function() {
      var t1 = this._nativeGlobalRegExp;
      if (t1 != null)
        return t1;
      t1 = this._nativeRegExp;
      t1 = H.JSSyntaxRegExp_makeNative(t1.source, t1.multiline, !t1.ignoreCase, true);
      this._nativeGlobalRegExp = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 319, "_nativeGlobalVersion"],
    get$_nativeAnchoredVersion: [function() {
      var t1 = this._nativeAnchoredRegExp;
      if (t1 != null)
        return t1;
      t1 = this._nativeRegExp;
      t1 = H.JSSyntaxRegExp_makeNative(t1.source + "|()", t1.multiline, !t1.ignoreCase, true);
      this._nativeAnchoredRegExp = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 319, "_nativeAnchoredVersion"],
    firstMatch$1: [function(str) {
      var m;
      if (typeof str !== "string")
        H.throwExpression(P.ArgumentError$(str));
      m = this._nativeRegExp.exec(str);
      if (m == null)
        return;
      return H._MatchImplementation$(this, m);
    }, "call$1" /* tearOffInfo */, "get$firstMatch", 2, 0, 1159, 1080, "firstMatch"],
    hasMatch$1: [function(str) {
      if (typeof str !== "string")
        H.throwExpression(new P.ArgumentError(str));
      return this._nativeRegExp.test(str);
    }, "call$1" /* tearOffInfo */, "get$hasMatch", 2, 0, 493, 1080, "hasMatch"],
    stringMatch$1: [function(str) {
      var match = this.firstMatch$1(str);
      if (match != null)
        return J.$index$as(match._match, 0);
      return;
    }, "call$1" /* tearOffInfo */, "get$stringMatch", 2, 0, 407, 1080, "stringMatch"],
    allMatches$1: [function(_, str) {
      if (typeof str !== "string")
        H.throwExpression(P.ArgumentError$(str));
      return new H._AllMatchesIterable(this, str);
    }, "call$1" /* tearOffInfo */, "get$allMatches", 2, 0, 1079, 1080, "allMatches"],
    _execGlobal$2: [function(string, start) {
      var regexp, match;
      regexp = this.get$_nativeGlobalVersion();
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return;
      return H._MatchImplementation$(this, match);
    }, "call$2" /* tearOffInfo */, "get$_execGlobal", 4, 0, 1160, 290, 439, "_execGlobal"],
    _execAnchored$2: [function(string, start) {
      var regexp, match, t1, t2;
      regexp = this.get$_nativeAnchoredVersion();
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return;
      t1 = match.length;
      t2 = t1 - 1;
      if (t2 < 0)
        return H.ioore(match, t2);
      if (match[t2] != null)
        return;
      J.set$length$as(match, t2);
      return H._MatchImplementation$(this, match);
    }, "call$2" /* tearOffInfo */, "get$_execAnchored", 4, 0, 1160, 290, 439, "_execAnchored"],
    matchAsPrefix$2: [function(_, string, start) {
      var t1 = J.getInterceptor$n(start);
      if (t1.$lt(start, 0) || t1.$gt(start, J.get$length$as(string)))
        throw H.wrapException(P.RangeError$range(start, 0, J.get$length$as(string)));
      return this._execAnchored$2(string, start);
    }, "call$2" /* tearOffInfo */, "get$matchAsPrefix", 2, 2, 1081, 778, 290, 439, "matchAsPrefix"],
    get$pattern: [function() {
      return this._nativeRegExp.source;
    }, null /* tearOffInfo */, null, 1, 0, 253, "pattern"],
    get$isMultiLine: [function() {
      return this._nativeRegExp.multiline;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isMultiLine"],
    get$isCaseSensitive: [function() {
      return !this._nativeRegExp.ignoreCase;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isCaseSensitive"],
    $isJSSyntaxRegExp: true,
    $isPattern: true,
    static: {JSSyntaxRegExp_makeNative: [function(pattern, multiLine, caseSensitive, global) {
        var m, i, g, regexp, errorMessage;
        if (typeof pattern !== "string")
          H.throwExpression(P.ArgumentError$(pattern));
        m = multiLine === true ? "m" : "";
        i = caseSensitive === true ? "" : "i";
        g = global === true ? "g" : "";
        regexp = (function() {try {return new RegExp(pattern, m + i + g);} catch (e) {return e;}})();
        if (regexp instanceof RegExp)
          return regexp;
        errorMessage = String(regexp);
        throw H.wrapException(P.FormatException$("Illegal RegExp pattern: " + H.S(pattern) + ", " + errorMessage));
      }, "call$4" /* tearOffInfo */, "JSSyntaxRegExp_makeNative$closure", 8, 0, 393, 394, 395, 396, 397, "makeNative"]}
  },
  "+JSSyntaxRegExp": [0, 1161],
  _MatchImplementation: {
    "": "Object;pattern<-1162,_match<-1109",
    get$input: [function() {
      return this._match.input;
    }, null /* tearOffInfo */, null, 1, 0, 253, "input"],
    get$start: [function() {
      return this._match.index;
    }, null /* tearOffInfo */, null, 1, 0, 823, "start"],
    start$0: function() {
      return this.get$start().call$0();
    },
    get$end: [function() {
      var t1, t2;
      t1 = this._match;
      t2 = t1.index;
      t1 = J.get$length$as(J.$index$as(t1, 0));
      if (typeof t1 !== "number")
        return H.iae(t1);
      return t2 + t1;
    }, null /* tearOffInfo */, null, 1, 0, 823, "end"],
    group$1: [function(index) {
      return J.$index$as(this._match, index);
    }, "call$1" /* tearOffInfo */, "get$group", 2, 0, 825, 321, "group"],
    $index: [function(_, index) {
      return J.$index$as(this._match, index);
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, 825, 321, "[]"],
    get$groupCount: [function() {
      return J.$sub$n(J.get$length$as(this._match), 1);
    }, null /* tearOffInfo */, null, 1, 0, 823, "groupCount"],
    groups$1: [function(groups) {
      var out, t1, t2, t3;
      out = [];
      for (t1 = J.get$iterator$a(groups), t2 = this._match, t3 = J.getInterceptor$as(t2); t1.moveNext$0() === true;)
        out.push(t3.$index(t2, t1.get$current()));
      return out;
    }, "call$1" /* tearOffInfo */, "get$groups", 2, 0, 1163, 1164, "groups"],
    _MatchImplementation$2: [function(pattern, _match) {
    }, null /* tearOffInfo */, null, 4, 0, 398, 394, 399, ""],
    $isMatch: true,
    static: {_MatchImplementation$: [function(pattern, _match) {
        var t1 = new H._MatchImplementation(pattern, _match);
        t1._MatchImplementation$2(pattern, _match);
        return t1;
      }, null /* tearOffInfo */, null, 4, 0, 398, 394, 399, "new _MatchImplementation" /* new _MatchImplementation:2:0 */]}
  },
  "+_MatchImplementation": [0, 1165],
  _AllMatchesIterable: {
    "": "IterableBase;_re<-1166,_string<-1039",
    get$iterator: [function(_) {
      return new H._AllMatchesIterator(this._re, this._string, null);
    }, null /* tearOffInfo */, null, 1, 0, 1167, "iterator"],
    $asIterableBase: function() {
      return [P.Match];
    },
    $asIterable: function() {
      return [P.Match];
    },
    "<>": []
  },
  "+_AllMatchesIterable": [1168],
  _AllMatchesIterator: {
    "": "Object;_regExp<-1166,_string@-1039,__js_helper$_current@-1165",
    get$current: [function() {
      return this.__js_helper$_current;
    }, null /* tearOffInfo */, null, 1, 0, 1169, "current"],
    moveNext$0: [function() {
      var t1, index;
      if (this._string == null)
        return false;
      t1 = this.__js_helper$_current;
      if (t1 != null) {
        index = t1.get$end();
        if (J.$eq(this.__js_helper$_current.get$start(), index))
          index = J.$add$ns(index, 1);
      } else
        index = 0;
      t1 = this._regExp._execGlobal$2(this._string, index);
      this.__js_helper$_current = t1;
      if (t1 == null) {
        this._string = null;
        return false;
      }
      return true;
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"]
  },
  "+_AllMatchesIterator": [0, 1170],
  StringMatch: {
    "": "Object;start<-1075,input<-1039,pattern<-1039",
    get$end: [function() {
      return J.$add$ns(this.start, J.get$length$as(this.pattern));
    }, null /* tearOffInfo */, null, 1, 0, 823, "end"],
    $index: [function(_, g) {
      if (!J.$eq(g, 0))
        H.throwExpression(P.RangeError$value(g));
      return this.pattern;
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, 825, 1171, "[]"],
    get$groupCount: [function() {
      return 0;
    }, null /* tearOffInfo */, null, 1, 0, 823, "groupCount"],
    group$1: [function(group_) {
      if (!J.$eq(group_, 0))
        throw H.wrapException(new P.RangeError("value " + H.S(group_)));
      return this.pattern;
    }, "call$1" /* tearOffInfo */, "get$group", 2, 0, 825, 1172, "group"],
    groups$1: [function(groups_) {
      var result, t1, t2, g;
      result = H.setRuntimeTypeInfo([], [J.JSString]);
      for (t1 = J.get$iterator$a(groups_), t2 = this.pattern; t1.moveNext$0() === true;) {
        g = t1.get$current();
        if (!J.$eq(g, 0))
          H.throwExpression(new P.RangeError("value " + H.S(g)));
        result.push(t2);
      }
      return result;
    }, "call$1" /* tearOffInfo */, "get$groups", 2, 0, 1163, 1173, "groups"],
    start$0: function() {
      return this.start.call$0();
    },
    $isMatch: true
  },
  "+StringMatch": [0, 1165],
  "": "ESCAPE_REGEXP<-1039,_dartExperimentalFixupGetTagHooksTransformer<-370,_safariHooksTransformer<-370,_operaHooksTransformer<-370,_firefoxHooksTransformer<-370,_fixDocumentHooksTransformer<-370,_ieHooksTransformer<-370,_fallbackConstructorHooksTransformerGenerator<-370,_constructorNameFallback<-370,_baseHooks<-370,initNativeDispatchFlag@-370,DISCRIMINATED_MARK<-370,INTERIOR_MARK<-370,LEAF_MARK<-370,INSTANCE_CACHED_MARK<-370,UNCACHED_MARK<-370,interceptorsForUncacheableTags@-370,dispatchRecordsForInstanceTags@-370,prototypeForTagFunction@-1098,alternateTagFunction@-1098,getTagFunction@-1098"
}],
["benchmark_harness", "package:benchmark_harness/benchmark_harness.dart", , Z, {
  "": "",
  BenchmarkBase: {
    "": "Object;name<-1039",
    run$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, "get$run", 0, 0, 494, "run"],
    warmup$0: [function() {
      this.run$0();
    }, "call$0" /* tearOffInfo */, "get$warmup", 0, 0, 494, "warmup"],
    exercise$0: [function() {
      for (var i = 0; i < 10; ++i)
        this.run$0();
    }, "call$0" /* tearOffInfo */, "get$exercise", 0, 0, 494, "exercise"],
    setup$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, "get$setup", 0, 0, 494, "setup"],
    teardown$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, "get$teardown", 0, 0, 494, "teardown"],
    measure$0: [function() {
      this.setup$0();
      Z.BenchmarkBase_measureFor(new Z.BenchmarkBase_measure_closure(this), 100);
      return Z.BenchmarkBase_measureFor(new Z.BenchmarkBase_measure_closure0(this), 2000);
    }, "call$0" /* tearOffInfo */, "get$measure", 0, 0, 1067, "measure"],
    report$0: [function() {
      var score = this.measure$0();
      P.print(H.S(this.name) + "(RunTime): " + H.S(score) + " us.");
    }, "call$0" /* tearOffInfo */, "get$report", 0, 0, 494, "report"],
    static: {BenchmarkBase$: [function($name) {
        return new Z.BenchmarkBase($name);
      }, null /* tearOffInfo */, null, 2, 0, 289, 346, "new BenchmarkBase" /* new BenchmarkBase:1:0 */], BenchmarkBase_measureFor: [function(f, timeMinimum) {
        var watch, iter, elapsed;
        watch = new P.Stopwatch(null, null);
        watch.start$0();
        for (iter = 0, elapsed = 0; J.$lt$n(elapsed, timeMinimum);) {
          f.call$0();
          elapsed = J.$tdiv$n(J.$mul$n(watch.get$elapsedTicks(), 1000), 1000000);
          ++iter;
        }
        if (typeof elapsed !== "number")
          return H.iae(elapsed);
        return 1000 * elapsed / iter;
      }, "call$2" /* tearOffInfo */, "BenchmarkBase_measureFor$closure", 4, 0, 411, 412, 413, "measureFor"]}
  },
  "+BenchmarkBase": [0],
  BenchmarkBase_measure_closure: {
    "": "Closure:319;this_0-370",
    call$0: [function() {
      this.this_0.run$0();
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+BenchmarkBase_measure_closure": [1060],
  BenchmarkBase_measure_closure0: {
    "": "Closure:319;this_1-370",
    call$0: [function() {
      this.this_1.exercise$0();
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+BenchmarkBase_measure_closure": [1060]
}],
["dart._collection.dev", "dart:_collection-dev", , H, {
  "": "",
  IterableMixinWorkaround_forEach: [function(iterable, f) {
    var t1;
    for (t1 = J.get$iterator$a(iterable); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  }, "call$2" /* tearOffInfo */, "IterableMixinWorkaround_forEach$closure", 4, 0, 421, 417, 412, "forEach"],
  IterableMixinWorkaround_any: [function(iterable, f) {
    var t1;
    for (t1 = J.get$iterator$a(iterable); t1.moveNext$0() === true;)
      if (f.call$1(t1.get$current()) === true)
        return true;
    return false;
  }, "call$2" /* tearOffInfo */, "IterableMixinWorkaround_any$closure", 4, 0, 422, 417, 412, "any"],
  IterableMixinWorkaround_every: [function(iterable, f) {
    var t1;
    for (t1 = J.get$iterator$a(iterable); t1.moveNext$0() === true;)
      if (f.call$1(t1.get$current()) !== true)
        return false;
    return true;
  }, "call$2" /* tearOffInfo */, "IterableMixinWorkaround_every$closure", 4, 0, 422, 417, 412, "every"],
  IterableMixinWorkaround_reduce: [function(iterable, combine) {
    var iterator, value;
    iterator = J.get$iterator$a(iterable);
    if (iterator.moveNext$0() !== true)
      throw H.wrapException(new P.StateError("No elements"));
    value = iterator.get$current();
    for (; iterator.moveNext$0() === true;)
      value = combine.call$2(value, iterator.get$current());
    return value;
  }, "call$2" /* tearOffInfo */, "IterableMixinWorkaround_reduce$closure", 4, 0, 423, 417, 424, "reduce"],
  IterableMixinWorkaround_fold: [function(iterable, initialValue, combine) {
    var t1;
    for (t1 = J.get$iterator$a(iterable); t1.moveNext$0() === true;)
      initialValue = combine.call$2(initialValue, t1.get$current());
    return initialValue;
  }, "call$3" /* tearOffInfo */, "IterableMixinWorkaround_fold$closure", 6, 0, 425, 417, 426, 424, "fold"],
  IterableMixinWorkaround_removeWhereList: [function(list, test) {
    var retained, t1, $length, i, element, t2;
    retained = [];
    t1 = J.getInterceptor$as(list);
    $length = t1.get$length(list);
    if (typeof $length !== "number")
      return H.iae($length);
    i = 0;
    for (; i < $length; ++i) {
      element = t1.$index(list, i);
      if (test.call$1(element) !== true)
        retained.push(element);
      if ($length !== t1.get$length(list))
        throw H.wrapException(P.ConcurrentModificationError$(list));
    }
    t2 = retained.length;
    if (t2 === $length)
      return;
    t1.set$length(list, t2);
    for (i = 0; i < retained.length; ++i)
      t1.$indexSet(list, i, retained[i]);
  }, "call$2" /* tearOffInfo */, "IterableMixinWorkaround_removeWhereList$closure", 4, 0, 427, 352, 428, "removeWhereList"],
  IterableMixinWorkaround_firstWhere: [function(iterable, test, orElse) {
    var t1, element;
    for (t1 = J.get$iterator$a(iterable); t1.moveNext$0() === true;) {
      element = t1.get$current();
      if (test.call$1(element) === true)
        return element;
    }
    if (orElse != null)
      return orElse.call$0();
    throw H.wrapException(P.StateError$("No matching element"));
  }, "call$3" /* tearOffInfo */, "IterableMixinWorkaround_firstWhere$closure", 6, 0, 429, 417, 428, 430, "firstWhere"],
  IterableMixinWorkaround_lastWhereList: [function(list, test, orElse) {
    var t1, i, t2, element;
    for (t1 = J.getInterceptor$as(list), i = J.$sub$n(t1.get$length(list), 1); t2 = J.getInterceptor$n(i), t2.$ge(i, 0); i = t2.$sub(i, 1)) {
      element = t1.$index(list, i);
      if (test.call$1(element) === true)
        return element;
    }
    if (orElse != null)
      return orElse.call$0();
    throw H.wrapException(new P.StateError("No matching element"));
  }, "call$3" /* tearOffInfo */, "IterableMixinWorkaround_lastWhereList$closure", 6, 0, 431, 352, 428, 430, "lastWhereList"],
  IterableMixinWorkaround_singleWhere: [function(iterable, test) {
    var t1, result, foundMatching, element;
    for (t1 = J.get$iterator$a(iterable), result = null, foundMatching = false; t1.moveNext$0() === true;) {
      element = t1.get$current();
      if (test.call$1(element) === true) {
        if (foundMatching)
          throw H.wrapException(new P.StateError("More than one matching element"));
        result = element;
        foundMatching = true;
      }
    }
    if (foundMatching)
      return result;
    throw H.wrapException(new P.StateError("No matching element"));
  }, "call$2" /* tearOffInfo */, "IterableMixinWorkaround_singleWhere$closure", 4, 0, 432, 417, 428, "singleWhere"],
  IterableMixinWorkaround_toStringIterable: [function(iterable, leftDelimiter, rightDelimiter) {
    var result, i, t1, t2;
    i = 0;
    while (true) {
      t1 = J.get$length$as($.get$IterableMixinWorkaround__toStringList());
      if (typeof t1 !== "number")
        return H.iae(t1);
      if (!(i < t1))
        break;
      t1 = J.$index$as($.get$IterableMixinWorkaround__toStringList(), i);
      t2 = iterable;
      if (t1 == null ? t2 == null : t1 === t2)
        return H.S(leftDelimiter) + "..." + H.S(rightDelimiter);
      ++i;
    }
    result = P.StringBuffer$("");
    try {
      J.add$1$a($.get$IterableMixinWorkaround__toStringList(), iterable);
      result.write$1(leftDelimiter);
      result.writeAll$2(iterable, ", ");
      result.write$1(rightDelimiter);
    } finally {
      J.removeLast$0$a($.get$IterableMixinWorkaround__toStringList());
    }
    return result.get$_contents();
  }, "call$3" /* tearOffInfo */, "IterableMixinWorkaround_toStringIterable$closure", 6, 0, 433, 417, 434, 435, "toStringIterable"],
  IterableMixinWorkaround_shuffleList: [function(list, random) {
    var t1, $length, t2, pos, tmp;
    if (random == null)
      random = C.C__JSRandom;
    t1 = J.getInterceptor$as(list);
    $length = t1.get$length(list);
    for (; t2 = J.getInterceptor$n($length), t2.$gt($length, 1);) {
      pos = random.nextInt$1($length);
      $length = t2.$sub($length, 1);
      tmp = t1.$index(list, $length);
      t1.$indexSet(list, $length, t1.$index(list, pos));
      t1.$indexSet(list, pos, tmp);
    }
  }, "call$2" /* tearOffInfo */, "IterableMixinWorkaround_shuffleList$closure", 4, 0, 436, 352, 437, "shuffleList"],
  IterableMixinWorkaround__rangeCheck: [function(list, start, end) {
    var t1 = J.getInterceptor$n(start);
    if (t1.$lt(start, 0) || t1.$gt(start, J.get$length$as(list)))
      throw H.wrapException(P.RangeError$range(start, 0, J.get$length$as(list)));
    t1 = J.getInterceptor$n(end);
    if (t1.$lt(end, start) || t1.$gt(end, J.get$length$as(list)))
      throw H.wrapException(P.RangeError$range(end, start, J.get$length$as(list)));
  }, "call$3" /* tearOffInfo */, "IterableMixinWorkaround__rangeCheck$closure", 6, 0, 438, 352, 439, 440, "_rangeCheck"],
  IterableMixinWorkaround_setRangeList: [function(list, start, end, from, skipCount) {
    var $length, t1, otherStart, otherList;
    H.IterableMixinWorkaround__rangeCheck(list, start, end);
    $length = J.$sub$n(end, start);
    if (J.$eq($length, 0))
      return;
    if (J.$lt$n(skipCount, 0))
      throw H.wrapException(new P.ArgumentError(skipCount));
    t1 = J.getInterceptor$a(from);
    if (typeof from === "object" && from !== null && (from.constructor === Array || !!t1.$isList)) {
      otherStart = skipCount;
      otherList = from;
    } else {
      otherList = t1.skip$1(from, skipCount).toList$1$growable(0, false);
      otherStart = 0;
    }
    if (J.$gt$n(J.$add$ns(otherStart, $length), J.get$length$as(otherList)))
      throw H.wrapException(P.StateError$("Not enough elements"));
    H.Lists_copy(otherList, otherStart, list, start, $length);
  }, "call$5" /* tearOffInfo */, "IterableMixinWorkaround_setRangeList$closure", 10, 0, 441, 352, 439, 440, 404, 419, "setRangeList"],
  IterableMixinWorkaround_fillRangeList: [function(list, start, end, fillValue) {
    var t1, i, t2;
    H.IterableMixinWorkaround__rangeCheck(list, start, end);
    for (t1 = J.getInterceptor$a(list), i = start; t2 = J.getInterceptor$n(i), t2.$lt(i, end); i = t2.$add(i, 1))
      t1.$indexSet(list, i, fillValue);
  }, "call$4" /* tearOffInfo */, "IterableMixinWorkaround_fillRangeList$closure", 8, 0, 442, 352, 439, 440, 443, "fillRangeList"],
  IterableMixinWorkaround_insertAllList: [function(list, index, iterable) {
    var t1, t2, insertionLength, t3, element, index0;
    t1 = J.getInterceptor$n(index);
    if (t1.$lt(index, 0) || t1.$gt(index, J.get$length$as(list)))
      throw H.wrapException(P.RangeError$range(index, 0, J.get$length$as(list)));
    t2 = J.getInterceptor$a(iterable);
    if (typeof iterable !== "object" || iterable === null || !t2.$isEfficientLength)
      iterable = t2.toList$1$growable(iterable, false);
    t2 = J.getInterceptor$as(iterable);
    insertionLength = t2.get$length(iterable);
    t3 = J.getInterceptor$as(list);
    t3.set$length(list, J.$add$ns(t3.get$length(list), insertionLength));
    t3.setRange$4(list, t1.$add(index, insertionLength), t3.get$length(list), list, index);
    for (t1 = t2.get$iterator(iterable); t1.moveNext$0() === true; index = index0) {
      element = t1.get$current();
      index0 = J.$add$ns(index, 1);
      t3.$indexSet(list, index, element);
    }
  }, "call$3" /* tearOffInfo */, "IterableMixinWorkaround_insertAllList$closure", 6, 0, 444, 352, 321, 417, "insertAllList"],
  IterableMixinWorkaround_setAllList: [function(list, index, iterable) {
    var t1, t2, element, index0;
    t1 = J.getInterceptor$n(index);
    if (t1.$lt(index, 0) || t1.$gt(index, J.get$length$as(list)))
      throw H.wrapException(P.RangeError$range(index, 0, J.get$length$as(list)));
    for (t1 = J.get$iterator$a(iterable), t2 = J.getInterceptor$a(list); t1.moveNext$0() === true; index = index0) {
      element = t1.get$current();
      index0 = J.$add$ns(index, 1);
      t2.$indexSet(list, index, element);
    }
  }, "call$3" /* tearOffInfo */, "IterableMixinWorkaround_setAllList$closure", 6, 0, 444, 352, 321, 417, "setAllList"],
  Lists_copy: [function(src, srcStart, dst, dstStart, count) {
    var t1, i, j, t2, t3, t4;
    t1 = J.getInterceptor$n(srcStart);
    if (t1.$lt(srcStart, dstStart))
      for (i = J.$sub$n(t1.$add(srcStart, count), 1), j = J.$sub$n(J.$add$ns(dstStart, count), 1), t1 = J.getInterceptor$as(src), t2 = J.getInterceptor$a(dst); t3 = J.getInterceptor$n(i), t3.$ge(i, srcStart); i = t3.$sub(i, 1), j = J.$sub$n(j, 1))
        t2.$indexSet(dst, j, t1.$index(src, i));
    else
      for (t2 = J.getInterceptor$as(src), t3 = J.getInterceptor$a(dst), j = dstStart, i = srcStart; t4 = J.getInterceptor$n(i), t4.$lt(i, t1.$add(srcStart, count)); i = t4.$add(i, 1), j = J.$add$ns(j, 1))
        t3.$indexSet(dst, j, t2.$index(src, i));
  }, "call$5" /* tearOffInfo */, "Lists_copy$closure", 10, 0, 445, 446, 447, 448, 449, 450, "copy"],
  Lists_indexOf: [function(a, element, startIndex, endIndex) {
    var t1, t2, i;
    t1 = J.getInterceptor$as(a);
    t2 = J.getInterceptor$n(startIndex);
    if (t2.$ge(startIndex, t1.get$length(a)))
      return -1;
    if (t2.$lt(startIndex, 0))
      startIndex = 0;
    for (i = startIndex; t2 = J.getInterceptor$n(i), t2.$lt(i, endIndex); i = t2.$add(i, 1))
      if (J.$eq(t1.$index(a, i), element))
        return i;
    return -1;
  }, "call$4" /* tearOffInfo */, "Lists_indexOf$closure", 8, 0, 451, 452, 453, 375, 454, "indexOf"],
  Lists_lastIndexOf: [function(a, element, startIndex) {
    var t1, t2, i;
    t1 = J.getInterceptor$n(startIndex);
    if (t1.$lt(startIndex, 0))
      return -1;
    t2 = J.getInterceptor$as(a);
    if (t1.$ge(startIndex, t2.get$length(a)))
      startIndex = J.$sub$n(t2.get$length(a), 1);
    for (i = startIndex; t1 = J.getInterceptor$n(i), t1.$ge(i, 0); i = t1.$sub(i, 1))
      if (J.$eq(t2.$index(a, i), element))
        return i;
    return -1;
  }, "call$3" /* tearOffInfo */, "Lists_lastIndexOf$closure", 6, 0, 455, 452, 453, 375, "lastIndexOf"],
  Sort__doSort: [function(a, left, right, compare) {
    if (J.$le$n(J.$sub$n(right, left), 32))
      H.Sort__insertionSort(a, left, right, compare);
    else
      H.Sort__dualPivotQuicksort(a, left, right, compare);
  }, "call$4" /* tearOffInfo */, "Sort__doSort$closure", 8, 0, 456, 452, 457, 458, 459, "_doSort"],
  Sort__insertionSort: [function(a, left, right, compare) {
    var i, t1, t2, el, j, t3;
    for (i = J.$add$ns(left, 1), t1 = J.getInterceptor$as(a); t2 = J.getInterceptor$n(i), t2.$le(i, right); i = t2.$add(i, 1)) {
      el = t1.$index(a, i);
      j = i;
      while (true) {
        t3 = J.getInterceptor$n(j);
        if (!(t3.$gt(j, left) && J.$gt$n(compare.call$2(t1.$index(a, t3.$sub(j, 1)), el), 0)))
          break;
        t1.$indexSet(a, j, t1.$index(a, t3.$sub(j, 1)));
        j = t3.$sub(j, 1);
      }
      t1.$indexSet(a, j, el);
    }
  }, "call$4" /* tearOffInfo */, "Sort__insertionSort$closure", 8, 0, 456, 452, 457, 458, 459, "_insertionSort"],
  Sort__dualPivotQuicksort: [function(a, left, right, compare) {
    var t1, sixth, t2, index1, index5, index3, t3, index2, index4, el1, el2, el3, el4, el5, t0, less, great, k, ak, comp, t4, less0, great0, pivots_are_equal;
    t1 = J.getInterceptor$n(right);
    sixth = J.$tdiv$n(J.$add$ns(t1.$sub(right, left), 1), 6);
    t2 = J.getInterceptor$ns(left);
    index1 = t2.$add(left, sixth);
    index5 = t1.$sub(right, sixth);
    index3 = J.$tdiv$n(t2.$add(left, right), 2);
    t3 = J.getInterceptor$n(index3);
    index2 = t3.$sub(index3, sixth);
    index4 = t3.$add(index3, sixth);
    t3 = J.getInterceptor$as(a);
    el1 = t3.$index(a, index1);
    el2 = t3.$index(a, index2);
    el3 = t3.$index(a, index3);
    el4 = t3.$index(a, index4);
    el5 = t3.$index(a, index5);
    if (J.$gt$n(compare.call$2(el1, el2), 0)) {
      t0 = el2;
      el2 = el1;
      el1 = t0;
    }
    if (J.$gt$n(compare.call$2(el4, el5), 0)) {
      t0 = el5;
      el5 = el4;
      el4 = t0;
    }
    if (J.$gt$n(compare.call$2(el1, el3), 0)) {
      t0 = el3;
      el3 = el1;
      el1 = t0;
    }
    if (J.$gt$n(compare.call$2(el2, el3), 0)) {
      t0 = el3;
      el3 = el2;
      el2 = t0;
    }
    if (J.$gt$n(compare.call$2(el1, el4), 0)) {
      t0 = el4;
      el4 = el1;
      el1 = t0;
    }
    if (J.$gt$n(compare.call$2(el3, el4), 0)) {
      t0 = el4;
      el4 = el3;
      el3 = t0;
    }
    if (J.$gt$n(compare.call$2(el2, el5), 0)) {
      t0 = el5;
      el5 = el2;
      el2 = t0;
    }
    if (J.$gt$n(compare.call$2(el2, el3), 0)) {
      t0 = el3;
      el3 = el2;
      el2 = t0;
    }
    if (J.$gt$n(compare.call$2(el4, el5), 0)) {
      t0 = el5;
      el5 = el4;
      el4 = t0;
    }
    t3.$indexSet(a, index1, el1);
    t3.$indexSet(a, index3, el3);
    t3.$indexSet(a, index5, el5);
    t3.$indexSet(a, index2, t3.$index(a, left));
    t3.$indexSet(a, index4, t3.$index(a, right));
    less = t2.$add(left, 1);
    great = t1.$sub(right, 1);
    if (J.$eq(compare.call$2(el2, el4), 0)) {
      for (k = less; t1 = J.getInterceptor$n(k), t1.$le(k, great); k = t1.$add(k, 1)) {
        ak = t3.$index(a, k);
        comp = compare.call$2(ak, el2);
        t2 = J.getInterceptor(comp);
        if (t2.$eq(comp, 0))
          continue;
        if (t2.$lt(comp, 0)) {
          if (!t1.$eq(k, less)) {
            t3.$indexSet(a, k, t3.$index(a, less));
            t3.$indexSet(a, less, ak);
          }
          less = J.$add$ns(less, 1);
        } else
          for (; true;) {
            comp = compare.call$2(t3.$index(a, great), el2);
            t2 = J.getInterceptor$n(comp);
            if (t2.$gt(comp, 0)) {
              great = J.$sub$n(great, 1);
              continue;
            } else {
              t4 = J.getInterceptor$n(great);
              if (t2.$lt(comp, 0)) {
                t3.$indexSet(a, k, t3.$index(a, less));
                less0 = J.$add$ns(less, 1);
                t3.$indexSet(a, less, t3.$index(a, great));
                great0 = t4.$sub(great, 1);
                t3.$indexSet(a, great, ak);
                great = great0;
                less = less0;
                break;
              } else {
                t3.$indexSet(a, k, t3.$index(a, great));
                great0 = t4.$sub(great, 1);
                t3.$indexSet(a, great, ak);
                great = great0;
                break;
              }
            }
          }
      }
      pivots_are_equal = true;
    } else {
      for (k = less; t1 = J.getInterceptor$n(k), t1.$le(k, great); k = t1.$add(k, 1)) {
        ak = t3.$index(a, k);
        if (J.$lt$n(compare.call$2(ak, el2), 0)) {
          if (!t1.$eq(k, less)) {
            t3.$indexSet(a, k, t3.$index(a, less));
            t3.$indexSet(a, less, ak);
          }
          less = J.$add$ns(less, 1);
        } else if (J.$gt$n(compare.call$2(ak, el4), 0))
          for (; true;)
            if (J.$gt$n(compare.call$2(t3.$index(a, great), el4), 0)) {
              great = J.$sub$n(great, 1);
              if (J.$lt$n(great, k))
                break;
              continue;
            } else {
              t2 = J.getInterceptor$n(great);
              if (J.$lt$n(compare.call$2(t3.$index(a, great), el2), 0)) {
                t3.$indexSet(a, k, t3.$index(a, less));
                less0 = J.$add$ns(less, 1);
                t3.$indexSet(a, less, t3.$index(a, great));
                great0 = t2.$sub(great, 1);
                t3.$indexSet(a, great, ak);
                great = great0;
                less = less0;
              } else {
                t3.$indexSet(a, k, t3.$index(a, great));
                great0 = t2.$sub(great, 1);
                t3.$indexSet(a, great, ak);
                great = great0;
              }
              break;
            }
      }
      pivots_are_equal = false;
    }
    t1 = J.getInterceptor$n(less);
    t3.$indexSet(a, left, t3.$index(a, t1.$sub(less, 1)));
    t3.$indexSet(a, t1.$sub(less, 1), el2);
    t2 = J.getInterceptor$ns(great);
    t3.$indexSet(a, right, t3.$index(a, t2.$add(great, 1)));
    t3.$indexSet(a, t2.$add(great, 1), el4);
    H.Sort__doSort(a, left, t1.$sub(less, 2), compare);
    H.Sort__doSort(a, t2.$add(great, 2), right, compare);
    if (pivots_are_equal)
      return;
    if (t1.$lt(less, index1) && t2.$gt(great, index5)) {
      for (; J.$eq(compare.call$2(t3.$index(a, less), el2), 0);)
        less = J.$add$ns(less, 1);
      for (; J.$eq(compare.call$2(t3.$index(a, great), el4), 0);)
        great = J.$sub$n(great, 1);
      for (k = less; t1 = J.getInterceptor$n(k), t1.$le(k, great); k = t1.$add(k, 1)) {
        ak = t3.$index(a, k);
        if (J.$eq(compare.call$2(ak, el2), 0)) {
          if (!t1.$eq(k, less)) {
            t3.$indexSet(a, k, t3.$index(a, less));
            t3.$indexSet(a, less, ak);
          }
          less = J.$add$ns(less, 1);
        } else if (J.$eq(compare.call$2(ak, el4), 0))
          for (; true;)
            if (J.$eq(compare.call$2(t3.$index(a, great), el4), 0)) {
              great = J.$sub$n(great, 1);
              if (J.$lt$n(great, k))
                break;
              continue;
            } else {
              t2 = J.getInterceptor$n(great);
              if (J.$lt$n(compare.call$2(t3.$index(a, great), el2), 0)) {
                t3.$indexSet(a, k, t3.$index(a, less));
                less0 = J.$add$ns(less, 1);
                t3.$indexSet(a, less, t3.$index(a, great));
                great0 = t2.$sub(great, 1);
                t3.$indexSet(a, great, ak);
                great = great0;
                less = less0;
              } else {
                t3.$indexSet(a, k, t3.$index(a, great));
                great0 = t2.$sub(great, 1);
                t3.$indexSet(a, great, ak);
                great = great0;
              }
              break;
            }
      }
      H.Sort__doSort(a, less, great, compare);
    } else
      H.Sort__doSort(a, less, great, compare);
  }, "call$4" /* tearOffInfo */, "Sort__dualPivotQuicksort$closure", 8, 0, 456, 452, 457, 458, 459, "_dualPivotQuicksort"],
  ListIterable: {
    "": "IterableBase;",
    get$iterator: [function(_) {
      return H.setRuntimeTypeInfo(new H.ListIterator(this, this.get$length(0), 0, null), [H.getRuntimeTypeArgument(this, "ListIterable", 0)]);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterator_1", ret: [P.Iterator, E]};
      }, this.$receiver, "ListIterable");
    }, "iterator"],
    forEach$1: [function(_, action) {
      var $length, i;
      $length = this.get$length(0);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        action.call$1(this.elementAt$1(0, i));
        if ($length !== this.get$length(0))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__void__E0", void: true, args: [{func: "void__E0", void: true, args: [E]}]};
      }, this.$receiver, "ListIterable");
    }, 1174, "forEach"],
    get$isEmpty: [function(_) {
      return J.$eq(this.get$length(0), 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$first: [function(_) {
      if (J.$eq(this.get$length(0), 0))
        throw H.wrapException(new P.StateError("No elements"));
      return this.elementAt$1(0, 0);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_1", ret: E};
      }, this.$receiver, "ListIterable");
    }, "first"],
    get$last: [function(_) {
      if (J.$eq(this.get$length(0), 0))
        throw H.wrapException(P.StateError$("No elements"));
      return this.elementAt$1(0, J.$sub$n(this.get$length(0), 1));
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_1", ret: E};
      }, this.$receiver, "ListIterable");
    }, "last"],
    get$single: [function(_) {
      if (J.$eq(this.get$length(0), 0))
        throw H.wrapException(new P.StateError("No elements"));
      if (J.$gt$n(this.get$length(0), 1))
        throw H.wrapException(new P.StateError("Too many elements"));
      return this.elementAt$1(0, 0);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_1", ret: E};
      }, this.$receiver, "ListIterable");
    }, "single"],
    contains$1: [function(_, element) {
      var $length, i;
      $length = this.get$length(0);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        if (J.$eq(this.elementAt$1(0, i), element))
          return true;
        if ($length !== this.get$length(0))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      return false;
    }, "call$1" /* tearOffInfo */, "get$contains", 2, 0, 1047, 453, "contains"],
    every$1: [function(_, test) {
      var $length, i;
      $length = this.get$length(0);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        if (test.call$1(this.elementAt$1(0, i)) !== true)
          return false;
        if ($length !== this.get$length(0))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      return true;
    }, "call$1" /* tearOffInfo */, "get$every", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__bool__E0", ret: J.JSBool, args: [{func: "bool__E0", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "ListIterable");
    }, 428, "every"],
    any$1: [function(_, test) {
      var $length, i;
      $length = this.get$length(0);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        if (test.call$1(this.elementAt$1(0, i)) === true)
          return true;
        if ($length !== this.get$length(0))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      return false;
    }, "call$1" /* tearOffInfo */, "get$any", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__bool__E0", ret: J.JSBool, args: [{func: "bool__E0", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "ListIterable");
    }, 428, "any"],
    firstWhere$2$orElse: [function(_, test, orElse) {
      var $length, i, element;
      $length = this.get$length(0);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        element = this.elementAt$1(0, i);
        if (test.call$1(element) === true)
          return element;
        if ($length !== this.get$length(0))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      if (orElse != null)
        return orElse.call$0();
      throw H.wrapException(P.StateError$("No matching element"));
    }, function($receiver, test) {
      return this.firstWhere$2$orElse($receiver, test, null);
    }, "firstWhere$1", "call$2$orElse" /* tearOffInfo */, null /* tearOffInfo */, "get$firstWhere", 2, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__bool__E__Object_0", args: [{func: "bool__E0", ret: J.JSBool, args: [E]}], named: {orElse: {func: "Object_", ret: P.Object}}};
      }, this.$receiver, "ListIterable");
    }, 370, 428, 430, "firstWhere"],
    lastWhere$2$orElse: [function(_, test, orElse) {
      var $length, t1, i, t2, element;
      $length = this.get$length(0);
      for (t1 = J.getInterceptor$n($length), i = t1.$sub($length, 1); t2 = J.getInterceptor$n(i), t2.$ge(i, 0); i = t2.$sub(i, 1)) {
        element = this.elementAt$1(0, i);
        if (test.call$1(element) === true)
          return element;
        if (!t1.$eq($length, this.get$length(0)))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      if (orElse != null)
        return orElse.call$0();
      throw H.wrapException(new P.StateError("No matching element"));
    }, "call$2$orElse" /* tearOffInfo */, "get$lastWhere", 2, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__bool__E__Object_0", args: [{func: "bool__E0", ret: J.JSBool, args: [E]}], named: {orElse: {func: "Object_", ret: P.Object}}};
      }, this.$receiver, "ListIterable");
    }, 370, 428, 430, "lastWhere"],
    singleWhere$1: [function(_, test) {
      var $length, match, matchFound, i, element;
      $length = this.get$length(0);
      if (typeof $length !== "number")
        return H.iae($length);
      match = null;
      matchFound = false;
      i = 0;
      for (; i < $length; ++i) {
        element = this.elementAt$1(0, i);
        if (test.call$1(element) === true) {
          if (matchFound)
            throw H.wrapException(new P.StateError("More than one matching element"));
          match = element;
          matchFound = true;
        }
        if ($length !== this.get$length(0))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      if (matchFound)
        return match;
      throw H.wrapException(new P.StateError("No matching element"));
    }, "call$1" /* tearOffInfo */, "get$singleWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__bool__E0", ret: E, args: [{func: "bool__E0", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "ListIterable");
    }, 428, "singleWhere"],
    join$1: [function(_, separator) {
      var $length, t1, first, buffer, i, str;
      $length = this.get$length(0);
      if (J.get$isEmpty$as(separator) !== true) {
        t1 = J.getInterceptor($length);
        if (t1.$eq($length, 0))
          return "";
        first = H.S(this.elementAt$1(0, 0));
        if (!t1.$eq($length, this.get$length(0)))
          throw H.wrapException(P.ConcurrentModificationError$(this));
        buffer = P.StringBuffer$(first);
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = typeof separator === "string";
        i = 1;
        for (; i < $length; ++i) {
          str = t1 ? separator : H.S(separator);
          buffer._contents = buffer._contents + str;
          str = this.elementAt$1(0, i);
          str = typeof str === "string" ? str : H.S(str);
          buffer._contents = buffer._contents + str;
          if ($length !== this.get$length(0))
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
        return buffer._contents;
      } else {
        buffer = P.StringBuffer$("");
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          str = this.elementAt$1(0, i);
          str = typeof str === "string" ? str : H.S(str);
          buffer._contents = buffer._contents + str;
          if ($length !== this.get$length(0))
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
        return buffer._contents;
      }
    }, "call$1" /* tearOffInfo */, "get$join", 0, 2, 1049, 806, 1050, "join"],
    where$1: [function(_, test) {
      return P.IterableBase.prototype.where$1.call(this, this, test);
    }, "call$1" /* tearOffInfo */, "get$where", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E0", ret: [P.Iterable, E], args: [{func: "bool__E0", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "ListIterable");
    }, 428, "where"],
    map$1: [function(_, f) {
      return H.setRuntimeTypeInfo(new H.MappedListIterable(this, f), [null, null]);
    }, "call$1" /* tearOffInfo */, "get$map", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__dynamic__E0", ret: P.Iterable, args: [{func: "dynamic__E1", args: [E]}]};
      }, this.$receiver, "ListIterable");
    }, 412, "map"],
    reduce$1: [function(_, combine) {
      var value, i, t1;
      if (J.$eq(this.get$length(0), 0))
        throw H.wrapException(new P.StateError("No elements"));
      value = this.elementAt$1(0, 0);
      i = 1;
      while (true) {
        t1 = this.get$length(0);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        value = combine.call$2(value, this.elementAt$1(0, i));
        ++i;
      }
      return value;
    }, "call$1" /* tearOffInfo */, "get$reduce", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__E__dynamic_E", ret: E, args: [{func: "E__dynamic_E", ret: E, args: [null, E]}]};
      }, this.$receiver, "ListIterable");
    }, 424, "reduce"],
    fold$2: [function(_, initialValue, combine) {
      var $length, value, i;
      $length = this.get$length(0);
      if (typeof $length !== "number")
        return H.iae($length);
      value = initialValue;
      i = 0;
      for (; i < $length; ++i) {
        value = combine.call$2(value, this.elementAt$1(0, i));
        if ($length !== this.get$length(0))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      return value;
    }, "call$2" /* tearOffInfo */, "get$fold", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__dynamic_dynamic__dynamic_E0", args: [null, {func: "dynamic__dynamic_E0", args: [null, E]}]};
      }, this.$receiver, "ListIterable");
    }, 426, 424, "fold"],
    skip$1: [function(_, count) {
      return H.SubListIterable$(this, count, null, null);
    }, "call$1" /* tearOffInfo */, "get$skip", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int0", ret: [P.Iterable, E], args: [J.JSInt]};
      }, this.$receiver, "ListIterable");
    }, 450, "skip"],
    skipWhile$1: [function(_, test) {
      return P.IterableBase.prototype.skipWhile$1.call(this, this, test);
    }, "call$1" /* tearOffInfo */, "get$skipWhile", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E0", ret: [P.Iterable, E], args: [{func: "bool__E0", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "ListIterable");
    }, 428, "skipWhile"],
    take$1: [function(_, count) {
      return H.SubListIterable$(this, 0, count, null);
    }, "call$1" /* tearOffInfo */, "get$take", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int0", ret: [P.Iterable, E], args: [J.JSInt]};
      }, this.$receiver, "ListIterable");
    }, 450, "take"],
    takeWhile$1: [function(_, test) {
      return P.IterableBase.prototype.takeWhile$1.call(this, this, test);
    }, "call$1" /* tearOffInfo */, "get$takeWhile", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E0", ret: [P.Iterable, E], args: [{func: "bool__E0", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "ListIterable");
    }, 428, "takeWhile"],
    toList$1$growable: [function(_, growable) {
      var result, t1, i;
      if (growable === true) {
        result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgument(this, "ListIterable", 0)]);
        C.JSArray_methods.set$length(result, this.get$length(0));
      } else {
        t1 = this.get$length(0);
        if (typeof t1 !== "number")
          return H.iae(t1);
        t1 = Array(t1);
        t1.fixed$length = init;
        result = H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "ListIterable", 0)]);
      }
      i = 0;
      while (true) {
        t1 = this.get$length(0);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        t1 = this.elementAt$1(0, i);
        if (i >= result.length)
          return H.ioore(result, i);
        result[i] = t1;
        ++i;
      }
      return result;
    }, function($receiver) {
      return this.toList$1$growable($receiver, true);
    }, "toList$0", "call$1$growable" /* tearOffInfo */, null /* tearOffInfo */, "get$toList", 0, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "List___bool0", ret: [J.JSArray, E], named: {growable: J.JSBool}};
      }, this.$receiver, "ListIterable");
    }, 816, 817, "toList"],
    toSet$0: [function(_) {
      var result, i, t1;
      result = P.LinkedHashSet_LinkedHashSet(null, null, null, H.getRuntimeTypeArgument(this, "ListIterable", 0));
      i = 0;
      while (true) {
        t1 = this.get$length(0);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        result.add$1(0, this.elementAt$1(0, i));
        ++i;
      }
      return result;
    }, "call$0" /* tearOffInfo */, "get$toSet", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set_1", ret: [P.Set, E]};
      }, this.$receiver, "ListIterable");
    }, "toSet"],
    $asIterableBase: null,
    $asIterable: null,
    $isEfficientLength: true,
    "<>": [81]
  },
  "+ListIterable": [1175, 1176],
  SubListIterable: {
    "": "ListIterable;_iterable<-1177,_dev$_start<-1075,_endOrLength<-1075",
    get$_endIndex: [function() {
      var $length, t1;
      $length = J.get$length$as(this._iterable);
      t1 = this._endOrLength;
      if (t1 == null || J.$gt$n(t1, $length))
        return $length;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 823, "_endIndex"],
    get$_startIndex: [function() {
      var $length, t1;
      $length = J.get$length$as(this._iterable);
      t1 = this._dev$_start;
      if (J.$gt$n(t1, $length))
        return $length;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 823, "_startIndex"],
    get$length: [function(_) {
      var $length, t1, t2;
      $length = J.get$length$as(this._iterable);
      t1 = this._dev$_start;
      if (J.$ge$n(t1, $length))
        return 0;
      t2 = this._endOrLength;
      if (t2 == null || J.$ge$n(t2, $length))
        return J.$sub$n($length, t1);
      return J.$sub$n(t2, t1);
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    elementAt$1: [function(_, index) {
      var realIndex = J.$add$ns(this.get$_startIndex(), index);
      if (J.$lt$n(index, 0) || J.$ge$n(realIndex, this.get$_endIndex()))
        throw H.wrapException(P.RangeError$range(index, 0, this.get$length(0)));
      return J.elementAt$1$a(this._iterable, realIndex);
    }, "call$1" /* tearOffInfo */, "get$elementAt", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int4", ret: E, args: [J.JSInt]};
      }, this.$receiver, "SubListIterable");
    }, 321, "elementAt"],
    skip$1: [function(_, count) {
      if (J.$lt$n(count, 0))
        throw H.wrapException(P.RangeError$value(count));
      return H.SubListIterable$(this._iterable, J.$add$ns(this._dev$_start, count), this._endOrLength, null);
    }, "call$1" /* tearOffInfo */, "get$skip", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int1", ret: [P.Iterable, E], args: [J.JSInt]};
      }, this.$receiver, "SubListIterable");
    }, 450, "skip"],
    take$1: [function(_, count) {
      var t1, t2, newEnd;
      if (J.$lt$n(count, 0))
        throw H.wrapException(new P.RangeError("value " + H.S(count)));
      t1 = this._endOrLength;
      t2 = this._dev$_start;
      if (t1 == null)
        return H.SubListIterable$(this._iterable, t2, J.$add$ns(t2, count), null);
      else {
        newEnd = J.$add$ns(t2, count);
        if (J.$lt$n(t1, newEnd))
          return this;
        return H.SubListIterable$(this._iterable, t2, newEnd, null);
      }
    }, "call$1" /* tearOffInfo */, "get$take", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int1", ret: [P.Iterable, E], args: [J.JSInt]};
      }, this.$receiver, "SubListIterable");
    }, 450, "take"],
    SubListIterable$3: [function(_iterable, _start, _endOrLength, $E) {
      var t1, t2, t3;
      t1 = this._dev$_start;
      t2 = J.getInterceptor$n(t1);
      if (t2.$lt(t1, 0))
        throw H.wrapException(P.RangeError$value(t1));
      t3 = this._endOrLength;
      if (t3 != null) {
        if (J.$lt$n(t3, 0))
          throw H.wrapException(P.RangeError$value(t3));
        if (t2.$gt(t1, t3))
          throw H.wrapException(P.RangeError$range(t1, 0, t3));
      }
    }, null /* tearOffInfo */, null, 6, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__Iterable_int_int", args: [[P.Iterable, E], J.JSInt, J.JSInt]};
      }, this.$receiver, "SubListIterable");
    }, 414, 415, 416, ""],
    $asListIterable: null,
    $asIterable: null,
    "<>": [80],
    static: {SubListIterable$: [function(_iterable, _start, _endOrLength, $E) {
        var t1 = H.setRuntimeTypeInfo(new H.SubListIterable(_iterable, _start, _endOrLength), [$E]);
        t1.SubListIterable$3(_iterable, _start, _endOrLength, $E);
        return t1;
      }, null /* tearOffInfo */, null, 6, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "dynamic__Iterable_int_int", args: [[P.Iterable, E], J.JSInt, J.JSInt]};
        }, this.$receiver, "SubListIterable");
      }, 414, 415, 416, "new SubListIterable" /* new SubListIterable:3:0 */]}
  },
  "+SubListIterable": [1178],
  ListIterator: {
    "": "Object;_iterable<-1179,_length<-1075,_index@-1075,_current@-1180",
    get$current: [function() {
      return this._current;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_2", ret: E};
      }, this.$receiver, "ListIterator");
    }, "current"],
    moveNext$0: [function() {
      var t1, t2, $length;
      t1 = this._iterable;
      t2 = J.getInterceptor$as(t1);
      $length = t2.get$length(t1);
      if (!J.$eq(this._length, $length))
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      if (J.$ge$n(this._index, $length)) {
        this._current = null;
        return false;
      }
      this._current = t2.elementAt$1(t1, this._index);
      this._index = J.$add$ns(this._index, 1);
      return true;
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    "<>": [8]
  },
  "+ListIterator": [0, 1181],
  MappedIterable: {
    "": "IterableBase;_iterable<-1182,_f<-1183",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    get$iterator: [function(_) {
      var t1 = new H.MappedIterator(null, J.get$iterator$a(this._iterable), this._f);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "Iterator_2", ret: [P.Iterator, T]};
      }, this.$receiver, "MappedIterable");
    }, "iterator"],
    get$length: [function(_) {
      return J.get$length$as(this._iterable);
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$isEmpty: [function(_) {
      return J.get$isEmpty$as(this._iterable);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$first: [function(_) {
      return this._f$1(J.get$first$a(this._iterable));
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "T_1", ret: T};
      }, this.$receiver, "MappedIterable");
    }, "first"],
    get$last: [function(_) {
      return this._f$1(J.get$last$a(this._iterable));
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "T_1", ret: T};
      }, this.$receiver, "MappedIterable");
    }, "last"],
    get$single: [function(_) {
      return this._f$1(J.get$single$a(this._iterable));
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "T_1", ret: T};
      }, this.$receiver, "MappedIterable");
    }, "single"],
    elementAt$1: [function(_, index) {
      return this._f$1(J.elementAt$1$a(this._iterable, index));
    }, "call$1" /* tearOffInfo */, "get$elementAt", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "T__int0", ret: T, args: [J.JSInt]};
      }, this.$receiver, "MappedIterable");
    }, 321, "elementAt"],
    $asIterableBase: function($S, $T) {
      return [$T];
    },
    $asIterable: function($S, $T) {
      return [$T];
    },
    "<>": [44, 45],
    static: {MappedIterable_MappedIterable: [function(iterable, $function, $S, $T) {
        var t1 = J.getInterceptor(iterable);
        if (typeof iterable === "object" && iterable !== null && !!t1.$isEfficientLength)
          return H.setRuntimeTypeInfo(new H.EfficientLengthMappedIterable(iterable, $function), [$S, $T]);
        return H.setRuntimeTypeInfo(new H.MappedIterable(iterable, $function), [$S, $T]);
      }, "call$2" /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(S, T) {
          return {func: "MappedIterable__Iterable_T__S", ret: [H.MappedIterable, S, T], args: [P.Iterable, {func: "T__S", ret: T, args: [S]}]};
        }, this.$receiver, "MappedIterable");
      }, 417, 250, "new MappedIterable" /* new MappedIterable:2:0 */]}
  },
  "+MappedIterable": [1184],
  EfficientLengthMappedIterable: {
    "": "MappedIterable;_iterable-1182,_f-1183",
    $asMappedIterable: null,
    $asIterable: function($S, $T) {
      return [$T];
    },
    $isEfficientLength: true,
    "<>": [48, 49]
  },
  "+EfficientLengthMappedIterable": [1185, 1176],
  MappedIterator: {
    "": "Iterator;_current@-1186,_iterator<-1187,_f<-1188",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    moveNext$0: [function() {
      var t1 = this._iterator;
      if (t1.moveNext$0() === true) {
        this._current = this._f$1(t1.get$current());
        return true;
      }
      this._current = null;
      return false;
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    get$current: [function() {
      return this._current;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "T_3", ret: T};
      }, this.$receiver, "MappedIterator");
    }, "current"],
    $asIterator: function($S, $T) {
      return [$T];
    },
    "<>": [46, 47]
  },
  "+MappedIterator": [1189],
  MappedListIterable: {
    "": "ListIterable;_dev$_source<-1190,_f<-1191",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    get$length: [function(_) {
      return J.get$length$as(this._dev$_source);
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    elementAt$1: [function(_, index) {
      return this._f$1(J.elementAt$1$a(this._dev$_source, index));
    }, "call$1" /* tearOffInfo */, "get$elementAt", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "T__int1", ret: T, args: [J.JSInt]};
      }, this.$receiver, "MappedListIterable");
    }, 321, "elementAt"],
    $asListIterable: function($S, $T) {
      return [$T];
    },
    $asIterable: function($S, $T) {
      return [$T];
    },
    $isEfficientLength: true,
    "<>": [116, 117]
  },
  "+MappedListIterable": [1192, 1176],
  WhereIterable: {
    "": "IterableBase;_iterable<-1193,_f<-273",
    get$iterator: [function(_) {
      var t1 = new H.WhereIterator(J.get$iterator$a(this._iterable), this._f);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterator_3", ret: [P.Iterator, E]};
      }, this.$receiver, "WhereIterable");
    }, "iterator"],
    $asIterableBase: null,
    $asIterable: null,
    "<>": [237]
  },
  "+WhereIterable": [1194],
  WhereIterator: {
    "": "Iterator;_iterator<-1195,_f<-273",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    moveNext$0: [function() {
      for (var t1 = this._iterator; t1.moveNext$0() === true;)
        if (this._f$1(t1.get$current()) === true)
          return true;
      return false;
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    get$current: [function() {
      return this._iterator.get$current();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_3", ret: E};
      }, this.$receiver, "WhereIterator");
    }, "current"],
    $asIterator: null,
    "<>": [238]
  },
  "+WhereIterator": [1195],
  ExpandIterable: {
    "": "IterableBase;_iterable<-1196,_f<-1197",
    get$iterator: [function(_) {
      var t1 = new H.ExpandIterator(J.get$iterator$a(this._iterable), this._f, C.C_EmptyIterator, null);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "Iterator_4", ret: [P.Iterator, T]};
      }, this.$receiver, "ExpandIterable");
    }, "iterator"],
    $asIterableBase: function($S, $T) {
      return [$T];
    },
    $asIterable: function($S, $T) {
      return [$T];
    },
    "<>": [123, 124]
  },
  "+ExpandIterable": [1198],
  ExpandIterator: {
    "": "Object;_iterator<-1199,_f<-1197,_currentExpansion@-1200,_current@-1201",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    get$current: [function() {
      return this._current;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "T_4", ret: T};
      }, this.$receiver, "ExpandIterator");
    }, "current"],
    moveNext$0: [function() {
      var t1, t2;
      t1 = this._currentExpansion;
      if (t1 == null)
        return false;
      for (t2 = this._iterator; t1.moveNext$0() !== true;) {
        this._current = null;
        if (t2.moveNext$0() === true) {
          this._currentExpansion = null;
          t1 = J.get$iterator$a(this._f$1(t2.get$current()));
          this._currentExpansion = t1;
        } else
          return false;
      }
      this._current = this._currentExpansion.get$current();
      return true;
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    "<>": [125, 126]
  },
  "+ExpandIterator": [0, 1200],
  TakeIterable: {
    "": "IterableBase;_iterable<-1202,_takeCount<-1075",
    get$iterator: [function(_) {
      var t1 = new H.TakeIterator(J.get$iterator$a(this._iterable), this._takeCount);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterator_5", ret: [P.Iterator, E]};
      }, this.$receiver, "TakeIterable");
    }, "iterator"],
    $asIterableBase: null,
    $asIterable: null,
    "<>": [234],
    static: {TakeIterable_TakeIterable: [function(iterable, takeCount, $E) {
        var t1;
        if (typeof takeCount !== "number" || Math.floor(takeCount) !== takeCount || takeCount < 0)
          throw H.wrapException(new P.ArgumentError(takeCount));
        t1 = J.getInterceptor(iterable);
        if (typeof iterable === "object" && iterable !== null && !!t1.$isEfficientLength)
          return H.setRuntimeTypeInfo(new H.EfficientLengthTakeIterable(iterable, takeCount), [$E]);
        return H.setRuntimeTypeInfo(new H.TakeIterable(iterable, takeCount), [$E]);
      }, "call$2" /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "TakeIterable__Iterable_int", ret: [H.TakeIterable, E], args: [[P.Iterable, E], J.JSInt]};
        }, this.$receiver, "TakeIterable");
      }, 417, 418, "new TakeIterable" /* new TakeIterable:2:0 */]}
  },
  "+TakeIterable": [1203],
  EfficientLengthTakeIterable: {
    "": "TakeIterable;_iterable-1202,_takeCount-1075",
    get$length: [function(_) {
      var iterableLength, t1;
      iterableLength = J.get$length$as(this._iterable);
      t1 = this._takeCount;
      if (J.$gt$n(iterableLength, t1))
        return t1;
      return iterableLength;
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    $asTakeIterable: null,
    $asIterable: null,
    $isEfficientLength: true,
    "<>": [236]
  },
  "+EfficientLengthTakeIterable": [1204, 1176],
  TakeIterator: {
    "": "Iterator;_iterator<-1205,_dev$_remaining@-1075",
    moveNext$0: [function() {
      var t1 = J.$sub$n(this._dev$_remaining, 1);
      this._dev$_remaining = t1;
      if (J.$ge$n(t1, 0))
        return this._iterator.moveNext$0();
      this._dev$_remaining = -1;
      return false;
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    get$current: [function() {
      if (J.$lt$n(this._dev$_remaining, 0))
        return;
      return this._iterator.get$current();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_4", ret: E};
      }, this.$receiver, "TakeIterator");
    }, "current"],
    $asIterator: null,
    "<>": [235]
  },
  "+TakeIterator": [1205],
  TakeWhileIterable: {
    "": "IterableBase;_iterable<-1206,_f<-273",
    get$iterator: [function(_) {
      var t1 = new H.TakeWhileIterator(J.get$iterator$a(this._iterable), this._f, false);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterator_6", ret: [P.Iterator, E]};
      }, this.$receiver, "TakeWhileIterable");
    }, "iterator"],
    $asIterableBase: null,
    $asIterable: null,
    "<>": [232]
  },
  "+TakeWhileIterable": [1207],
  TakeWhileIterator: {
    "": "Iterator;_iterator<-1208,_f<-273,_isFinished@-1043",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    moveNext$0: [function() {
      if (this._isFinished === true)
        return false;
      var t1 = this._iterator;
      if (t1.moveNext$0() !== true || this._f$1(t1.get$current()) !== true) {
        this._isFinished = true;
        return false;
      }
      return true;
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    get$current: [function() {
      if (this._isFinished === true)
        return;
      return this._iterator.get$current();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_5", ret: E};
      }, this.$receiver, "TakeWhileIterator");
    }, "current"],
    $asIterator: null,
    "<>": [233]
  },
  "+TakeWhileIterator": [1208],
  SkipIterable: {
    "": "IterableBase;_iterable<-1209,_skipCount<-1075",
    skip$1: [function(_, n) {
      if (typeof n !== "number" || Math.floor(n) !== n || n < 0)
        throw H.wrapException(P.RangeError$value(n));
      return H.SkipIterable_SkipIterable(this._iterable, J.$add$ns(this._skipCount, n), H.getTypeArgumentByIndex(this, 0));
    }, "call$1" /* tearOffInfo */, "get$skip", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int2", ret: [P.Iterable, E], args: [J.JSInt]};
      }, this.$receiver, "SkipIterable");
    }, 1051, "skip"],
    get$iterator: [function(_) {
      var t1 = new H.SkipIterator(J.get$iterator$a(this._iterable), this._skipCount);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterator_7", ret: [P.Iterator, E]};
      }, this.$receiver, "SkipIterable");
    }, "iterator"],
    SkipIterable$_$2: [function(_iterable, _skipCount, $E) {
      var t1 = this._skipCount;
      if (typeof t1 !== "number" || Math.floor(t1) !== t1 || J.$lt$n(t1, 0))
        throw H.wrapException(P.RangeError$(t1));
    }, null /* tearOffInfo */, null, 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__Iterable_int", args: [[P.Iterable, E], J.JSInt]};
      }, this.$receiver, "SkipIterable");
    }, 414, 420, "_"],
    $asIterableBase: null,
    $asIterable: null,
    "<>": [82],
    static: {SkipIterable_SkipIterable: [function(iterable, skipCount, $E) {
        var t1 = J.getInterceptor(iterable);
        if (typeof iterable === "object" && iterable !== null && !!t1.$isEfficientLength) {
          t1 = H.setRuntimeTypeInfo(new H.EfficientLengthSkipIterable(iterable, skipCount), [$E]);
          t1.SkipIterable$_$2(iterable, skipCount, $E);
          return t1;
        }
        return H.SkipIterable$_(iterable, skipCount, $E);
      }, "call$2" /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "SkipIterable__Iterable_int", ret: [H.SkipIterable, E], args: [[P.Iterable, E], J.JSInt]};
        }, this.$receiver, "SkipIterable");
      }, 417, 419, "new SkipIterable" /* new SkipIterable:2:0 */], SkipIterable$_: [function(_iterable, _skipCount, $E) {
        var t1 = H.setRuntimeTypeInfo(new H.SkipIterable(_iterable, _skipCount), [$E]);
        t1.SkipIterable$_$2(_iterable, _skipCount, $E);
        return t1;
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "dynamic__Iterable_int", args: [[P.Iterable, E], J.JSInt]};
        }, this.$receiver, "SkipIterable");
      }, 414, 420, "new SkipIterable$_" /* new SkipIterable$_:2:0 */]}
  },
  "+SkipIterable": [1210],
  EfficientLengthSkipIterable: {
    "": "SkipIterable;_iterable-1209,_skipCount-1075",
    get$length: [function(_) {
      var $length = J.$sub$n(J.get$length$as(this._iterable), this._skipCount);
      if (J.$ge$n($length, 0))
        return $length;
      return 0;
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    $asSkipIterable: null,
    $asIterable: null,
    $isEfficientLength: true,
    "<>": [84]
  },
  "+EfficientLengthSkipIterable": [1211, 1176],
  SkipIterator: {
    "": "Iterator;_iterator<-1212,_skipCount@-1075",
    moveNext$0: [function() {
      var t1, i, t2;
      t1 = this._iterator;
      i = 0;
      while (true) {
        t2 = this._skipCount;
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (!(i < t2))
          break;
        t1.moveNext$0();
        ++i;
      }
      this._skipCount = 0;
      return t1.moveNext$0();
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    get$current: [function() {
      return this._iterator.get$current();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_6", ret: E};
      }, this.$receiver, "SkipIterator");
    }, "current"],
    $asIterator: null,
    "<>": [83]
  },
  "+SkipIterator": [1212],
  SkipWhileIterable: {
    "": "IterableBase;_iterable<-1213,_f<-273",
    get$iterator: [function(_) {
      var t1 = new H.SkipWhileIterator(J.get$iterator$a(this._iterable), this._f, false);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterator_8", ret: [P.Iterator, E]};
      }, this.$receiver, "SkipWhileIterable");
    }, "iterator"],
    $asIterableBase: null,
    $asIterable: null,
    "<>": [230]
  },
  "+SkipWhileIterable": [1214],
  SkipWhileIterator: {
    "": "Iterator;_iterator<-1215,_f<-273,_hasSkipped@-1043",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    moveNext$0: [function() {
      if (this._hasSkipped !== true) {
        this._hasSkipped = true;
        for (var t1 = this._iterator; t1.moveNext$0() === true;)
          if (this._f$1(t1.get$current()) !== true)
            return true;
      }
      return this._iterator.moveNext$0();
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    get$current: [function() {
      return this._iterator.get$current();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_7", ret: E};
      }, this.$receiver, "SkipWhileIterator");
    }, "current"],
    $asIterator: null,
    "<>": [231]
  },
  "+SkipWhileIterator": [1215],
  EmptyIterator: {
    "": "Object;",
    moveNext$0: [function() {
      return false;
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    get$current: [function() {
      return;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_8", ret: E};
      }, this.$receiver, "EmptyIterator");
    }, "current"],
    "<>": [127]
  },
  "+EmptyIterator": [0, 1216],
  UnmodifiableListMixin: {
    "": "Object;",
    $indexSet: [function(_, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
    }, "call$2" /* tearOffInfo */, "get$[]=", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_E0", void: true, args: [J.JSInt, E]};
      }, this.$receiver, "UnmodifiableListMixin");
    }, 321, 280, "[]="],
    set$length: [function(_, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot change the length of an unmodifiable list"));
    }, null /* tearOffInfo */, null, 3, 0, 1055, 1056, "length"],
    setAll$2: [function(_, at, iterable) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
    }, "call$2" /* tearOffInfo */, "get$setAll", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_Iterable0", void: true, args: [J.JSInt, [P.Iterable, E]]};
      }, this.$receiver, "UnmodifiableListMixin");
    }, 1217, 417, "setAll"],
    add$1: [function(_, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to an unmodifiable list"));
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E1", void: true, args: [E]};
      }, this.$receiver, "UnmodifiableListMixin");
    }, 280, "add"],
    insert$2: [function(_, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to an unmodifiable list"));
    }, "call$2" /* tearOffInfo */, "get$insert", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int_E", ret: E, args: [J.JSInt, E]};
      }, this.$receiver, "UnmodifiableListMixin");
    }, 321, 280, "insert"],
    insertAll$2: [function(_, at, iterable) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to an unmodifiable list"));
    }, "call$2" /* tearOffInfo */, "get$insertAll", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_Iterable0", void: true, args: [J.JSInt, [P.Iterable, E]]};
      }, this.$receiver, "UnmodifiableListMixin");
    }, 1217, 417, "insertAll"],
    addAll$1: [function(_, iterable) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to an unmodifiable list"));
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__Iterable0", void: true, args: [[P.Iterable, E]]};
      }, this.$receiver, "UnmodifiableListMixin");
    }, 417, "addAll"],
    remove$1: [function(_, element) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from an unmodifiable list"));
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, 1047, 453, "remove"],
    removeWhere$1: [function(_, test) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from an unmodifiable list"));
    }, "call$1" /* tearOffInfo */, "get$removeWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E0", void: true, args: [{func: "bool__E1", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "UnmodifiableListMixin");
    }, 428, "removeWhere"],
    retainWhere$1: [function(_, test) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from an unmodifiable list"));
    }, "call$1" /* tearOffInfo */, "get$retainWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E0", void: true, args: [{func: "bool__E1", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "UnmodifiableListMixin");
    }, 428, "retainWhere"],
    sort$1: [function(_, compare) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
    }, "call$1" /* tearOffInfo */, "get$sort", 0, 2, function() {
      return H.computeSignature(function(E) {
        return {func: "void___Comparator", void: true, opt: [{func: "int__E_E1", ret: J.JSInt, args: [E, E]}]};
      }, this.$receiver, "UnmodifiableListMixin");
    }, 370, 459, "sort"],
    shuffle$1: [function(_, random) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
    }, "call$1" /* tearOffInfo */, "get$shuffle", 0, 2, 1053, 370, 437, "shuffle"],
    clear$0: [function(_) {
      throw H.wrapException(P.UnsupportedError$("Cannot clear an unmodifiable list"));
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    removeAt$1: [function(_, index) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from an unmodifiable list"));
    }, "call$1" /* tearOffInfo */, "get$removeAt", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int5", ret: E, args: [J.JSInt]};
      }, this.$receiver, "UnmodifiableListMixin");
    }, 321, "removeAt"],
    removeLast$0: [function(_) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from an unmodifiable list"));
    }, "call$0" /* tearOffInfo */, "get$removeLast", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_9", ret: E};
      }, this.$receiver, "UnmodifiableListMixin");
    }, "removeLast"],
    setRange$4: [function(_, start, end, iterable, skipCount) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
    }, function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    }, "setRange$3", "call$4" /* tearOffInfo */, null /* tearOffInfo */, "get$setRange", 6, 2, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_int_Iterable__int0", void: true, args: [J.JSInt, J.JSInt, [P.Iterable, E]], opt: [J.JSInt]};
      }, this.$receiver, "UnmodifiableListMixin");
    }, 778, 439, 440, 417, 419, "setRange"],
    removeRange$2: [function(_, start, end) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from an unmodifiable list"));
    }, "call$2" /* tearOffInfo */, "get$removeRange", 4, 0, 1052, 439, 440, "removeRange"],
    replaceRange$3: [function(_, start, end, iterable) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from an unmodifiable list"));
    }, "call$3" /* tearOffInfo */, "get$replaceRange", 6, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_int_Iterable0", void: true, args: [J.JSInt, J.JSInt, [P.Iterable, E]]};
      }, this.$receiver, "UnmodifiableListMixin");
    }, 439, 440, 417, "replaceRange"],
    fillRange$3: [function(_, start, end, fillValue) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
    }, "call$3" /* tearOffInfo */, "get$fillRange", 4, 2, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_int__E0", void: true, args: [J.JSInt, J.JSInt], opt: [E]};
      }, this.$receiver, "UnmodifiableListMixin");
    }, 370, 439, 440, 443, "fillRange"],
    $isList: true,
    $isEfficientLength: true,
    $isIterable: true,
    "<>": [97]
  },
  "+UnmodifiableListMixin": [0, 1218],
  UnmodifiableListBase: {
    "": "ListBase+UnmodifiableListMixin;",
    $asListBase: null,
    $asList: null,
    $asIterable: null,
    $isList: true,
    $isEfficientLength: true,
    $isIterable: true,
    "<>": [95]
  },
  "+UnmodifiableListBase": [1219, 1220],
  _ListIndicesIterable: {
    "": "ListIterable;_backedList@-1129",
    get$length: [function(_) {
      return J.get$length$as(this._backedList);
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    elementAt$1: [function(_, index) {
      var t1 = J.getInterceptor$n(index);
      if (t1.$lt(index, 0) || t1.$ge(index, J.get$length$as(this._backedList)))
        throw H.wrapException(P.RangeError$range(index, 0, J.get$length$as(this._backedList)));
      return index;
    }, "call$1" /* tearOffInfo */, "get$elementAt", 2, 0, 244, 321, "elementAt"],
    $asListIterable: function() {
      return [J.JSInt];
    },
    $asIterable: function() {
      return [J.JSInt];
    },
    "<>": []
  },
  "+_ListIndicesIterable": [1221],
  ListMapView: {
    "": "Object;_dev$_values@-1222",
    $index: [function(_, key) {
      var t1;
      if (typeof key === "number" && Math.floor(key) === key)
        if (key >= 0) {
          t1 = J.get$length$as(this._dev$_values);
          if (typeof t1 !== "number")
            return H.iae(t1);
          t1 = key < t1;
        } else
          t1 = false;
      else
        t1 = false;
      return t1 ? J.$index$as(this._dev$_values, key) : null;
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int6", ret: E, args: [J.JSInt]};
      }, this.$receiver, "ListMapView");
    }, 312, "[]"],
    get$length: [function(_) {
      return J.get$length$as(this._dev$_values);
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$values: [function() {
      return H.SubListIterable$(this._dev$_values, 0, null, H.getTypeArgumentByIndex(this, 0));
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable_0", ret: [P.Iterable, E]};
      }, this.$receiver, "ListMapView");
    }, "values"],
    get$keys: [function() {
      return new H._ListIndicesIterable(this._dev$_values);
    }, null /* tearOffInfo */, null, 1, 0, 1223, "keys"],
    get$isEmpty: [function(_) {
      return J.get$isEmpty$as(this._dev$_values);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$isNotEmpty: [function(_) {
      return J.get$isNotEmpty$as(this._dev$_values);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty"],
    containsValue$1: [function(value) {
      return J.contains$1$as(this._dev$_values, value);
    }, "call$1" /* tearOffInfo */, "get$containsValue", 2, 0, 1047, 280, "containsValue"],
    containsKey$1: [function(key) {
      var t1;
      if (typeof key === "number" && Math.floor(key) === key)
        if (key >= 0) {
          t1 = J.get$length$as(this._dev$_values);
          if (typeof t1 !== "number")
            return H.iae(t1);
          t1 = key < t1;
        } else
          t1 = false;
      else
        t1 = false;
      return t1;
    }, "call$1" /* tearOffInfo */, "get$containsKey", 2, 0, 246, 312, "containsKey"],
    forEach$1: [function(_, f) {
      var t1, t2, $length, i;
      t1 = this._dev$_values;
      t2 = J.getInterceptor$as(t1);
      $length = t2.get$length(t1);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        f.call$2(i, t2.$index(t1, i));
        if ($length !== t2.get$length(t1))
          throw H.wrapException(P.ConcurrentModificationError$(t1));
      }
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__void__int_E", void: true, args: [{func: "void__int_E1", void: true, args: [J.JSInt, E]}]};
      }, this.$receiver, "ListMapView");
    }, 412, "forEach"],
    $indexSet: [function(_, key, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable map"));
    }, "call$2" /* tearOffInfo */, "get$[]=", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_E1", void: true, args: [J.JSInt, E]};
      }, this.$receiver, "ListMapView");
    }, 312, 280, "[]="],
    putIfAbsent$2: [function(key, ifAbsent) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable map"));
    }, "call$2" /* tearOffInfo */, "get$putIfAbsent", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int_E_", ret: E, args: [J.JSInt, {func: "E_10", ret: E}]};
      }, this.$receiver, "ListMapView");
    }, 312, 663, "putIfAbsent"],
    remove$1: [function(_, key) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable map"));
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int6", ret: E, args: [J.JSInt]};
      }, this.$receiver, "ListMapView");
    }, 312, "remove"],
    clear$0: [function(_) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable map"));
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    addAll$1: [function(_, other) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable map"));
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__Map", void: true, args: [[P.Map, J.JSInt, E]]};
      }, this.$receiver, "ListMapView");
    }, 403, "addAll"],
    $isMap: true,
    $asMap: function($E) {
      return [J.JSInt, $E];
    },
    "<>": [239]
  },
  "+ListMapView": [0, 1224],
  ReversedListIterable: {
    "": "ListIterable;_dev$_source@-1225",
    get$length: [function(_) {
      return J.get$length$as(this._dev$_source);
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    elementAt$1: [function(_, index) {
      var t1, t2;
      t1 = this._dev$_source;
      t2 = J.getInterceptor$as(t1);
      return t2.elementAt$1(t1, J.$sub$n(J.$sub$n(t2.get$length(t1), 1), index));
    }, "call$1" /* tearOffInfo */, "get$elementAt", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int7", ret: E, args: [J.JSInt]};
      }, this.$receiver, "ReversedListIterable");
    }, 321, "elementAt"],
    $asListIterable: null,
    $asIterable: null,
    "<>": [108]
  },
  "+ReversedListIterable": [1226],
  Symbol: {
    "": "Object;_name<-1039",
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$isSymbol && J.$eq(this._name, other._name);
    }, "call$1" /* tearOffInfo */, "get$==", 2, 0, 273, 403, "=="],
    get$hashCode: [function(_) {
      var t1 = J.get$hashCode$(this._name);
      if (typeof t1 !== "number")
        return H.iae(t1);
      return 536870911 & 664597 * t1;
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    toString$0: [function(_) {
      return "Symbol(\"" + H.S(this._name) + "\")";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 319, "toString"],
    $isSymbol: true,
    $isSymbol0: true,
    static: {"": "Symbol_validationPattern<-1161", Symbol_validate: [function($name) {
        var t1 = J.getInterceptor$as($name);
        if (t1.get$isEmpty($name) === true)
          return $name;
        if (t1.startsWith$1($name, "_"))
          throw H.wrapException(new P.ArgumentError("\"" + H.S($name) + "\" is a private identifier"));
        t1 = $.get$Symbol_validationPattern()._nativeRegExp;
        if (typeof $name !== "string")
          H.throwExpression(new P.ArgumentError($name));
        if (!t1.test($name))
          throw H.wrapException(new P.ArgumentError("\"" + H.S($name) + "\" is not an identifier or an empty String"));
        return $name;
      }, "call$1" /* tearOffInfo */, "Symbol_validate$closure", 2, 0, 407, 346, "validate"]}
  },
  "+Symbol": [0, 1227],
  "": "printToZone@-1098"
}],
["dart._js_mirrors", "dart:_js_mirrors", , H, {
  "": "",
  n: [function(symbol) {
    return symbol.get$_name();
  }, "call$1" /* tearOffInfo */, "n$closure", 2, 0, 461, 462, "n"],
  s: [function($name) {
    if ($name == null)
      return;
    return new H.Symbol($name);
  }, "call$1" /* tearOffInfo */, "s$closure", 2, 0, 463, 346, "s"],
  setterSymbol: [function(symbol) {
    return H.s(H.S(symbol.get$_name()) + "=");
  }, "call$1" /* tearOffInfo */, "setterSymbol$closure", 2, 0, 464, 462, "setterSymbol"],
  reflect: [function(reflectee) {
    var t1 = J.getInterceptor(reflectee);
    if (typeof reflectee === "object" && reflectee !== null && !!t1.$isClosure)
      return new H.JsClosureMirror(reflectee);
    else
      return new H.JsInstanceMirror(reflectee);
  }, "call$1" /* tearOffInfo */, "reflect$closure", 2, 0, 465, 466, "reflect"],
  reflectClassByMangledName: [function(mangledName) {
    var unmangledName = $.get$mangledGlobalNames().$index(0, mangledName);
    if (J.$eq(mangledName, "dynamic"))
      return $.get$JsMirrorSystem__dynamicType();
    return H.reflectClassByName(H.s(unmangledName == null ? mangledName : unmangledName), mangledName);
  }, "call$1" /* tearOffInfo */, "reflectClassByMangledName$closure", 2, 0, 467, 468, "reflectClassByMangledName"],
  reflectClassByName: [function(symbol, mangledName) {
    var t1, mirror, typeArgIndex, t2, t3, constructorOrInterceptor, index, $constructor, descriptor, fields, fieldsMetadata, mixins, classMirror, typeVariables, typeArguments, i;
    t1 = $.classMirrors;
    if (t1 == null) {
      t1 = H.JsCache_allocate();
      $.classMirrors = t1;
    }
    mirror = t1[mangledName];
    if (mirror != null)
      return mirror;
    t1 = J.getInterceptor$as(mangledName);
    typeArgIndex = t1.indexOf$1(mangledName, "<");
    t2 = J.getInterceptor(typeArgIndex);
    if (!t2.$eq(typeArgIndex, -1)) {
      t3 = H.reflectClassByMangledName(t1.substring$2(mangledName, 0, typeArgIndex)).get$originalDeclaration();
      mirror = new H.JsTypeBoundClassMirror(t3, t1.substring$2(mangledName, t2.$add(typeArgIndex, 1), J.$sub$n(t1.get$length(mangledName), 1)), null, null, null, null, null, null, null, null, null, null, null, t3.get$simpleName());
      $.classMirrors[mangledName] = mirror;
      return mirror;
    }
    constructorOrInterceptor = H.Primitives_getConstructorOrInterceptor(mangledName);
    if (constructorOrInterceptor == null) {
      index = init.functionAliases[mangledName];
      if (index != null) {
        mirror = new H.JsTypedefMirror(mangledName, null, symbol);
        mirror.referent = new H.JsFunctionTypeMirror(init.metadata[index], null, null, null, mirror);
        $.classMirrors[mangledName] = mirror;
        return mirror;
      }
      throw H.wrapException(P.UnsupportedError$("Cannot find class for: " + H.S(H.n(symbol))));
    }
    t1 = J.getInterceptor(constructorOrInterceptor);
    $constructor = typeof constructorOrInterceptor === "object" && constructorOrInterceptor !== null && !!t1.$isInterceptor ? constructorOrInterceptor.constructor : constructorOrInterceptor;
    descriptor = $constructor["@"];
    if (descriptor == null) {
      fields = null;
      fieldsMetadata = null;
    } else {
      fields = descriptor[""];
      t1 = J.getInterceptor$as(fields);
      if (typeof fields === "object" && fields !== null && (fields.constructor === Array || !!t1.$isList)) {
        fieldsMetadata = t1.getRange$2(fields, 1, t1.get$length(fields)).toList$0(0);
        fields = t1.$index(fields, 0);
      } else
        fieldsMetadata = null;
      if (typeof fields !== "string")
        fields = "";
    }
    t1 = J.split$1$s(fields, ";");
    if (0 >= t1.length)
      return H.ioore(t1, 0);
    mixins = J.split$1$s(t1[0], "+");
    if (mixins.length > 1 && $.get$mangledGlobalNames().$index(0, mangledName) == null)
      mirror = H.reflectMixinApplication(mixins, mangledName);
    else {
      classMirror = new H.JsClassMirror(mangledName, constructorOrInterceptor, fields, fieldsMetadata, H.JsCache_allocate(), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, symbol);
      typeVariables = $constructor.prototype["<>"];
      if (typeVariables == null || typeVariables.length === 0)
        mirror = classMirror;
      else {
        for (t1 = typeVariables.length, typeArguments = "dynamic", i = 1; i < t1; ++i)
          typeArguments += ",dynamic";
        mirror = new H.JsTypeBoundClassMirror(classMirror, typeArguments, null, null, null, null, null, null, null, null, null, null, null, classMirror.simpleName);
      }
    }
    $.classMirrors[mangledName] = mirror;
    return mirror;
  }, "call$2" /* tearOffInfo */, "reflectClassByName$closure", 4, 0, 469, 462, 468, "reflectClassByName"],
  filterMethods: [function(methods) {
    var result, t1, method;
    result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
    for (t1 = J.get$iterator$a(methods); t1.moveNext$0() === true;) {
      method = t1.get$current();
      if (method.get$isConstructor() !== true && method.get$isGetter() !== true && method.get$isSetter() !== true)
        result.$indexSet(0, method.get$simpleName(), method);
    }
    return result;
  }, "call$1" /* tearOffInfo */, "filterMethods$closure", 2, 0, 470, 471, "filterMethods"],
  filterConstructors: [function(methods) {
    var result, t1, method;
    result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
    for (t1 = J.get$iterator$a(methods); t1.moveNext$0() === true;) {
      method = t1.get$current();
      if (method.get$isConstructor() === true)
        result.$indexSet(0, method.get$simpleName(), method);
    }
    return result;
  }, "call$1" /* tearOffInfo */, "filterConstructors$closure", 2, 0, 472, 471, "filterConstructors"],
  filterMembers: [function(methods, variables) {
    var result, t1, method, $name, t2, t3;
    result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
    result.addAll$1(0, variables);
    for (t1 = J.get$iterator$a(methods); t1.moveNext$0() === true;) {
      method = t1.get$current();
      if (method.get$isSetter() === true) {
        $name = method.get$simpleName().get$_name();
        t2 = J.getInterceptor$as($name);
        t2 = result.$index(0, H.s(t2.substring$2($name, 0, J.$sub$n(t2.get$length($name), 1))));
        t3 = J.getInterceptor(t2);
        if (typeof t2 === "object" && t2 !== null && !!t3.$isVariableMirror)
          continue;
      }
      if (method.get$isConstructor() === true)
        continue;
      result.putIfAbsent$2(method.get$simpleName(), new H.filterMembers_closure(method));
    }
    return result;
  }, "call$2" /* tearOffInfo */, "filterMembers$closure", 4, 0, 473, 471, 474, "filterMembers"],
  reflectMixinApplication: [function(mixinNames, mangledName) {
    var mixins, t1, it, superclass;
    mixins = [];
    for (t1 = J.get$iterator$a(mixinNames); t1.moveNext$0() === true;)
      mixins.push(H.reflectClassByMangledName(t1.get$current()));
    it = H.setRuntimeTypeInfo(new H.ListIterator(mixins, mixins.length, 0, null), [H.getTypeArgumentByIndex(mixins, 0)]);
    it.moveNext$0();
    superclass = it._current;
    for (; it.moveNext$0();)
      superclass = new H.JsMixinApplication(superclass, it._current, null, H.s(mangledName));
    return superclass;
  }, "call$2" /* tearOffInfo */, "reflectMixinApplication$closure", 4, 0, 475, 476, 468, "reflectMixinApplication"],
  findTypeVariableIndex: [function(typeVariables, $name) {
    var t1, i, t2;
    t1 = J.getInterceptor$as(typeVariables);
    i = 0;
    while (true) {
      t2 = t1.get$length(typeVariables);
      if (typeof t2 !== "number")
        return H.iae(t2);
      if (!(i < t2))
        break;
      if (J.$eq(t1.$index(typeVariables, i).get$simpleName(), H.s($name)))
        return i;
      ++i;
    }
    throw H.wrapException(P.ArgumentError$("Type variable not present in list."));
  }, "call$2" /* tearOffInfo */, "findTypeVariableIndex$closure", 4, 0, 484, 485, 346, "findTypeVariableIndex"],
  typeMirrorFromRuntimeTypeRepresentation: [function(owner, type) {
    var t1, context, t2, representation, typeVariable, typeVariables, typeArgument;
    t1 = {};
    t1.ownerClass_0 = null;
    for (context = owner; context != null;) {
      t2 = J.getInterceptor(context);
      if (typeof context === "object" && context !== null && !!t2.$isClassMirror) {
        t1.ownerClass_0 = context;
        break;
      }
      if (typeof context === "object" && context !== null && !!t2.$isTypedefMirror)
        break;
      context = context.get$owner();
    }
    if (type == null)
      return $.get$JsMirrorSystem__dynamicType();
    else {
      t2 = t1.ownerClass_0;
      if (t2 == null)
        representation = H.runtimeTypeToString(type, null);
      else if (t2.get$isOriginalDeclaration())
        if (typeof type === "number") {
          typeVariable = init.metadata[type];
          typeVariables = t1.ownerClass_0.get$typeVariables();
          return J.$index$as(typeVariables, H.findTypeVariableIndex(typeVariables, typeVariable.get$name()));
        } else
          representation = H.runtimeTypeToString(type, null);
      else {
        t1 = new H.typeMirrorFromRuntimeTypeRepresentation_getTypeArgument(t1);
        if (typeof type === "number") {
          typeArgument = t1.call$1(type);
          t2 = J.getInterceptor(typeArgument);
          if (typeof typeArgument === "object" && typeArgument !== null && !!t2.$isJsTypeVariableMirror)
            return typeArgument;
        }
        representation = H.runtimeTypeToString(type, new H.typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable(t1));
      }
    }
    if (representation != null)
      return H.reflectClassByMangledName(representation);
    return P.reflectClass(C.Type_EjN);
  }, "call$2" /* tearOffInfo */, "typeMirrorFromRuntimeTypeRepresentation$closure", 4, 0, 486, 480, 371, "typeMirrorFromRuntimeTypeRepresentation"],
  computeQualifiedName: [function(owner, simpleName) {
    if (owner == null)
      return simpleName;
    return H.s(H.S(owner.get$qualifiedName().get$_name()) + "." + H.S(simpleName.get$_name()));
  }, "call$2" /* tearOffInfo */, "computeQualifiedName$closure", 4, 0, 487, 480, 488, "computeQualifiedName"],
  extractMetadata: [function(victim) {
    var metadataFunction, t1, source, index;
    metadataFunction = victim["@"];
    if (metadataFunction != null)
      return metadataFunction();
    if (typeof victim != "function")
      return C.List_empty0;
    if ("$metadataIndex" in victim) {
      t1 = victim.$reflectionInfo.splice(victim.$metadataIndex);
      t1.fixed$length = init;
      return H.setRuntimeTypeInfo(new H.MappedListIterable(t1, new H.extractMetadata_closure()), [null, null]).toList$0(0);
    }
    source = Function.prototype.toString.call(victim);
    index = C.JSString_methods.lastIndexOf$1(source, new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("\"[0-9,]*\";?[ \n\r]*}", false, true, false), null, null));
    if (index === -1)
      return C.List_empty0;
    ++index;
    return H.setRuntimeTypeInfo(new H.MappedListIterable(H.setRuntimeTypeInfo(new H.MappedListIterable(C.JSString_methods.substring$2(source, index, C.JSString_methods.indexOf$2(source, "\"", index)).split(","), P.int_parse$closure()), [null, null]), new H.extractMetadata_closure0()), [null, null]).toList$0(0);
  }, "call$1" /* tearOffInfo */, "extractMetadata$closure", 2, 0, 489, 285, "extractMetadata"],
  parseCompactFieldSpecification: [function(owner, fieldSpecification, isStatic, result) {
    var t1, fields, fieldsMetadata, t2, t3, fieldNumber, field, fieldNumber0, metadata, mirror;
    t1 = J.getInterceptor$as(fieldSpecification);
    if (typeof fieldSpecification === "object" && fieldSpecification !== null && (fieldSpecification.constructor === Array || !!t1.$isList)) {
      fields = H.splitFields(t1.$index(fieldSpecification, 0), ",");
      fieldsMetadata = t1.sublist$1(fieldSpecification, 1);
    } else {
      fields = typeof fieldSpecification === "string" ? H.splitFields(fieldSpecification, ",") : [];
      fieldsMetadata = null;
    }
    for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(fields, fields.length, 0, null), [H.getTypeArgumentByIndex(fields, 0)]), t2 = fieldsMetadata != null, t3 = J.getInterceptor$a(result), fieldNumber = 0; t1.moveNext$0();) {
      field = t1._current;
      if (t2) {
        fieldNumber0 = fieldNumber + 1;
        if (fieldNumber >= fieldsMetadata.length)
          return H.ioore(fieldsMetadata, fieldNumber);
        metadata = fieldsMetadata[fieldNumber];
        fieldNumber = fieldNumber0;
      } else
        metadata = null;
      mirror = H.JsVariableMirror_JsVariableMirror$from(field, metadata, owner, isStatic);
      if (mirror != null)
        t3.add$1(result, mirror);
    }
  }, "call$4" /* tearOffInfo */, "parseCompactFieldSpecification$closure", 8, 0, 490, 480, 491, 342, 329, "parseCompactFieldSpecification"],
  splitFields: [function(string, pattern) {
    var t1 = J.getInterceptor$as(string);
    if (t1.get$isEmpty(string) === true)
      return H.setRuntimeTypeInfo([], [J.JSString]);
    return t1.split$1(string, pattern);
  }, "call$2" /* tearOffInfo */, "splitFields$closure", 4, 0, 492, 290, 394, "splitFields"],
  isOperatorName: [function($name) {
    switch ($name) {
      case "==":
      case "[]":
      case "*":
      case "/":
      case "%":
      case "~/":
      case "+":
      case "<<":
      case ">>":
      case ">=":
      case ">":
      case "<=":
      case "<":
      case "&":
      case "^":
      case "|":
      case "-":
      case "unary-":
      case "[]=":
      case "~":
        return true;
      default:
        return false;
    }
  }, "call$1" /* tearOffInfo */, "isOperatorName$closure", 2, 0, 493, 346, "isOperatorName"],
  isReflectiveDataInPrototype: [function(key) {
    var t1, firstChar;
    t1 = J.getInterceptor(key);
    if (t1.$eq(key, "") || t1.$eq(key, "$methodsWithOptionalArguments"))
      return true;
    firstChar = t1.$index(key, 0);
    t1 = J.getInterceptor(firstChar);
    return t1.$eq(firstChar, "*") || t1.$eq(firstChar, "+");
  }, "call$1" /* tearOffInfo */, "isReflectiveDataInPrototype$closure", 2, 0, 493, 312, "isReflectiveDataInPrototype"],
  JsMirrorSystem: {
    "": "Object;_cachedLibraries@-1228,isolate<-1229",
    get$dynamicType: [function() {
      return $.get$JsMirrorSystem__dynamicType();
    }, null /* tearOffInfo */, null, 1, 0, 1230, "dynamicType"],
    get$voidType: [function() {
      return $.get$JsMirrorSystem__voidType();
    }, null /* tearOffInfo */, null, 1, 0, 1230, "voidType"],
    get$libraries: [function() {
      var t1, result, t2, library;
      t1 = this._cachedLibraries;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      for (t1 = $.get$JsMirrorSystem_librariesByName().get$values(), t1 = H.setRuntimeTypeInfo(new H.MappedIterator(null, J.get$iterator$a(t1._iterable), t1._f), [H.getTypeArgumentByIndex(t1, 0), H.getTypeArgumentByIndex(t1, 1)]); t1.moveNext$0();)
        for (t2 = J.get$iterator$a(t1._current); t2.moveNext$0() === true;) {
          library = t2.get$current();
          result.$indexSet(0, library.get$uri(), library);
        }
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView0(result), [P.Uri, P.LibraryMirror]);
      this._cachedLibraries = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1231, "libraries"],
    findLibrary$1: [function(libraryName) {
      return J.get$single$a($.get$JsMirrorSystem_librariesByName().$index(0, libraryName.get$_name()));
    }, "call$1" /* tearOffInfo */, "get$findLibrary", 2, 0, 1232, 501, "findLibrary"],
    static: {"": "JsMirrorSystem__dynamicType<-1233,JsMirrorSystem__voidType<-1233,JsMirrorSystem_librariesByName<-1234", JsMirrorSystem_computeLibrariesByName: [function() {
        var result, jsLibraries, t1, data, t2, $name, t3, uri, classes, functions, metadataFunction, fields, isRoot, globalObject, metadata;
        result = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, [J.JSArray, P.LibraryMirror]);
        jsLibraries = init.libraries;
        if (jsLibraries == null)
          return result;
        for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(jsLibraries, jsLibraries.length, 0, null), [H.getTypeArgumentByIndex(jsLibraries, 0)]); t1.moveNext$0();) {
          data = t1._current;
          t2 = J.getInterceptor$as(data);
          $name = t2.$index(data, 0);
          t3 = t2.$index(data, 1);
          uri = P.Uri$_fromMatch($.get$Uri__splitRe().firstMatch$1(t3));
          classes = t2.$index(data, 2);
          functions = t2.$index(data, 3);
          metadataFunction = t2.$index(data, 4);
          fields = t2.$index(data, 5);
          isRoot = t2.$index(data, 6);
          globalObject = t2.$index(data, 7);
          metadata = metadataFunction == null ? C.List_empty0 : metadataFunction();
          J.add$1$a(result.putIfAbsent$2($name, new H.JsMirrorSystem_computeLibrariesByName_closure()), new H.JsLibraryMirror(uri, classes, functions, metadata, fields, isRoot, globalObject, null, null, null, null, null, null, null, null, null, null, H.s($name)));
        }
        return result;
      }, "call$0" /* tearOffInfo */, "JsMirrorSystem_computeLibrariesByName$closure", 0, 0, 460, "computeLibrariesByName"]}
  },
  "+JsMirrorSystem": [0, 1235],
  JsMirrorSystem_computeLibrariesByName_closure: {
    "": "Closure:319;",
    call$0: [function() {
      return H.setRuntimeTypeInfo([], [P.LibraryMirror]);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+JsMirrorSystem_computeLibrariesByName_closure": [1060],
  JsMirror: {
    "": "Object;",
    toString$0: [function(_) {
      return this.get$_prettyName();
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    _getField$1: [function(receiver) {
      throw H.wrapException(P.UnimplementedError$(null));
    }, "call$1" /* tearOffInfo */, "get$_getField", 2, 0, 1236, 302, "_getField"],
    _setField$2: [function(receiver, arg) {
      throw H.wrapException(P.UnimplementedError$(null));
    }, "call$2" /* tearOffInfo */, "get$_setField", 4, 0, 1237, 302, 627, "_setField"],
    _loadField$1: [function($name) {
      throw H.wrapException(P.UnimplementedError$(null));
    }, "call$1" /* tearOffInfo */, "get$_loadField", 2, 0, 289, 346, "_loadField"],
    _storeField$2: [function($name, arg) {
      throw H.wrapException(P.UnimplementedError$(null));
    }, "call$2" /* tearOffInfo */, "get$_storeField", 4, 0, 1238, 346, 627, "_storeField"],
    $isMirror: true
  },
  "+JsMirror": [0, 1239],
  JsIsolateMirror: {
    "": "JsMirror;_isolateContext<-370",
    get$_prettyName: [function() {
      return "Isolate";
    }, null /* tearOffInfo */, null, 1, 0, 253, "_prettyName"],
    get$debugName: [function() {
      var t1, id;
      t1 = this._isolateContext;
      id = t1 == null ? "X" : J.toString$0(t1.get$id());
      return H.S(this.get$rootLibrary().get$simpleName().get$_name()) + "-" + H.S(id);
    }, null /* tearOffInfo */, null, 1, 0, 253, "debugName"],
    get$isCurrent: [function() {
      return J.$eq(init.globalState.currentContext, this._isolateContext);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isCurrent"],
    get$rootLibrary: [function() {
      return $.get$currentJsMirrorSystem().get$libraries().get$values().firstWhere$1(0, new H.JsIsolateMirror_rootLibrary_closure());
    }, null /* tearOffInfo */, null, 1, 0, 1240, "rootLibrary"],
    $isMirror: true
  },
  "+JsIsolateMirror": [1241, 1229],
  JsIsolateMirror_rootLibrary_closure: {
    "": "Closure:1242;",
    call$1: [function(library) {
      return library.get$_isRoot();
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1242, 907, "call"]
  },
  "+JsIsolateMirror_rootLibrary_closure": [1060],
  JsDeclarationMirror: {
    "": "JsMirror;simpleName<-1227",
    get$qualifiedName: [function() {
      return H.computeQualifiedName(this.get$owner(), this.get$simpleName());
    }, null /* tearOffInfo */, null, 1, 0, 1139, "qualifiedName"],
    get$isPrivate: [function() {
      return J.startsWith$1$s(this.get$simpleName().get$_name(), "_");
    }, null /* tearOffInfo */, null, 1, 0, 849, "isPrivate"],
    get$isTopLevel: [function() {
      var t1, t2;
      if (this.get$owner() != null) {
        t1 = this.get$owner();
        t2 = J.getInterceptor(t1);
        t2 = typeof t1 === "object" && t1 !== null && !!t2.$isLibraryMirror;
        t1 = t2;
      } else
        t1 = false;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isTopLevel"],
    toString$0: [function(_) {
      return this.get$_prettyName() + " on '" + H.S(this.get$simpleName().get$_name()) + "'";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    get$_methods: [function() {
      throw H.wrapException(H.RuntimeError$("Should not call _methods"));
    }, null /* tearOffInfo */, null, 1, 0, 1243, "_methods"],
    _invoke$2: [function(positionalArguments, namedArguments) {
      throw H.wrapException(H.RuntimeError$("Should not call _invoke"));
    }, "call$2" /* tearOffInfo */, "get$_invoke", 4, 0, 1244, 315, 316, "_invoke"],
    get$location: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1245, "location"],
    $isDeclarationMirror: true,
    $isMirror: true
  },
  "+JsDeclarationMirror": [1241, 1246],
  JsTypeVariableMirror: {
    "": "JsTypeMirror;owner<-1246,_typeVariable<-1247,_metadataIndex<-1075,_cachedUpperBound@-1248,simpleName-1227",
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$isJsTypeVariableMirror && J.$eq(this.simpleName, other.simpleName) && J.$eq(this.owner, other.owner);
    }, "call$1" /* tearOffInfo */, "get$==", 2, 0, 273, 403, "=="],
    get$hashCode: [function(_) {
      var t1, t2, t3;
      t1 = J.get$hashCode$(C.Type_AGr._typeName);
      if (typeof t1 !== "number")
        return H.iae(t1);
      t2 = J.get$hashCode$(this.simpleName);
      if (typeof t2 !== "number")
        return H.iae(t2);
      t3 = J.get$hashCode$(this.owner);
      if (typeof t3 !== "number")
        return H.iae(t3);
      return (1073741823 & t1 ^ 17 * t2 ^ 19 * t3) >>> 0;
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    get$_prettyName: [function() {
      return "TypeVariableMirror";
    }, null /* tearOffInfo */, null, 1, 0, 253, "_prettyName"],
    get$isTopLevel: [function() {
      return false;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isTopLevel"],
    get$upperBound: [function() {
      var t1 = this._cachedUpperBound;
      if (t1 != null)
        return t1;
      t1 = H.typeMirrorFromRuntimeTypeRepresentation(this.owner, init.metadata[this._typeVariable.get$bound()]);
      this._cachedUpperBound = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1249, "upperBound"],
    _asRuntimeType$0: [function() {
      return this._metadataIndex;
    }, "call$0" /* tearOffInfo */, "get$_asRuntimeType", 0, 0, 319, "_asRuntimeType"],
    $isJsTypeVariableMirror: true,
    $isTypeVariableMirror: true,
    $isTypeMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true
  },
  "+JsTypeVariableMirror": [1233, 1250],
  JsTypeMirror: {
    "": "JsDeclarationMirror;simpleName-1227",
    get$_prettyName: [function() {
      return "TypeMirror";
    }, null /* tearOffInfo */, null, 1, 0, 253, "_prettyName"],
    get$owner: [function() {
      return;
    }, null /* tearOffInfo */, null, 1, 0, 1251, "owner"],
    get$isTopLevel: [function() {
      return true;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isTopLevel"],
    get$metadata: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1252, "metadata"],
    get$hasReflectedType: [function() {
      return false;
    }, null /* tearOffInfo */, null, 1, 0, 849, "hasReflectedType"],
    get$reflectedType: [function() {
      throw H.wrapException(P.UnsupportedError$("This type does not support reflectedType"));
    }, null /* tearOffInfo */, null, 1, 0, 1041, "reflectedType"],
    get$typeVariables: [function() {
      return C.List_empty;
    }, null /* tearOffInfo */, null, 1, 0, 1253, "typeVariables"],
    get$typeArguments: [function() {
      return C.List_empty1;
    }, null /* tearOffInfo */, null, 1, 0, 1254, "typeArguments"],
    get$isOriginalDeclaration: [function() {
      return true;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isOriginalDeclaration"],
    get$originalDeclaration: [function() {
      return this;
    }, null /* tearOffInfo */, null, 1, 0, 1249, "originalDeclaration"],
    _asRuntimeType$0: [function() {
      if (this.$eq(0, $.get$JsMirrorSystem__dynamicType()))
        return;
      if (this.$eq(0, $.get$JsMirrorSystem__voidType()))
        return;
      throw H.wrapException(H.RuntimeError$("Should not call _asRuntimeType"));
    }, "call$0" /* tearOffInfo */, "get$_asRuntimeType", 0, 0, 319, "_asRuntimeType"],
    $isTypeMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true
  },
  "+JsTypeMirror": [1255, 1248],
  JsLibraryMirror: {
    "": "JsDeclarationMirror_JsObjectMirror;uri<-1256,_classes<-1109,_functions<-1109,_metadata<-1129,_compactFieldSpecification<-1039,_isRoot<-1043,_globalObject<-370,_cachedFunctionMirrors@-1257,_cachedFields@-1258,_cachedClasses@-1259,_cachedFunctions@-1260,_cachedGetters@-1260,_cachedSetters@-1260,_cachedVariables@-1261,_cachedMembers@-1262,_cachedDeclarations@-1263,_cachedMetadata@-1264,simpleName-1227",
    get$_prettyName: [function() {
      return "LibraryMirror";
    }, null /* tearOffInfo */, null, 1, 0, 253, "_prettyName"],
    get$qualifiedName: [function() {
      return this.simpleName;
    }, null /* tearOffInfo */, null, 1, 0, 1139, "qualifiedName"],
    get$_methods: [function() {
      return this.get$_functionMirrors();
    }, null /* tearOffInfo */, null, 1, 0, 1243, "_methods"],
    get$__classes: [function() {
      var t1, result, cls, t2;
      t1 = this._cachedClasses;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      for (t1 = J.get$iterator$a(this._classes); t1.moveNext$0() === true;) {
        cls = H.reflectClassByMangledName(t1.get$current());
        t2 = J.getInterceptor(cls);
        if (typeof cls === "object" && cls !== null && !!t2.$isClassMirror) {
          cls = cls.get$originalDeclaration();
          t2 = J.getInterceptor(cls);
          if (typeof cls === "object" && cls !== null && !!t2.$isJsClassMirror) {
            result.$indexSet(0, cls.simpleName, cls);
            cls._owner = this;
          }
        }
      }
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView0(result), [P.Symbol0, P.ClassMirror]);
      this._cachedClasses = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1265, "__classes"],
    setField$2: [function(fieldName, arg) {
      var $name, mirror;
      $name = fieldName.get$_name();
      if (J.endsWith$1$s($name, "="))
        throw H.wrapException(new P.ArgumentError(""));
      mirror = J.$index$as(this.get$__functions(), H.s(H.S($name) + "="));
      if (mirror == null)
        mirror = J.$index$as(this.get$__variables(), fieldName);
      if (mirror == null)
        throw H.wrapException(P.NoSuchMethodError$(this, H.setterSymbol(fieldName), [arg], null, null));
      mirror._setField$2(this, arg);
      return H.reflect(arg);
    }, "call$2" /* tearOffInfo */, "get$setField", 4, 0, 1266, 1267, 627, "setField"],
    getField$1: [function(fieldName) {
      var mirror = J.$index$as(this.get$__members(), fieldName);
      if (mirror == null)
        throw H.wrapException(P.NoSuchMethodError$(this, fieldName, [], null, null));
      return H.reflect(mirror._getField$1(this));
    }, "call$1" /* tearOffInfo */, "get$getField", 2, 0, 1268, 1267, "getField"],
    invoke$3: [function(memberName, positionalArguments, namedArguments) {
      var mirror, t1;
      if (namedArguments != null && J.get$isEmpty$as(namedArguments) !== true)
        throw H.wrapException(P.UnsupportedError$("Named arguments are not implemented."));
      mirror = J.$index$as(this.get$__members(), memberName);
      if (mirror == null)
        throw H.wrapException(P.NoSuchMethodError$(this, memberName, positionalArguments, namedArguments, null));
      t1 = J.getInterceptor(mirror);
      if (typeof mirror === "object" && mirror !== null && !!t1.$isJsMethodMirror)
        if (!("$reflectable" in mirror._jsFunction))
          H.throwInvalidReflectionError(memberName.get$_name());
      return H.reflect(mirror._invoke$2(positionalArguments, namedArguments));
    }, "call$3" /* tearOffInfo */, "get$invoke", 4, 2, 1269, 370, 282, 315, 316, "invoke"],
    _loadField$1: [function($name) {
      return $[$name];
    }, "call$1" /* tearOffInfo */, "get$_loadField", 2, 0, 289, 346, "_loadField"],
    _storeField$2: [function($name, arg) {
      $[$name] = arg;
    }, "call$2" /* tearOffInfo */, "get$_storeField", 4, 0, 1238, 346, 627, "_storeField"],
    get$_functionMirrors: [function() {
      var t1, result, t2, t3, i, t4, $name, jsFunction, unmangledName, isConstructor, mirror;
      t1 = this._cachedFunctionMirrors;
      if (t1 != null)
        return t1;
      result = H.setRuntimeTypeInfo([], [H.JsMethodMirror]);
      t1 = this._functions;
      t2 = J.getInterceptor$as(t1);
      t3 = this._globalObject;
      i = 0;
      while (true) {
        t4 = t2.get$length(t1);
        if (typeof t4 !== "number")
          return H.iae(t4);
        if (!(i < t4))
          break;
        c$0: {
          $name = t2.$index(t1, i);
          jsFunction = t3[$name];
          unmangledName = $.get$mangledGlobalNames().$index(0, $name);
          if (unmangledName == null)
            break c$0;
          t4 = J.getInterceptor$s(unmangledName);
          isConstructor = t4.startsWith$1(unmangledName, "new ");
          if (isConstructor) {
            t4 = t4.substring$1(unmangledName, 4);
            unmangledName = H.stringReplaceAllUnchecked(t4, "$", ".");
          }
          mirror = H.JsMethodMirror_JsMethodMirror$fromUnmangledName(unmangledName, jsFunction, !isConstructor, isConstructor);
          result.push(mirror);
          mirror._owner = this;
        }
        ++i;
      }
      this._cachedFunctionMirrors = result;
      return result;
    }, null /* tearOffInfo */, null, 1, 0, 1243, "_functionMirrors"],
    get$_fields: [function() {
      var t1, result;
      t1 = this._cachedFields;
      if (t1 != null)
        return t1;
      result = H.setRuntimeTypeInfo([], [P.VariableMirror]);
      H.parseCompactFieldSpecification(this, this._compactFieldSpecification, true, result);
      this._cachedFields = result;
      return result;
    }, null /* tearOffInfo */, null, 1, 0, 1270, "_fields"],
    get$__functions: [function() {
      var t1, result, mirror;
      t1 = this._cachedFunctions;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      for (t1 = J.get$iterator$a(this.get$_functionMirrors()); t1.moveNext$0() === true;) {
        mirror = t1.get$current();
        if (mirror.get$isConstructor() !== true)
          result.$indexSet(0, mirror.get$simpleName(), mirror);
      }
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView0(result), [P.Symbol0, P.MethodMirror]);
      this._cachedFunctions = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1271, "__functions"],
    get$__getters: [function() {
      var t1 = this._cachedGetters;
      if (t1 != null)
        return t1;
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView0(P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [P.Symbol0, P.MethodMirror]);
      this._cachedGetters = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1271, "__getters"],
    get$__setters: [function() {
      var t1 = this._cachedSetters;
      if (t1 != null)
        return t1;
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView0(P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [P.Symbol0, P.MethodMirror]);
      this._cachedSetters = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1271, "__setters"],
    get$__variables: [function() {
      var t1, result, mirror;
      t1 = this._cachedVariables;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      for (t1 = J.get$iterator$a(this.get$_fields()); t1.moveNext$0() === true;) {
        mirror = t1.get$current();
        result.$indexSet(0, mirror.get$simpleName(), mirror);
      }
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView0(result), [P.Symbol0, P.VariableMirror]);
      this._cachedVariables = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1272, "__variables"],
    get$__members: [function() {
      var t1, result;
      t1 = this._cachedMembers;
      if (t1 != null)
        return t1;
      t1 = this.get$__classes();
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      result.addAll$1(0, t1);
      t1 = new H.JsLibraryMirror___members_addToResult(result);
      J.forEach$1$a(this.get$__functions(), t1);
      J.forEach$1$a(this.get$__getters(), t1);
      J.forEach$1$a(this.get$__setters(), t1);
      J.forEach$1$a(this.get$__variables(), t1);
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView0(result), [P.Symbol0, P.Mirror]);
      this._cachedMembers = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1273, "__members"],
    get$declarations: [function() {
      var t1, result;
      t1 = this._cachedDeclarations;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, P.DeclarationMirror);
      J.forEach$1$a(this.get$__members(), new H.JsLibraryMirror_declarations_addToResult(result));
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView0(result), [P.Symbol0, P.DeclarationMirror]);
      this._cachedDeclarations = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1274, "declarations"],
    get$metadata: [function() {
      var t1 = this._cachedMetadata;
      if (t1 != null)
        return t1;
      t1 = H.setRuntimeTypeInfo(new P.UnmodifiableListView(J.map$1$a(this._metadata, H.reflect$closure())), [P.InstanceMirror]);
      this._cachedMetadata = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1252, "metadata"],
    get$owner: [function() {
      return;
    }, null /* tearOffInfo */, null, 1, 0, 1251, "owner"],
    get$topLevelMembers: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1271, "topLevelMembers"],
    $index: [function(_, $name) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, 1275, 346, "[]"],
    $isLibraryMirror: true,
    $isMirror: true,
    $isDeclarationMirror: true
  },
  "+JsLibraryMirror": [1276, 1277],
  JsDeclarationMirror_JsObjectMirror: {
    "": "JsDeclarationMirror+JsObjectMirror;",
    $isMirror: true
  },
  JsLibraryMirror___members_addToResult: {
    "": "Closure:1279;result_0-1278",
    call$2: [function(key, value) {
      J.$indexSet$a(this.result_0, key, value);
    }, "call$2" /* tearOffInfo */, null, 4, 0, 1279, 312, 280, "call"]
  },
  "+JsLibraryMirror___members_addToResult": [1060],
  JsLibraryMirror_declarations_addToResult: {
    "": "Closure:1279;result_0-370",
    call$2: [function(key, value) {
      J.$indexSet$a(this.result_0, key, value);
    }, "call$2" /* tearOffInfo */, null, 4, 0, 1279, 312, 280, "call"]
  },
  "+JsLibraryMirror_declarations_addToResult": [1060],
  filterMembers_closure: {
    "": "Closure:319;method_0-1280",
    call$0: [function() {
      return this.method_0;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+filterMembers_closure": [1060],
  JsMixinApplication: {
    "": "JsTypeMirror_JsObjectMirror;superclass<-1281,mixin<-1281,_cachedSimpleName@-1227,simpleName-1227",
    get$_prettyName: [function() {
      return "ClassMirror";
    }, null /* tearOffInfo */, null, 1, 0, 253, "_prettyName"],
    get$simpleName: [function() {
      var t1, superName;
      t1 = this._cachedSimpleName;
      if (t1 != null)
        return t1;
      superName = this.superclass.get$qualifiedName().get$_name();
      t1 = this.mixin;
      t1 = J.contains$1$as(superName, " with ") === true ? H.s(H.S(superName) + ", " + H.S(t1.get$qualifiedName().get$_name())) : H.s(H.S(superName) + " with " + H.S(t1.get$qualifiedName().get$_name()));
      this._cachedSimpleName = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1139, "simpleName"],
    get$qualifiedName: [function() {
      return this.get$simpleName();
    }, null /* tearOffInfo */, null, 1, 0, 1139, "qualifiedName"],
    get$declarations: [function() {
      return this.mixin.get$declarations();
    }, null /* tearOffInfo */, null, 1, 0, 1274, "declarations"],
    _asRuntimeType$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, "get$_asRuntimeType", 0, 0, 319, "_asRuntimeType"],
    invoke$3: [function(memberName, positionalArguments, namedArguments) {
      throw H.wrapException(P.NoSuchMethodError$(this, memberName, positionalArguments, namedArguments, null));
    }, "call$3" /* tearOffInfo */, "get$invoke", 4, 2, 1269, 370, 282, 315, 316, "invoke"],
    getField$1: [function(fieldName) {
      throw H.wrapException(P.NoSuchMethodError$(this, fieldName, null, null, null));
    }, "call$1" /* tearOffInfo */, "get$getField", 2, 0, 1268, 1267, "getField"],
    setField$2: [function(fieldName, arg) {
      throw H.wrapException(P.NoSuchMethodError$(this, H.setterSymbol(fieldName), [arg], null, null));
    }, "call$2" /* tearOffInfo */, "get$setField", 4, 0, 1266, 1267, 627, "setField"],
    get$superinterfaces: [function() {
      return [this.mixin];
    }, null /* tearOffInfo */, null, 1, 0, 1282, "superinterfaces"],
    newInstance$3: [function(constructorName, positionalArguments, namedArguments) {
      throw H.wrapException(P.UnsupportedError$("Can't instantiate mixin application '" + H.S(this.get$qualifiedName().get$_name()) + "'"));
    }, "call$3" /* tearOffInfo */, "get$newInstance", 4, 2, 1269, 370, 1283, 315, 316, "newInstance"],
    get$isOriginalDeclaration: [function() {
      return true;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isOriginalDeclaration"],
    get$originalDeclaration: [function() {
      return this;
    }, null /* tearOffInfo */, null, 1, 0, 1284, "originalDeclaration"],
    get$typeVariables: [function() {
      throw H.wrapException(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1253, "typeVariables"],
    get$typeArguments: [function() {
      return C.List_empty1;
    }, null /* tearOffInfo */, null, 1, 0, 1254, "typeArguments"],
    get$instanceMembers: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1271, "instanceMembers"],
    get$staticMembers: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1271, "staticMembers"],
    $index: [function(_, $name) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, 1275, 346, "[]"],
    $isClassMirror: true,
    $isMirror: true,
    $isTypeMirror: true,
    $isDeclarationMirror: true
  },
  "+JsMixinApplication": [1285, 1281],
  JsTypeMirror_JsObjectMirror: {
    "": "JsTypeMirror+JsObjectMirror;",
    $isMirror: true
  },
  JsObjectMirror: {
    "": "Object;",
    $isMirror: true
  },
  "+JsObjectMirror": [0, 1286],
  JsInstanceMirror: {
    "": "JsObjectMirror;reflectee<-370",
    get$hasReflectee: [function() {
      return true;
    }, null /* tearOffInfo */, null, 1, 0, 849, "hasReflectee"],
    get$type: [function() {
      return H.reflectClassByMangledName(J.get$runtimeType$(this.reflectee)._typeName);
    }, null /* tearOffInfo */, null, 1, 0, 1284, "type"],
    invoke$3: [function(memberName, positionalArguments, namedArguments) {
      var $name, t1, jsFunction, info, t2, defaultArguments, t3, t4, i, t5;
      $name = memberName.get$_name();
      if (namedArguments != null && J.get$isEmpty$as(namedArguments) !== true) {
        t1 = this.reflectee;
        jsFunction = J.getInterceptor(t1)[$name + "*"];
        if (jsFunction == null)
          throw H.wrapException(H.UnimplementedNoSuchMethodError$("Invoking noSuchMethod with named arguments not implemented"));
        info = H.ReflectionInfo_ReflectionInfo(jsFunction);
        positionalArguments = P.List_List$from(positionalArguments, true, null);
        t2 = info.requiredParameterCount;
        if (!J.$eq(t2, positionalArguments.length))
          throw H.wrapException(H.UnimplementedNoSuchMethodError$("Invoking noSuchMethod with named arguments not implemented"));
        defaultArguments = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
        t3 = info.optionalParameterCount;
        if (typeof t3 !== "number")
          return H.iae(t3);
        t4 = info.data;
        i = 0;
        for (; i < t3; ++i) {
          if (typeof t2 !== "number")
            return H.iae(t2);
          t5 = i + t2;
          defaultArguments.$indexSet(0, init.metadata[t4[t5 + t3 + 3]], init.metadata[info.defaultValue$1(t5)]);
        }
        J.forEach$1$a(namedArguments, new H.JsInstanceMirror_invoke_closure(defaultArguments));
        C.JSArray_methods.addAll$1(positionalArguments, defaultArguments.get$values());
        return H.reflect(jsFunction.apply(t1, positionalArguments));
      }
      return this._invoke$4(memberName, 0, $name + ":" + J.get$length$as(positionalArguments) + ":0", positionalArguments);
    }, "call$3" /* tearOffInfo */, "get$invoke", 4, 2, 1269, 370, 282, 315, 316, "invoke"],
    _invoke$4: [function($name, type, reflectiveName, $arguments) {
      var cacheName, t1, cache, cacheEntry, mangledName, argumentNames, invocation;
      cacheName = $.Primitives_mirrorInvokeCacheName;
      t1 = this.reflectee;
      cache = t1.constructor[cacheName];
      if (cache == null) {
        cache = H.JsCache_allocate();
        t1.constructor[cacheName] = cache;
      }
      cacheEntry = cache[reflectiveName];
      if (cacheEntry == null) {
        mangledName = $.get$reflectiveNames().$index(0, reflectiveName);
        argumentNames = J.$eq(type, 0) ? H.SubListIterable$(J.split$1$s(reflectiveName, ":"), 3, null, null).toList$0(0) : C.List_empty0;
        invocation = new H.JSInvocationMirror($name, mangledName, type, $arguments, argumentNames, null);
        cacheEntry = invocation._getCachedInvocation$1(t1);
        cache[reflectiveName] = cacheEntry;
      } else
        invocation = null;
      if (cacheEntry.get$isNoSuchMethod())
        return H.reflect(cacheEntry.invokeOn$2(t1, invocation == null ? new H.JSInvocationMirror($name, $.get$reflectiveNames().$index(0, reflectiveName), type, $arguments, [], null) : invocation));
      else
        return H.reflect(cacheEntry.invokeOn$2(t1, $arguments));
    }, "call$4" /* tearOffInfo */, "get$_invoke", 8, 0, 1287, 346, 371, 1288, 377, "_invoke"],
    setField$2: [function(fieldName, arg) {
      var reflectiveName = H.S(fieldName.get$_name()) + "=";
      this._invoke$4(H.s(reflectiveName), 2, reflectiveName, [arg]);
      return H.reflect(arg);
    }, "call$2" /* tearOffInfo */, "get$setField", 4, 0, 1266, 1267, 627, "setField"],
    getField$1: [function(fieldName) {
      return this._invoke$4(fieldName, 1, fieldName.get$_name(), []);
    }, "call$1" /* tearOffInfo */, "get$getField", 2, 0, 1268, 1267, "getField"],
    delegate$1: [function(invocation) {
      return H.JSInvocationMirror_invokeFromMirror(invocation, this.reflectee);
    }, "call$1" /* tearOffInfo */, "get$delegate", 2, 0, 1040, 284, "delegate"],
    $eq: [function(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other === "object" && other !== null && !!t1.$isJsInstanceMirror) {
        t1 = this.reflectee;
        t2 = other.reflectee;
        t2 = t1 == null ? t2 == null : t1 === t2;
        t1 = t2;
      } else
        t1 = false;
      return t1;
    }, "call$1" /* tearOffInfo */, "get$==", 2, 0, 241, 403, "=="],
    get$hashCode: [function(_) {
      return J.$xor$n(H.objectHashCode(this.reflectee), 909522486);
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    toString$0: [function(_) {
      return "InstanceMirror on " + H.S(P.Error_safeToString(this.reflectee));
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $index: [function(_, $name) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, 1275, 346, "[]"],
    $isJsInstanceMirror: true,
    $isInstanceMirror: true,
    $isMirror: true
  },
  "+JsInstanceMirror": [1289, 1290],
  JsInstanceMirror_invoke_closure: {
    "": "Closure:1291;defaultArguments_0-370",
    call$2: [function(symbol, value) {
      var parameter, t1;
      parameter = symbol.get$_name();
      t1 = this.defaultArguments_0;
      if (t1.containsKey$1(parameter))
        J.$indexSet$a(t1, parameter, value);
      else
        throw H.wrapException(H.UnimplementedNoSuchMethodError$("Invoking noSuchMethod with named arguments not implemented"));
    }, "call$2" /* tearOffInfo */, null, 4, 0, 1291, 462, 280, "call"]
  },
  "+JsInstanceMirror_invoke_closure": [1060],
  JsTypeBoundClassMirror: {
    "": "JsDeclarationMirror;_class<-1292,_typeArguments@-1039,_cachedTypeArguments@-1293,_cachedDeclarations@-1263,_cachedMembers@-1263,_cachedConstructors@-1260,_cachedVariables@-1294,_cachedGetters@-1295,_cachedSetters@-1295,_cachedMethodsMap@-1295,_cachedMethods@-1257,_superclass@-1281,_cachedSuperinterfaces@-1296,simpleName-1227",
    get$_prettyName: [function() {
      return "ClassMirror";
    }, null /* tearOffInfo */, null, 1, 0, 253, "_prettyName"],
    get$_mangledName: [function() {
      for (var t1 = J.get$iterator$a(this.get$typeArguments()); t1.moveNext$0() === true;)
        if (!J.$eq(t1.get$current(), $.get$JsMirrorSystem__dynamicType()))
          return H.S(this._class.get$_mangledName()) + "<" + H.S(this._typeArguments) + ">";
      return this._class.get$_mangledName();
    }, null /* tearOffInfo */, null, 1, 0, 253, "_mangledName"],
    get$typeVariables: [function() {
      return this._class.get$typeVariables();
    }, null /* tearOffInfo */, null, 1, 0, 1253, "typeVariables"],
    get$typeArguments: [function() {
      var t1, result, t2, t3, level, currentTypeArgument, i, t4, character;
      t1 = this._cachedTypeArguments;
      if (t1 != null)
        return t1;
      result = [];
      t1 = new H.JsTypeBoundClassMirror_typeArguments_addTypeArgument(result);
      t2 = this._typeArguments;
      t3 = J.getInterceptor$as(t2);
      if (J.$eq(t3.indexOf$1(t2, "<"), -1))
        H.IterableMixinWorkaround_forEach(t3.split$1(t2, ","), new H.JsTypeBoundClassMirror_typeArguments_closure(t1));
      else {
        level = 0;
        currentTypeArgument = "";
        i = 0;
        while (true) {
          t4 = t3.get$length(t2);
          if (typeof t4 !== "number")
            return H.iae(t4);
          if (!(i < t4))
            break;
          c$0: {
            character = t3.$index(t2, i);
            t4 = J.getInterceptor(character);
            if (t4.$eq(character, " "))
              break c$0;
            else if (t4.$eq(character, "<")) {
              currentTypeArgument = C.JSString_methods.$add(currentTypeArgument, character);
              ++level;
            } else if (t4.$eq(character, ">")) {
              currentTypeArgument = C.JSString_methods.$add(currentTypeArgument, character);
              --level;
            } else if (t4.$eq(character, ","))
              if (level > 0)
                currentTypeArgument = C.JSString_methods.$add(currentTypeArgument, character);
              else {
                t1.call$1(currentTypeArgument);
                currentTypeArgument = "";
              }
            else
              currentTypeArgument = C.JSString_methods.$add(currentTypeArgument, character);
          }
          ++i;
        }
        t1.call$1(currentTypeArgument);
      }
      t1 = H.setRuntimeTypeInfo(new P.UnmodifiableListView(result), [null]);
      this._cachedTypeArguments = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1254, "typeArguments"],
    get$_methods: [function() {
      var t1 = this._cachedMethods;
      if (t1 != null)
        return t1;
      t1 = this._class._getMethodsWithOwner$1(this);
      this._cachedMethods = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1243, "_methods"],
    get$__constructors: [function() {
      var t1 = this._cachedConstructors;
      if (t1 != null)
        return t1;
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView0(H.filterConstructors(this.get$_methods())), [P.Symbol0, P.MethodMirror]);
      this._cachedConstructors = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1271, "__constructors"],
    get$__variables: [function() {
      var t1, result, mirror;
      t1 = this._cachedVariables;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      for (t1 = this._class._getFieldsWithOwner$1(this), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();) {
        mirror = t1._current;
        result.$indexSet(0, mirror.get$simpleName(), mirror);
      }
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView0(result), [P.Symbol0, P.VariableMirror]);
      this._cachedVariables = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1272, "__variables"],
    get$__members: [function() {
      var t1 = this._cachedMembers;
      if (t1 != null)
        return t1;
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView0(H.filterMembers(this.get$_methods(), this.get$__variables())), [P.Symbol0, P.DeclarationMirror]);
      this._cachedMembers = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1274, "__members"],
    get$declarations: [function() {
      var t1, result;
      t1 = this._cachedDeclarations;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, P.DeclarationMirror);
      result.addAll$1(0, this.get$__members());
      result.addAll$1(0, this.get$__constructors());
      J.forEach$1$a(this._class.get$typeVariables(), new H.JsTypeBoundClassMirror_declarations_closure(result));
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView0(result), [P.Symbol0, P.DeclarationMirror]);
      this._cachedDeclarations = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1274, "declarations"],
    setField$2: [function(fieldName, arg) {
      return this._class.setField$2(fieldName, arg);
    }, "call$2" /* tearOffInfo */, "get$setField", 4, 0, 1266, 1267, 627, "setField"],
    getField$1: [function(fieldName) {
      return this._class.getField$1(fieldName);
    }, "call$1" /* tearOffInfo */, "get$getField", 2, 0, 1268, 1267, "getField"],
    newInstance$3: [function(constructorName, positionalArguments, namedArguments) {
      return H.reflect(H.setRuntimeTypeInfo(this._class._getInvokedInstance$3(constructorName, positionalArguments, namedArguments), J.map$1$a(this.get$typeArguments(), new H.JsTypeBoundClassMirror_newInstance_closure()).toList$0(0)));
    }, "call$3" /* tearOffInfo */, "get$newInstance", 4, 2, 1269, 370, 1283, 315, 316, "newInstance"],
    _asRuntimeType$0: [function() {
      return C.JSArray_methods.addAll$1([this._class.get$_jsConstructor()], J.map$1$a(this.get$typeArguments(), new H.JsTypeBoundClassMirror__asRuntimeType_closure()));
    }, "call$0" /* tearOffInfo */, "get$_asRuntimeType", 0, 0, 319, "_asRuntimeType"],
    get$owner: [function() {
      return this._class.get$owner();
    }, null /* tearOffInfo */, null, 1, 0, 1297, "owner"],
    get$metadata: [function() {
      return this._class.get$metadata();
    }, null /* tearOffInfo */, null, 1, 0, 1252, "metadata"],
    get$superclass: [function() {
      var t1 = this._superclass;
      if (t1 != null)
        return t1;
      t1 = H.typeMirrorFromRuntimeTypeRepresentation(this, init.metadata[J.$index$as(init.typeInformation[this._class.get$_mangledName()], 0)]);
      this._superclass = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1284, "superclass"],
    invoke$3: [function(memberName, positionalArguments, namedArguments) {
      return this._class.invoke$3(memberName, positionalArguments, namedArguments);
    }, "call$3" /* tearOffInfo */, "get$invoke", 4, 2, 1269, 370, 282, 315, 316, "invoke"],
    get$isOriginalDeclaration: [function() {
      return false;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isOriginalDeclaration"],
    get$originalDeclaration: [function() {
      return this._class;
    }, null /* tearOffInfo */, null, 1, 0, 1284, "originalDeclaration"],
    get$superinterfaces: [function() {
      var t1 = this._cachedSuperinterfaces;
      if (t1 != null)
        return t1;
      t1 = this._class._getSuperinterfacesWithOwner$1(this);
      this._cachedSuperinterfaces = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1282, "superinterfaces"],
    get$isPrivate: [function() {
      return this._class.get$isPrivate();
    }, null /* tearOffInfo */, null, 1, 0, 849, "isPrivate"],
    get$isTopLevel: [function() {
      return this._class.get$isTopLevel();
    }, null /* tearOffInfo */, null, 1, 0, 849, "isTopLevel"],
    get$location: [function() {
      return this._class.get$location();
    }, null /* tearOffInfo */, null, 1, 0, 1245, "location"],
    get$qualifiedName: [function() {
      return this._class.get$qualifiedName();
    }, null /* tearOffInfo */, null, 1, 0, 1139, "qualifiedName"],
    get$hasReflectedType: [function() {
      return true;
    }, null /* tearOffInfo */, null, 1, 0, 849, "hasReflectedType"],
    get$reflectedType: [function() {
      return new H.TypeImpl(this.get$_mangledName(), null);
    }, null /* tearOffInfo */, null, 1, 0, 1041, "reflectedType"],
    get$simpleName: [function() {
      return this._class.get$simpleName();
    }, null /* tearOffInfo */, null, 1, 0, 1139, "simpleName"],
    get$instanceMembers: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1271, "instanceMembers"],
    get$staticMembers: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1271, "staticMembers"],
    get$mixin: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1284, "mixin"],
    $index: [function(_, $name) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, 1275, 346, "[]"],
    $isClassMirror: true,
    $isMirror: true,
    $isTypeMirror: true,
    $isDeclarationMirror: true
  },
  "+JsTypeBoundClassMirror": [1255, 1281],
  JsTypeBoundClassMirror_typeArguments_addTypeArgument: {
    "": "Closure:289;result_0-1129",
    call$1: [function(typeArgument) {
      var parsedIndex, t1, typeVariable;
      parsedIndex = H.Primitives_parseInt(typeArgument, null, new H.JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure());
      t1 = this.result_0;
      if (J.$eq(parsedIndex, -1))
        J.add$1$a(t1, H.reflectClassByMangledName(J.trim$0$s(typeArgument)));
      else {
        typeVariable = init.metadata[parsedIndex];
        J.add$1$a(t1, new H.JsTypeVariableMirror(P.reflectClass(typeVariable.get$owner()), typeVariable, parsedIndex, null, H.s(typeVariable.get$name())));
      }
    }, "call$1" /* tearOffInfo */, null, 2, 0, 289, 1298, "call"]
  },
  "+JsTypeBoundClassMirror_typeArguments_addTypeArgument": [1060],
  JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure: {
    "": "Closure:241;",
    call$1: [function(_) {
      return -1;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 820, "call"]
  },
  "+JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure": [1060],
  JsTypeBoundClassMirror_typeArguments_closure: {
    "": "Closure:241;addTypeArgument_1-289",
    call$1: [function(t) {
      return this.addTypeArgument_1.call$1(t);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 384, "call"]
  },
  "+JsTypeBoundClassMirror_typeArguments_closure": [1060],
  JsTypeBoundClassMirror_declarations_closure: {
    "": "Closure:241;result_0-1299",
    call$1: [function(tv) {
      J.$indexSet$a(this.result_0, tv.get$simpleName(), tv);
      return tv;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1300, "call"]
  },
  "+JsTypeBoundClassMirror_declarations_closure": [1060],
  JsTypeBoundClassMirror_newInstance_closure: {
    "": "Closure:241;",
    call$1: [function(t) {
      return t._asRuntimeType$0();
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 384, "call"]
  },
  "+JsTypeBoundClassMirror_newInstance_closure": [1060],
  JsTypeBoundClassMirror__asRuntimeType_closure: {
    "": "Closure:241;",
    call$1: [function(t) {
      return t._asRuntimeType$0();
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 384, "call"]
  },
  "+JsTypeBoundClassMirror__asRuntimeType_closure": [1060],
  JsClassMirror: {
    "": "JsTypeMirror_JsObjectMirror0;_mangledName<-1039,_jsConstructorOrInterceptor<-370,_fieldsDescriptor<-1039,_fieldsMetadata<-1129,_jsConstructorCache<-370,_metadata@-1129,_superclass@-1281,_cachedMethods@-1257,_cachedFields@-1258,_cachedConstructors@-1260,_cachedMethodsMap@-1260,_cachedGetters@-1260,_cachedSetters@-1260,_cachedVariables@-1261,_cachedMembers@-1262,_cachedDeclarations@-1263,_cachedMetadata@-1264,_cachedSuperinterfaces@-1301,_cachedTypeVariables@-1302,_owner@-1303,simpleName-1227",
    get$_prettyName: [function() {
      return "ClassMirror";
    }, null /* tearOffInfo */, null, 1, 0, 253, "_prettyName"],
    get$_jsConstructor: [function() {
      var t1, t2;
      t1 = this._jsConstructorOrInterceptor;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isInterceptor)
        return t1.constructor;
      else
        return t1;
    }, null /* tearOffInfo */, null, 1, 0, 319, "_jsConstructor"],
    get$__constructors: [function() {
      var t1 = this._cachedConstructors;
      if (t1 != null)
        return t1;
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView0(H.filterConstructors(this.get$_methods())), [P.Symbol0, P.MethodMirror]);
      this._cachedConstructors = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1271, "__constructors"],
    _asRuntimeType$0: [function() {
      var type, i, t1;
      if (J.get$isEmpty$as(this.get$typeVariables()) === true)
        return this.get$_jsConstructor();
      type = [this.get$_jsConstructor()];
      i = 0;
      while (true) {
        t1 = J.get$length$as(this.get$typeVariables());
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        type.push($.get$JsMirrorSystem__dynamicType().get$_asRuntimeType());
        ++i;
      }
      return type;
    }, "call$0" /* tearOffInfo */, "get$_asRuntimeType", 0, 0, 319, "_asRuntimeType"],
    _getMethodsWithOwner$1: [function(methodOwner) {
      var $prototype, keys, result, t1, key, simpleName, mirror, mangledName, jsFunction, reflectionName, isConstructor, t2;
      $prototype = this.get$_jsConstructor().prototype;
      keys = H.extractKeys($prototype);
      result = H.setRuntimeTypeInfo([], [H.JsMethodMirror]);
      for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(keys, keys.length, 0, null), [H.getTypeArgumentByIndex(keys, 0)]); t1.moveNext$0();) {
        key = t1._current;
        if (H.isReflectiveDataInPrototype(key))
          continue;
        simpleName = $.get$mangledNames().$index(0, key);
        if (simpleName == null)
          continue;
        mirror = H.JsMethodMirror_JsMethodMirror$fromUnmangledName(simpleName, $prototype[key], false, false);
        result.push(mirror);
        mirror._owner = methodOwner;
      }
      keys = H.extractKeys(init.statics[this._mangledName]);
      for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(keys, keys.length, 0, null), [H.getTypeArgumentByIndex(keys, 0)]); t1.moveNext$0();) {
        mangledName = t1._current;
        if (H.isReflectiveDataInPrototype(mangledName))
          continue;
        jsFunction = this.get$owner().get$_globalObject()[mangledName];
        if ("$reflectable" in jsFunction) {
          reflectionName = jsFunction.$reflectionName;
          if (reflectionName == null)
            continue;
          isConstructor = J.getInterceptor$s(reflectionName).startsWith$1(reflectionName, "new ");
          if (isConstructor) {
            t2 = C.JSString_methods.substring$1(reflectionName, 4);
            reflectionName = H.stringReplaceAllUnchecked(t2, "$", ".");
          }
        } else
          continue;
        mirror = H.JsMethodMirror_JsMethodMirror$fromUnmangledName(reflectionName, jsFunction, !isConstructor, isConstructor);
        result.push(mirror);
        mirror._owner = methodOwner;
      }
      return result;
    }, "call$1" /* tearOffInfo */, "get$_getMethodsWithOwner", 2, 0, 1304, 1305, "_getMethodsWithOwner"],
    get$_methods: [function() {
      var t1 = this._cachedMethods;
      if (t1 != null)
        return t1;
      t1 = this._getMethodsWithOwner$1(this);
      this._cachedMethods = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1243, "_methods"],
    _getFieldsWithOwner$1: [function(fieldOwner) {
      var result, t1, instanceFieldSpecfication, staticDescriptor;
      result = H.setRuntimeTypeInfo([], [P.VariableMirror]);
      t1 = J.split$1$s(this._fieldsDescriptor, ";");
      if (1 >= t1.length)
        return H.ioore(t1, 1);
      instanceFieldSpecfication = t1[1];
      t1 = this._fieldsMetadata;
      if (t1 != null) {
        instanceFieldSpecfication = [instanceFieldSpecfication];
        C.JSArray_methods.addAll$1(instanceFieldSpecfication, t1);
      }
      H.parseCompactFieldSpecification(fieldOwner, instanceFieldSpecfication, false, result);
      staticDescriptor = init.statics[this._mangledName];
      if (staticDescriptor != null)
        H.parseCompactFieldSpecification(fieldOwner, staticDescriptor[""], true, result);
      return result;
    }, "call$1" /* tearOffInfo */, "get$_getFieldsWithOwner", 2, 0, 1306, 1307, "_getFieldsWithOwner"],
    get$_fields: [function() {
      var t1 = this._cachedFields;
      if (t1 != null)
        return t1;
      t1 = this._getFieldsWithOwner$1(this);
      this._cachedFields = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1270, "_fields"],
    get$__methods: [function() {
      var t1 = this._cachedMethodsMap;
      if (t1 != null)
        return t1;
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView0(H.filterMethods(this.get$_methods())), [P.Symbol0, P.MethodMirror]);
      this._cachedMethodsMap = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1271, "__methods"],
    get$__variables: [function() {
      var t1, result, mirror;
      t1 = this._cachedVariables;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      for (t1 = J.get$iterator$a(this.get$_fields()); t1.moveNext$0() === true;) {
        mirror = t1.get$current();
        result.$indexSet(0, mirror.get$simpleName(), mirror);
      }
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView0(result), [P.Symbol0, P.VariableMirror]);
      this._cachedVariables = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1272, "__variables"],
    get$__members: [function() {
      var t1 = this._cachedMembers;
      if (t1 != null)
        return t1;
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView0(H.filterMembers(this.get$_methods(), this.get$__variables())), [P.Symbol0, P.Mirror]);
      this._cachedMembers = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1273, "__members"],
    get$declarations: [function() {
      var t1, result;
      t1 = this._cachedDeclarations;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, P.DeclarationMirror);
      t1 = new H.JsClassMirror_declarations_addToResult(result);
      J.forEach$1$a(this.get$__members(), t1);
      J.forEach$1$a(this.get$__constructors(), t1);
      J.forEach$1$a(this.get$typeVariables(), new H.JsClassMirror_declarations_closure(result));
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView0(result), [P.Symbol0, P.DeclarationMirror]);
      this._cachedDeclarations = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1274, "declarations"],
    setField$2: [function(fieldName, arg) {
      var mirror, jsName;
      mirror = J.$index$as(this.get$__variables(), fieldName);
      if (mirror != null && mirror.get$isStatic() === true && mirror.get$isFinal() !== true) {
        jsName = mirror.get$_jsName();
        if (!(jsName in $))
          throw H.wrapException(H.RuntimeError$("Cannot find \"" + H.S(jsName) + "\" in current isolate."));
        $[jsName] = arg;
        return H.reflect(arg);
      }
      throw H.wrapException(P.NoSuchMethodError$(this, H.setterSymbol(fieldName), [arg], null, null));
    }, "call$2" /* tearOffInfo */, "get$setField", 4, 0, 1266, 1267, 627, "setField"],
    getField$1: [function(fieldName) {
      var mirror, jsName;
      mirror = J.$index$as(this.get$__variables(), fieldName);
      if (mirror != null && mirror.get$isStatic() === true) {
        jsName = mirror.get$_jsName();
        if (!(jsName in $))
          throw H.wrapException(H.RuntimeError$("Cannot find \"" + H.S(jsName) + "\" in current isolate."));
        if (jsName in init.lazies)
          return H.reflect($[init.lazies[jsName]]());
        else
          return H.reflect($[jsName]);
      }
      throw H.wrapException(P.NoSuchMethodError$(this, fieldName, null, null, null));
    }, "call$1" /* tearOffInfo */, "get$getField", 2, 0, 1268, 1267, "getField"],
    _getInvokedInstance$3: [function(constructorName, positionalArguments, namedArguments) {
      var t1, mirror;
      if (namedArguments != null && J.get$isEmpty$as(namedArguments) !== true)
        throw H.wrapException(P.UnsupportedError$("Named arguments are not implemented."));
      t1 = this._jsConstructorCache;
      mirror = t1[constructorName.get$_name()];
      if (mirror == null) {
        mirror = this.get$__constructors().get$values().firstWhere$2$orElse(0, new H.JsClassMirror__getInvokedInstance_closure(constructorName), new H.JsClassMirror__getInvokedInstance_closure0(this, constructorName, positionalArguments, namedArguments));
        t1[constructorName.get$_name()] = mirror;
      }
      return mirror._invoke$2(positionalArguments, namedArguments);
    }, "call$3" /* tearOffInfo */, "get$_getInvokedInstance", 4, 2, 1308, 370, 1283, 315, 316, "_getInvokedInstance"],
    newInstance$3: [function(constructorName, positionalArguments, namedArguments) {
      return H.reflect(this._getInvokedInstance$3(constructorName, positionalArguments, namedArguments));
    }, "call$3" /* tearOffInfo */, "get$newInstance", 4, 2, 1269, 370, 1283, 315, 316, "newInstance"],
    get$owner: [function() {
      var t1, t2;
      t1 = this._owner;
      if (t1 == null) {
        t1 = this._jsConstructorOrInterceptor;
        t2 = J.getInterceptor(t1);
        if (typeof t1 === "object" && t1 !== null && !!t2.$isInterceptor)
          this._owner = H.reflectClassByMangledName(C.Type_HqF._typeName).get$owner();
        else {
          t1 = $.get$JsMirrorSystem_librariesByName().get$values();
          t2 = new H.MappedIterator(null, J.get$iterator$a(t1._iterable), t1._f);
          t2.$builtinTypeInfo = [H.getTypeArgumentByIndex(t1, 0), H.getTypeArgumentByIndex(t1, 1)];
          for (; t2.moveNext$0();)
            for (t1 = J.get$iterator$a(t2._current); t1.moveNext$0() === true;)
              t1.get$current().get$__classes();
        }
        t1 = this._owner;
        if (t1 == null)
          throw H.wrapException(P.StateError$("Class \"" + H.S(H.n(this.simpleName)) + "\" has no owner"));
      }
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1297, "owner"],
    get$metadata: [function() {
      var t1 = this._cachedMetadata;
      if (t1 != null)
        return t1;
      t1 = this._metadata;
      if (t1 == null) {
        t1 = H.extractMetadata(this.get$_jsConstructor().prototype);
        this._metadata = t1;
      }
      t1 = H.setRuntimeTypeInfo(new P.UnmodifiableListView(J.map$1$a(t1, H.reflect$closure())), [P.InstanceMirror]);
      this._cachedMetadata = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1252, "metadata"],
    get$superclass: [function() {
      var t1, typeInformation, t2, superclassName, mixins, t3;
      t1 = this._superclass;
      if (t1 == null) {
        typeInformation = init.typeInformation[this._mangledName];
        if (typeInformation != null) {
          t1 = H.typeMirrorFromRuntimeTypeRepresentation(this, init.metadata[J.$index$as(typeInformation, 0)]);
          this._superclass = t1;
        } else {
          t1 = this._fieldsDescriptor;
          t2 = J.split$1$s(t1, ";");
          if (0 >= t2.length)
            return H.ioore(t2, 0);
          superclassName = t2[0];
          t2 = J.getInterceptor$s(superclassName);
          mixins = t2.split$1(superclassName, "+");
          t3 = mixins.length;
          if (t3 > 1) {
            if (t3 !== 2)
              throw H.wrapException(H.RuntimeError$("Strange mixin: " + H.S(t1)));
            t1 = H.reflectClassByMangledName(mixins[0]);
            this._superclass = t1;
          } else {
            t1 = t2.$eq(superclassName, "") ? this : H.reflectClassByMangledName(superclassName);
            this._superclass = t1;
          }
        }
      }
      return J.$eq(t1, this) ? null : this._superclass;
    }, null /* tearOffInfo */, null, 1, 0, 1284, "superclass"],
    invoke$3: [function(memberName, positionalArguments, namedArguments) {
      var mirror;
      if (namedArguments != null && J.get$isEmpty$as(namedArguments) !== true)
        throw H.wrapException(P.UnsupportedError$("Named arguments are not implemented."));
      mirror = J.$index$as(this.get$__methods(), memberName);
      if (mirror == null || mirror.get$isStatic() !== true)
        throw H.wrapException(P.NoSuchMethodError$(this, memberName, positionalArguments, namedArguments, null));
      if (!mirror.canInvokeReflectively$0())
        H.throwInvalidReflectionError(memberName.get$_name());
      return H.reflect(mirror._invoke$2(positionalArguments, namedArguments));
    }, "call$3" /* tearOffInfo */, "get$invoke", 4, 2, 1269, 370, 282, 315, 316, "invoke"],
    get$isOriginalDeclaration: [function() {
      return true;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isOriginalDeclaration"],
    get$originalDeclaration: [function() {
      return this;
    }, null /* tearOffInfo */, null, 1, 0, 1284, "originalDeclaration"],
    _getSuperinterfacesWithOwner$1: [function(owner) {
      var typeInformation, result;
      typeInformation = init.typeInformation[this._mangledName];
      result = typeInformation != null ? J.skip$1$a(typeInformation, 1).map$1(0, new H.JsClassMirror__getSuperinterfacesWithOwner_lookupType(owner)).toList$0(0) : C.List_empty2;
      return H.setRuntimeTypeInfo(new P.UnmodifiableListView(result), [P.ClassMirror]);
    }, "call$1" /* tearOffInfo */, "get$_getSuperinterfacesWithOwner", 2, 0, 1309, 480, "_getSuperinterfacesWithOwner"],
    get$superinterfaces: [function() {
      var t1 = this._cachedSuperinterfaces;
      if (t1 != null)
        return t1;
      t1 = this._getSuperinterfacesWithOwner$1(this);
      this._cachedSuperinterfaces = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1282, "superinterfaces"],
    get$typeVariables: [function() {
      var t1, result, typeVariables, i, typeVariable;
      t1 = this._cachedTypeVariables;
      if (t1 != null)
        return t1;
      result = [];
      typeVariables = this.get$_jsConstructor().prototype["<>"];
      if (typeVariables == null)
        return result;
      for (i = 0; i < typeVariables.length; ++i) {
        t1 = typeVariables[i];
        typeVariable = init.metadata[t1];
        result.push(new H.JsTypeVariableMirror(this, typeVariable, t1, null, H.s(typeVariable.get$name())));
      }
      t1 = new P.UnmodifiableListView(result);
      t1.$builtinTypeInfo = [null];
      this._cachedTypeVariables = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1253, "typeVariables"],
    get$typeArguments: [function() {
      return C.List_empty1;
    }, null /* tearOffInfo */, null, 1, 0, 1254, "typeArguments"],
    get$hasReflectedType: [function() {
      return J.$eq(J.get$length$as(this.get$typeVariables()), 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "hasReflectedType"],
    get$reflectedType: [function() {
      if (!J.$eq(J.get$length$as(this.get$typeVariables()), 0))
        throw H.wrapException(P.UnsupportedError$("Declarations of generics have no reflected type"));
      return new H.TypeImpl(this._mangledName, null);
    }, null /* tearOffInfo */, null, 1, 0, 1041, "reflectedType"],
    get$instanceMembers: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1271, "instanceMembers"],
    get$staticMembers: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1271, "staticMembers"],
    get$mixin: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1284, "mixin"],
    $index: [function(_, $name) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, 1275, 346, "[]"],
    $isJsClassMirror: true,
    $isClassMirror: true,
    $isMirror: true,
    $isTypeMirror: true,
    $isDeclarationMirror: true
  },
  "+JsClassMirror": [1310, 1281],
  JsTypeMirror_JsObjectMirror0: {
    "": "JsTypeMirror+JsObjectMirror;",
    $isMirror: true
  },
  JsClassMirror_declarations_addToResult: {
    "": "Closure:1279;result_0-370",
    call$2: [function(key, value) {
      J.$indexSet$a(this.result_0, key, value);
    }, "call$2" /* tearOffInfo */, null, 4, 0, 1279, 312, 280, "call"]
  },
  "+JsClassMirror_declarations_addToResult": [1060],
  JsClassMirror_declarations_closure: {
    "": "Closure:241;result_1-370",
    call$1: [function(tv) {
      J.$indexSet$a(this.result_1, tv.get$simpleName(), tv);
      return tv;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1300, "call"]
  },
  "+JsClassMirror_declarations_closure": [1060],
  JsClassMirror__getInvokedInstance_closure: {
    "": "Closure:241;constructorName_0-1227",
    call$1: [function(m) {
      return J.$eq(m.get$constructorName(), this.constructorName_0);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 670, "call"]
  },
  "+JsClassMirror__getInvokedInstance_closure": [1060],
  JsClassMirror__getInvokedInstance_closure0: {
    "": "Closure:319;this_1-370,constructorName_2-1227,positionalArguments_3-1129,namedArguments_4-1311",
    call$0: [function() {
      throw H.wrapException(P.NoSuchMethodError$(this.this_1, this.constructorName_2, this.positionalArguments_3, this.namedArguments_4, null));
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+JsClassMirror__getInvokedInstance_closure": [1060],
  JsClassMirror__getSuperinterfacesWithOwner_lookupType: {
    "": "Closure:1312;owner_0-1246",
    call$1: [function(i) {
      return H.typeMirrorFromRuntimeTypeRepresentation(this.owner_0, init.metadata[i]);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1312, 245, "call"]
  },
  "+JsClassMirror__getSuperinterfacesWithOwner_lookupType": [1060],
  JsVariableMirror: {
    "": "JsDeclarationMirror;_jsName<-1039,isFinal<-1043,isStatic<-1043,_metadataFunction<-370,_owner<-1246,_type<-1075,_metadata@-1129,simpleName-1227",
    get$_prettyName: [function() {
      return "VariableMirror";
    }, null /* tearOffInfo */, null, 1, 0, 253, "_prettyName"],
    get$type: [function() {
      return H.typeMirrorFromRuntimeTypeRepresentation(this._owner, init.metadata[this._type]);
    }, null /* tearOffInfo */, null, 1, 0, 1249, "type"],
    get$owner: [function() {
      return this._owner;
    }, null /* tearOffInfo */, null, 1, 0, 1251, "owner"],
    get$metadata: [function() {
      var t1 = this._metadata;
      if (t1 == null) {
        t1 = this._metadataFunction;
        t1 = t1 == null ? C.List_empty0 : t1();
        this._metadata = t1;
      }
      return J.map$1$a(t1, H.reflect$closure()).toList$0(0);
    }, null /* tearOffInfo */, null, 1, 0, 1252, "metadata"],
    _getField$1: [function(receiver) {
      return receiver._loadField$1(this._jsName);
    }, "call$1" /* tearOffInfo */, "get$_getField", 2, 0, 1236, 302, "_getField"],
    _setField$2: [function(receiver, arg) {
      if (this.isFinal === true)
        throw H.wrapException(P.NoSuchMethodError$(this, H.setterSymbol(this.simpleName), [arg], null, null));
      receiver._storeField$2(this._jsName, arg);
    }, "call$2" /* tearOffInfo */, "get$_setField", 4, 0, 1237, 302, 627, "_setField"],
    get$isConst: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 849, "isConst"],
    $isVariableMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true,
    static: {JsVariableMirror_JsVariableMirror$from: [function(descriptor, metadataFunction, owner, isStatic) {
        var fieldInformation, t1, field, $length, t2, code, t3, isFinal, jsName, divider, accessorName, unmangledName, setterName;
        fieldInformation = J.split$1$s(descriptor, "-");
        t1 = fieldInformation.length;
        if (t1 === 1)
          return;
        if (0 >= t1)
          return H.ioore(fieldInformation, 0);
        field = fieldInformation[0];
        t1 = J.getInterceptor$as(field);
        $length = t1.get$length(field);
        t2 = J.getInterceptor$n($length);
        code = H.JsVariableMirror_fieldCode(t1.codeUnitAt$1(field, t2.$sub($length, 1)));
        t3 = J.getInterceptor(code);
        if (t3.$eq(code, 0))
          return;
        t3.$and(code, 3);
        isFinal = t3.$shr(code, 2) === 0;
        jsName = t1.substring$2(field, 0, t2.$sub($length, 1));
        divider = t1.indexOf$1(field, ":");
        t2 = J.getInterceptor$n(divider);
        if (t2.$gt(divider, 0)) {
          accessorName = C.JSString_methods.substring$2(jsName, 0, divider);
          jsName = t1.substring$1(field, t2.$add(divider, 1));
        } else
          accessorName = jsName;
        unmangledName = isStatic === true ? $.get$mangledGlobalNames().$index(0, accessorName) : $.get$mangledNames().$index(0, "get$" + accessorName);
        if (unmangledName == null)
          unmangledName = accessorName;
        if (isFinal) {
          setterName = H.s(H.S(unmangledName) + "=");
          for (t1 = J.get$iterator$a(owner.get$_methods()); isFinal = true, t1.moveNext$0() === true;)
            if (J.$eq(t1.get$current().get$simpleName(), setterName)) {
              isFinal = false;
              break;
            }
        }
        if (1 >= fieldInformation.length)
          return H.ioore(fieldInformation, 1);
        return new H.JsVariableMirror(jsName, isFinal, isStatic, metadataFunction, owner, H.Primitives_parseInt(fieldInformation[1], null, null), null, H.s(unmangledName));
      }, "call$4" /* tearOffInfo */, null, 8, 0, 477, 478, 479, 480, 342, "new JsVariableMirror$from" /* new JsVariableMirror$from:4:0 */], JsVariableMirror_fieldCode: [function(code) {
        var t1 = J.getInterceptor$n(code);
        if (t1.$ge(code, 60) && t1.$le(code, 64))
          return t1.$sub(code, 59);
        if (t1.$ge(code, 123) && t1.$le(code, 126))
          return t1.$sub(code, 117);
        if (t1.$ge(code, 37) && t1.$le(code, 43))
          return t1.$sub(code, 27);
        return 0;
      }, "call$1" /* tearOffInfo */, "JsVariableMirror_fieldCode$closure", 2, 0, 244, 481, "fieldCode"]}
  },
  "+JsVariableMirror": [1255, 1313],
  JsClosureMirror: {
    "": "JsInstanceMirror;reflectee-370",
    get$$function: [function() {
      var cacheName, t1, callName, t2, parameterCount, target, $name, cachedFunction;
      cacheName = $.Primitives_mirrorFunctionCacheName;
      t1 = this.reflectee;
      callName = function(reflectee) {
  for (var property in reflectee) {
    if ("call$" == property.substring(0, 5)) return property;
  }
  return null;
}
(t1);
      if (callName == null)
        throw H.wrapException(H.RuntimeError$("Cannot find callName on \"" + H.S(t1) + "\""));
      t2 = callName.split("$");
      if (1 >= t2.length)
        return H.ioore(t2, 1);
      parameterCount = H.Primitives_parseInt(t2[1], null, null);
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isBoundClosure) {
        target = t1.get$_target();
        t1.get$_self();
        $name = $.get$mangledNames().$index(0, t1.get$__js_helper$_name());
        if ($name == null)
          H.throwInvalidReflectionError($name);
        cachedFunction = H.JsMethodMirror_JsMethodMirror$fromUnmangledName($name, target, false, false);
      } else
        cachedFunction = new H.JsMethodMirror(t1[callName], parameterCount, false, false, true, false, false, null, null, null, null, H.s(callName));
      t1.constructor[cacheName] = cachedFunction;
      return cachedFunction;
    }, null /* tearOffInfo */, null, 1, 0, 1314, "function"],
    apply$2: [function(positionalArguments, namedArguments) {
      return H.reflect(H.Primitives_applyFunction(this.reflectee, positionalArguments, P.Function__toMangledNames(namedArguments)));
    }, "call$2" /* tearOffInfo */, "get$apply", 2, 2, 1315, 370, 315, 316, "apply"],
    toString$0: [function(_) {
      return "ClosureMirror on '" + H.S(P.Error_safeToString(this.reflectee)) + "'";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    get$source: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 253, "source"],
    $index: [function(_, $name) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, 1275, 346, "[]"],
    $isInstanceMirror: true,
    $isMirror: true
  },
  "+JsClosureMirror": [1316, 1317],
  JsMethodMirror: {
    "": "JsDeclarationMirror;_jsFunction<-370,_parameterCount<-1075,isGetter<-1043,isSetter<-1043,isStatic<-1043,isConstructor<-1043,isOperator<-1043,_owner@-1246,_metadata@-1129,_returnType@-1248,_parameters@-1318,simpleName-1227",
    get$_prettyName: [function() {
      return "MethodMirror";
    }, null /* tearOffInfo */, null, 1, 0, 253, "_prettyName"],
    get$parameters: [function() {
      var t1 = this._parameters;
      if (t1 != null)
        return t1;
      this.get$metadata();
      return this._parameters;
    }, null /* tearOffInfo */, null, 1, 0, 1319, "parameters"],
    canInvokeReflectively$0: [function() {
      return "$reflectable" in this._jsFunction;
    }, "call$0" /* tearOffInfo */, "get$canInvokeReflectively", 0, 0, 849, "canInvokeReflectively"],
    get$owner: [function() {
      return this._owner;
    }, null /* tearOffInfo */, null, 1, 0, 1251, "owner"],
    get$returnType: [function() {
      this.get$metadata();
      return this._returnType;
    }, null /* tearOffInfo */, null, 1, 0, 1249, "returnType"],
    get$metadata: [function() {
      var t1, raw, t2, formals, info, functionType, type, isNamed, t3, i, parameter, $name, t4, p, defaultValue, i0;
      t1 = this._metadata;
      if (t1 == null) {
        t1 = this._jsFunction;
        raw = H.extractMetadata(t1);
        t2 = this._parameterCount;
        if (typeof t2 !== "number")
          return H.iae(t2);
        formals = Array(t2);
        formals.fixed$length = init;
        info = H.ReflectionInfo_ReflectionInfo(t1);
        if (info != null) {
          functionType = info.functionType;
          if (typeof functionType === "number" && Math.floor(functionType) === functionType)
            type = new H.JsFunctionTypeMirror(info.computeFunctionRti$1(null), null, null, null, this);
          else {
            t1 = this.get$owner();
            if (t1 != null) {
              t2 = J.getInterceptor(t1);
              t2 = typeof t1 === "object" && t1 !== null && !!t2.$isLibraryMirror;
              t1 = t2;
            } else
              t1 = false;
            type = t1 ? new H.JsFunctionTypeMirror(info.computeFunctionRti$1(null), null, null, null, this._owner) : new H.JsFunctionTypeMirror(info.computeFunctionRti$1(this._owner.get$originalDeclaration().get$_jsConstructorOrInterceptor()), null, null, null, this._owner);
          }
          if (this.isConstructor === true)
            this._returnType = this._owner;
          else
            this._returnType = type.get$returnType();
          isNamed = info.areOptionalParametersNamed;
          for (t1 = J.get$iterator$a(type.get$parameters()), t2 = formals.length, t3 = info.optionalParameterCount, i = 0; t1.moveNext$0() === true; i = i0) {
            parameter = t1.get$current();
            $name = init.metadata[info.data[i + t3 + 3]];
            t4 = info.requiredParameterCount;
            if (typeof t4 !== "number")
              return H.iae(t4);
            if (i < t4)
              p = new H.JsParameterMirror(this, parameter.get$_type(), false, false, null, H.s($name));
            else {
              defaultValue = info.defaultValue$1(i);
              p = new H.JsParameterMirror(this, parameter.get$_type(), true, isNamed, defaultValue, H.s($name));
            }
            i0 = i + 1;
            if (i >= t2)
              return H.ioore(formals, i);
            formals[i] = p;
          }
        }
        this._parameters = H.setRuntimeTypeInfo(new P.UnmodifiableListView(formals), [P.ParameterMirror]);
        t1 = H.setRuntimeTypeInfo(new P.UnmodifiableListView(J.map$1$a(raw, H.reflect$closure())), [null]);
        this._metadata = t1;
      }
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1252, "metadata"],
    get$constructorName: [function() {
      var $name, t1, index, t2;
      if (this.isConstructor !== true)
        return C.Symbol_0c4;
      $name = this.simpleName.get$_name();
      t1 = J.getInterceptor$as($name);
      index = t1.indexOf$1($name, ".");
      t2 = J.getInterceptor(index);
      if (t2.$eq(index, -1))
        return C.Symbol_0c4;
      return H.s(t1.substring$1($name, t2.$add(index, 1)));
    }, null /* tearOffInfo */, null, 1, 0, 1139, "constructorName"],
    _invoke$2: [function(positionalArguments, namedArguments) {
      if (namedArguments != null && J.get$isEmpty$as(namedArguments) !== true)
        throw H.wrapException(P.UnsupportedError$("Named arguments are not implemented."));
      if (this.isStatic !== true && this.isConstructor !== true)
        throw H.wrapException(H.RuntimeError$("Cannot invoke instance method without receiver."));
      if (!J.$eq(this._parameterCount, J.get$length$as(positionalArguments)) || this._jsFunction == null)
        throw H.wrapException(P.NoSuchMethodError$(this._owner, this.simpleName, positionalArguments, namedArguments, null));
      return this._jsFunction.apply($, P.List_List$from(positionalArguments, true, null));
    }, "call$2" /* tearOffInfo */, "get$_invoke", 4, 0, 1244, 315, 316, "_invoke"],
    _getField$1: [function(receiver) {
      if (this.isGetter === true)
        return this._invoke$2([], null);
      else
        throw H.wrapException(P.UnimplementedError$("getField on " + H.S(receiver)));
    }, "call$1" /* tearOffInfo */, "get$_getField", 2, 0, 1236, 302, "_getField"],
    _setField$2: [function(receiver, arg) {
      if (this.isSetter === true)
        return this._invoke$2([arg], null);
      else
        throw H.wrapException(P.NoSuchMethodError$(this, H.setterSymbol(this.simpleName), [], null, null));
    }, "call$2" /* tearOffInfo */, "get$_setField", 4, 0, 1320, 302, 627, "_setField"],
    get$isAbstract: [function() {
      return false;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isAbstract"],
    get$isSynthetic: [function() {
      return false;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isSynthetic"],
    get$isRegularMethod: [function() {
      return this.isGetter !== true && this.isSetter !== true && this.isConstructor !== true;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isRegularMethod"],
    get$isConstConstructor: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 849, "isConstConstructor"],
    get$isGenerativeConstructor: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 849, "isGenerativeConstructor"],
    get$isRedirectingConstructor: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 849, "isRedirectingConstructor"],
    get$isFactoryConstructor: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 849, "isFactoryConstructor"],
    get$source: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 253, "source"],
    $isJsMethodMirror: true,
    $isMethodMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true,
    static: {JsMethodMirror_JsMethodMirror$fromUnmangledName: [function($name, jsFunction, isStatic, isConstructor) {
        var info, isOperator, isSetter, t1, requiredParameterCount, isGetter, optionalParameterCount;
        info = J.split$1$s($name, ":");
        if (0 >= info.length)
          return H.ioore(info, 0);
        $name = info[0];
        isOperator = H.isOperatorName($name);
        isSetter = !isOperator && J.endsWith$1$s($name, "=");
        t1 = info.length;
        if (t1 === 1) {
          if (isSetter) {
            requiredParameterCount = 1;
            isGetter = false;
          } else {
            requiredParameterCount = 0;
            isGetter = true;
          }
          optionalParameterCount = 0;
        } else {
          if (1 >= t1)
            return H.ioore(info, 1);
          requiredParameterCount = H.Primitives_parseInt(info[1], null, null);
          if (2 >= info.length)
            return H.ioore(info, 2);
          optionalParameterCount = H.Primitives_parseInt(info[2], null, null);
          isGetter = false;
        }
        t1 = H.s($name);
        return new H.JsMethodMirror(jsFunction, J.$add$ns(requiredParameterCount, optionalParameterCount), isGetter, isSetter, isStatic, isConstructor, isOperator, null, null, null, null, t1);
      }, "call$4" /* tearOffInfo */, null, 8, 0, 482, 346, 287, 342, 483, "new JsMethodMirror$fromUnmangledName" /* new JsMethodMirror$fromUnmangledName:4:0 */]}
  },
  "+JsMethodMirror": [1255, 1321],
  JsParameterMirror: {
    "": "JsDeclarationMirror;owner<-1246,_type<-370,isOptional<-1043,isNamed<-1043,__js_mirrors$_defaultValue<-1075,simpleName-1227",
    get$_prettyName: [function() {
      return "ParameterMirror";
    }, null /* tearOffInfo */, null, 1, 0, 253, "_prettyName"],
    get$type: [function() {
      return H.typeMirrorFromRuntimeTypeRepresentation(this.owner, this._type);
    }, null /* tearOffInfo */, null, 1, 0, 1249, "type"],
    get$isStatic: [function() {
      return false;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isStatic"],
    get$isFinal: [function() {
      return false;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isFinal"],
    get$isConst: [function() {
      return false;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isConst"],
    get$hasDefaultValue: [function() {
      return this.__js_mirrors$_defaultValue != null;
    }, null /* tearOffInfo */, null, 1, 0, 849, "hasDefaultValue"],
    get$defaultValue: [function() {
      var t1 = this.__js_mirrors$_defaultValue;
      return t1 != null ? H.reflect(init.metadata[t1]) : null;
    }, null /* tearOffInfo */, null, 1, 0, 319, "defaultValue"],
    defaultValue$1: function(arg0) {
      return this.get$defaultValue().call$1(arg0);
    },
    get$metadata: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1252, "metadata"],
    $isParameterMirror: true,
    $isVariableMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true
  },
  "+JsParameterMirror": [1255, 1322],
  JsTypedefMirror: {
    "": "JsDeclarationMirror;_mangledName<-1039,referent@-1323,simpleName-1227",
    get$value: [function() {
      return this.referent;
    }, null /* tearOffInfo */, null, 1, 0, 1324, "value"],
    get$_prettyName: [function() {
      return "TypedefMirror";
    }, null /* tearOffInfo */, null, 1, 0, 253, "_prettyName"],
    get$typeVariables: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1253, "typeVariables"],
    get$typeArguments: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1254, "typeArguments"],
    get$isOriginalDeclaration: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 849, "isOriginalDeclaration"],
    get$originalDeclaration: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1249, "originalDeclaration"],
    get$owner: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1251, "owner"],
    get$metadata: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1252, "metadata"],
    $isTypedefMirror: true,
    $isTypeMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true
  },
  "+JsTypedefMirror": [1255, 1325],
  BrokenClassMirror: {
    "": "Object;",
    get$hasReflectedType: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 849, "hasReflectedType"],
    get$reflectedType: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1041, "reflectedType"],
    get$superclass: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1284, "superclass"],
    get$superinterfaces: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1282, "superinterfaces"],
    get$declarations: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1274, "declarations"],
    get$instanceMembers: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1271, "instanceMembers"],
    get$staticMembers: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1271, "staticMembers"],
    get$mixin: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1284, "mixin"],
    newInstance$3: [function(constructorName, positionalArguments, namedArguments) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$3" /* tearOffInfo */, "get$newInstance", 4, 2, 1269, 370, 1283, 315, 316, "newInstance"],
    $index: [function(_, $name) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, 1275, 346, "[]"],
    invoke$3: [function(memberName, positionalArguments, namedArguments) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$3" /* tearOffInfo */, "get$invoke", 4, 2, 1269, 370, 282, 315, 316, "invoke"],
    getField$1: [function(fieldName) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1" /* tearOffInfo */, "get$getField", 2, 0, 1268, 1267, "getField"],
    setField$2: [function(fieldName, value) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$2" /* tearOffInfo */, "get$setField", 4, 0, 1266, 1267, 280, "setField"],
    get$typeVariables: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1253, "typeVariables"],
    get$typeArguments: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1254, "typeArguments"],
    get$originalDeclaration: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1249, "originalDeclaration"],
    get$simpleName: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1139, "simpleName"],
    get$qualifiedName: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1139, "qualifiedName"],
    get$isPrivate: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 849, "isPrivate"],
    get$isTopLevel: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 849, "isTopLevel"],
    get$location: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1245, "location"],
    get$metadata: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1252, "metadata"]
  },
  "+BrokenClassMirror": [0],
  JsFunctionTypeMirror: {
    "": "BrokenClassMirror;_typeData<-370,_cachedToString@-1039,_cachedReturnType@-1248,_cachedParameters@-1318,owner@-1246",
    get$isOriginalDeclaration: [function() {
      return true;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isOriginalDeclaration"],
    get$returnType: [function() {
      var t1 = this._cachedReturnType;
      if (t1 != null)
        return t1;
      t1 = this._typeData;
      if (!!t1.void) {
        t1 = $.get$JsMirrorSystem__voidType();
        this._cachedReturnType = t1;
        return t1;
      }
      if (!("ret" in t1)) {
        t1 = $.get$JsMirrorSystem__dynamicType();
        this._cachedReturnType = t1;
        return t1;
      }
      t1 = H.typeMirrorFromRuntimeTypeRepresentation(this.owner, t1.ret);
      this._cachedReturnType = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1249, "returnType"],
    get$parameters: [function() {
      var t1, result, t2, parameterCount, parameterCount0, $name;
      t1 = this._cachedParameters;
      if (t1 != null)
        return t1;
      result = [];
      t1 = this._typeData;
      if ("args" in t1)
        for (t2 = t1.args, t2 = H.setRuntimeTypeInfo(new H.ListIterator(t2, t2.length, 0, null), [H.getTypeArgumentByIndex(t2, 0)]), parameterCount = 0; t2.moveNext$0(); parameterCount = parameterCount0) {
          parameterCount0 = parameterCount + 1;
          result.push(new H.JsParameterMirror(this, t2._current, false, false, null, H.s("argument" + parameterCount)));
        }
      else
        parameterCount = 0;
      if ("opt" in t1)
        for (t2 = t1.opt, t2 = H.setRuntimeTypeInfo(new H.ListIterator(t2, t2.length, 0, null), [H.getTypeArgumentByIndex(t2, 0)]); t2.moveNext$0(); parameterCount = parameterCount0) {
          parameterCount0 = parameterCount + 1;
          result.push(new H.JsParameterMirror(this, t2._current, false, false, null, H.s("argument" + parameterCount)));
        }
      if ("named" in t1)
        for (t2 = H.extractKeys(t1.named), t2 = H.setRuntimeTypeInfo(new H.ListIterator(t2, t2.length, 0, null), [H.getTypeArgumentByIndex(t2, 0)]); t2.moveNext$0();) {
          $name = t2._current;
          result.push(new H.JsParameterMirror(this, t1.named[$name], false, false, null, H.s($name)));
        }
      t1 = H.setRuntimeTypeInfo(new P.UnmodifiableListView(result), [P.ParameterMirror]);
      this._cachedParameters = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1319, "parameters"],
    toString$0: [function(_) {
      var t1, t2, s, sep, argument, $name;
      t1 = this._cachedToString;
      if (t1 != null)
        return t1;
      t1 = this._typeData;
      if ("args" in t1)
        for (t2 = t1.args, t2 = H.setRuntimeTypeInfo(new H.ListIterator(t2, t2.length, 0, null), [H.getTypeArgumentByIndex(t2, 0)]), s = "FunctionTypeMirror on '(", sep = ""; t2.moveNext$0(); sep = ", ") {
          argument = t2._current;
          s = C.JSString_methods.$add(s + sep, H.runtimeTypeToString(argument, null));
        }
      else {
        s = "FunctionTypeMirror on '(";
        sep = "";
      }
      if ("opt" in t1) {
        s += sep + "[";
        for (t2 = t1.opt, t2 = H.setRuntimeTypeInfo(new H.ListIterator(t2, t2.length, 0, null), [H.getTypeArgumentByIndex(t2, 0)]), sep = ""; t2.moveNext$0(); sep = ", ") {
          argument = t2._current;
          s = C.JSString_methods.$add(s + sep, H.runtimeTypeToString(argument, null));
        }
        s += "]";
      }
      if ("named" in t1) {
        s += sep + "{";
        for (t2 = H.extractKeys(t1.named), t2 = H.setRuntimeTypeInfo(new H.ListIterator(t2, t2.length, 0, null), [H.getTypeArgumentByIndex(t2, 0)]), sep = ""; t2.moveNext$0(); sep = ", ") {
          $name = t2._current;
          s = C.JSString_methods.$add(s + sep + (H.S($name) + ": "), H.runtimeTypeToString(t1.named[$name], null));
        }
        s += "}";
      }
      s += ") -> ";
      if (!!t1.void)
        s += "void";
      else
        s = "ret" in t1 ? C.JSString_methods.$add(s, H.runtimeTypeToString(t1.ret, null)) : s + "dynamic";
      t1 = s + "'";
      this._cachedToString = t1;
      return t1;
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    get$callMethod: [function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }, null /* tearOffInfo */, null, 1, 0, 1314, "callMethod"],
    $isClassMirror: true,
    $isMirror: true,
    $isTypeMirror: true,
    $isDeclarationMirror: true
  },
  "+JsFunctionTypeMirror": [1326, 1327],
  typeMirrorFromRuntimeTypeRepresentation_getTypeArgument: {
    "": "Closure:689;box_0-370",
    call$1: [function(index) {
      var typeVariable, t1, variableIndex;
      typeVariable = init.metadata[index];
      t1 = this.box_0;
      variableIndex = H.findTypeVariableIndex(t1.ownerClass_0.get$typeVariables(), typeVariable.get$name());
      return J.$index$as(t1.ownerClass_0.get$typeArguments(), variableIndex);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 689, 321, "call"]
  },
  "+typeMirrorFromRuntimeTypeRepresentation_getTypeArgument": [1060],
  typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable: {
    "": "Closure:825;getTypeArgument_1-689",
    call$1: [function(index) {
      var typeArgument, t1;
      typeArgument = this.getTypeArgument_1.call$1(index);
      t1 = J.getInterceptor(typeArgument);
      if (typeof typeArgument === "object" && typeArgument !== null && !!t1.$isJsTypeVariableMirror)
        return H.S(typeArgument._metadataIndex);
      return typeArgument.get$_mangledName();
    }, "call$1" /* tearOffInfo */, null, 2, 0, 825, 321, "call"]
  },
  "+typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable": [1060],
  extractMetadata_closure: {
    "": "Closure:689;",
    call$1: [function(i) {
      return init.metadata[i];
    }, "call$1" /* tearOffInfo */, null, 2, 0, 689, 245, "call"]
  },
  "+extractMetadata_closure": [1060],
  extractMetadata_closure0: {
    "": "Closure:689;",
    call$1: [function(i) {
      return init.metadata[i];
    }, "call$1" /* tearOffInfo */, null, 2, 0, 689, 245, "call"]
  },
  "+extractMetadata_closure": [1060],
  UnmodifiableMapView0: {
    "": "Object;__js_mirrors$_source@-1328",
    get$length: [function(_) {
      return J.get$length$as(this.__js_mirrors$_source);
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$isEmpty: [function(_) {
      return J.get$isEmpty$as(this.__js_mirrors$_source);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$isNotEmpty: [function(_) {
      return J.get$isNotEmpty$as(this.__js_mirrors$_source);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty"],
    $index: [function(_, key) {
      return J.$index$as(this.__js_mirrors$_source, key);
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__K", ret: V, args: [K]};
      }, this.$receiver, "UnmodifiableMapView0");
    }, 312, "[]"],
    containsKey$1: [function(key) {
      return this.__js_mirrors$_source.containsKey$1(key);
    }, "call$1" /* tearOffInfo */, "get$containsKey", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "bool__K", ret: J.JSBool, args: [K]};
      }, this.$receiver, "UnmodifiableMapView0");
    }, 312, "containsKey"],
    containsValue$1: [function(value) {
      return this.__js_mirrors$_source.containsValue$1(value);
    }, "call$1" /* tearOffInfo */, "get$containsValue", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "bool__V", ret: J.JSBool, args: [V]};
      }, this.$receiver, "UnmodifiableMapView0");
    }, 280, "containsValue"],
    forEach$1: [function(_, f) {
      return J.forEach$1$a(this.__js_mirrors$_source, f);
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__void__K_V", void: true, args: [{func: "void__K_V", void: true, args: [K, V]}]};
      }, this.$receiver, "UnmodifiableMapView0");
    }, 412, "forEach"],
    get$keys: [function() {
      return this.__js_mirrors$_source.get$keys();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "Iterable_2", ret: [P.Iterable, K]};
      }, this.$receiver, "UnmodifiableMapView0");
    }, "keys"],
    get$values: [function() {
      return this.__js_mirrors$_source.get$values();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "Iterable_3", ret: [P.Iterable, V]};
      }, this.$receiver, "UnmodifiableMapView0");
    }, "values"],
    $indexSet: [function(_, key, value) {
      return H.UnmodifiableMapView__throw();
    }, "call$2" /* tearOffInfo */, "get$[]=", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__K_V", void: true, args: [K, V]};
      }, this.$receiver, "UnmodifiableMapView0");
    }, 312, 280, "[]="],
    putIfAbsent$2: [function(key, ifAbsent) {
      H.UnmodifiableMapView__throw();
    }, "call$2" /* tearOffInfo */, "get$putIfAbsent", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__K_V_", ret: V, args: [K, {func: "V_", ret: V}]};
      }, this.$receiver, "UnmodifiableMapView0");
    }, 312, 663, "putIfAbsent"],
    addAll$1: [function(_, other) {
      return H.UnmodifiableMapView__throw();
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__Map0", void: true, args: [[P.Map, K, V]]};
      }, this.$receiver, "UnmodifiableMapView0");
    }, 403, "addAll"],
    remove$1: [function(_, key) {
      H.UnmodifiableMapView__throw();
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__K", ret: V, args: [K]};
      }, this.$receiver, "UnmodifiableMapView0");
    }, 312, "remove"],
    clear$0: [function(_) {
      return H.UnmodifiableMapView__throw();
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    $isMap: true,
    "<>": [120, 121],
    static: {UnmodifiableMapView__throw: [function() {
        throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable Map"));
      }, "call$0" /* tearOffInfo */, "UnmodifiableMapView__throw$closure", 0, 0, 494, "_throw"]}
  },
  "+UnmodifiableMapView": [0, 1328],
  "": "counter@-1075,classMirrors@-370,currentJsMirrorSystem<-2042,METHODS_WITH_OPTIONAL_ARGUMENTS<-1039"
}],
["dart._js_names", "dart:_js_names", , H, {
  "": "",
  computeMangledNames: [function(jsMangledNames, isGlobal) {
    var keys, result, t1, t2, t3, key, value, t4;
    keys = H.extractKeys(jsMangledNames);
    result = H.setRuntimeTypeInfo(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [J.JSString, J.JSString]);
    for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(keys, keys.length, 0, null), [H.getTypeArgumentByIndex(keys, 0)]), t2 = isGlobal !== true, t3 = J.getInterceptor$a(result); t1.moveNext$0();) {
      key = t1._current;
      value = jsMangledNames[key];
      t3.$indexSet(result, key, value);
      if (t2) {
        t4 = J.getInterceptor$s(key);
        if (t4.startsWith$1(key, "get$"))
          t3.$indexSet(result, "set$" + t4.substring$1(key, 4), value + "=");
      }
    }
    return result;
  }, "call$2" /* tearOffInfo */, "computeMangledNames$closure", 4, 0, 495, 496, 497, "computeMangledNames"],
  computeReflectiveNames: [function(map) {
    var result = H.setRuntimeTypeInfo(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [J.JSString, J.JSString]);
    J.forEach$1$a(map, new H.computeReflectiveNames_closure(result));
    return result;
  }, "call$1" /* tearOffInfo */, "computeReflectiveNames$closure", 2, 0, 498, 499, "computeReflectiveNames"],
  extractKeys: [function(victim) {
    var t1 = H.setRuntimeTypeInfo((function(victim, hasOwnProperty) {
  var result = [];
  for (var key in victim) {
    if (hasOwnProperty.call(victim, key)) result.push(key);
  }
  return result;
})(victim, Object.prototype.hasOwnProperty), [null]);
    t1.fixed$length = init;
    return t1;
  }, "call$1" /* tearOffInfo */, "extractKeys$closure", 2, 0, 489, 285, "extractKeys", 367],
  computeReflectiveNames_closure: {
    "": "Closure:1329;result_0-370",
    call$2: [function(mangledName, reflectiveName) {
      J.$indexSet$a(this.result_0, reflectiveName, mangledName);
    }, "call$2" /* tearOffInfo */, null, 4, 0, 1329, 468, 1288, "call"]
  },
  "+computeReflectiveNames_closure": [1060],
  "": "reflectiveGlobalNames<-1821,mangledGlobalNames<-1821,reflectiveNames<-1821,mangledNames<-1821"
}],
["dart.async", "dart:async", , P, {
  "": "",
  _load: [function(libraryName, uri) {
    var t1, t2, future;
    t1 = {};
    t1.uri_0 = uri;
    t2 = $.get$_loadedLibraries();
    future = t2.$index(0, libraryName);
    if (future != null)
      return future.then$1(new P._load_closure());
    if (typeof version == "function" && typeof system == "function") {
      t1 = P.Future_Future(new P._load_closure0(t1), J.JSBool);
      t2.$indexSet(0, libraryName, t1);
      return t1;
    } else if (typeof version == "function" && typeof os == "object" && "system" in os) {
      t1 = P.Future_Future(new P._load_closure1(t1), J.JSBool);
      t2.$indexSet(0, libraryName, t1);
      return t1;
    }
    t1 = P.Future_Future(new P._load_closure2(t1), J.JSBool);
    t2.$indexSet(0, libraryName, t1);
    return t1;
  }, "call$2" /* tearOffInfo */, "_load$closure", 4, 0, 500, 501, 260, "_load"],
  _onDeferredLibraryLoad: [function(completer, $event) {
    completer.complete$1(true);
  }, "call$2" /* tearOffInfo */, "_onDeferredLibraryLoad$closure", 4, 0, 502, 503, 504, "_onDeferredLibraryLoad"],
  _invokeErrorHandler: [function(errorHandler, error, stackTrace) {
    var t1 = H.getDynamicRuntimeType();
    t1 = H.buildFunctionType(t1, [t1, t1])._isTest$1(errorHandler);
    if (t1)
      return errorHandler.call$2(error, stackTrace);
    else
      return errorHandler.call$1(error);
  }, "call$3" /* tearOffInfo */, "_invokeErrorHandler$closure", 6, 0, 505, 506, 507, 508, "_invokeErrorHandler"],
  _registerErrorHandler: [function(errorHandler, zone) {
    var t1 = H.getDynamicRuntimeType();
    t1 = H.buildFunctionType(t1, [t1, t1])._isTest$1(errorHandler);
    if (t1)
      return zone.registerBinaryCallback$1(errorHandler);
    else
      return zone.registerUnaryCallback$1(errorHandler);
  }, "call$2" /* tearOffInfo */, "_registerErrorHandler$closure", 4, 0, 509, 506, 510, "_registerErrorHandler"],
  _asyncRunCallback: [function() {
    var callback, exception, milliseconds;
    for (; J.get$isEmpty$as($.get$_asyncCallbacks()) !== true;) {
      callback = $.get$_asyncCallbacks().removeFirst$0();
      try {
        callback.call$0();
      } catch (exception) {
        H.unwrapException(exception);
        milliseconds = C.Duration_0.get$inMilliseconds();
        H.TimerImpl$(J.$lt$n(milliseconds, 0) ? 0 : milliseconds, P._asyncRunCallback$closure());
        throw exception;
      }

    }
    $._callbacksAreEnqueued = false;
  }, "call$0" /* tearOffInfo */, "_asyncRunCallback$closure", 0, 0, 494, "_asyncRunCallback"],
  _scheduleAsyncCallback: [function(callback) {
    J.add$1$a($.get$_asyncCallbacks(), callback);
    if ($._callbacksAreEnqueued !== true) {
      P._createTimer(C.Duration_0, P._asyncRunCallback$closure());
      $._callbacksAreEnqueued = true;
    }
  }, "call$1" /* tearOffInfo */, "_scheduleAsyncCallback$closure", 2, 0, 251, 277, "_scheduleAsyncCallback"],
  scheduleMicrotask: [function(callback) {
    var t1;
    if (J.$eq($.Zone__current, C.C__RootZone)) {
      $.Zone__current.scheduleMicrotask$1(callback);
      return;
    }
    t1 = $.Zone__current;
    t1.scheduleMicrotask$1(t1.bindCallback$2$runGuarded(callback, true));
  }, "call$1" /* tearOffInfo */, "scheduleMicrotask$closure", 2, 0, 544, 277, "scheduleMicrotask"],
  _runGuarded: [function(notificationHandler) {
    var result, e, s, t1, t2, exception;
    if (notificationHandler == null)
      return;
    try {
      result = notificationHandler.call$0();
      t1 = result;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isFuture)
        return result;
      return;
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      $.Zone__current.handleUncaughtError$2(e, s);
    }

  }, "call$1" /* tearOffInfo */, "_runGuarded$closure", 2, 0, 562, 563, "_runGuarded"],
  _nullDataHandler: [function(value) {
  }, "call$1" /* tearOffInfo */, "_nullDataHandler$closure", 2, 0, 251, 280, "_nullDataHandler"],
  _nullErrorHandler: [function(error, stackTrace) {
    $.Zone__current.handleUncaughtError$2(error, stackTrace);
  }, function(error) {
    return P._nullErrorHandler(error, null);
  }, null, "call$2" /* tearOffInfo */, "call$1" /* tearOffInfo */, "_nullErrorHandler$closure", 2, 2, 573, 370, 507, 508, "_nullErrorHandler"],
  _nullDoneHandler: [function() {
    return;
  }, "call$0" /* tearOffInfo */, "_nullDoneHandler$closure", 0, 0, 494, "_nullDoneHandler"],
  _runUserCode: [function(userCode, onSuccess, onError) {
    var e, s, exception, t1;
    try {
      onSuccess.call$1(userCode.call$0());
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      onError.call$2(e, s);
    }

  }, "call$3" /* tearOffInfo */, "_runUserCode$closure", 6, 0, 578, 579, 580, 581, "_runUserCode"],
  _cancelAndError: [function(subscription, future, error, stackTrace) {
    var cancelFuture, t1;
    cancelFuture = subscription.cancel$0();
    t1 = J.getInterceptor(cancelFuture);
    if (typeof cancelFuture === "object" && cancelFuture !== null && !!t1.$isFuture)
      cancelFuture.whenComplete$1(new P._cancelAndError_closure(future, error, stackTrace));
    else
      future._completeError$2(error, stackTrace);
  }, "call$4" /* tearOffInfo */, "_cancelAndError$closure", 8, 0, 582, 583, 545, 507, 508, "_cancelAndError"],
  _cancelAndErrorClosure: [function(subscription, future) {
    return new P._cancelAndErrorClosure_closure(subscription, future);
  }, "call$2" /* tearOffInfo */, "_cancelAndErrorClosure$closure", 4, 0, 584, 583, 545, "_cancelAndErrorClosure"],
  _cancelAndValue: [function(subscription, future, value) {
    var cancelFuture, t1;
    cancelFuture = subscription.cancel$0();
    t1 = J.getInterceptor(cancelFuture);
    if (typeof cancelFuture === "object" && cancelFuture !== null && !!t1.$isFuture)
      cancelFuture.whenComplete$1(new P._cancelAndValue_closure(future, value));
    else
      future._complete$1(value);
  }, "call$3" /* tearOffInfo */, "_cancelAndValue$closure", 6, 0, 585, 583, 545, 280, "_cancelAndValue"],
  _createTimer: [function(duration, callback) {
    var milliseconds = duration.get$inMilliseconds();
    return H.TimerImpl$(J.$lt$n(milliseconds, 0) ? 0 : milliseconds, callback);
  }, "call$2" /* tearOffInfo */, "_createTimer$closure", 4, 0, 599, 525, 277, "_createTimer"],
  _createPeriodicTimer: [function(duration, callback) {
    var milliseconds = duration.get$inMilliseconds();
    return H.TimerImpl$periodic(J.$lt$n(milliseconds, 0) ? 0 : milliseconds, callback);
  }, "call$2" /* tearOffInfo */, "_createPeriodicTimer$closure", 4, 0, 600, 525, 277, "_createPeriodicTimer"],
  _rootHandleUncaughtError: [function($self, $parent, zone, error, stackTrace) {
    $self.run$1(new P._rootHandleUncaughtError_closure(error, stackTrace));
  }, "call$5" /* tearOffInfo */, "_rootHandleUncaughtError$closure", 10, 0, 623, 624, 620, 510, 507, 508, "_rootHandleUncaughtError"],
  _rootRun: [function($self, $parent, zone, f) {
    var old, t1;
    if (J.$eq($.Zone__current, zone))
      return f.call$0();
    old = $.Zone__current;
    try {
      $.Zone__current = zone;
      t1 = f.call$0();
      return t1;
    } finally {
      $.Zone__current = old;
    }
  }, "call$4" /* tearOffInfo */, "_rootRun$closure", 8, 0, 625, 624, 620, 510, 412, "_rootRun"],
  _rootRunUnary: [function($self, $parent, zone, f, arg) {
    var old, t1;
    if (J.$eq($.Zone__current, zone))
      return f.call$1(arg);
    old = $.Zone__current;
    try {
      $.Zone__current = zone;
      t1 = f.call$1(arg);
      return t1;
    } finally {
      $.Zone__current = old;
    }
  }, "call$5" /* tearOffInfo */, "_rootRunUnary$closure", 10, 0, 626, 624, 620, 510, 412, 627, "_rootRunUnary"],
  _rootRunBinary: [function($self, $parent, zone, f, arg1, arg2) {
    var old, t1;
    if (J.$eq($.Zone__current, zone))
      return f.call$2(arg1, arg2);
    old = $.Zone__current;
    try {
      $.Zone__current = zone;
      t1 = f.call$2(arg1, arg2);
      return t1;
    } finally {
      $.Zone__current = old;
    }
  }, "call$6" /* tearOffInfo */, "_rootRunBinary$closure", 12, 0, 628, 624, 620, 510, 412, 333, 334, "_rootRunBinary"],
  _rootRegisterCallback: [function($self, $parent, zone, f) {
    return f;
  }, "call$4" /* tearOffInfo */, "_rootRegisterCallback$closure", 8, 0, 629, 624, 620, 510, 412, "_rootRegisterCallback"],
  _rootRegisterUnaryCallback: [function($self, $parent, zone, f) {
    return f;
  }, "call$4" /* tearOffInfo */, "_rootRegisterUnaryCallback$closure", 8, 0, 630, 624, 620, 510, 412, "_rootRegisterUnaryCallback"],
  _rootRegisterBinaryCallback: [function($self, $parent, zone, f) {
    return f;
  }, "call$4" /* tearOffInfo */, "_rootRegisterBinaryCallback$closure", 8, 0, 631, 624, 620, 510, 412, "_rootRegisterBinaryCallback"],
  _rootScheduleMicrotask: [function($self, $parent, zone, f) {
    P._scheduleAsyncCallback(C.C__RootZone !== zone ? zone.bindCallback$1(f) : f);
  }, "call$4" /* tearOffInfo */, "_rootScheduleMicrotask$closure", 8, 0, 632, 624, 620, 510, 412, "_rootScheduleMicrotask"],
  _rootCreateTimer: [function($self, $parent, zone, duration, callback) {
    return P._createTimer(duration, C.C__RootZone !== zone ? zone.bindCallback$1(callback) : callback);
  }, "call$5" /* tearOffInfo */, "_rootCreateTimer$closure", 10, 0, 633, 624, 620, 510, 525, 277, "_rootCreateTimer"],
  _rootCreatePeriodicTimer: [function($self, $parent, zone, duration, callback) {
    var milliseconds;
    if (C.C__RootZone !== zone)
      callback = zone.bindUnaryCallback$1(callback);
    milliseconds = duration.get$inMilliseconds();
    return H.TimerImpl$periodic(J.$lt$n(milliseconds, 0) ? 0 : milliseconds, callback);
  }, "call$5" /* tearOffInfo */, "_rootCreatePeriodicTimer$closure", 10, 0, 634, 624, 620, 510, 525, 277, "_rootCreatePeriodicTimer"],
  _rootPrint: [function($self, $parent, zone, line) {
    H.printString(H.S(line));
  }, "call$4" /* tearOffInfo */, "_rootPrint$closure", 8, 0, 635, 624, 620, 510, 636, "_rootPrint"],
  _printToZone: [function(line) {
    $.Zone__current.print$1(line);
  }, "call$1" /* tearOffInfo */, "_printToZone$closure", 2, 0, 281, 636, "_printToZone"],
  _rootFork: [function($self, $parent, zone, specification, zoneValues) {
    var t1, copiedMap;
    $.printToZone = P._printToZone$closure();
    if (specification == null)
      specification = C._ZoneSpecification_woc;
    else {
      t1 = J.getInterceptor(specification);
      if (typeof specification !== "object" || specification === null || !t1.$is_ZoneSpecification)
        throw H.wrapException(new P.ArgumentError("ZoneSpecifications must be instantiated with the provided constructor."));
    }
    copiedMap = P.HashMap_HashMap(null, null, null, null, null);
    if (zoneValues != null)
      J.forEach$1$a(zoneValues, new P._rootFork_closure(copiedMap));
    return new P._CustomizedZone(zone, specification, copiedMap);
  }, "call$5" /* tearOffInfo */, "_rootFork$closure", 10, 0, 637, 624, 620, 510, 638, 639, "_rootFork"],
  runZoned: [function(body, onError, zoneSpecification, zoneValues) {
    var t1, errorHandler, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, zone;
    t1 = onError != null;
    errorHandler = t1 ? new P.runZoned_closure(onError) : null;
    if (zoneSpecification == null)
      zoneSpecification = new P._ZoneSpecification(errorHandler, null, null, null, null, null, null, null, null, null, null, null);
    else {
      t2 = errorHandler != null;
      if (t2) {
        t2 = t2 ? errorHandler : zoneSpecification.get$handleUncaughtError();
        t3 = zoneSpecification.get$run();
        t4 = zoneSpecification.get$runUnary();
        t5 = zoneSpecification.get$runBinary();
        t6 = zoneSpecification.get$registerCallback();
        t7 = zoneSpecification.get$registerUnaryCallback();
        t8 = zoneSpecification.get$registerBinaryCallback();
        t9 = zoneSpecification.get$scheduleMicrotask();
        t10 = zoneSpecification.get$createTimer();
        t11 = zoneSpecification.get$createPeriodicTimer();
        t12 = zoneSpecification.get$print();
        t13 = zoneSpecification.get$fork();
        zoneSpecification = new P._ZoneSpecification(t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13);
      }
    }
    zone = $.Zone__current.fork$2$specification$zoneValues(zoneSpecification, zoneValues);
    if (t1)
      return zone.runGuarded$1(body);
    else
      return zone.run$1(body);
  }, "call$4$onError$zoneSpecification$zoneValues" /* tearOffInfo */, "runZoned$closure", 2, 7, 640, 370, 370, 370, 641, 581, 642, 639, "runZoned"],
  _load_closure: {
    "": "Closure:241;",
    call$1: [function(_) {
      return false;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 820, "call"]
  },
  "+_load_closure": [1060],
  _load_closure0: {
    "": "Closure:319;box_0-370",
    call$0: [function() {
      var t1, t2;
      t1 = this.box_0;
      t2 = t1.uri_0;
      if (t2 == null) {
        t1.uri_0 = "part.js";
        t1 = "part.js";
      } else
        t1 = t2;
      new Function("loadRelativeToScript(\"" + H.S(t1) + "\")")();
      return true;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_load_closure": [1060],
  _load_closure1: {
    "": "Closure:319;box_0-370",
    call$0: [function() {
      var t1, t2, uri, index;
      t1 = this.box_0;
      t2 = t1.uri_0;
      if (t2 == null) {
        uri = H.IsolateNatives_computeThisScriptD8();
        t1.uri_0 = uri;
        index = C.JSString_methods.lastIndexOf$1(uri, "/");
        uri = J.substring$2$s(t1.uri_0, 0, index + 1) + "part.js";
        t1.uri_0 = uri;
        t1 = uri;
      } else
        t1 = t2;
      new Function("load(\"" + H.S(t1) + "\")")();
      return true;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_load_closure": [1060],
  _load_closure2: {
    "": "Closure:319;box_0-370",
    call$0: [function() {
      var t1, completer, uri, index, script;
      t1 = J.JSBool;
      completer = H.setRuntimeTypeInfo(new P._AsyncCompleter(P._Future$(t1)), [t1]);
      t1 = this.box_0;
      if (t1.uri_0 == null) {
        uri = $.get$IsolateNatives_thisScript();
        t1.uri_0 = uri;
        index = J.lastIndexOf$1$as(uri, "/");
        t1.uri_0 = J.substring$2$s(t1.uri_0, 0, J.$add$ns(index, 1)) + "part.js";
      }
      script = document.createElement("script");
      script.type = "text/javascript";
      script.src = t1.uri_0;
      script.addEventListener("load", P._onDeferredLibraryLoad$closure().call$2.bind(null, completer), false);
      document.body.appendChild(script);
      return completer.future;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_load_closure": [1060],
  _AsyncError: {
    "": "Object;error<-370,stackTrace<-1153",
    $isError: true,
    static: {_AsyncError$: [function(error, stackTrace) {
        return new P._AsyncError(error, stackTrace);
      }, null /* tearOffInfo */, null, 4, 0, 511, 507, 508, "new _AsyncError" /* new _AsyncError:2:0 */]}
  },
  "+_AsyncError": [0, 1151],
  _UncaughtAsyncError: {
    "": "_AsyncError;error-370,stackTrace-1153",
    toString$0: [function(_) {
      var result, t1;
      result = "Uncaught Error: " + H.S(this.error);
      t1 = this.stackTrace;
      return t1 != null ? result + ("\nStack Trace:\n" + H.S(t1)) : result;
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {_UncaughtAsyncError$: [function(error, stackTrace) {
        return new P._UncaughtAsyncError(error, P._UncaughtAsyncError__getBestStackTrace(error, stackTrace));
      }, null /* tearOffInfo */, null, 4, 0, 511, 507, 508, "new _UncaughtAsyncError" /* new _UncaughtAsyncError:2:0 */], _UncaughtAsyncError__getBestStackTrace: [function(error, stackTrace) {
        var t1;
        if (stackTrace != null)
          return stackTrace;
        t1 = J.getInterceptor(error);
        if (typeof error === "object" && error !== null && !!t1.$isError)
          return error.get$stackTrace();
        return;
      }, "call$2" /* tearOffInfo */, "_UncaughtAsyncError__getBestStackTrace$closure", 4, 0, 512, 507, 508, "_getBestStackTrace"]}
  },
  "+_UncaughtAsyncError": [1330],
  _BroadcastStream: {
    "": "_ControllerStream;_async$_controller-1331",
    get$isBroadcast: [function() {
      return true;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isBroadcast"],
    $as_ControllerStream: null,
    "<>": [115],
    static: {_BroadcastStream$: [function(controller, $T) {
        return H.setRuntimeTypeInfo(new P._BroadcastStream(controller), [$T]);
      }, null /* tearOffInfo */, null, 2, 0, 513, 514, "new _BroadcastStream" /* new _BroadcastStream:1:0 */]}
  },
  "+_BroadcastStream": [1332],
  _BroadcastSubscriptionLink: {
    "": "Object;_async$_next@-1333,_async$_previous@-1333"
  },
  "+_BroadcastSubscriptionLink": [0],
  _BroadcastSubscription: {
    "": "_ControllerSubscription;_eventState@-1075,_async$_next@-1333,_async$_previous@-1333,_async$_controller-1334,_onData-1335,_onError-1098,_onDone-494,_zone-1336,_state-1075,_cancelFuture-1337,_pending-1338",
    get$_async$_controller: [function() {
      return this._async$_controller;
    }, null /* tearOffInfo */, null, 1, 0, 1339, "_controller"],
    _expectsEvent$1: [function(eventId) {
      return J.$and$n(this._eventState, 1) === eventId;
    }, "call$1" /* tearOffInfo */, "get$_expectsEvent", 2, 0, 246, 1340, "_expectsEvent"],
    _toggleEventId$0: [function() {
      this._eventState = J.$xor$n(this._eventState, 1);
    }, "call$0" /* tearOffInfo */, "get$_toggleEventId", 0, 0, 494, "_toggleEventId"],
    get$_isFiring: [function() {
      return J.$and$n(this._eventState, 2) !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_isFiring"],
    _setRemoveAfterFiring$0: [function() {
      this._eventState = J.$or$n(this._eventState, 4);
    }, "call$0" /* tearOffInfo */, "get$_setRemoveAfterFiring", 0, 0, 849, "_setRemoveAfterFiring"],
    get$_removeAfterFiring: [function() {
      return J.$and$n(this._eventState, 4) !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_removeAfterFiring"],
    _onPause$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, "get$_onPause", 0, 0, 494, "_onPause"],
    _onResume$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, "get$_onResume", 0, 0, 494, "_onResume"],
    $as_ControllerSubscription: null,
    $asStreamSubscription: null,
    "<>": [114],
    static: {"": "_BroadcastSubscription__STATE_EVENT_ID<-1075,_BroadcastSubscription__STATE_FIRING<-1075,_BroadcastSubscription__STATE_REMOVE_AFTER_FIRING<-1075", _BroadcastSubscription$: [function(controller, cancelOnError, $T) {
        var t1, t2;
        t1 = $.Zone__current;
        t2 = cancelOnError === true ? 1 : 0;
        t2 = H.setRuntimeTypeInfo(new P._BroadcastSubscription(null, null, null, controller, null, null, null, t1, t2, null, null), [$T]);
        t2._async$_previous = t2;
        t2._async$_next = t2;
        return t2;
      }, null /* tearOffInfo */, null, 4, 0, 515, 514, 516, "new _BroadcastSubscription" /* new _BroadcastSubscription:2:0 */]}
  },
  "+_BroadcastSubscription": [1341, 1333],
  _BroadcastStreamController: {
    "": "Object;_onListen<-319,_onCancel<-319,_state@-1075,_async$_next@-1333,_async$_previous@-1333,_addStreamState@-1342,_doneFuture@-1343",
    _onListen$1: function(arg0) {
      return this._onListen.call$1(arg0);
    },
    _onListen$0: function() {
      return this._onListen.call$0();
    },
    _onCancel$0: function() {
      return this._onCancel.call$0();
    },
    get$stream: [function() {
      var t1 = new P._BroadcastStream(this);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Stream_", ret: [P.Stream, T]};
      }, this.$receiver, "_BroadcastStreamController");
    }, "stream"],
    get$sink: [function() {
      var t1 = new P._StreamSinkWrapper(this);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "StreamSink_", ret: [P.StreamSink, T]};
      }, this.$receiver, "_BroadcastStreamController");
    }, "sink"],
    get$isClosed: [function() {
      return J.$and$n(this._state, 4) !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isClosed"],
    get$isPaused: [function() {
      return false;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isPaused"],
    get$hasListener: [function() {
      return this._async$_next !== this;
    }, null /* tearOffInfo */, null, 1, 0, 849, "hasListener"],
    get$_hasOneListener: [function() {
      return this._async$_next.get$_async$_next() === this;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_hasOneListener"],
    get$_isFiring: [function() {
      return J.$and$n(this._state, 2) !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_isFiring"],
    get$_isAddingStream: [function() {
      return J.$and$n(this._state, 8) !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_isAddingStream"],
    get$_mayAddEvent: [function() {
      return J.$lt$n(this._state, 4);
    }, null /* tearOffInfo */, null, 1, 0, 849, "_mayAddEvent"],
    _ensureDoneFuture$0: [function() {
      var t1 = this._doneFuture;
      if (t1 != null)
        return t1;
      t1 = P._Future$(null);
      this._doneFuture = t1;
      return t1;
    }, "call$0" /* tearOffInfo */, "get$_ensureDoneFuture", 0, 0, 1344, "_ensureDoneFuture"],
    get$_isEmpty: [function() {
      return this._async$_next === this;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_isEmpty"],
    _addListener$1: [function(subscription) {
      subscription.set$_async$_previous(this._async$_previous);
      subscription.set$_async$_next(this);
      this._async$_previous.set$_async$_next(subscription);
      this._async$_previous = subscription;
      subscription.set$_eventState(J.$and$n(this._state, 1));
    }, "call$1" /* tearOffInfo */, "get$_addListener", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void___BroadcastSubscription", void: true, args: [[P._BroadcastSubscription, T]]};
      }, this.$receiver, "_BroadcastStreamController");
    }, 583, "_addListener"],
    _removeListener$1: [function(subscription) {
      var previous, next;
      previous = subscription.get$_async$_previous();
      next = subscription.get$_async$_next();
      previous.set$_async$_next(next);
      next.set$_async$_previous(previous);
      subscription.set$_async$_previous(subscription);
      subscription.set$_async$_next(subscription);
    }, "call$1" /* tearOffInfo */, "get$_removeListener", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void___BroadcastSubscription", void: true, args: [[P._BroadcastSubscription, T]]};
      }, this.$receiver, "_BroadcastStreamController");
    }, 583, "_removeListener"],
    _subscribe$1: [function(cancelOnError) {
      var t1, t2, subscription;
      if (J.$and$n(this._state, 4) !== 0)
        throw H.wrapException(new P.StateError("Subscribing to closed stream"));
      t1 = $.Zone__current;
      t2 = cancelOnError === true ? 1 : 0;
      subscription = new P._BroadcastSubscription(null, null, null, this, null, null, null, t1, t2, null, null);
      subscription.$builtinTypeInfo = this.$builtinTypeInfo;
      subscription._async$_previous = subscription;
      subscription._async$_next = subscription;
      t2 = this._async$_previous;
      subscription._async$_previous = t2;
      subscription._async$_next = this;
      t2.set$_async$_next(subscription);
      this._async$_previous = subscription;
      subscription._eventState = J.$and$n(this._state, 1);
      t1 = this._async$_next;
      t2 = this._async$_previous;
      if (t1 == null ? t2 == null : t1 === t2)
        P._runGuarded(this._onListen);
      return subscription;
    }, "call$1" /* tearOffInfo */, "get$_subscribe", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "StreamSubscription__bool", ret: [P.StreamSubscription, T], args: [J.JSBool]};
      }, this.$receiver, "_BroadcastStreamController");
    }, 516, "_subscribe"],
    _recordCancel$1: [function(subscription) {
      var t1 = subscription.get$_async$_next();
      if (t1 == null ? subscription == null : t1 === subscription)
        return;
      if (subscription.get$_isFiring())
        subscription._setRemoveAfterFiring$0();
      else {
        this._removeListener$1(subscription);
        if (J.$and$n(this._state, 2) === 0 && this._async$_next === this)
          this._callOnCancel$0();
      }
    }, "call$1" /* tearOffInfo */, "get$_recordCancel", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future___BroadcastSubscription", ret: P.Future, args: [[P._BroadcastSubscription, T]]};
      }, this.$receiver, "_BroadcastStreamController");
    }, 583, "_recordCancel"],
    _recordPause$1: [function(subscription) {
    }, "call$1" /* tearOffInfo */, "get$_recordPause", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__StreamSubscription0", void: true, args: [[P.StreamSubscription, T]]};
      }, this.$receiver, "_BroadcastStreamController");
    }, 583, "_recordPause"],
    _recordResume$1: [function(subscription) {
    }, "call$1" /* tearOffInfo */, "get$_recordResume", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__StreamSubscription0", void: true, args: [[P.StreamSubscription, T]]};
      }, this.$receiver, "_BroadcastStreamController");
    }, 583, "_recordResume"],
    _addEventError$0: [function() {
      if (J.$and$n(this._state, 4) !== 0)
        return new P.StateError("Cannot add new events after calling close");
      return new P.StateError("Cannot add new events while doing an addStream");
    }, "call$0" /* tearOffInfo */, "get$_addEventError", 0, 0, 1345, "_addEventError"],
    add$1: [function(_, data) {
      if (!J.$lt$n(this._state, 4))
        throw H.wrapException(this._addEventError$0());
      this._sendData$1(data);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T0", void: true, args: [T]};
      }, this.$receiver, "_BroadcastStreamController");
    }, 546, "add"],
    addError$2: [function(error, stackTrace) {
      if (!J.$lt$n(this._state, 4))
        throw H.wrapException(this._addEventError$0());
      this._sendError$2(error, stackTrace);
    }, function(error) {
      return this.addError$2(error, null);
    }, "addError$1", "call$2" /* tearOffInfo */, "call$1" /* tearOffInfo */, "get$addError", 2, 2, 1346, 370, 507, 508, "addError"],
    close$0: [function() {
      if (J.$and$n(this._state, 4) !== 0)
        return this._doneFuture;
      if (!J.$lt$n(this._state, 4))
        throw H.wrapException(this._addEventError$0());
      this._state = J.$or$n(this._state, 4);
      var doneFuture = this._ensureDoneFuture$0();
      this._sendDone$0();
      return doneFuture;
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 1347, "close"],
    get$done: [function() {
      return this._ensureDoneFuture$0();
    }, null /* tearOffInfo */, null, 1, 0, 1347, "done"],
    addStream$2$cancelOnError: [function(stream, cancelOnError) {
      var t1;
      if (!J.$lt$n(this._state, 4))
        throw H.wrapException(this._addEventError$0());
      this._state = J.$or$n(this._state, 8);
      t1 = P._AddStreamState$(this, stream, cancelOnError, null);
      this._addStreamState = t1;
      return t1.addStreamFuture;
    }, function(stream) {
      return this.addStream$2$cancelOnError(stream, true);
    }, "addStream$1", "call$2$cancelOnError" /* tearOffInfo */, null /* tearOffInfo */, "get$addStream", 2, 3, function() {
      return H.computeSignature(function(T) {
        return {func: "Future__Stream__bool", ret: P.Future, args: [[P.Stream, T]], named: {cancelOnError: J.JSBool}};
      }, this.$receiver, "_BroadcastStreamController");
    }, 816, 553, 516, "addStream"],
    _add$1: [function(data) {
      this._sendData$1(data);
    }, "call$1" /* tearOffInfo */, "get$_add", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T0", void: true, args: [T]};
      }, this.$receiver, "_BroadcastStreamController");
    }, 546, "_add"],
    _addError$2: [function(error, stackTrace) {
      this._sendError$2(error, stackTrace);
    }, "call$2" /* tearOffInfo */, "get$_addError", 4, 0, 1348, 507, 508, "_addError"],
    _close$0: [function() {
      var addState = this._addStreamState;
      this._addStreamState = null;
      this._state = J.$and$n(this._state, 4294967287);
      addState.complete$0();
    }, "call$0" /* tearOffInfo */, "get$_close", 0, 0, 494, "_close"],
    _forEachListener$1: [function(action) {
      var id, link, link0;
      if (J.$and$n(this._state, 2) !== 0)
        throw H.wrapException(P.StateError$("Cannot fire new event. Controller is already firing an event"));
      if (this._async$_next === this)
        return;
      id = J.$and$n(this._state, 1);
      this._state = J.$xor$n(this._state, 3);
      link = this._async$_next;
      for (; link !== this;)
        if (link._expectsEvent$1(id)) {
          link.set$_eventState(J.$or$n(link.get$_eventState(), 2));
          action.call$1(link);
          link._toggleEventId$0();
          link0 = link.get$_async$_next();
          if (link.get$_removeAfterFiring())
            this._removeListener$1(link);
          link.set$_eventState(J.$and$n(link.get$_eventState(), 4294967293));
          link = link0;
        } else
          link = link.get$_async$_next();
      this._state = J.$and$n(this._state, 4294967293);
      if (this._async$_next === this)
        this._callOnCancel$0();
    }, "call$1" /* tearOffInfo */, "get$_forEachListener", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__void___BufferingStreamSubscription", void: true, args: [{func: "void___BufferingStreamSubscription", void: true, args: [[P._BufferingStreamSubscription, T]]}]};
      }, this.$receiver, "_BroadcastStreamController");
    }, 1174, "_forEachListener"],
    _callOnCancel$0: [function() {
      if (J.$and$n(this._state, 4) !== 0 && this._doneFuture.get$_mayComplete())
        this._doneFuture._asyncComplete$1(null);
      P._runGuarded(this._onCancel);
    }, "call$0" /* tearOffInfo */, "get$_callOnCancel", 0, 0, 494, "_callOnCancel"],
    "<>": [112],
    static: {"": "_BroadcastStreamController__STATE_INITIAL<-1075,_BroadcastStreamController__STATE_EVENT_ID<-1075,_BroadcastStreamController__STATE_FIRING<-1075,_BroadcastStreamController__STATE_CLOSED<-1075,_BroadcastStreamController__STATE_ADDSTREAM<-1075", _BroadcastStreamController$: [function(_onListen, _onCancel, $T) {
        var t1 = H.setRuntimeTypeInfo(new P._BroadcastStreamController(_onListen, _onCancel, 0, null, null, null, null), [$T]);
        t1._async$_previous = t1;
        t1._async$_next = t1;
        return t1;
      }, null /* tearOffInfo */, null, 4, 0, 517, 518, 519, "new _BroadcastStreamController" /* new _BroadcastStreamController:2:0 */]}
  },
  "+_BroadcastStreamController": [0, 1349, 1350, 1333, 1351, 1352],
  _SyncBroadcastStreamController: {
    "": "_BroadcastStreamController;_onListen-319,_onCancel-319,_state-1075,_async$_next-1333,_async$_previous-1333,_addStreamState-1342,_doneFuture-1343",
    _sendData$1: [function(data) {
      var t1 = this._async$_next;
      if (t1 === this)
        return;
      if (t1.get$_async$_next() === this) {
        this._state = J.$or$n(this._state, 2);
        this._async$_next._add$1(data);
        this._state = J.$and$n(this._state, 4294967293);
        if (this._async$_next === this)
          this._callOnCancel$0();
        return;
      }
      this._forEachListener$1(new P._SyncBroadcastStreamController__sendData_closure(this, data));
    }, "call$1" /* tearOffInfo */, "get$_sendData", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T1", void: true, args: [T]};
      }, this.$receiver, "_SyncBroadcastStreamController");
    }, 546, "_sendData"],
    _sendError$2: [function(error, stackTrace) {
      if (this._async$_next === this)
        return;
      this._forEachListener$1(new P._SyncBroadcastStreamController__sendError_closure(this, error, stackTrace));
    }, "call$2" /* tearOffInfo */, "get$_sendError", 4, 0, 1348, 507, 508, "_sendError"],
    _sendDone$0: [function() {
      if (this._async$_next !== this)
        this._forEachListener$1(new P._SyncBroadcastStreamController__sendDone_closure(this));
      else
        this._doneFuture._asyncComplete$1(null);
    }, "call$0" /* tearOffInfo */, "get$_sendDone", 0, 0, 494, "_sendDone"],
    $as_BroadcastStreamController: null,
    "<>": [111],
    static: {_SyncBroadcastStreamController$: [function(onListen, onCancel, $T) {
        var t1 = H.setRuntimeTypeInfo(new P._SyncBroadcastStreamController(onListen, onCancel, 0, null, null, null, null), [$T]);
        t1._async$_previous = t1;
        t1._async$_next = t1;
        return t1;
      }, null /* tearOffInfo */, null, 4, 0, 520, 521, 522, "new _SyncBroadcastStreamController" /* new _SyncBroadcastStreamController:2:0 */]}
  },
  "+_SyncBroadcastStreamController": [1353],
  _SyncBroadcastStreamController__sendData_closure: {
    "": "Closure;this_0-370,data_1-1354",
    call$1: [function(subscription) {
      subscription._add$1(this.data_1);
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic___BufferingStreamSubscription", args: [[P._BufferingStreamSubscription, T]]};
      }, this.$receiver, "_SyncBroadcastStreamController");
    }, 583, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic___BufferingStreamSubscription", args: [[P._BufferingStreamSubscription, T]]};
      }, this.this_0, "_SyncBroadcastStreamController");
    }
  },
  "+_SyncBroadcastStreamController__sendData_closure": [1060],
  _SyncBroadcastStreamController__sendError_closure: {
    "": "Closure;this_0-370,error_1-0,stackTrace_2-1153",
    call$1: [function(subscription) {
      subscription._addError$2(this.error_1, this.stackTrace_2);
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic___BufferingStreamSubscription", args: [[P._BufferingStreamSubscription, T]]};
      }, this.$receiver, "_SyncBroadcastStreamController");
    }, 583, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic___BufferingStreamSubscription", args: [[P._BufferingStreamSubscription, T]]};
      }, this.this_0, "_SyncBroadcastStreamController");
    }
  },
  "+_SyncBroadcastStreamController__sendError_closure": [1060],
  _SyncBroadcastStreamController__sendDone_closure: {
    "": "Closure;this_0-370",
    call$1: [function(subscription) {
      subscription._close$0();
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic___BroadcastSubscription", args: [[P._BroadcastSubscription, T]]};
      }, this.$receiver, "_SyncBroadcastStreamController");
    }, 583, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic___BroadcastSubscription", args: [[P._BroadcastSubscription, T]]};
      }, this.this_0, "_SyncBroadcastStreamController");
    }
  },
  "+_SyncBroadcastStreamController__sendDone_closure": [1060],
  _AsyncBroadcastStreamController: {
    "": "_BroadcastStreamController;_onListen-319,_onCancel-319,_state-1075,_async$_next-1333,_async$_previous-1333,_addStreamState-1342,_doneFuture-1343",
    _sendData$1: [function(data) {
      var link, t1;
      for (link = this._async$_next; link !== this; link = link.get$_async$_next()) {
        t1 = new P._DelayedData(data, null);
        t1.$builtinTypeInfo = [null];
        link._addPending$1(t1);
      }
    }, "call$1" /* tearOffInfo */, "get$_sendData", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T2", void: true, args: [T]};
      }, this.$receiver, "_AsyncBroadcastStreamController");
    }, 546, "_sendData"],
    _sendError$2: [function(error, stackTrace) {
      var link;
      for (link = this._async$_next; link !== this; link = link.get$_async$_next())
        link._addPending$1(new P._DelayedError(error, stackTrace, null));
    }, "call$2" /* tearOffInfo */, "get$_sendError", 4, 0, 1348, 507, 508, "_sendError"],
    _sendDone$0: [function() {
      var link = this._async$_next;
      if (link !== this)
        for (; link !== this; link = link.get$_async$_next())
          link._addPending$1(C.C__DelayedDone);
      else
        this._doneFuture._asyncComplete$1(null);
    }, "call$0" /* tearOffInfo */, "get$_sendDone", 0, 0, 494, "_sendDone"],
    $as_BroadcastStreamController: null,
    "<>": [113],
    static: {_AsyncBroadcastStreamController$: [function(onListen, onCancel, $T) {
        var t1 = H.setRuntimeTypeInfo(new P._AsyncBroadcastStreamController(onListen, onCancel, 0, null, null, null, null), [$T]);
        t1._async$_previous = t1;
        t1._async$_next = t1;
        return t1;
      }, null /* tearOffInfo */, null, 4, 0, 520, 521, 522, "new _AsyncBroadcastStreamController" /* new _AsyncBroadcastStreamController:2:0 */]}
  },
  "+_AsyncBroadcastStreamController": [1355],
  _AsBroadcastStreamController: {
    "": "_SyncBroadcastStreamController;_pending@-1356,_onListen-319,_onCancel-319,_state-1075,_async$_next-1333,_async$_previous-1333,_addStreamState-1342,_doneFuture-1343",
    get$_hasPending: [function() {
      var t1 = this._pending;
      return t1 != null && J.get$isEmpty$as(t1) !== true;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_hasPending"],
    _addPendingEvent$1: [function($event) {
      var t1 = this._pending;
      if (t1 == null) {
        t1 = new P._StreamImplEvents(null, null, 0);
        this._pending = t1;
      }
      J.add$1$a(t1, $event);
    }, "call$1" /* tearOffInfo */, "get$_addPendingEvent", 2, 0, 1357, 504, "_addPendingEvent"],
    add$1: [function(_, data) {
      var t1;
      if (J.$and$n(this._state, 4) === 0 && J.$and$n(this._state, 2) !== 0) {
        t1 = new P._DelayedData(data, null);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        this._addPendingEvent$1(t1);
        return;
      }
      P._BroadcastStreamController.prototype.add$1.call(this, this, data);
      while (true) {
        t1 = this._pending;
        if (!(t1 != null && J.get$isEmpty$as(t1) !== true))
          break;
        this._pending.handleNext$1(this);
      }
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T3", void: true, args: [T]};
      }, this.$receiver, "_AsBroadcastStreamController");
    }, 546, "add"],
    addError$2: [function(error, stackTrace) {
      var t1;
      if (J.$and$n(this._state, 4) === 0 && J.$and$n(this._state, 2) !== 0) {
        this._addPendingEvent$1(new P._DelayedError(error, stackTrace, null));
        return;
      }
      P._BroadcastStreamController.prototype.addError$2.call(this, error, stackTrace);
      while (true) {
        t1 = this._pending;
        if (!(t1 != null && J.get$isEmpty$as(t1) !== true))
          break;
        this._pending.handleNext$1(this);
      }
    }, function(error) {
      return this.addError$2(error, null);
    }, "addError$1", "call$2" /* tearOffInfo */, "call$1" /* tearOffInfo */, "get$addError", 2, 2, 1346, 370, 507, 508, "addError"],
    close$0: [function() {
      if (J.$and$n(this._state, 4) === 0 && J.$and$n(this._state, 2) !== 0) {
        this._addPendingEvent$1(C.C__DelayedDone);
        this._state = J.$or$n(this._state, 4);
        return P._BroadcastStreamController.prototype.get$done.call(this);
      }
      return P._BroadcastStreamController.prototype.close$0.call(this);
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 1347, "close"],
    _callOnCancel$0: [function() {
      var t1 = this._pending;
      if (t1 != null && J.get$isEmpty$as(t1) !== true) {
        J.clear$0$a(this._pending);
        this._pending = null;
      }
      P._BroadcastStreamController.prototype._callOnCancel$0.call(this);
    }, "call$0" /* tearOffInfo */, "get$_callOnCancel", 0, 0, 494, "_callOnCancel"],
    $as_SyncBroadcastStreamController: null,
    "<>": [142],
    static: {_AsBroadcastStreamController$: [function(onListen, onCancel, $T) {
        var t1 = H.setRuntimeTypeInfo(new P._AsBroadcastStreamController(null, onListen, onCancel, 0, null, null, null, null), [$T]);
        t1._async$_previous = t1;
        t1._async$_next = t1;
        return t1;
      }, null /* tearOffInfo */, null, 4, 0, 520, 521, 522, "new _AsBroadcastStreamController" /* new _AsBroadcastStreamController:2:0 */]}
  },
  "+_AsBroadcastStreamController": [1358, 1359],
  _DoneSubscription: {
    "": "Object;_pauseCount@-1075",
    onData$1: [function(handleData) {
    }, "call$1" /* tearOffInfo */, "get$onData", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__void__T", void: true, args: [{func: "void__T4", void: true, args: [T]}]};
      }, this.$receiver, "_DoneSubscription");
    }, 551, "onData"],
    onError$1: [function(handleError) {
    }, "call$1" /* tearOffInfo */, "get$onError", 2, 0, 1113, 294, "onError"],
    onDone$1: [function(handleDone) {
    }, "call$1" /* tearOffInfo */, "get$onDone", 2, 0, 544, 552, "onDone"],
    pause$1: [function(resumeSignal) {
      if (resumeSignal != null)
        resumeSignal.then$1(this.get$_resume());
      this._pauseCount = J.$add$ns(this._pauseCount, 1);
    }, function() {
      return this.pause$1(null);
    }, "pause$0", "call$1" /* tearOffInfo */, null /* tearOffInfo */, "get$pause", 0, 2, 1360, 370, 1361, "pause"],
    resume$0: [function() {
      if (J.$gt$n(this._pauseCount, 0))
        this._pauseCount = J.$sub$n(this._pauseCount, 1);
    }, "call$0" /* tearOffInfo */, "get$resume", 0, 0, 494, "resume"],
    _resume$1: [function(_) {
      if (J.$gt$n(this._pauseCount, 0))
        this._pauseCount = J.$sub$n(this._pauseCount, 1);
    }, "call$1" /* tearOffInfo */, "get$_resume", 2, 0, 251, 820, "_resume"],
    cancel$0: [function() {
      return P._Future$immediate(null, null);
    }, "call$0" /* tearOffInfo */, "get$cancel", 0, 0, 1347, "cancel"],
    get$isPaused: [function() {
      return J.$gt$n(this._pauseCount, 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isPaused"],
    asFuture$1: [function(value) {
      return P._Future$(null);
    }, "call$1" /* tearOffInfo */, "get$asFuture", 0, 2, 1362, 370, 280, "asFuture"],
    $isStreamSubscription: true,
    "<>": [229]
  },
  "+_DoneSubscription": [0, 1363],
  DeferredLibrary: {
    "": "Object;libraryName<-1039,uri<-1039",
    load$0: [function() {
      return P._load(this.libraryName, this.uri);
    }, "call$0" /* tearOffInfo */, "get$load", 0, 0, 1364, "load"],
    static: {DeferredLibrary$: [function(libraryName, uri) {
        return new P.DeferredLibrary(libraryName, uri);
      }, null /* tearOffInfo */, null, 2, 3, 523, 370, 501, 260, "new DeferredLibrary" /* new DeferredLibrary:1:1:uri */]}
  },
  "+DeferredLibrary": [0],
  Future: {
    "": "Object;",
    $isFuture: true,
    "<>": [57],
    static: {Future_Future: [function(computation, $T) {
        var result = P._Future$($T);
        P.Timer_Timer(C.Duration_0, new P.Future_Future_closure(computation, result));
        return result;
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "Future__args0", ret: [P.Future, T], args: [{func: "args0"}]};
        }, this.$receiver, "Future");
      }, 524, "new Future" /* new Future:1:0 */], Future_Future$microtask: [function(computation, $T) {
        var result = P._Future$($T);
        P.scheduleMicrotask(new P.Future_Future$microtask_closure(computation, result));
        return result;
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "Future__args0", ret: [P.Future, T], args: [{func: "args0"}]};
        }, this.$receiver, "Future");
      }, 524, "new Future$microtask" /* new Future$microtask:1:0 */], Future_Future$sync: [function(computation, $T) {
        var result, T0, error, stackTrace, t1, exception;
        try {
          result = computation.call$0();
          t1 = P._Future$immediate(result, T0);
          return t1;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          error = t1;
          stackTrace = new H._StackTrace(exception, null);
          return P._Future$immediateError(error, stackTrace, T0);
        }

      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "Future__args0", ret: [P.Future, T], args: [{func: "args0"}]};
        }, this.$receiver, "Future");
      }, 524, "new Future$sync" /* new Future$sync:1:0 */], Future_Future$value: [function(value, $T) {
        return P._Future$immediate(value, $T);
      }, "call$1" /* tearOffInfo */, null, 0, 2, function() {
        return H.computeSignature(function(T) {
          return {func: "Future___dynamic", ret: [P.Future, T], opt: [null]};
        }, this.$receiver, "Future");
      }, 370, 280, "new Future$value" /* new Future$value:1:0 */], Future_Future$error: [function(error, stackTrace, $T) {
        return P._Future$immediateError(error, stackTrace, $T);
      }, "call$2" /* tearOffInfo */, null, 2, 2, function() {
        return H.computeSignature(function(T) {
          return {func: "Future__Object__StackTrace", ret: [P.Future, T], args: [P.Object], opt: [P.StackTrace]};
        }, this.$receiver, "Future");
      }, 370, 507, 508, "new Future$error" /* new Future$error:2:0 */], Future_Future$delayed: [function(duration, computation, $T) {
        var completer, result;
        completer = H.setRuntimeTypeInfo(new P._SyncCompleter(P._Future$(null)), [null]);
        result = completer.future;
        if (computation != null)
          result = result.then$1(new P.Future_Future$delayed_closure(computation));
        P.Timer_Timer(duration, new P.Future_Future$delayed_closure0(completer));
        return result;
      }, "call$2" /* tearOffInfo */, null, 2, 2, function() {
        return H.computeSignature(function(T) {
          return {func: "Future__Duration__T_", ret: [P.Future, T], args: [P.Duration], opt: [{func: "T_", ret: T}]};
        }, this.$receiver, "Future");
      }, 370, 525, 524, "new Future$delayed" /* new Future$delayed:2:0 */], Future_wait: [function(futures, eagerError) {
        var t1, t2, t3, future, pos, values, completer;
        t1 = {};
        t1.completer_0 = null;
        t1.values_1 = null;
        t1.remaining_2 = 0;
        t1.error_3 = null;
        t1.stackTrace_4 = null;
        t2 = new P.Future_wait_handleError(t1, eagerError);
        for (t3 = J.get$iterator$a(futures); t3.moveNext$0() === true;) {
          future = t3.get$current();
          pos = t1.remaining_2;
          t1.remaining_2 = J.$add$ns(pos, 1);
          future.then$2$onError(new P.Future_wait_closure(t1, eagerError, pos), t2);
        }
        if (J.$eq(t1.remaining_2, 0))
          return P._Future$immediate(C.List_empty0, null);
        t2 = t1.remaining_2;
        if (typeof t2 !== "number")
          return H.iae(t2);
        values = Array(t2);
        values.fixed$length = init;
        t1.values_1 = values;
        t2 = J.JSArray;
        completer = H.setRuntimeTypeInfo(new P._AsyncCompleter(P._Future$(t2)), [t2]);
        t1.completer_0 = completer;
        return completer.future;
      }, "call$2$eagerError" /* tearOffInfo */, "Future_wait$closure", 2, 3, 526, 527, 528, 529, "wait"], Future_forEach: [function(input, f) {
        var doneSignal = P._Future$(null);
        new P.Future_forEach_nextElement(f, doneSignal, J.get$iterator$a(input)).call$1(null);
        return doneSignal;
      }, "call$2" /* tearOffInfo */, "Future_forEach$closure", 4, 0, 530, 531, 412, "forEach"]}
  },
  "+Future": [0],
  Future_Future_closure: {
    "": "Closure:319;computation_0-319,result_1-1343",
    call$0: [function() {
      var e, s, exception, t1;
      try {
        this.result_1._complete$1(this.computation_0.call$0());
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        this.result_1._completeError$2(e, s);
      }

    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Future_Future_closure": [1060],
  Future_Future$microtask_closure: {
    "": "Closure:319;computation_0-319,result_1-1343",
    call$0: [function() {
      var e, s, exception, t1;
      try {
        this.result_1._complete$1(this.computation_0.call$0());
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        this.result_1._completeError$2(e, s);
      }

    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Future_Future$microtask_closure": [1060],
  Future_Future$delayed_closure: {
    "": "Closure:241;computation_0-1365",
    call$1: [function(ignored) {
      return this.computation_0.call$0();
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1366, "call"]
  },
  "+Future_Future$delayed_closure": [1060],
  Future_Future$delayed_closure0: {
    "": "Closure:319;completer_1-1367",
    call$0: [function() {
      var t1 = this.completer_1;
      if (!t1.get$future().get$_mayComplete())
        H.throwExpression(new P.StateError("Future already completed"));
      t1.get$future()._complete$1(null);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Future_Future$delayed_closure": [1060],
  Future_wait_handleError: {
    "": "Closure:311;box_0-370,eagerError_1-1043",
    call$2: [function(theError, theStackTrace) {
      var t1, t2, remaining;
      t1 = this.box_0;
      t2 = t1.values_1;
      t1.values_1 = null;
      remaining = J.$sub$n(t1.remaining_2, 1);
      t1.remaining_2 = remaining;
      if (t2 != null)
        if (J.$eq(remaining, 0) || this.eagerError_1 === true)
          t1.completer_0.completeError$2(theError, theStackTrace);
        else {
          t1.error_3 = theError;
          t1.stackTrace_4 = theStackTrace;
        }
      else if (J.$eq(remaining, 0) && this.eagerError_1 !== true)
        t1.completer_0.completeError$2(t1.error_3, t1.stackTrace_4);
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 1368, 1369, "call"]
  },
  "+Future_wait_handleError": [1060],
  Future_wait_closure: {
    "": "Closure:362;box_0-370,eagerError_2-1043,pos_3-1075",
    call$1: [function(value) {
      var t1, remaining, t2;
      t1 = this.box_0;
      remaining = J.$sub$n(t1.remaining_2, 1);
      t1.remaining_2 = remaining;
      t2 = t1.values_1;
      if (t2 != null) {
        J.$indexSet$a(t2, this.pos_3, value);
        if (J.$eq(t1.remaining_2, 0))
          t1.completer_0.complete$1(t1.values_1);
      } else if (J.$eq(remaining, 0) && this.eagerError_2 !== true)
        t1.completer_0.completeError$2(t1.error_3, t1.stackTrace_4);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 362, 280, "call"]
  },
  "+Future_wait_closure": [1060],
  Future_forEach_nextElement: {
    "": "Closure:251;f_0-1370,doneSignal_1-1343,iterator_2-1371",
    call$1: [function(_) {
      var t1, t2;
      t1 = this.iterator_2;
      t2 = this.doneSignal_1;
      if (t1.moveNext$0() === true)
        P.Future_Future$sync(new P.Future_forEach_nextElement_closure(this.f_0, t1), null).then$2$onError(this, t2.get$_completeError());
      else
        t2._complete$1(null);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 251, 820, "call"]
  },
  "+Future_forEach_nextElement": [1060],
  Future_forEach_nextElement_closure: {
    "": "Closure:319;f_3-1370,iterator_4-1371",
    call$0: [function() {
      return this.f_3.call$1(this.iterator_4.get$current());
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Future_forEach_nextElement_closure": [1060],
  TimeoutException: {
    "": "Object;message<-1039,duration<-1372",
    toString$0: [function(_) {
      var t1, t2;
      t1 = this.message;
      if (t1 != null) {
        t2 = this.duration;
        if (t2 != null)
          return "TimeoutException after " + H.S(t2) + ": " + H.S(t1);
        return "TimeoutException: " + H.S(t1);
      }
      t1 = this.duration;
      if (t1 != null)
        return "TimeoutException after " + H.S(t1);
      return "TimeoutException";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {TimeoutException$: [function(message, duration) {
        return new P.TimeoutException(message, duration);
      }, null /* tearOffInfo */, null, 2, 2, 532, 370, 262, 525, "new TimeoutException" /* new TimeoutException:2:0 */]}
  },
  "+TimeoutException": [0, 1373],
  Completer: {
    "": "Object;",
    "<>": [143],
    static: {Completer_Completer: [function($T) {
        return H.setRuntimeTypeInfo(new P._AsyncCompleter(P._Future$($T)), [$T]);
      }, "call$0" /* tearOffInfo */, null, 0, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "Completer_", ret: [P.Completer, T]};
        }, this.$receiver, "Completer");
      }, "new Completer" /* new Completer:0:0 */], Completer_Completer$sync: [function($T) {
        return H.setRuntimeTypeInfo(new P._SyncCompleter(P._Future$($T)), [$T]);
      }, "call$0" /* tearOffInfo */, null, 0, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "Completer_", ret: [P.Completer, T]};
        }, this.$receiver, "Completer");
      }, "new Completer$sync" /* new Completer$sync:0:0 */]}
  },
  "+Completer": [0],
  _Completer: {
    "": "Object;future<-1374",
    get$isCompleted: [function() {
      return !this.future.get$_mayComplete();
    }, null /* tearOffInfo */, null, 1, 0, 849, "isCompleted"],
    "<>": [227]
  },
  "+_Completer": [0, 1375],
  _AsyncCompleter: {
    "": "_Completer;future-1374",
    complete$1: [function(value) {
      var t1 = this.future;
      if (!t1.get$_mayComplete())
        throw H.wrapException(new P.StateError("Future already completed"));
      t1._asyncComplete$1(value);
    }, function() {
      return this.complete$1(null);
    }, "complete$0", "call$1" /* tearOffInfo */, null /* tearOffInfo */, "get$complete", 0, 2, 1376, 370, 280, "complete"],
    completeError$2: [function(error, stackTrace) {
      var t1;
      if (error == null)
        throw H.wrapException(new P.ArgumentError("Error must not be null"));
      t1 = this.future;
      if (!t1.get$_mayComplete())
        throw H.wrapException(new P.StateError("Future already completed"));
      t1._asyncCompleteError$2(error, stackTrace);
    }, "call$2" /* tearOffInfo */, "get$completeError", 2, 2, 1346, 370, 507, 508, "completeError"],
    $as_Completer: null,
    "<>": [228]
  },
  "+_AsyncCompleter": [1377],
  _SyncCompleter: {
    "": "_Completer;future-1374",
    complete$1: [function(value) {
      var t1 = this.future;
      if (!t1.get$_mayComplete())
        throw H.wrapException(new P.StateError("Future already completed"));
      t1._complete$1(value);
    }, function() {
      return this.complete$1(null);
    }, "complete$0", "call$1" /* tearOffInfo */, null /* tearOffInfo */, "get$complete", 0, 2, 1376, 370, 280, "complete"],
    completeError$2: [function(error, stackTrace) {
      var t1 = this.future;
      if (!t1.get$_mayComplete())
        throw H.wrapException(new P.StateError("Future already completed"));
      t1._completeError$2(error, stackTrace);
    }, "call$2" /* tearOffInfo */, "get$completeError", 2, 2, 1346, 370, 507, 508, "completeError"],
    $as_Completer: null,
    "<>": [226]
  },
  "+_SyncCompleter": [1378],
  _Future: {
    "": "Object;_state@-1075,_zone<-1336,_resultOrListeners@-370,_nextListener@-1343,_onValueCallback<-241,_errorTestCallback<-273,_onErrorCallback<-1098,_whenCompleteActionCallback<-319",
    get$_mayComplete: [function() {
      return J.$eq(this._state, 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "_mayComplete"],
    get$_isChained: [function() {
      return J.$eq(this._state, 2);
    }, null /* tearOffInfo */, null, 1, 0, 849, "_isChained"],
    get$_isComplete: [function() {
      return J.$ge$n(this._state, 4);
    }, null /* tearOffInfo */, null, 1, 0, 849, "_isComplete"],
    get$_hasValue: [function() {
      return J.$eq(this._state, 4);
    }, null /* tearOffInfo */, null, 1, 0, 849, "_hasValue"],
    get$_hasError: [function() {
      return J.$eq(this._state, 8);
    }, null /* tearOffInfo */, null, 1, 0, 849, "_hasError"],
    set$_isChained: [function(value) {
      if (value === true)
        this._state = 2;
      else
        this._state = 0;
    }, null /* tearOffInfo */, null, 3, 0, 570, 280, "_isChained"],
    get$_onValue: [function() {
      return J.$eq(this._state, 2) ? null : this._onValueCallback;
    }, null /* tearOffInfo */, null, 1, 0, 1379, "_onValue"],
    _onValue$1: function(arg0) {
      return this.get$_onValue().call$1(arg0);
    },
    get$_errorTest: [function() {
      return J.$eq(this._state, 2) ? null : this._errorTestCallback;
    }, null /* tearOffInfo */, null, 1, 0, 1380, "_errorTest"],
    get$_onError: [function() {
      return J.$eq(this._state, 2) ? null : this._onErrorCallback;
    }, null /* tearOffInfo */, null, 1, 0, 1381, "_onError"],
    _onError$2: function(arg0, arg1) {
      return this.get$_onError().call$2(arg0, arg1);
    },
    get$_whenCompleteAction: [function() {
      return J.$eq(this._state, 2) ? null : this._whenCompleteActionCallback;
    }, null /* tearOffInfo */, null, 1, 0, 1382, "_whenCompleteAction"],
    _whenCompleteAction$0: function() {
      return this.get$_whenCompleteAction().call$0();
    },
    then$2$onError: [function(f, onError) {
      var t1, result;
      t1 = $.Zone__current;
      result = H.setRuntimeTypeInfo(new P._Future(0, t1, null, null, t1.registerUnaryCallback$1(f), null, P._registerErrorHandler(onError, $.Zone__current), null), [null]);
      this._addListener$1(result);
      return result;
    }, function(f) {
      return this.then$2$onError(f, null);
    }, "then$1", "call$2$onError" /* tearOffInfo */, null /* tearOffInfo */, "get$then", 2, 3, function() {
      return H.computeSignature(function(T) {
        return {func: "Future__dynamic__T__Function", ret: P.Future, args: [{func: "dynamic__T0", args: [T]}], named: {onError: P.Function}};
      }, this.$receiver, "_Future");
    }, 370, 412, 581, "then"],
    catchError$2$test: [function(onError, test) {
      var t1, t2, result;
      t1 = $.Zone__current;
      t2 = P._registerErrorHandler(onError, t1);
      result = H.setRuntimeTypeInfo(new P._Future(0, t1, null, null, null, $.Zone__current.registerUnaryCallback$1(test), t2, null), [null]);
      this._addListener$1(result);
      return result;
    }, "call$2$test" /* tearOffInfo */, "get$catchError", 2, 3, 1383, 370, 581, 428, "catchError"],
    whenComplete$1: [function(action) {
      var t1, result;
      t1 = $.Zone__current;
      result = new P._Future(0, t1, null, null, null, null, null, t1.registerCallback$1(action));
      result.$builtinTypeInfo = this.$builtinTypeInfo;
      this._addListener$1(result);
      return result;
    }, "call$1" /* tearOffInfo */, "get$whenComplete", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future__args00", ret: [P.Future, T], args: [{func: "args0"}]};
      }, this.$receiver, "_Future");
    }, 1174, "whenComplete"],
    asStream$0: [function() {
      return P.Stream_Stream$fromFuture(this, null);
    }, "call$0" /* tearOffInfo */, "get$asStream", 0, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Stream_0", ret: [P.Stream, T]};
      }, this.$receiver, "_Future");
    }, "asStream"],
    _markPendingCompletion$0: [function() {
      if (!J.$eq(this._state, 0))
        throw H.wrapException(new P.StateError("Future already completed"));
      this._state = 1;
    }, "call$0" /* tearOffInfo */, "get$_markPendingCompletion", 0, 0, 494, "_markPendingCompletion"],
    get$_async$_value: [function() {
      return this._resultOrListeners;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "T_5", ret: T};
      }, this.$receiver, "_Future");
    }, "_value"],
    get$_error: [function() {
      return this._resultOrListeners;
    }, null /* tearOffInfo */, null, 1, 0, 1384, "_error"],
    _setValue$1: [function(value) {
      this._state = 4;
      this._resultOrListeners = value;
    }, "call$1" /* tearOffInfo */, "get$_setValue", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T5", void: true, args: [T]};
      }, this.$receiver, "_Future");
    }, 280, "_setValue"],
    _setError$2: [function(error, stackTrace) {
      this._state = 8;
      this._resultOrListeners = new P._AsyncError(error, stackTrace);
    }, "call$2" /* tearOffInfo */, "get$_setError", 4, 0, 1348, 507, 508, "_setError"],
    _addListener$1: [function(listener) {
      if (J.$ge$n(this._state, 4))
        this._zone.scheduleMicrotask$1(new P._Future__addListener_closure(this, listener));
      else {
        listener.set$_nextListener(this._resultOrListeners);
        this._resultOrListeners = listener;
      }
    }, "call$1" /* tearOffInfo */, "get$_addListener", 2, 0, 1385, 1386, "_addListener"],
    _removeListeners$0: [function() {
      var current, prev, next;
      current = this._resultOrListeners;
      this._resultOrListeners = null;
      for (prev = null; current != null; prev = current, current = next) {
        next = current.get$_nextListener();
        current.set$_nextListener(prev);
      }
      return prev;
    }, "call$0" /* tearOffInfo */, "get$_removeListeners", 0, 0, 1344, "_removeListeners"],
    _complete$1: [function(value) {
      var t1, listeners;
      t1 = J.getInterceptor(value);
      if (typeof value === "object" && value !== null && !!t1.$isFuture) {
        P._Future__chainFutures(value, this);
        return;
      }
      listeners = this._removeListeners$0();
      this._setValue$1(value);
      P._Future__propagateToListeners(this, listeners);
    }, "call$1" /* tearOffInfo */, "get$_complete", 2, 0, 251, 280, "_complete"],
    _completeError$2: [function(error, stackTrace) {
      var listeners = this._removeListeners$0();
      this._setError$2(error, stackTrace);
      P._Future__propagateToListeners(this, listeners);
    }, function(error) {
      return this._completeError$2(error, null);
    }, "_completeError$1", "call$2" /* tearOffInfo */, "call$1" /* tearOffInfo */, "get$_completeError", 2, 2, 573, 370, 507, 508, "_completeError"],
    _asyncComplete$1: [function(value) {
      var t1, t2;
      t1 = J.getInterceptor(value);
      t2 = typeof value === "object" && value !== null && !!t1.$isFuture;
      if (t2)
        ;
      if (t2)
        t1 = typeof value !== "object" || value === null || !t1.$is_Future || !J.$ge$n(value._state, 4);
      else
        t1 = false;
      if (t1) {
        this._complete$1(value);
        return;
      }
      if (!J.$eq(this._state, 0))
        H.throwExpression(new P.StateError("Future already completed"));
      this._state = 1;
      this._zone.scheduleMicrotask$1(new P._Future__asyncComplete_closure(this, value));
    }, "call$1" /* tearOffInfo */, "get$_asyncComplete", 2, 0, 251, 280, "_asyncComplete"],
    _asyncCompleteError$2: [function(error, stackTrace) {
      if (!J.$eq(this._state, 0))
        H.throwExpression(new P.StateError("Future already completed"));
      this._state = 1;
      this._zone.scheduleMicrotask$1(new P._Future__asyncCompleteError_closure(this, error, stackTrace));
    }, "call$2" /* tearOffInfo */, "get$_asyncCompleteError", 4, 0, 1387, 507, 508, "_asyncCompleteError"],
    timeout$2$onTimeout: [function(timeLimit, onTimeout) {
      var t1, result, t2, zone;
      t1 = {};
      t1.onTimeout_0 = onTimeout;
      if (J.$ge$n(this._state, 4))
        return P._Future$immediate(this, null);
      result = P._Future$(null);
      t1.timer_1 = null;
      t2 = t1.onTimeout_0;
      if (t2 == null)
        t1.timer_1 = P.Timer_Timer(timeLimit, new P._Future_timeout_closure(timeLimit, result));
      else {
        zone = $.Zone__current;
        t1.onTimeout_0 = zone.registerCallback$1(t2);
        t1.timer_1 = P.Timer_Timer(timeLimit, new P._Future_timeout_closure0(t1, result, zone));
      }
      this.then$2$onError(new P._Future_timeout_closure1(t1, this, result), new P._Future_timeout_closure2(t1, result));
      return result;
    }, "call$2$onTimeout" /* tearOffInfo */, "get$timeout", 2, 3, 1388, 370, 1389, 1390, "timeout"],
    _async$_Future$immediate$1: [function(value, $T) {
      this._asyncComplete$1(value);
    }, null /* tearOffInfo */, null, 2, 0, 241, 280, "immediate"],
    _async$_Future$immediateError$2: [function(error, stackTrace, $T) {
      this._asyncCompleteError$2(error, stackTrace);
    }, null /* tearOffInfo */, null, 2, 2, 533, 370, 507, 508, "immediateError"],
    $is_Future: true,
    $isFuture: true,
    "<>": [56],
    static: {"": "_Future__INCOMPLETE<-1075,_Future__PENDING_COMPLETE<-1075,_Future__CHAINED<-1075,_Future__VALUE<-1075,_Future__ERROR<-1075", _Future$: [function($T) {
        return H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null, null, null, null, null, null), [$T]);
      }, null /* tearOffInfo */, null, 0, 0, 319, "new _Future" /* new _Future:0:0 */], _Future$immediate: [function(value, $T) {
        var t1 = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null, null, null, null, null, null), [$T]);
        t1._async$_Future$immediate$1(value, $T);
        return t1;
      }, null /* tearOffInfo */, null, 2, 0, 241, 280, "new _Future$immediate" /* new _Future$immediate:1:0 */], _Future$immediateError: [function(error, stackTrace, $T) {
        var t1 = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null, null, null, null, null, null), [$T]);
        t1._async$_Future$immediateError$2(error, stackTrace, $T);
        return t1;
      }, null /* tearOffInfo */, null, 2, 2, 533, 370, 507, 508, "new _Future$immediateError" /* new _Future$immediateError:2:0 */], _Future$_then: [function(onValueCallback, onErrorCallback, $T) {
        var t1 = $.Zone__current;
        return H.setRuntimeTypeInfo(new P._Future(0, t1, null, null, t1.registerUnaryCallback$1(onValueCallback), null, P._registerErrorHandler(onErrorCallback, $.Zone__current), null), [$T]);
      }, null /* tearOffInfo */, null, 4, 0, 534, 535, 536, "new _Future$_then" /* new _Future$_then:2:0 */], _Future$_catchError: [function(onErrorCallback, errorTestCallback, $T) {
        var t1, t2;
        t1 = $.Zone__current;
        t2 = P._registerErrorHandler(onErrorCallback, t1);
        return H.setRuntimeTypeInfo(new P._Future(0, t1, null, null, null, $.Zone__current.registerUnaryCallback$1(errorTestCallback), t2, null), [$T]);
      }, null /* tearOffInfo */, null, 4, 0, 537, 536, 538, "new _Future$_catchError" /* new _Future$_catchError:2:0 */], _Future$_whenComplete: [function(whenCompleteActionCallback, $T) {
        var t1 = $.Zone__current;
        return H.setRuntimeTypeInfo(new P._Future(0, t1, null, null, null, null, null, t1.registerCallback$1(whenCompleteActionCallback)), [$T]);
      }, null /* tearOffInfo */, null, 2, 0, 539, 540, "new _Future$_whenComplete" /* new _Future$_whenComplete:1:0 */], _Future__chainFutures: [function(source, target) {
        var t1;
        target.set$_isChained(true);
        t1 = J.getInterceptor(source);
        if (typeof source === "object" && source !== null && !!t1.$is_Future)
          if (J.$ge$n(source._state, 4))
            P._Future__propagateToListeners(source, target);
          else
            source._addListener$1(target);
        else
          source.then$2$onError(new P._Future__chainFutures_closure(target), new P._Future__chainFutures_closure0(target));
      }, "call$2" /* tearOffInfo */, "_Future__chainFutures$closure", 4, 0, 541, 292, 360, "_chainFutures"], _Future__propagateMultipleListeners: [function(source, listeners) {
        var listeners0;
        do {
          listeners0 = listeners.get$_nextListener();
          listeners.set$_nextListener(null);
          P._Future__propagateToListeners(source, listeners);
          if (listeners0 != null) {
            listeners = listeners0;
            continue;
          } else
            break;
        } while (true);
      }, "call$2" /* tearOffInfo */, "_Future__propagateMultipleListeners$closure", 4, 0, 542, 292, 543, "_propagateMultipleListeners"], _Future__propagateToListeners: [function(source, listeners) {
        var t1, t2, t3, hasError, asyncError, t4, t5, chainSource, listeners0;
        t1 = {};
        t1.source_4 = source;
        for (t2 = source; true;) {
          t3 = {};
          if (!t2.get$_isComplete())
            return;
          hasError = t1.source_4.get$_hasError();
          if (hasError && listeners == null) {
            asyncError = t1.source_4.get$_error();
            t1.source_4.get$_zone().handleUncaughtError$2(asyncError.get$error(), asyncError.get$stackTrace());
            return;
          }
          if (listeners == null)
            return;
          if (listeners.get$_nextListener() != null) {
            P._Future__propagateMultipleListeners(t1.source_4, listeners);
            return;
          }
          if (hasError && !t1.source_4.get$_zone().inSameErrorZone$1(listeners.get$_zone())) {
            asyncError = t1.source_4.get$_error();
            t1.source_4.get$_zone().handleUncaughtError$2(asyncError.get$error(), asyncError.get$stackTrace());
            return;
          }
          t2 = $.Zone__current;
          t4 = listeners.get$_zone();
          if (t2 == null ? t4 != null : t2 !== t4) {
            listeners.get$_zone().run$1(new P._Future__propagateToListeners_closure(t1, listeners));
            return;
          }
          t3.listenerHasValue_1 = null;
          t3.listenerValueOrError_2 = null;
          t3.isPropagationAborted_3 = false;
          listeners.get$_zone().run$1(new P._Future__propagateToListeners_closure0(t1, t3, hasError, listeners));
          if (t3.isPropagationAborted_3 === true)
            return;
          t2 = t3.listenerHasValue_1 === true;
          if (t2) {
            t4 = t3.listenerValueOrError_2;
            t5 = J.getInterceptor(t4);
            t5 = typeof t4 === "object" && t4 !== null && !!t5.$isFuture;
            t4 = t5;
          } else
            t4 = false;
          if (t4) {
            chainSource = t3.listenerValueOrError_2;
            t2 = J.getInterceptor(chainSource);
            if (typeof chainSource === "object" && chainSource !== null && !!t2.$is_Future && J.$ge$n(chainSource._state, 4)) {
              listeners.set$_isChained(true);
              t1.source_4 = chainSource;
              t2 = chainSource;
              continue;
            }
            P._Future__chainFutures(chainSource, listeners);
            return;
          }
          if (t2) {
            listeners0 = listeners._removeListeners$0();
            listeners._setValue$1(t3.listenerValueOrError_2);
          } else {
            listeners0 = listeners._removeListeners$0();
            asyncError = t3.listenerValueOrError_2;
            listeners._setError$2(asyncError.get$error(), asyncError.get$stackTrace());
          }
          t1.source_4 = listeners;
          t2 = listeners;
          listeners = listeners0;
        }
      }, "call$2" /* tearOffInfo */, "_Future__propagateToListeners$closure", 4, 0, 542, 292, 543, "_propagateToListeners"]}
  },
  "+_Future": [0, 1391],
  _Future__addListener_closure: {
    "": "Closure:319;this_0-370,listener_1-1343",
    call$0: [function() {
      P._Future__propagateToListeners(this.this_0, this.listener_1);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_Future__addListener_closure": [1060],
  _Future__chainFutures_closure: {
    "": "Closure:241;target_0-1343",
    call$1: [function(value) {
      this.target_0._complete$1(value);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 280, "call"]
  },
  "+_Future__chainFutures_closure": [1060],
  _Future__chainFutures_closure0: {
    "": "Closure:1392;target_1-1343",
    call$2: [function(error, stackTrace) {
      this.target_1._completeError$2(error, stackTrace);
    }, function(error) {
      return this.call$2(error, null);
    }, "call$1", "call$2" /* tearOffInfo */, null /* tearOffInfo */, null, 2, 2, 1392, 370, 507, 508, "call"]
  },
  "+_Future__chainFutures_closure": [1060],
  _Future__asyncComplete_closure: {
    "": "Closure:319;this_0-370,value_1-370",
    call$0: [function() {
      this.this_0._complete$1(this.value_1);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_Future__asyncComplete_closure": [1060],
  _Future__asyncCompleteError_closure: {
    "": "Closure:319;this_0-370,error_1-370,stackTrace_2-1153",
    call$0: [function() {
      this.this_0._completeError$2(this.error_1, this.stackTrace_2);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_Future__asyncCompleteError_closure": [1060],
  _Future__propagateToListeners_closure: {
    "": "Closure:319;box_2-370,listener_3-1343",
    call$0: [function() {
      P._Future__propagateToListeners(this.box_2.source_4, this.listener_3);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_Future__propagateToListeners_closure": [1060],
  _Future__propagateToListeners_closure0: {
    "": "Closure:319;box_2-370,box_1-370,hasError_4-1043,listener_5-1343",
    call$0: [function() {
      var t1, value, asyncError, test, matchesTest, errorCallback, e, s, t2, t3, t4, t5, completeResult, exception;
      t1 = {};
      try {
        t2 = this.box_2;
        if (this.hasError_4 !== true) {
          value = t2.source_4.get$_async$_value();
          t3 = this.listener_5;
          t4 = this.box_1;
          if (t3.get$_onValue() != null) {
            t4.listenerValueOrError_2 = t3._onValue$1(value);
            t4.listenerHasValue_1 = true;
          } else {
            t4.listenerValueOrError_2 = value;
            t4.listenerHasValue_1 = true;
          }
        } else {
          asyncError = t2.source_4.get$_error();
          t3 = this.listener_5;
          test = t3.get$_errorTest();
          matchesTest = true;
          if (test != null)
            matchesTest = test.call$1(asyncError.get$error());
          t4 = matchesTest === true && t3.get$_onError() != null;
          t5 = this.box_1;
          if (t4) {
            errorCallback = t3.get$_onError();
            t5.listenerValueOrError_2 = P._invokeErrorHandler(errorCallback, asyncError.get$error(), asyncError.get$stackTrace());
            t5.listenerHasValue_1 = true;
          } else {
            t5.listenerValueOrError_2 = asyncError;
            t5.listenerHasValue_1 = false;
          }
          t4 = t5;
        }
        if (t3.get$_whenCompleteAction() != null) {
          completeResult = t3._whenCompleteAction$0();
          t1.completeResult_0 = completeResult;
          t5 = J.getInterceptor(completeResult);
          if (typeof completeResult === "object" && completeResult !== null && !!t5.$isFuture) {
            t3.set$_isChained(true);
            t1.completeResult_0.then$2$onError(new P._Future__propagateToListeners__closure(t2, t3), new P._Future__propagateToListeners__closure0(t1, t3));
            t4.isPropagationAborted_3 = true;
          }
        }
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        if (this.hasError_4 === true) {
          t1 = this.box_2.source_4.get$_error().get$error();
          t2 = e;
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
        t2 = this.box_1;
        if (t1)
          t2.listenerValueOrError_2 = this.box_2.source_4.get$_error();
        else
          t2.listenerValueOrError_2 = new P._AsyncError(e, s);
        t2.listenerHasValue_1 = false;
      }

    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_Future__propagateToListeners_closure": [1060],
  _Future__propagateToListeners__closure: {
    "": "Closure:241;box_2-370,listener_6-1343",
    call$1: [function(ignored) {
      P._Future__propagateToListeners(this.box_2.source_4, this.listener_6);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1366, "call"]
  },
  "+_Future__propagateToListeners__closure": [1060],
  _Future__propagateToListeners__closure0: {
    "": "Closure:1392;box_0-370,listener_7-1343",
    call$2: [function(error, stackTrace) {
      var t1, t2, t3, completeResult;
      t1 = this.box_0;
      t2 = t1.completeResult_0;
      t3 = J.getInterceptor(t2);
      if (typeof t2 !== "object" || t2 === null || !t3.$is_Future) {
        completeResult = P._Future$(null);
        t1.completeResult_0 = completeResult;
        completeResult._setError$2(error, stackTrace);
      }
      P._Future__propagateToListeners(t1.completeResult_0, this.listener_7);
    }, function(error) {
      return this.call$2(error, null);
    }, "call$1", "call$2" /* tearOffInfo */, null /* tearOffInfo */, null, 2, 2, 1392, 370, 507, 508, "call"]
  },
  "+_Future__propagateToListeners__closure": [1060],
  _Future_timeout_closure: {
    "": "Closure:319;timeLimit_1-1372,result_2-1343",
    call$0: [function() {
      this.result_2._completeError$1(new P.TimeoutException("Future not completed", this.timeLimit_1));
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_Future_timeout_closure": [1060],
  _Future_timeout_closure0: {
    "": "Closure:319;box_0-370,result_3-1343,zone_4-1336",
    call$0: [function() {
      var e, s, exception, t1;
      try {
        this.result_3._complete$1(this.zone_4.run$1(this.box_0.onTimeout_0));
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        this.result_3._completeError$2(e, s);
      }

    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_Future_timeout_closure": [1060],
  _Future_timeout_closure1: {
    "": "Closure;box_0-370,this_5-370,result_6-1343",
    call$1: [function(v) {
      var t1 = this.box_0;
      if (t1.timer_1.get$isActive()) {
        t1.timer_1.cancel$0();
        this.result_6._complete$1(v);
      }
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T0", args: [T]};
      }, this.$receiver, "_Future");
    }, 700, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T0", args: [T]};
      }, this.this_5, "_Future");
    }
  },
  "+_Future_timeout_closure": [1060],
  _Future_timeout_closure2: {
    "": "Closure:311;box_0-370,result_7-1343",
    call$2: [function(e, s) {
      var t1 = this.box_0;
      if (t1.timer_1.get$isActive()) {
        t1.timer_1.cancel$0();
        this.result_7._completeError$2(e, s);
      }
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 256, 383, "call"]
  },
  "+_Future_timeout_closure": [1060],
  _AsyncRun: {
    "": "Object;",
    static: {_AsyncRun__scheduleImmediate: [function(callback) {
        var milliseconds = C.Duration_0.get$inMilliseconds();
        H.TimerImpl$(J.$lt$n(milliseconds, 0) ? 0 : milliseconds, callback);
      }, "call$1" /* tearOffInfo */, "_AsyncRun__scheduleImmediate$closure", 2, 0, 544, 277, "_scheduleImmediate"]}
  },
  "+_AsyncRun": [0],
  Stream: {
    "": "Object;",
    get$isBroadcast: [function() {
      return false;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isBroadcast"],
    asBroadcastStream$2$onCancel$onListen: [function(onCancel, onListen) {
      var t1, t2;
      if (this.get$isBroadcast())
        return this;
      t1 = H.getRuntimeTypeArgument(this, "Stream", 0);
      t2 = H.setRuntimeTypeInfo(new P._AsBroadcastStream(this, $.Zone__current.registerUnaryCallback$1(onListen), $.Zone__current.registerUnaryCallback$1(onCancel), $.Zone__current, null, null), [t1]);
      t2._AsBroadcastStream$3(this, onListen, onCancel, t1);
      return t2;
    }, "call$2$onCancel$onListen" /* tearOffInfo */, "get$asBroadcastStream", 0, 5, function() {
      return H.computeSignature(function(T) {
        return {func: "Stream___void__StreamSubscription_void__StreamSubscription", ret: [P.Stream, T], named: {onCancel: {func: "void__StreamSubscription1", void: true, args: [[P.StreamSubscription, T]]}, onListen: {func: "void__StreamSubscription1", void: true, args: [[P.StreamSubscription, T]]}}};
      }, this.$receiver, "Stream");
    }, 370, 370, 522, 521, "asBroadcastStream"],
    where$1: [function(_, test) {
      return H.setRuntimeTypeInfo(new P._WhereStream(test, this), [H.getRuntimeTypeArgument(this, "Stream", 0)]);
    }, "call$1" /* tearOffInfo */, "get$where", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Stream__bool__T", ret: [P.Stream, T], args: [{func: "bool__T2", ret: J.JSBool, args: [T]}]};
      }, this.$receiver, "Stream");
    }, 428, "where"],
    map$1: [function(_, convert) {
      return H.setRuntimeTypeInfo(new P._MapStream(convert, this), [H.getRuntimeTypeArgument(this, "Stream", 0), null]);
    }, "call$1" /* tearOffInfo */, "get$map", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Stream__dynamic__T", ret: P.Stream, args: [{func: "dynamic__T1", args: [T]}]};
      }, this.$receiver, "Stream");
    }, 1084, "map"],
    handleError$2$test: [function(onError, test) {
      return H.setRuntimeTypeInfo(new P._HandleErrorStream(onError, test, this), [H.getRuntimeTypeArgument(this, "Stream", 0)]);
    }, "call$2$test" /* tearOffInfo */, "get$handleError", 2, 3, function() {
      return H.computeSignature(function(T) {
        return {func: "Stream__Function__bool__dynamic", ret: [P.Stream, T], args: [P.Function], named: {test: {func: "bool__dynamic", ret: J.JSBool, args: [null]}}};
      }, this.$receiver, "Stream");
    }, 370, 581, 428, "handleError"],
    expand$1: [function(_, convert) {
      return H.setRuntimeTypeInfo(new P._ExpandStream(convert, this), [H.getRuntimeTypeArgument(this, "Stream", 0), null]);
    }, "call$1" /* tearOffInfo */, "get$expand", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Stream__Iterable__T", ret: P.Stream, args: [{func: "Iterable__T", ret: P.Iterable, args: [T]}]};
      }, this.$receiver, "Stream");
    }, 1084, "expand"],
    pipe$1: [function(streamConsumer) {
      return streamConsumer.addStream$1(this).then$1(new P.Stream_pipe_closure(streamConsumer));
    }, "call$1" /* tearOffInfo */, "get$pipe", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future__StreamConsumer", ret: P.Future, args: [[P.StreamConsumer, T]]};
      }, this.$receiver, "Stream");
    }, 1393, "pipe"],
    transform$1: [function(streamTransformer) {
      return streamTransformer.bind$1(this);
    }, "call$1" /* tearOffInfo */, "get$transform", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Stream__StreamTransformer", ret: P.Stream, args: [[P.StreamTransformer, T, null]]};
      }, this.$receiver, "Stream");
    }, 1394, "transform"],
    reduce$1: [function(_, combine) {
      var t1, result;
      t1 = {};
      result = P._Future$(H.getRuntimeTypeArgument(this, "Stream", 0));
      t1.seenFirst_0 = false;
      t1.value_1 = null;
      t1.subscription_2 = null;
      t1.subscription_2 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_reduce_closure(t1, this, combine, result), true, new P.Stream_reduce_closure0(t1, result), result.get$_completeError());
      return result;
    }, "call$1" /* tearOffInfo */, "get$reduce", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future__T__T_T", ret: [P.Future, T], args: [{func: "T__T_T", ret: T, args: [T, T]}]};
      }, this.$receiver, "Stream");
    }, 424, "reduce"],
    fold$2: [function(_, initialValue, combine) {
      var t1, result;
      t1 = {};
      result = P._Future$(null);
      t1.value_0 = initialValue;
      t1.subscription_1 = null;
      t1.subscription_1 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_fold_closure(t1, this, combine, result), true, new P.Stream_fold_closure0(t1, result), new P.Stream_fold_closure1(result));
      return result;
    }, "call$2" /* tearOffInfo */, "get$fold", 4, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future__dynamic_dynamic__dynamic_T", ret: P.Future, args: [null, {func: "dynamic__dynamic_T", args: [null, T]}]};
      }, this.$receiver, "Stream");
    }, 426, 424, "fold"],
    join$1: [function(_, separator) {
      var t1, result, buffer;
      t1 = {};
      result = P._Future$(J.JSString);
      buffer = P.StringBuffer$("");
      t1.subscription_0 = null;
      t1.first_1 = true;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_join_closure(t1, this, separator, result, buffer), true, new P.Stream_join_closure0(result, buffer), new P.Stream_join_closure1(result));
      return result;
    }, "call$1" /* tearOffInfo */, "get$join", 0, 2, 1395, 806, 1050, "join"],
    contains$1: [function(_, needle) {
      var t1, future;
      t1 = {};
      future = P._Future$(J.JSBool);
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_contains_closure(t1, this, needle, future), true, new P.Stream_contains_closure0(future), future.get$_completeError());
      return future;
    }, "call$1" /* tearOffInfo */, "get$contains", 2, 0, 1396, 401, "contains"],
    forEach$1: [function(_, action) {
      var t1, future;
      t1 = {};
      future = P._Future$(null);
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_forEach_closure(t1, this, action, future), true, new P.Stream_forEach_closure0(future), future.get$_completeError());
      return future;
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future__void__T", ret: P.Future, args: [{func: "void__T6", void: true, args: [T]}]};
      }, this.$receiver, "Stream");
    }, 1174, "forEach"],
    every$1: [function(_, test) {
      var t1, future;
      t1 = {};
      future = P._Future$(J.JSBool);
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_every_closure(t1, this, test, future), true, new P.Stream_every_closure0(future), future.get$_completeError());
      return future;
    }, "call$1" /* tearOffInfo */, "get$every", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future__bool__T", ret: [P.Future, J.JSBool], args: [{func: "bool__T2", ret: J.JSBool, args: [T]}]};
      }, this.$receiver, "Stream");
    }, 428, "every"],
    any$1: [function(_, test) {
      var t1, future;
      t1 = {};
      future = P._Future$(J.JSBool);
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_any_closure(t1, this, test, future), true, new P.Stream_any_closure0(future), future.get$_completeError());
      return future;
    }, "call$1" /* tearOffInfo */, "get$any", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future__bool__T", ret: [P.Future, J.JSBool], args: [{func: "bool__T2", ret: J.JSBool, args: [T]}]};
      }, this.$receiver, "Stream");
    }, 428, "any"],
    get$length: [function(_) {
      var t1, future;
      t1 = {};
      future = new P._Future(0, $.Zone__current, null, null, null, null, null, null);
      future.$builtinTypeInfo = [J.JSInt];
      t1.count_0 = 0;
      this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    }, null /* tearOffInfo */, null, 1, 0, 1397, "length"],
    get$isEmpty: [function(_) {
      var t1, future;
      t1 = {};
      future = P._Future$(J.JSBool);
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_isEmpty_closure(t1, future), true, new P.Stream_isEmpty_closure0(future), future.get$_completeError());
      return future;
    }, null /* tearOffInfo */, null, 1, 0, 1364, "isEmpty"],
    toList$0: [function(_) {
      var result, future;
      result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgument(this, "Stream", 0)]);
      future = P._Future$([J.JSArray, H.getRuntimeTypeArgument(this, "Stream", 0)]);
      this.listen$4$cancelOnError$onDone$onError(new P.Stream_toList_closure(this, result), true, new P.Stream_toList_closure0(result, future), future.get$_completeError());
      return future;
    }, "call$0" /* tearOffInfo */, "get$toList", 0, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future_2", ret: [P.Future, [J.JSArray, T]]};
      }, this.$receiver, "Stream");
    }, "toList"],
    toSet$0: [function(_) {
      var result, future;
      result = P.LinkedHashSet_LinkedHashSet(null, null, null, H.getRuntimeTypeArgument(this, "Stream", 0));
      future = P._Future$([P.Set, H.getRuntimeTypeArgument(this, "Stream", 0)]);
      this.listen$4$cancelOnError$onDone$onError(new P.Stream_toSet_closure(this, result), true, new P.Stream_toSet_closure0(result, future), future.get$_completeError());
      return future;
    }, "call$0" /* tearOffInfo */, "get$toSet", 0, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future_3", ret: [P.Future, [P.Set, T]]};
      }, this.$receiver, "Stream");
    }, "toSet"],
    drain$1: [function(futureValue) {
      return this.listen$2$cancelOnError(null, true).asFuture$1(futureValue);
    }, function() {
      return this.drain$1(null);
    }, "drain$0", "call$1" /* tearOffInfo */, null /* tearOffInfo */, "get$drain", 0, 2, 1398, 370, 1399, "drain"],
    take$1: [function(_, count) {
      var t1 = H.setRuntimeTypeInfo(new P._TakeStream(count, this), [null]);
      t1._TakeStream$2(this, count, null);
      return t1;
    }, "call$1" /* tearOffInfo */, "get$take", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Stream__int", ret: [P.Stream, T], args: [J.JSInt]};
      }, this.$receiver, "Stream");
    }, 450, "take"],
    takeWhile$1: [function(_, test) {
      return H.setRuntimeTypeInfo(new P._TakeWhileStream(test, this), [null]);
    }, "call$1" /* tearOffInfo */, "get$takeWhile", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Stream__bool__T", ret: [P.Stream, T], args: [{func: "bool__T2", ret: J.JSBool, args: [T]}]};
      }, this.$receiver, "Stream");
    }, 428, "takeWhile"],
    skip$1: [function(_, count) {
      var t1 = H.setRuntimeTypeInfo(new P._SkipStream(count, this), [null]);
      t1._SkipStream$2(this, count, null);
      return t1;
    }, "call$1" /* tearOffInfo */, "get$skip", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Stream__int", ret: [P.Stream, T], args: [J.JSInt]};
      }, this.$receiver, "Stream");
    }, 450, "skip"],
    skipWhile$1: [function(_, test) {
      return H.setRuntimeTypeInfo(new P._SkipWhileStream(test, false, this), [null]);
    }, "call$1" /* tearOffInfo */, "get$skipWhile", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Stream__bool__T", ret: [P.Stream, T], args: [{func: "bool__T2", ret: J.JSBool, args: [T]}]};
      }, this.$receiver, "Stream");
    }, 428, "skipWhile"],
    distinct$1: [function(equals) {
      return H.setRuntimeTypeInfo(new P._DistinctStream(equals, $.get$_DistinctStream__SENTINEL(), this), [null]);
    }, "call$1" /* tearOffInfo */, "get$distinct", 0, 2, function() {
      return H.computeSignature(function(T) {
        return {func: "Stream___bool__T_T", ret: [P.Stream, T], opt: [{func: "bool__T_T0", ret: J.JSBool, args: [T, T]}]};
      }, this.$receiver, "Stream");
    }, 370, 588, "distinct"],
    get$first: [function(_) {
      var t1, future;
      t1 = {};
      future = P._Future$(H.getRuntimeTypeArgument(this, "Stream", 0));
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_first_closure(t1, this, future), true, new P.Stream_first_closure0(future), future.get$_completeError());
      return future;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future_4", ret: [P.Future, T]};
      }, this.$receiver, "Stream");
    }, "first"],
    get$last: [function(_) {
      var t1, future;
      t1 = {};
      future = P._Future$(H.getRuntimeTypeArgument(this, "Stream", 0));
      t1.result_0 = null;
      t1.foundResult_1 = false;
      this.listen$4$cancelOnError$onDone$onError(new P.Stream_last_closure(t1, this), true, new P.Stream_last_closure0(t1, future), future.get$_completeError());
      return future;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future_4", ret: [P.Future, T]};
      }, this.$receiver, "Stream");
    }, "last"],
    get$single: [function(_) {
      var t1, future;
      t1 = {};
      future = P._Future$(H.getRuntimeTypeArgument(this, "Stream", 0));
      t1.result_0 = null;
      t1.foundResult_1 = false;
      t1.subscription_2 = null;
      t1.subscription_2 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_single_closure(t1, this, future), true, new P.Stream_single_closure0(t1, future), future.get$_completeError());
      return future;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future_4", ret: [P.Future, T]};
      }, this.$receiver, "Stream");
    }, "single"],
    firstWhere$2$defaultValue: [function(_, test, defaultValue) {
      var t1, future;
      t1 = {};
      future = P._Future$(null);
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_firstWhere_closure(t1, this, test, future), true, new P.Stream_firstWhere_closure0(defaultValue, future), future.get$_completeError());
      return future;
    }, "call$2$defaultValue" /* tearOffInfo */, "get$firstWhere", 2, 3, function() {
      return H.computeSignature(function(T) {
        return {func: "Future__bool__T__Object_", ret: P.Future, args: [{func: "bool__T2", ret: J.JSBool, args: [T]}], named: {defaultValue: {func: "Object_", ret: P.Object}}};
      }, this.$receiver, "Stream");
    }, 370, 428, 774, "firstWhere"],
    lastWhere$2$defaultValue: [function(_, test, defaultValue) {
      var t1, future;
      t1 = {};
      future = P._Future$(null);
      t1.result_0 = null;
      t1.foundResult_1 = false;
      t1.subscription_2 = null;
      t1.subscription_2 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_lastWhere_closure(t1, this, test, future), true, new P.Stream_lastWhere_closure0(t1, defaultValue, future), future.get$_completeError());
      return future;
    }, "call$2$defaultValue" /* tearOffInfo */, "get$lastWhere", 2, 3, function() {
      return H.computeSignature(function(T) {
        return {func: "Future__bool__T__Object_", ret: P.Future, args: [{func: "bool__T2", ret: J.JSBool, args: [T]}], named: {defaultValue: {func: "Object_", ret: P.Object}}};
      }, this.$receiver, "Stream");
    }, 370, 428, 774, "lastWhere"],
    singleWhere$1: [function(_, test) {
      var t1, future;
      t1 = {};
      future = P._Future$(H.getRuntimeTypeArgument(this, "Stream", 0));
      t1.result_0 = null;
      t1.foundResult_1 = false;
      t1.subscription_2 = null;
      t1.subscription_2 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_singleWhere_closure(t1, this, test, future), true, new P.Stream_singleWhere_closure0(t1, future), future.get$_completeError());
      return future;
    }, "call$1" /* tearOffInfo */, "get$singleWhere", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future__bool__T0", ret: [P.Future, T], args: [{func: "bool__T2", ret: J.JSBool, args: [T]}]};
      }, this.$receiver, "Stream");
    }, 428, "singleWhere"],
    elementAt$1: [function(_, index) {
      var t1, future;
      t1 = {};
      t1.index_0 = index;
      if (typeof index !== "number" || Math.floor(index) !== index || J.$lt$n(index, 0))
        throw H.wrapException(new P.ArgumentError(t1.index_0));
      future = P._Future$(H.getRuntimeTypeArgument(this, "Stream", 0));
      t1.subscription_1 = null;
      t1.subscription_1 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_elementAt_closure(t1, this, future), true, new P.Stream_elementAt_closure0(t1, future), future.get$_completeError());
      return future;
    }, "call$1" /* tearOffInfo */, "get$elementAt", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future__int", ret: [P.Future, T], args: [J.JSInt]};
      }, this.$receiver, "Stream");
    }, 321, "elementAt"],
    timeout$2$onTimeout: [function(timeLimit, onTimeout) {
      var t1, controller;
      t1 = {};
      t1.onTimeout_0 = onTimeout;
      t1.subscription_1 = null;
      t1.controller_2 = null;
      t1.timer_3 = null;
      t1.zone_4 = null;
      t1.timeout_5 = null;
      controller = H.setRuntimeTypeInfo(new P._SyncStreamController(new P.Stream_timeout_closure(t1, this, timeLimit, new P.Stream_timeout_onData(t1, this, timeLimit), new P.Stream_timeout_onError(t1, timeLimit), new P.Stream_timeout_onDone(t1)), new P.Stream_timeout_closure0(t1), new P.Stream_timeout_closure1(t1, timeLimit), new P.Stream_timeout_closure2(t1), null, 0, null), [null]);
      t1.controller_2 = controller;
      return controller.get$stream();
    }, "call$2$onTimeout" /* tearOffInfo */, "get$timeout", 2, 3, 1400, 370, 1389, 1390, "timeout"],
    "<>": [55],
    static: {Stream$: [function($T) {
        return H.setRuntimeTypeInfo(new P.Stream(), [$T]);
      }, null /* tearOffInfo */, null, 0, 0, 319, "new Stream" /* new Stream:0:0 */], Stream_Stream$fromFuture: [function(future, $T) {
        var controller = P.StreamController_StreamController(null, null, null, null, true, $T);
        future.then$2$onError(new P.Stream_Stream$fromFuture_closure(controller), new P.Stream_Stream$fromFuture_closure0(controller));
        return H.setRuntimeTypeInfo(new P._ControllerStream(controller), [null]);
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "Stream__Future", ret: [P.Stream, T], args: [[P.Future, T]]};
        }, this.$receiver, "Stream");
      }, 545, "new Stream$fromFuture" /* new Stream$fromFuture:1:0 */], Stream_Stream$fromIterable: [function(data, $T) {
        return H.setRuntimeTypeInfo(new P._GeneratedStreamImpl(new P.Stream_Stream$fromIterable_closure($T, data), false), [$T]);
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "Stream__Iterable", ret: [P.Stream, T], args: [[P.Iterable, T]]};
        }, this.$receiver, "Stream");
      }, 546, "new Stream$fromIterable" /* new Stream$fromIterable:1:0 */], Stream_Stream$periodic: [function(period, computation, $T) {
        var t1, watch, t2, t3, controller;
        t1 = {};
        t1.computation_0 = computation;
        if (computation == null)
          t1.computation_0 = new P.Stream_Stream$periodic_closure();
        t1.timer_1 = null;
        t1.computationCount_2 = 0;
        t1.controller_3 = null;
        watch = new P.Stopwatch(null, null);
        t2 = new P.Stream_Stream$periodic_sendEvent(t1, watch);
        t3 = new P.Stream_Stream$periodic_startPeriodicTimer(t1, period, t2);
        controller = P.StreamController_StreamController(new P.Stream_Stream$periodic_closure0(t1), new P.Stream_Stream$periodic_closure1(watch, t3), new P.Stream_Stream$periodic_closure2(t1, watch), new P.Stream_Stream$periodic_closure3(t1, period, watch, t2, t3), true, $T);
        t1.controller_3 = controller;
        return controller.get$stream();
      }, "call$2" /* tearOffInfo */, null, 2, 2, function() {
        return H.computeSignature(function(T) {
          return {func: "Stream__Duration__T__int", ret: [P.Stream, T], args: [P.Duration], opt: [{func: "T__int", ret: T, args: [J.JSInt]}]};
        }, this.$receiver, "Stream");
      }, 370, 547, 524, "new Stream$periodic" /* new Stream$periodic:2:0 */], Stream_Stream$eventTransformed: [function(source, mapSink, $T) {
        return H.setRuntimeTypeInfo(new P._BoundSinkStream(mapSink, source), [null, null]);
      }, "call$2" /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "Stream__Stream_EventSink__EventSink", ret: [P.Stream, T], args: [P.Stream, {func: "EventSink__EventSink", ret: P.EventSink, args: [[P.EventSink, T]]}]};
        }, this.$receiver, "Stream");
      }, 292, 548, "new Stream$eventTransformed" /* new Stream$eventTransformed:2:0 */]}
  },
  "+Stream": [0],
  Stream_Stream$fromFuture_closure: {
    "": "Closure:241;controller_0-1401",
    call$1: [function(value) {
      var t1 = this.controller_0;
      if (!J.$lt$n(t1.get$_state(), 4))
        H.throwExpression(t1._badEventState$0());
      t1._add$1(value);
      t1.close$0();
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 280, "call"]
  },
  "+Stream_Stream$fromFuture_closure": [1060],
  Stream_Stream$fromFuture_closure0: {
    "": "Closure:311;controller_1-1401",
    call$2: [function(error, stackTrace) {
      var t1 = this.controller_1;
      if (!J.$lt$n(t1.get$_state(), 4))
        H.throwExpression(t1._badEventState$0());
      t1._addError$2(error, stackTrace);
      t1.close$0();
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 507, 508, "call"]
  },
  "+Stream_Stream$fromFuture_closure": [1060],
  Stream_Stream$fromIterable_closure: {
    "": "Closure:319;T_0-1402,data_1-1403",
    call$0: [function() {
      return H.setRuntimeTypeInfo(new P._IterablePendingEvents(J.get$iterator$a(this.data_1), 0), [this.T_0]);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_Stream$fromIterable_closure": [1060],
  Stream_Stream$periodic_closure: {
    "": "Closure:241;",
    call$1: [function(i) {
      return;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 245, "call"]
  },
  "+Stream_Stream$periodic_closure": [1060],
  Stream_Stream$periodic_sendEvent: {
    "": "Closure:494;box_0-370,watch_1-1404",
    call$0: [function() {
      var t1, t2, t3, data;
      this.watch_1.reset$0();
      t1 = this.box_0;
      t2 = t1.computation_0;
      t3 = t1.computationCount_2;
      t1.computationCount_2 = J.$add$ns(t3, 1);
      data = t2.call$1(t3);
      J.add$1$a(t1.controller_3, data);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 494, "call"]
  },
  "+Stream_Stream$periodic_sendEvent": [1060],
  Stream_Stream$periodic_startPeriodicTimer: {
    "": "Closure:494;box_0-370,period_2-1372,sendEvent_3-494",
    call$0: [function() {
      this.box_0.timer_1 = P.Timer_Timer$periodic(this.period_2, new P.Stream_Stream$periodic_startPeriodicTimer_closure(this.sendEvent_3));
    }, "call$0" /* tearOffInfo */, null, 0, 0, 494, "call"]
  },
  "+Stream_Stream$periodic_startPeriodicTimer": [1060],
  Stream_Stream$periodic_startPeriodicTimer_closure: {
    "": "Closure:1405;sendEvent_4-494",
    call$1: [function(timer) {
      this.sendEvent_4.call$0();
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1405, 1406, "call"]
  },
  "+Stream_Stream$periodic_startPeriodicTimer_closure": [1060],
  Stream_Stream$periodic_closure1: {
    "": "Closure:319;watch_5-1404,startPeriodicTimer_6-494",
    call$0: [function() {
      this.watch_5.start$0();
      this.startPeriodicTimer_6.call$0();
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_Stream$periodic_closure": [1060],
  Stream_Stream$periodic_closure2: {
    "": "Closure:319;box_0-370,watch_7-1404",
    call$0: [function() {
      var t1 = this.box_0;
      t1.timer_1.cancel$0();
      t1.timer_1 = null;
      this.watch_7.stop$0();
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_Stream$periodic_closure": [1060],
  Stream_Stream$periodic_closure3: {
    "": "Closure:319;box_0-370,period_8-1372,watch_9-1404,sendEvent_10-494,startPeriodicTimer_11-494",
    call$0: [function() {
      var t1, elapsed;
      t1 = this.watch_9;
      elapsed = P.Duration$(0, 0, J.$tdiv$n(J.$mul$n(t1.get$elapsedTicks(), 1000000), 1000000), 0, 0, 0);
      t1.start$0();
      t1 = this.box_0;
      t1.timer_1 = P.Timer_Timer(J.$sub$n(this.period_8, elapsed), new P.Stream_Stream$periodic__closure(t1, this.sendEvent_10, this.startPeriodicTimer_11));
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_Stream$periodic_closure": [1060],
  Stream_Stream$periodic__closure: {
    "": "Closure:319;box_0-370,sendEvent_12-494,startPeriodicTimer_13-494",
    call$0: [function() {
      this.box_0.timer_1 = null;
      this.startPeriodicTimer_13.call$0();
      this.sendEvent_12.call$0();
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_Stream$periodic__closure": [1060],
  Stream_Stream$periodic_closure0: {
    "": "Closure:319;box_0-370",
    call$0: [function() {
      var t1, t2;
      t1 = this.box_0;
      t2 = t1.timer_1;
      if (t2 != null)
        t2.cancel$0();
      t1.timer_1 = null;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_Stream$periodic_closure": [1060],
  Stream_pipe_closure: {
    "": "Closure:241;streamConsumer_0-1407",
    call$1: [function(_) {
      return this.streamConsumer_0.close$0();
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 820, "call"]
  },
  "+Stream_pipe_closure": [1060],
  Stream_reduce_closure: {
    "": "Closure;box_0-370,this_1-370,combine_2-1408,result_3-1409",
    call$1: [function(element) {
      var t1 = this.box_0;
      if (t1.seenFirst_0 === true)
        P._runUserCode(new P.Stream_reduce__closure(t1, this.combine_2, element), new P.Stream_reduce__closure0(t1, this.this_1), P._cancelAndErrorClosure(t1.subscription_2, this.result_3));
      else {
        t1.value_1 = element;
        t1.seenFirst_0 = true;
      }
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.$receiver, "Stream");
    }, 453, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  "+Stream_reduce_closure": [1060],
  Stream_reduce__closure: {
    "": "Closure:319;box_0-370,combine_4-1408,element_5-1402",
    call$0: [function() {
      return this.combine_4.call$2(this.box_0.value_1, this.element_5);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_reduce__closure": [1060],
  Stream_reduce__closure0: {
    "": "Closure;box_0-370,this_6-370",
    call$1: [function(newValue) {
      this.box_0.value_1 = newValue;
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.$receiver, "Stream");
    }, 991, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.this_6, "Stream");
    }
  },
  "+Stream_reduce__closure": [1060],
  Stream_reduce_closure0: {
    "": "Closure:319;box_0-370,result_7-1409",
    call$0: [function() {
      var t1, t2;
      t1 = this.box_0;
      t2 = this.result_7;
      if (t1.seenFirst_0 !== true)
        t2._completeError$1(new P.StateError("No elements"));
      else
        t2._complete$1(t1.value_1);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_reduce_closure": [1060],
  Stream_fold_closure: {
    "": "Closure;box_0-370,this_1-370,combine_2-1410,result_3-1343",
    call$1: [function(element) {
      var t1 = this.box_0;
      P._runUserCode(new P.Stream_fold__closure(t1, this.combine_2, element), new P.Stream_fold__closure0(t1), P._cancelAndErrorClosure(t1.subscription_1, this.result_3));
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.$receiver, "Stream");
    }, 453, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  "+Stream_fold_closure": [1060],
  Stream_fold__closure: {
    "": "Closure:319;box_0-370,combine_4-1410,element_5-1402",
    call$0: [function() {
      return this.combine_4.call$2(this.box_0.value_0, this.element_5);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_fold__closure": [1060],
  Stream_fold__closure0: {
    "": "Closure:241;box_0-370",
    call$1: [function(newValue) {
      this.box_0.value_0 = newValue;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 991, "call"]
  },
  "+Stream_fold__closure": [1060],
  Stream_fold_closure1: {
    "": "Closure:311;result_6-1343",
    call$2: [function(e, st) {
      this.result_6._completeError$2(e, st);
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 256, 1411, "call"]
  },
  "+Stream_fold_closure": [1060],
  Stream_fold_closure0: {
    "": "Closure:319;box_0-370,result_7-1343",
    call$0: [function() {
      this.result_7._complete$1(this.box_0.value_0);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_fold_closure": [1060],
  Stream_join_closure: {
    "": "Closure;box_0-370,this_1-370,separator_2-1039,result_3-1412,buffer_4-1413",
    call$1: [function(element) {
      var e, s, t1, exception, t2;
      t1 = this.box_0;
      if (t1.first_1 !== true)
        this.buffer_4.write$1(this.separator_2);
      t1.first_1 = false;
      try {
        this.buffer_4.write$1(element);
      } catch (exception) {
        t2 = H.unwrapException(exception);
        e = t2;
        s = new H._StackTrace(exception, null);
        P._cancelAndError(t1.subscription_0, this.result_3, e, s);
      }

    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.$receiver, "Stream");
    }, 453, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  "+Stream_join_closure": [1060],
  Stream_join_closure1: {
    "": "Closure:241;result_5-1412",
    call$1: [function(e) {
      this.result_5._completeError$1(e);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 256, "call"]
  },
  "+Stream_join_closure": [1060],
  Stream_join_closure0: {
    "": "Closure:319;result_6-1412,buffer_7-1413",
    call$0: [function() {
      this.result_6._complete$1(this.buffer_7.get$_contents());
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_join_closure": [1060],
  Stream_contains_closure: {
    "": "Closure;box_0-370,this_1-370,needle_2-0,future_3-1414",
    call$1: [function(element) {
      var t1, t2;
      t1 = this.box_0;
      t2 = this.future_3;
      P._runUserCode(new P.Stream_contains__closure(this.needle_2, element), new P.Stream_contains__closure0(t1, t2), P._cancelAndErrorClosure(t1.subscription_0, t2));
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.$receiver, "Stream");
    }, 453, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  "+Stream_contains_closure": [1060],
  Stream_contains__closure: {
    "": "Closure:319;needle_4-0,element_5-1402",
    call$0: [function() {
      return J.$eq(this.element_5, this.needle_4);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_contains__closure": [1060],
  Stream_contains__closure0: {
    "": "Closure:570;box_0-370,future_6-1414",
    call$1: [function(isMatch) {
      if (isMatch === true)
        P._cancelAndValue(this.box_0.subscription_0, this.future_6, true);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 570, 1415, "call"]
  },
  "+Stream_contains__closure": [1060],
  Stream_contains_closure0: {
    "": "Closure:319;future_7-1414",
    call$0: [function() {
      this.future_7._complete$1(false);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_contains_closure": [1060],
  Stream_forEach_closure: {
    "": "Closure;box_0-370,this_1-370,action_2-1416,future_3-1343",
    call$1: [function(element) {
      P._runUserCode(new P.Stream_forEach__closure(this.action_2, element), new P.Stream_forEach__closure0(), P._cancelAndErrorClosure(this.box_0.subscription_0, this.future_3));
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.$receiver, "Stream");
    }, 453, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  "+Stream_forEach_closure": [1060],
  Stream_forEach__closure: {
    "": "Closure:319;action_4-1416,element_5-1402",
    call$0: [function() {
      return this.action_4.call$1(this.element_5);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_forEach__closure": [1060],
  Stream_forEach__closure0: {
    "": "Closure:241;",
    call$1: [function(_) {
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 820, "call"]
  },
  "+Stream_forEach__closure": [1060],
  Stream_forEach_closure0: {
    "": "Closure:319;future_6-1343",
    call$0: [function() {
      this.future_6._complete$1(null);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_forEach_closure": [1060],
  Stream_every_closure: {
    "": "Closure;box_0-370,this_1-370,test_2-1417,future_3-1414",
    call$1: [function(element) {
      var t1, t2;
      t1 = this.box_0;
      t2 = this.future_3;
      P._runUserCode(new P.Stream_every__closure(this.test_2, element), new P.Stream_every__closure0(t1, t2), P._cancelAndErrorClosure(t1.subscription_0, t2));
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.$receiver, "Stream");
    }, 453, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  "+Stream_every_closure": [1060],
  Stream_every__closure: {
    "": "Closure:319;test_4-1417,element_5-1402",
    call$0: [function() {
      return this.test_4.call$1(this.element_5);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_every__closure": [1060],
  Stream_every__closure0: {
    "": "Closure:570;box_0-370,future_6-1414",
    call$1: [function(isMatch) {
      if (isMatch !== true)
        P._cancelAndValue(this.box_0.subscription_0, this.future_6, false);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 570, 1415, "call"]
  },
  "+Stream_every__closure": [1060],
  Stream_every_closure0: {
    "": "Closure:319;future_7-1414",
    call$0: [function() {
      this.future_7._complete$1(true);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_every_closure": [1060],
  Stream_any_closure: {
    "": "Closure;box_0-370,this_1-370,test_2-1417,future_3-1414",
    call$1: [function(element) {
      var t1, t2;
      t1 = this.box_0;
      t2 = this.future_3;
      P._runUserCode(new P.Stream_any__closure(this.test_2, element), new P.Stream_any__closure0(t1, t2), P._cancelAndErrorClosure(t1.subscription_0, t2));
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.$receiver, "Stream");
    }, 453, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  "+Stream_any_closure": [1060],
  Stream_any__closure: {
    "": "Closure:319;test_4-1417,element_5-1402",
    call$0: [function() {
      return this.test_4.call$1(this.element_5);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_any__closure": [1060],
  Stream_any__closure0: {
    "": "Closure:570;box_0-370,future_6-1414",
    call$1: [function(isMatch) {
      if (isMatch === true)
        P._cancelAndValue(this.box_0.subscription_0, this.future_6, true);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 570, 1415, "call"]
  },
  "+Stream_any__closure": [1060],
  Stream_any_closure0: {
    "": "Closure:319;future_7-1414",
    call$0: [function() {
      this.future_7._complete$1(false);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_any_closure": [1060],
  Stream_length_closure: {
    "": "Closure:241;box_0-370",
    call$1: [function(_) {
      var t1 = this.box_0;
      t1.count_0 = J.$add$ns(t1.count_0, 1);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 820, "call"]
  },
  "+Stream_length_closure": [1060],
  Stream_length_closure0: {
    "": "Closure:319;box_0-370,future_1-1418",
    call$0: [function() {
      this.future_1._complete$1(this.box_0.count_0);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_length_closure": [1060],
  Stream_isEmpty_closure: {
    "": "Closure:241;box_0-370,future_1-1414",
    call$1: [function(_) {
      P._cancelAndValue(this.box_0.subscription_0, this.future_1, false);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 820, "call"]
  },
  "+Stream_isEmpty_closure": [1060],
  Stream_isEmpty_closure0: {
    "": "Closure:319;future_2-1414",
    call$0: [function() {
      this.future_2._complete$1(true);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_isEmpty_closure": [1060],
  Stream_toList_closure: {
    "": "Closure;this_0-370,result_1-1419",
    call$1: [function(data) {
      J.add$1$a(this.result_1, data);
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.$receiver, "Stream");
    }, 546, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.this_0, "Stream");
    }
  },
  "+Stream_toList_closure": [1060],
  Stream_toList_closure0: {
    "": "Closure:319;result_2-1419,future_3-1420",
    call$0: [function() {
      this.future_3._complete$1(this.result_2);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_toList_closure": [1060],
  Stream_toSet_closure: {
    "": "Closure;this_0-370,result_1-1421",
    call$1: [function(data) {
      J.add$1$a(this.result_1, data);
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.$receiver, "Stream");
    }, 546, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.this_0, "Stream");
    }
  },
  "+Stream_toSet_closure": [1060],
  Stream_toSet_closure0: {
    "": "Closure:319;result_2-1421,future_3-1422",
    call$0: [function() {
      this.future_3._complete$1(this.result_2);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_toSet_closure": [1060],
  Stream_first_closure: {
    "": "Closure;box_0-370,this_1-370,future_2-1409",
    call$1: [function(value) {
      P._cancelAndValue(this.box_0.subscription_0, this.future_2, value);
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.$receiver, "Stream");
    }, 280, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  "+Stream_first_closure": [1060],
  Stream_first_closure0: {
    "": "Closure:319;future_3-1409",
    call$0: [function() {
      this.future_3._completeError$1(new P.StateError("No elements"));
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_first_closure": [1060],
  Stream_last_closure: {
    "": "Closure;box_0-370,this_1-370",
    call$1: [function(value) {
      var t1 = this.box_0;
      t1.foundResult_1 = true;
      t1.result_0 = value;
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.$receiver, "Stream");
    }, 280, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  "+Stream_last_closure": [1060],
  Stream_last_closure0: {
    "": "Closure:319;box_0-370,future_2-1409",
    call$0: [function() {
      var t1 = this.box_0;
      if (t1.foundResult_1 === true) {
        this.future_2._complete$1(t1.result_0);
        return;
      }
      this.future_2._completeError$1(new P.StateError("No elements"));
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_last_closure": [1060],
  Stream_single_closure: {
    "": "Closure;box_0-370,this_1-370,future_2-1409",
    call$1: [function(value) {
      var t1 = this.box_0;
      if (t1.foundResult_1 === true) {
        P._cancelAndError(t1.subscription_2, this.future_2, new P.StateError("More than one element"), null);
        return;
      }
      t1.foundResult_1 = true;
      t1.result_0 = value;
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.$receiver, "Stream");
    }, 280, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  "+Stream_single_closure": [1060],
  Stream_single_closure0: {
    "": "Closure:319;box_0-370,future_3-1409",
    call$0: [function() {
      var t1 = this.box_0;
      if (t1.foundResult_1 === true) {
        this.future_3._complete$1(t1.result_0);
        return;
      }
      this.future_3._completeError$1(new P.StateError("No elements"));
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_single_closure": [1060],
  Stream_firstWhere_closure: {
    "": "Closure;box_0-370,this_1-370,test_2-1417,future_3-1343",
    call$1: [function(value) {
      var t1, t2;
      t1 = this.box_0;
      t2 = this.future_3;
      P._runUserCode(new P.Stream_firstWhere__closure(this.test_2, value), new P.Stream_firstWhere__closure0(t1, t2, value), P._cancelAndErrorClosure(t1.subscription_0, t2));
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.$receiver, "Stream");
    }, 280, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  "+Stream_firstWhere_closure": [1060],
  Stream_firstWhere__closure: {
    "": "Closure:319;test_4-1417,value_5-1402",
    call$0: [function() {
      return this.test_4.call$1(this.value_5);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_firstWhere__closure": [1060],
  Stream_firstWhere__closure0: {
    "": "Closure:570;box_0-370,future_6-1343,value_7-1402",
    call$1: [function(isMatch) {
      if (isMatch === true)
        P._cancelAndValue(this.box_0.subscription_0, this.future_6, this.value_7);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 570, 1415, "call"]
  },
  "+Stream_firstWhere__closure": [1060],
  Stream_firstWhere_closure0: {
    "": "Closure:319;defaultValue_8-1423,future_9-1343",
    call$0: [function() {
      var t1, t2;
      t1 = this.defaultValue_8;
      if (t1 != null) {
        t2 = this.future_9;
        P._runUserCode(t1, t2.get$_complete(), t2.get$_completeError());
        return;
      }
      this.future_9._completeError$1(new P.StateError("firstMatch ended without match"));
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_firstWhere_closure": [1060],
  Stream_lastWhere_closure: {
    "": "Closure;box_0-370,this_1-370,test_2-1417,future_3-1343",
    call$1: [function(value) {
      var t1 = this.box_0;
      P._runUserCode(new P.Stream_lastWhere__closure(this.test_2, value), new P.Stream_lastWhere__closure0(t1, value), P._cancelAndErrorClosure(t1.subscription_2, this.future_3));
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.$receiver, "Stream");
    }, 280, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  "+Stream_lastWhere_closure": [1060],
  Stream_lastWhere__closure: {
    "": "Closure:319;test_4-1417,value_5-1402",
    call$0: [function() {
      return true === this.test_4.call$1(this.value_5);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_lastWhere__closure": [1060],
  Stream_lastWhere__closure0: {
    "": "Closure:570;box_0-370,value_6-1402",
    call$1: [function(isMatch) {
      var t1;
      if (isMatch === true) {
        t1 = this.box_0;
        t1.foundResult_1 = true;
        t1.result_0 = this.value_6;
      }
    }, "call$1" /* tearOffInfo */, null, 2, 0, 570, 1415, "call"]
  },
  "+Stream_lastWhere__closure": [1060],
  Stream_lastWhere_closure0: {
    "": "Closure:319;box_0-370,defaultValue_7-1423,future_8-1343",
    call$0: [function() {
      var t1, t2;
      t1 = this.box_0;
      if (t1.foundResult_1 === true) {
        this.future_8._complete$1(t1.result_0);
        return;
      }
      t1 = this.defaultValue_7;
      if (t1 != null) {
        t2 = this.future_8;
        P._runUserCode(t1, t2.get$_complete(), t2.get$_completeError());
        return;
      }
      this.future_8._completeError$1(new P.StateError("lastMatch ended without match"));
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_lastWhere_closure": [1060],
  Stream_singleWhere_closure: {
    "": "Closure;box_0-370,this_1-370,test_2-1417,future_3-1409",
    call$1: [function(value) {
      var t1, t2;
      t1 = this.box_0;
      t2 = this.future_3;
      P._runUserCode(new P.Stream_singleWhere__closure(this.test_2, value), new P.Stream_singleWhere__closure0(t1, t2, value), P._cancelAndErrorClosure(t1.subscription_2, t2));
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.$receiver, "Stream");
    }, 280, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  "+Stream_singleWhere_closure": [1060],
  Stream_singleWhere__closure: {
    "": "Closure:319;test_4-1417,value_5-1402",
    call$0: [function() {
      return true === this.test_4.call$1(this.value_5);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_singleWhere__closure": [1060],
  Stream_singleWhere__closure0: {
    "": "Closure:570;box_0-370,future_6-1409,value_7-1402",
    call$1: [function(isMatch) {
      var t1;
      if (isMatch === true) {
        t1 = this.box_0;
        if (t1.foundResult_1 === true) {
          P._cancelAndError(t1.subscription_2, this.future_6, new P.StateError("Multiple matches for \"single\""), null);
          return;
        }
        t1.foundResult_1 = true;
        t1.result_0 = this.value_7;
      }
    }, "call$1" /* tearOffInfo */, null, 2, 0, 570, 1415, "call"]
  },
  "+Stream_singleWhere__closure": [1060],
  Stream_singleWhere_closure0: {
    "": "Closure:319;box_0-370,future_8-1409",
    call$0: [function() {
      var t1 = this.box_0;
      if (t1.foundResult_1 === true) {
        this.future_8._complete$1(t1.result_0);
        return;
      }
      this.future_8._completeError$1(new P.StateError("single ended without match"));
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_singleWhere_closure": [1060],
  Stream_elementAt_closure: {
    "": "Closure;box_0-370,this_1-370,future_2-1409",
    call$1: [function(value) {
      var t1 = this.box_0;
      if (J.$eq(t1.index_0, 0)) {
        P._cancelAndValue(t1.subscription_1, this.future_2, value);
        return;
      }
      t1.index_0 = J.$sub$n(t1.index_0, 1);
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.$receiver, "Stream");
    }, 280, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T1", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  "+Stream_elementAt_closure": [1060],
  Stream_elementAt_closure0: {
    "": "Closure:319;box_0-370,future_3-1409",
    call$0: [function() {
      this.future_3._completeError$1(new P.RangeError("value " + H.S(this.box_0.index_0)));
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_elementAt_closure": [1060],
  Stream_timeout_onData: {
    "": "Closure;box_0-370,this_1-370,timeLimit_2-1372",
    call$1: [function($event) {
      var t1 = this.box_0;
      t1.timer_3.cancel$0();
      J.add$1$a(t1.controller_2, $event);
      t1.timer_3 = t1.zone_4.createTimer$2(this.timeLimit_2, t1.timeout_5);
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T6", void: true, args: [T]};
      }, this.$receiver, "Stream");
    }, 504, "call"],
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "void__T6", void: true, args: [T]};
      }, this.this_1, "Stream");
    }
  },
  "+Stream_timeout_onData": [1060],
  Stream_timeout_onError: {
    "": "Closure:1387;box_0-370,timeLimit_3-1372",
    call$2: [function(error, stackTrace) {
      var t1 = this.box_0;
      t1.timer_3.cancel$0();
      t1.controller_2.addError$2(error, stackTrace);
      t1.timer_3 = t1.zone_4.createTimer$2(this.timeLimit_3, t1.timeout_5);
    }, "call$2" /* tearOffInfo */, null, 4, 0, 1387, 507, 508, "call"]
  },
  "+Stream_timeout_onError": [1060],
  Stream_timeout_onDone: {
    "": "Closure:494;box_0-370",
    call$0: [function() {
      var t1 = this.box_0;
      t1.timer_3.cancel$0();
      t1.controller_2.close$0();
    }, "call$0" /* tearOffInfo */, null, 0, 0, 494, "call"]
  },
  "+Stream_timeout_onDone": [1060],
  Stream_timeout_closure: {
    "": "Closure:319;box_0-370,this_4-370,timeLimit_5-1372,onData_6-1416,onError_7-1387,onDone_8-494",
    call$0: [function() {
      var zone, t1, t2;
      zone = $.Zone__current;
      t1 = this.box_0;
      t1.zone_4 = zone;
      t2 = t1.onTimeout_0;
      if (t2 == null)
        t1.timeout_5 = new P.Stream_timeout__closure(t1, this.timeLimit_5);
      else {
        t1.onTimeout_0 = zone.registerUnaryCallback$1(t2);
        t1.timeout_5 = new P.Stream_timeout__closure0(t1, H.setRuntimeTypeInfo(new P._ControllerEventSinkWrapper(null), [null]));
      }
      t1.subscription_1 = this.this_4.listen$3$onDone$onError(this.onData_6, this.onDone_8, this.onError_7);
      t1.timer_3 = t1.zone_4.createTimer$2(this.timeLimit_5, t1.timeout_5);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_timeout_closure": [1060],
  Stream_timeout__closure: {
    "": "Closure:319;box_0-370,timeLimit_9-1372",
    call$0: [function() {
      this.box_0.controller_2.addError$1(new P.TimeoutException("No stream event", this.timeLimit_9));
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_timeout__closure": [1060],
  Stream_timeout__closure0: {
    "": "Closure:319;box_0-370,wrapper_10-1424",
    call$0: [function() {
      var t1, t2;
      t1 = this.wrapper_10;
      t2 = this.box_0;
      t1.set$_sink(t2.controller_2);
      t2.zone_4.runUnaryGuarded$2(t2.onTimeout_0, t1);
      t1.set$_sink(null);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_timeout__closure": [1060],
  Stream_timeout_closure0: {
    "": "Closure:319;box_0-370",
    call$0: [function() {
      var t1 = this.box_0;
      t1.timer_3.cancel$0();
      t1.subscription_1.pause$0();
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_timeout_closure": [1060],
  Stream_timeout_closure1: {
    "": "Closure:319;box_0-370,timeLimit_11-1372",
    call$0: [function() {
      var t1 = this.box_0;
      t1.subscription_1.resume$0();
      t1.timer_3 = t1.zone_4.createTimer$2(this.timeLimit_11, t1.timeout_5);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_timeout_closure": [1060],
  Stream_timeout_closure2: {
    "": "Closure:319;box_0-370",
    call$0: [function() {
      var t1, result;
      t1 = this.box_0;
      t1.timer_3.cancel$0();
      result = t1.subscription_1.cancel$0();
      t1.subscription_1 = null;
      return result;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Stream_timeout_closure": [1060],
  StreamSubscription: {
    "": "Object;",
    $isStreamSubscription: true,
    "<>": [77]
  },
  "+StreamSubscription": [0],
  EventSink: {
    "": "Object;",
    "<>": [60]
  },
  "+EventSink": [0],
  StreamView: {
    "": "Stream;_stream@-1425",
    get$isBroadcast: [function() {
      return this._stream.get$isBroadcast();
    }, null /* tearOffInfo */, null, 1, 0, 849, "isBroadcast"],
    asBroadcastStream$2$onCancel$onListen: [function(onCancel, onListen) {
      return this._stream.asBroadcastStream$2$onCancel$onListen(onCancel, onListen);
    }, "call$2$onCancel$onListen" /* tearOffInfo */, "get$asBroadcastStream", 0, 5, function() {
      return H.computeSignature(function(T) {
        return {func: "Stream___void__StreamSubscription_void__StreamSubscription0", ret: [P.Stream, T], named: {onCancel: {func: "void__StreamSubscription", void: true, args: [P.StreamSubscription]}, onListen: {func: "void__StreamSubscription", void: true, args: [P.StreamSubscription]}}};
      }, this.$receiver, "StreamView");
    }, 370, 370, 522, 521, "asBroadcastStream"],
    listen$4$cancelOnError$onDone$onError: [function(onData, cancelOnError, onDone, onError) {
      return this._stream.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
    }, function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }, "listen$3$onDone$onError", function(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    }, "listen$2$cancelOnError", "call$4$cancelOnError$onDone$onError" /* tearOffInfo */, null /* tearOffInfo */, null /* tearOffInfo */, "get$listen", 2, 7, function() {
      return H.computeSignature(function(T) {
        return {func: "StreamSubscription__void__T__bool_void__Function", ret: [P.StreamSubscription, T], args: [{func: "void__T7", void: true, args: [T]}], named: {cancelOnError: J.JSBool, onDone: {func: "void_", void: true}, onError: P.Function}};
      }, this.$receiver, "StreamView");
    }, 370, 370, 370, 1120, 516, 1121, 581, "listen"],
    $asStream: null,
    "<>": [144],
    static: {StreamView$: [function(_stream, $T) {
        return H.setRuntimeTypeInfo(new P.StreamView(_stream), [$T]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic__Stream", args: [[P.Stream, T]]};
        }, this.$receiver, "StreamView");
      }, 549, "new StreamView" /* new StreamView:1:0 */]}
  },
  "+StreamView": [1425],
  StreamConsumer: {
    "": "Object;",
    "<>": [61]
  },
  "+StreamConsumer": [0],
  StreamSink: {
    "": "Object;",
    "<>": [59]
  },
  "+StreamSink": [0, 1426, 1427],
  StreamTransformer: {
    "": "Object;",
    "<>": [104, 105],
    static: {StreamTransformer_StreamTransformer: [function(transformer, $S, $T) {
        return H.setRuntimeTypeInfo(new P._StreamSubscriptionTransformer(transformer), [null, null]);
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(S, T) {
          return {func: "StreamTransformer__StreamSubscription__Stream_bool", ret: [P.StreamTransformer, S, T], args: [{func: "StreamSubscription__Stream_bool", ret: [P.StreamSubscription, T], args: [[P.Stream, S], J.JSBool]}]};
        }, this.$receiver, "StreamTransformer");
      }, 550, "new StreamTransformer" /* new StreamTransformer:1:0 */], StreamTransformer_StreamTransformer$fromHandlers: [function(handleData, handleDone, handleError, $S, $T) {
        return P._StreamHandlerTransformer$(handleData, handleDone, handleError, null, null);
      }, "call$3$handleData$handleDone$handleError" /* tearOffInfo */, null, 0, 7, function() {
        return H.computeSignature(function(S, T) {
          return {func: "StreamTransformer___void__S_EventSink_void__EventSink_void__Object_StackTrace_EventSink", ret: [P.StreamTransformer, S, T], named: {handleData: {func: "void__S_EventSink", void: true, args: [S, [P.EventSink, T]]}, handleDone: {func: "void__EventSink", void: true, args: [[P.EventSink, T]]}, handleError: {func: "void__Object_StackTrace_EventSink", void: true, args: [P.Object, P.StackTrace, [P.EventSink, T]]}}};
        }, this.$receiver, "StreamTransformer");
      }, 370, 370, 370, 551, 552, 294, "new StreamTransformer$fromHandlers" /* new StreamTransformer$fromHandlers:0:3:handleData:handleDone:handleError */]}
  },
  "+StreamTransformer": [0],
  StreamIterator: {
    "": "Object;",
    "<>": [145],
    static: {StreamIterator_StreamIterator: [function(stream, $T) {
        var t1 = H.setRuntimeTypeInfo(new P._StreamIteratorImpl(null, null, null, 0), [$T]);
        t1._StreamIteratorImpl$1(stream, $T);
        return t1;
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "StreamIterator__Stream", ret: [P.StreamIterator, T], args: [[P.Stream, T]]};
        }, this.$receiver, "StreamIterator");
      }, 553, "new StreamIterator" /* new StreamIterator:1:0 */]}
  },
  "+StreamIterator": [0],
  _ControllerEventSinkWrapper: {
    "": "Object;_sink@-1428",
    add$1: [function(_, data) {
      J.add$1$a(this._sink, data);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T8", void: true, args: [T]};
      }, this.$receiver, "_ControllerEventSinkWrapper");
    }, 546, "add"],
    addError$2: [function(error, stackTrace) {
      this._sink.addError$2(error, stackTrace);
    }, function(error) {
      return this.addError$2(error, null);
    }, "addError$1", "call$2" /* tearOffInfo */, "call$1" /* tearOffInfo */, "get$addError", 2, 2, 573, 370, 507, 508, "addError"],
    close$0: [function() {
      this._sink.close$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    "<>": [146],
    static: {_ControllerEventSinkWrapper$: [function(_sink, $T) {
        return H.setRuntimeTypeInfo(new P._ControllerEventSinkWrapper(_sink), [$T]);
      }, null /* tearOffInfo */, null, 2, 0, 554, 555, "new _ControllerEventSinkWrapper" /* new _ControllerEventSinkWrapper:1:0 */]}
  },
  "+_ControllerEventSinkWrapper": [0, 1429],
  StreamController: {
    "": "Object;",
    "<>": [58],
    static: {StreamController_StreamController: [function(onCancel, onListen, onPause, onResume, sync, $T) {
        if (onListen == null && onPause == null && onResume == null && onCancel == null)
          return sync === true ? new P._NoCallbackSyncStreamController(null, 0, null) : new P._NoCallbackAsyncStreamController(null, 0, null);
        return sync === true ? H.setRuntimeTypeInfo(new P._SyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null), [$T]) : H.setRuntimeTypeInfo(new P._AsyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null), [$T]);
      }, "call$5$onCancel$onListen$onPause$onResume$sync" /* tearOffInfo */, null, 0, 11, function() {
        return H.computeSignature(function(T) {
          return {func: "StreamController___args0_void__void__void__bool", ret: [P.StreamController, T], named: {onCancel: {func: "args0"}, onListen: {func: "void_", void: true}, onPause: {func: "void_", void: true}, onResume: {func: "void_", void: true}, sync: J.JSBool}};
        }, this.$receiver, "StreamController");
      }, 370, 370, 370, 370, 527, 522, 521, 556, 557, 558, "new StreamController" /* new StreamController:0:5:onCancel:onListen:onPause:onResume:sync */], StreamController_StreamController$broadcast: [function(onCancel, onListen, sync, $T) {
        var t1;
        if (sync === true) {
          t1 = H.setRuntimeTypeInfo(new P._SyncBroadcastStreamController(onListen, onCancel, 0, null, null, null, null), [$T]);
          t1._async$_previous = t1;
          t1._async$_next = t1;
        } else {
          t1 = H.setRuntimeTypeInfo(new P._AsyncBroadcastStreamController(onListen, onCancel, 0, null, null, null, null), [$T]);
          t1._async$_previous = t1;
          t1._async$_next = t1;
        }
        return t1;
      }, "call$3$onCancel$onListen$sync" /* tearOffInfo */, null, 0, 7, function() {
        return H.computeSignature(function(T) {
          return {func: "StreamController___void__void__bool", ret: [P.StreamController, T], named: {onCancel: {func: "void_", void: true}, onListen: {func: "void_", void: true}, sync: J.JSBool}};
        }, this.$receiver, "StreamController");
      }, 370, 370, 527, 522, 521, 558, "new StreamController$broadcast" /* new StreamController$broadcast:0:3:onCancel:onListen:sync */]}
  },
  "+StreamController": [0, 1430],
  _StreamControllerLifecycle: {
    "": "Object;",
    _recordPause$1: [function(subscription) {
    }, "call$1" /* tearOffInfo */, "get$_recordPause", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__StreamSubscription2", void: true, args: [[P.StreamSubscription, T]]};
      }, this.$receiver, "_StreamControllerLifecycle");
    }, 583, "_recordPause"],
    _recordResume$1: [function(subscription) {
    }, "call$1" /* tearOffInfo */, "get$_recordResume", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__StreamSubscription2", void: true, args: [[P.StreamSubscription, T]]};
      }, this.$receiver, "_StreamControllerLifecycle");
    }, 583, "_recordResume"],
    _recordCancel$1: [function(subscription) {
      return;
    }, "call$1" /* tearOffInfo */, "get$_recordCancel", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future__StreamSubscription", ret: P.Future, args: [[P.StreamSubscription, T]]};
      }, this.$receiver, "_StreamControllerLifecycle");
    }, 583, "_recordCancel"],
    "<>": [66]
  },
  "+_StreamControllerLifecycle": [0],
  _StreamController: {
    "": "Object;_varData@-370,_state@-1075,_doneFuture@-1343",
    _onListen$1: function(arg0) {
      return this.get$_onListen().call$1(arg0);
    },
    _onListen$0: function() {
      return this.get$_onListen().call$0();
    },
    _onPause$0: function() {
      return this.get$_onPause().call$0();
    },
    _onResume$0: function() {
      return this.get$_onResume().call$0();
    },
    _onCancel$0: function() {
      return this.get$_onCancel().call$0();
    },
    get$stream: [function() {
      return H.setRuntimeTypeInfo(new P._ControllerStream(this), [null]);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Stream_1", ret: [P.Stream, T]};
      }, this.$receiver, "_StreamController");
    }, "stream"],
    get$sink: [function() {
      return H.setRuntimeTypeInfo(new P._StreamSinkWrapper(this), [H.getRuntimeTypeArgument(this, "_StreamController", 0)]);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "StreamSink_0", ret: [P.StreamSink, T]};
      }, this.$receiver, "_StreamController");
    }, "sink"],
    get$_isCanceled: [function() {
      return J.$and$n(this._state, 2) !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_isCanceled"],
    get$hasListener: [function() {
      return J.$and$n(this._state, 1) !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "hasListener"],
    get$_isInitialState: [function() {
      return J.$and$n(this._state, 3) === 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_isInitialState"],
    get$isClosed: [function() {
      return J.$and$n(this._state, 4) !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isClosed"],
    get$isPaused: [function() {
      return J.$and$n(this._state, 1) !== 0 ? this.get$_subscription().get$_isInputPaused() : J.$and$n(this._state, 2) === 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isPaused"],
    get$_isAddingStream: [function() {
      return J.$and$n(this._state, 8) !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_isAddingStream"],
    get$_mayAddEvent: [function() {
      return J.$lt$n(this._state, 4);
    }, null /* tearOffInfo */, null, 1, 0, 849, "_mayAddEvent"],
    get$_pendingEvents: [function() {
      if (J.$and$n(this._state, 8) === 0)
        return this._varData;
      return this._varData.get$varData();
    }, null /* tearOffInfo */, null, 1, 0, 1431, "_pendingEvents"],
    _ensurePendingEvents$0: [function() {
      var t1, state;
      if (J.$and$n(this._state, 8) === 0) {
        t1 = this._varData;
        if (t1 == null) {
          t1 = new P._StreamImplEvents(null, null, 0);
          this._varData = t1;
        }
        return t1;
      }
      state = this._varData;
      if (state.get$varData() == null)
        state.set$varData(new P._StreamImplEvents(null, null, 0));
      return state.get$varData();
    }, "call$0" /* tearOffInfo */, "get$_ensurePendingEvents", 0, 0, 1432, "_ensurePendingEvents"],
    get$_subscription: [function() {
      if (J.$and$n(this._state, 8) !== 0)
        return this._varData.get$varData();
      return this._varData;
    }, null /* tearOffInfo */, null, 1, 0, 1433, "_subscription"],
    _badEventState$0: [function() {
      if (J.$and$n(this._state, 4) !== 0)
        return new P.StateError("Cannot add event after closing");
      return new P.StateError("Cannot add event while adding a stream");
    }, "call$0" /* tearOffInfo */, "get$_badEventState", 0, 0, 1345, "_badEventState"],
    addStream$2$cancelOnError: [function(source, cancelOnError) {
      var t1, t2, t3, t4, addState;
      if (!J.$lt$n(this._state, 4))
        throw H.wrapException(this._badEventState$0());
      if (J.$and$n(this._state, 2) !== 0)
        return P._Future$immediate(null, null);
      t1 = this._varData;
      t2 = P._Future$(null);
      t3 = this.get$_add();
      t4 = cancelOnError === true ? P._AddStreamState_makeErrorHandler(this) : this.get$_addError();
      addState = H.setRuntimeTypeInfo(new P._StreamControllerAddStreamState(t1, t2, source.listen$4$cancelOnError$onDone$onError(t3, cancelOnError, this.get$_close(), t4)), [null]);
      if (this.get$isPaused())
        addState.addSubscription.pause$0();
      this._varData = addState;
      this._state = J.$or$n(this._state, 8);
      return addState.addStreamFuture;
    }, function(source) {
      return this.addStream$2$cancelOnError(source, true);
    }, "addStream$1", "call$2$cancelOnError" /* tearOffInfo */, null /* tearOffInfo */, "get$addStream", 2, 3, function() {
      return H.computeSignature(function(T) {
        return {func: "Future__Stream__bool0", ret: P.Future, args: [[P.Stream, T]], named: {cancelOnError: J.JSBool}};
      }, this.$receiver, "_StreamController");
    }, 816, 292, 516, "addStream"],
    get$done: [function() {
      return this._ensureDoneFuture$0();
    }, null /* tearOffInfo */, null, 1, 0, 1347, "done"],
    _ensureDoneFuture$0: [function() {
      if (this._doneFuture == null) {
        this._doneFuture = P._Future$(null);
        if (J.$and$n(this._state, 2) !== 0)
          this._doneFuture._complete$1(null);
      }
      return this._doneFuture;
    }, "call$0" /* tearOffInfo */, "get$_ensureDoneFuture", 0, 0, 1347, "_ensureDoneFuture"],
    add$1: [function(_, value) {
      if (!J.$lt$n(this._state, 4))
        throw H.wrapException(this._badEventState$0());
      this._add$1(value);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T9", void: true, args: [T]};
      }, this.$receiver, "_StreamController");
    }, 280, "add"],
    addError$2: [function(error, stackTrace) {
      if (!J.$lt$n(this._state, 4))
        throw H.wrapException(this._badEventState$0());
      this._addError$2(error, stackTrace);
    }, function(error) {
      return this.addError$2(error, null);
    }, "addError$1", "call$2" /* tearOffInfo */, "call$1" /* tearOffInfo */, "get$addError", 2, 2, 1346, 370, 507, 508, "addError"],
    close$0: [function() {
      if (J.$and$n(this._state, 4) !== 0)
        return this._doneFuture;
      if (!J.$lt$n(this._state, 4))
        throw H.wrapException(this._badEventState$0());
      this._state = J.$or$n(this._state, 4);
      this._ensureDoneFuture$0();
      if (J.$and$n(this._state, 1) !== 0)
        this._sendDone$0();
      else if (J.$and$n(this._state, 3) === 0)
        J.add$1$a(this._ensurePendingEvents$0(), C.C__DelayedDone);
      return this._doneFuture;
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 1347, "close"],
    _add$1: [function(value) {
      if (J.$and$n(this._state, 1) !== 0)
        this._sendData$1(value);
      else if (J.$and$n(this._state, 3) === 0)
        J.add$1$a(this._ensurePendingEvents$0(), H.setRuntimeTypeInfo(new P._DelayedData(value, null), [H.getRuntimeTypeArgument(this, "_StreamController", 0)]));
    }, "call$1" /* tearOffInfo */, "get$_add", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T9", void: true, args: [T]};
      }, this.$receiver, "_StreamController");
    }, 280, "_add"],
    _addError$2: [function(error, stackTrace) {
      if (J.$and$n(this._state, 1) !== 0)
        this._sendError$2(error, stackTrace);
      else if (J.$and$n(this._state, 3) === 0)
        J.add$1$a(this._ensurePendingEvents$0(), new P._DelayedError(error, stackTrace, null));
    }, "call$2" /* tearOffInfo */, "get$_addError", 4, 0, 1348, 507, 508, "_addError"],
    _close$0: [function() {
      var addState = this._varData;
      this._varData = addState.get$varData();
      this._state = J.$and$n(this._state, 4294967287);
      addState.complete$0();
    }, "call$0" /* tearOffInfo */, "get$_close", 0, 0, 494, "_close"],
    _subscribe$1: [function(cancelOnError) {
      var t1, t2, subscription, pendingEvents, addState;
      if (J.$and$n(this._state, 3) !== 0)
        throw H.wrapException(new P.StateError("Stream has already been listened to."));
      t1 = $.Zone__current;
      t2 = cancelOnError === true ? 1 : 0;
      subscription = H.setRuntimeTypeInfo(new P._ControllerSubscription(this, null, null, null, t1, t2, null, null), [null]);
      pendingEvents = this.get$_pendingEvents();
      t2 = J.$or$n(this._state, 1);
      this._state = t2;
      if ((t2 & 8) !== 0) {
        addState = this._varData;
        addState.set$varData(subscription);
        addState.resume$0();
      } else
        this._varData = subscription;
      subscription._setPendingEvents$1(pendingEvents);
      subscription._guardCallback$1(new P._StreamController__subscribe_closure(this));
      return subscription;
    }, "call$1" /* tearOffInfo */, "get$_subscribe", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "StreamSubscription__bool0", ret: [P.StreamSubscription, T], args: [J.JSBool]};
      }, this.$receiver, "_StreamController");
    }, 516, "_subscribe"],
    _recordCancel$1: [function(subscription) {
      var t1, future;
      if (J.$and$n(this._state, 8) !== 0)
        this._varData.cancel$0();
      this._varData = null;
      this._state = (J.$and$n(this._state, 4294967286) | 2) >>> 0;
      t1 = new P._StreamController__recordCancel_complete(this);
      future = P._runGuarded(this.get$_onCancel());
      if (future != null)
        future = future.whenComplete$1(t1);
      else
        t1.call$0();
      return future;
    }, "call$1" /* tearOffInfo */, "get$_recordCancel", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future__StreamSubscription0", ret: P.Future, args: [[P.StreamSubscription, T]]};
      }, this.$receiver, "_StreamController");
    }, 583, "_recordCancel"],
    _recordPause$1: [function(subscription) {
      if (J.$and$n(this._state, 8) !== 0)
        this._varData.pause$0();
      P._runGuarded(this.get$_onPause());
    }, "call$1" /* tearOffInfo */, "get$_recordPause", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__StreamSubscription3", void: true, args: [[P.StreamSubscription, T]]};
      }, this.$receiver, "_StreamController");
    }, 583, "_recordPause"],
    _recordResume$1: [function(subscription) {
      if (J.$and$n(this._state, 8) !== 0)
        this._varData.resume$0();
      P._runGuarded(this.get$_onResume());
    }, "call$1" /* tearOffInfo */, "get$_recordResume", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__StreamSubscription3", void: true, args: [[P.StreamSubscription, T]]};
      }, this.$receiver, "_StreamController");
    }, 583, "_recordResume"],
    "<>": [62],
    static: {"": "_StreamController__STATE_INITIAL<-1075,_StreamController__STATE_SUBSCRIBED<-1075,_StreamController__STATE_CANCELED<-1075,_StreamController__STATE_SUBSCRIPTION_MASK<-1075,_StreamController__STATE_CLOSED<-1075,_StreamController__STATE_ADDSTREAM<-1075", _StreamController$: [function($T) {
        return H.setRuntimeTypeInfo(new P._StreamController(null, 0, null), [$T]);
      }, null /* tearOffInfo */, null, 0, 0, 319, "new _StreamController" /* new _StreamController:0:0 */]}
  },
  "+_StreamController": [0, 1434, 1435, 1436, 1437],
  _StreamController__subscribe_closure: {
    "": "Closure:319;this_0-370",
    call$0: [function() {
      P._runGuarded(this.this_0.get$_onListen());
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_StreamController__subscribe_closure": [1060],
  _StreamController__recordCancel_complete: {
    "": "Closure:494;this_0-370",
    call$0: [function() {
      var t1 = this.this_0;
      if (t1.get$_doneFuture() != null && t1.get$_doneFuture().get$_mayComplete())
        t1.get$_doneFuture()._asyncComplete$1(null);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 494, "call"]
  },
  "+_StreamController__recordCancel_complete": [1060],
  _SyncStreamControllerDispatch: {
    "": "Object;",
    _sendData$1: [function(data) {
      this.get$_subscription()._add$1(data);
    }, "call$1" /* tearOffInfo */, "get$_sendData", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T10", void: true, args: [T]};
      }, this.$receiver, "_SyncStreamControllerDispatch");
    }, 546, "_sendData"],
    _sendError$2: [function(error, stackTrace) {
      this.get$_subscription()._addError$2(error, stackTrace);
    }, "call$2" /* tearOffInfo */, "get$_sendError", 4, 0, 1348, 507, 508, "_sendError"],
    _sendDone$0: [function() {
      this.get$_subscription()._close$0();
    }, "call$0" /* tearOffInfo */, "get$_sendDone", 0, 0, 494, "_sendDone"],
    "<>": [63]
  },
  "+_SyncStreamControllerDispatch": [0, 1438],
  _AsyncStreamControllerDispatch: {
    "": "Object;",
    _sendData$1: [function(data) {
      this.get$_subscription()._addPending$1(H.setRuntimeTypeInfo(new P._DelayedData(data, null), [null]));
    }, "call$1" /* tearOffInfo */, "get$_sendData", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T11", void: true, args: [T]};
      }, this.$receiver, "_AsyncStreamControllerDispatch");
    }, 546, "_sendData"],
    _sendError$2: [function(error, stackTrace) {
      this.get$_subscription()._addPending$1(new P._DelayedError(error, stackTrace, null));
    }, "call$2" /* tearOffInfo */, "get$_sendError", 4, 0, 1348, 507, 508, "_sendError"],
    _sendDone$0: [function() {
      this.get$_subscription()._addPending$1(C.C__DelayedDone);
    }, "call$0" /* tearOffInfo */, "get$_sendDone", 0, 0, 494, "_sendDone"],
    "<>": [67]
  },
  "+_AsyncStreamControllerDispatch": [0, 1439],
  _AsyncStreamController: {
    "": "_StreamController__AsyncStreamControllerDispatch;_onListen<-319,_onPause<-319,_onResume<-319,_onCancel<-319,_varData-370,_state-1075,_doneFuture-1343",
    _onListen$1: function(arg0) {
      return this._onListen.call$1(arg0);
    },
    _onListen$0: function() {
      return this._onListen.call$0();
    },
    _onPause$0: function() {
      return this._onPause.call$0();
    },
    _onResume$0: function() {
      return this._onResume.call$0();
    },
    _onCancel$0: function() {
      return this._onCancel.call$0();
    },
    $as_StreamController__AsyncStreamControllerDispatch: null,
    "<>": [70],
    static: {_AsyncStreamController$: [function(_onListen, _onPause, _onResume, _onCancel, $T) {
        return H.setRuntimeTypeInfo(new P._AsyncStreamController(_onListen, _onPause, _onResume, _onCancel, null, 0, null), [$T]);
      }, null /* tearOffInfo */, null, 8, 0, 559, 518, 560, 561, 519, "new _AsyncStreamController" /* new _AsyncStreamController:4:0 */]}
  },
  "+_AsyncStreamController": [1440],
  _StreamController__AsyncStreamControllerDispatch: {
    "": "_StreamController+_AsyncStreamControllerDispatch;",
    $as_StreamController: null,
    "<>": [71]
  },
  _SyncStreamController: {
    "": "_StreamController__SyncStreamControllerDispatch;_onListen<-319,_onPause<-319,_onResume<-319,_onCancel<-319,_varData-370,_state-1075,_doneFuture-1343",
    _onListen$1: function(arg0) {
      return this._onListen.call$1(arg0);
    },
    _onListen$0: function() {
      return this._onListen.call$0();
    },
    _onPause$0: function() {
      return this._onPause.call$0();
    },
    _onResume$0: function() {
      return this._onResume.call$0();
    },
    _onCancel$0: function() {
      return this._onCancel.call$0();
    },
    $as_StreamController__SyncStreamControllerDispatch: null,
    "<>": [68],
    static: {_SyncStreamController$: [function(_onListen, _onPause, _onResume, _onCancel, $T) {
        return H.setRuntimeTypeInfo(new P._SyncStreamController(_onListen, _onPause, _onResume, _onCancel, null, 0, null), [$T]);
      }, null /* tearOffInfo */, null, 8, 0, 559, 518, 560, 561, 519, "new _SyncStreamController" /* new _SyncStreamController:4:0 */]}
  },
  "+_SyncStreamController": [1441],
  _StreamController__SyncStreamControllerDispatch: {
    "": "_StreamController+_SyncStreamControllerDispatch;",
    $as_StreamController: null,
    "<>": [69]
  },
  _NoCallbacks: {
    "": "Object;",
    get$_onListen: [function() {
      return;
    }, null /* tearOffInfo */, null, 1, 0, 1442, "_onListen"],
    _onListen$1: function(arg0) {
      return this.get$_onListen().call$1(arg0);
    },
    _onListen$0: function() {
      return this.get$_onListen().call$0();
    },
    get$_onPause: [function() {
      return;
    }, null /* tearOffInfo */, null, 1, 0, 1442, "_onPause"],
    _onPause$0: function() {
      return this.get$_onPause().call$0();
    },
    get$_onResume: [function() {
      return;
    }, null /* tearOffInfo */, null, 1, 0, 1442, "_onResume"],
    _onResume$0: function() {
      return this.get$_onResume().call$0();
    },
    get$_onCancel: [function() {
      return;
    }, null /* tearOffInfo */, null, 1, 0, 1442, "_onCancel"],
    _onCancel$0: function() {
      return this.get$_onCancel().call$0();
    }
  },
  "+_NoCallbacks": [0],
  _NoCallbackAsyncStreamController: {
    "": "_StreamController__AsyncStreamControllerDispatch0+_NoCallbacks;_varData-370,_state-1075,_doneFuture-1343"
  },
  "+_NoCallbackAsyncStreamController": [1443, 1444],
  _StreamController__AsyncStreamControllerDispatch0: {
    "": "_StreamController+_AsyncStreamControllerDispatch;",
    $as_StreamController: function() {
      return [null];
    },
    "<>": []
  },
  _NoCallbackSyncStreamController: {
    "": "_StreamController__SyncStreamControllerDispatch0+_NoCallbacks;_varData-370,_state-1075,_doneFuture-1343"
  },
  "+_NoCallbackSyncStreamController": [1445, 1444],
  _StreamController__SyncStreamControllerDispatch0: {
    "": "_StreamController+_SyncStreamControllerDispatch;",
    $as_StreamController: function() {
      return [null];
    },
    "<>": []
  },
  _ControllerStream: {
    "": "_StreamImpl;_async$_controller@-1331",
    _createSubscription$1: [function(cancelOnError) {
      return this._async$_controller._subscribe$1(cancelOnError);
    }, "call$1" /* tearOffInfo */, "get$_createSubscription", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "StreamSubscription__bool1", ret: [P.StreamSubscription, T], args: [J.JSBool]};
      }, this.$receiver, "_ControllerStream");
    }, 516, "_createSubscription"],
    get$hashCode: [function(_) {
      return J.$xor$n(J.get$hashCode$(this._async$_controller), 892482866);
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    $eq: [function(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (this === other)
        return true;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$is_ControllerStream)
        return false;
      t1 = other._async$_controller;
      t2 = this._async$_controller;
      return t1 == null ? t2 == null : t1 === t2;
    }, "call$1" /* tearOffInfo */, "get$==", 2, 0, 1047, 403, "=="],
    $is_ControllerStream: true,
    $as_StreamImpl: null,
    "<>": [73],
    static: {_ControllerStream$: [function(_controller, $T) {
        return H.setRuntimeTypeInfo(new P._ControllerStream(_controller), [$T]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic___StreamControllerLifecycle0", args: [[P._StreamControllerLifecycle, T]]};
        }, this.$receiver, "_ControllerStream");
      }, 564, "new _ControllerStream" /* new _ControllerStream:1:0 */]}
  },
  "+_ControllerStream": [1446],
  _ControllerSubscription: {
    "": "_BufferingStreamSubscription;_async$_controller<-1334,_onData-1335,_onError-1098,_onDone-494,_zone-1336,_state-1075,_cancelFuture-1337,_pending-1338",
    _onCancel$0: [function() {
      return this.get$_async$_controller()._recordCancel$1(this);
    }, "call$0" /* tearOffInfo */, "get$_onCancel", 0, 0, 1347, "_onCancel"],
    _onPause$0: [function() {
      this.get$_async$_controller()._recordPause$1(this);
    }, "call$0" /* tearOffInfo */, "get$_onPause", 0, 0, 494, "_onPause"],
    _onResume$0: [function() {
      this.get$_async$_controller()._recordResume$1(this);
    }, "call$0" /* tearOffInfo */, "get$_onResume", 0, 0, 494, "_onResume"],
    $as_BufferingStreamSubscription: null,
    $asStreamSubscription: null,
    "<>": [75],
    static: {_ControllerSubscription$: [function(_controller, cancelOnError, $T) {
        var t1, t2;
        t1 = $.Zone__current;
        t2 = cancelOnError === true ? 1 : 0;
        return H.setRuntimeTypeInfo(new P._ControllerSubscription(_controller, null, null, null, t1, t2, null, null), [$T]);
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic___StreamControllerLifecycle_bool0", args: [[P._StreamControllerLifecycle, T], J.JSBool]};
        }, this.$receiver, "_ControllerSubscription");
      }, 564, 516, "new _ControllerSubscription" /* new _ControllerSubscription:2:0 */]}
  },
  "+_ControllerSubscription": [1447],
  _StreamSinkWrapper: {
    "": "Object;_async$_target<-1118",
    add$1: [function(_, data) {
      J.add$1$a(this._async$_target, data);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T12", void: true, args: [T]};
      }, this.$receiver, "_StreamSinkWrapper");
    }, 546, "add"],
    addError$2: [function(error, stackTrace) {
      this._async$_target.addError$2(error, stackTrace);
    }, function(error) {
      return this.addError$2(error, null);
    }, "addError$1", "call$2" /* tearOffInfo */, "call$1" /* tearOffInfo */, "get$addError", 2, 2, 1346, 370, 507, 508, "addError"],
    close$0: [function() {
      return this._async$_target.close$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 1347, "close"],
    addStream$2$cancelOnError: [function(source, cancelOnError) {
      return this._async$_target.addStream$2$cancelOnError(source, cancelOnError);
    }, function(source) {
      return this.addStream$2$cancelOnError(source, true);
    }, "addStream$1", "call$2$cancelOnError" /* tearOffInfo */, null /* tearOffInfo */, "get$addStream", 2, 3, function() {
      return H.computeSignature(function(T) {
        return {func: "Future__Stream__bool1", ret: P.Future, args: [[P.Stream, T]], named: {cancelOnError: J.JSBool}};
      }, this.$receiver, "_StreamSinkWrapper");
    }, 816, 292, 516, "addStream"],
    get$done: [function() {
      return this._async$_target.get$done();
    }, null /* tearOffInfo */, null, 1, 0, 1347, "done"],
    "<>": [122],
    static: {_StreamSinkWrapper$: [function(_target, $T) {
        return H.setRuntimeTypeInfo(new P._StreamSinkWrapper(_target), [$T]);
      }, null /* tearOffInfo */, null, 2, 0, 565, 566, "new _StreamSinkWrapper" /* new _StreamSinkWrapper:1:0 */]}
  },
  "+_StreamSinkWrapper": [0, 1448],
  _AddStreamState: {
    "": "Object;addStreamFuture<-1343,addSubscription<-1449",
    pause$0: [function() {
      this.addSubscription.pause$0();
    }, "call$0" /* tearOffInfo */, "get$pause", 0, 0, 494, "pause"],
    resume$0: [function() {
      this.addSubscription.resume$0();
    }, "call$0" /* tearOffInfo */, "get$resume", 0, 0, 494, "resume"],
    cancel$0: [function() {
      this.addSubscription.cancel$0();
      this.addStreamFuture._asyncComplete$1(null);
    }, "call$0" /* tearOffInfo */, "get$cancel", 0, 0, 494, "cancel"],
    complete$0: [function() {
      this.addStreamFuture._asyncComplete$1(null);
    }, "call$0" /* tearOffInfo */, "get$complete", 0, 0, 494, "complete"],
    "<>": [147],
    static: {_AddStreamState$: [function(controller, source, cancelOnError, $T) {
        var t1, t2, t3;
        t1 = P._Future$(null);
        t2 = controller.get$_add();
        t3 = cancelOnError === true ? P._AddStreamState_makeErrorHandler(controller) : controller.get$_addError();
        return H.setRuntimeTypeInfo(new P._AddStreamState(t1, source.listen$4$cancelOnError$onDone$onError(t2, cancelOnError, controller.get$_close(), t3)), [$T]);
      }, null /* tearOffInfo */, null, 6, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic___EventSink_Stream_bool", args: [[P._EventSink, T], P.Stream, J.JSBool]};
        }, this.$receiver, "_AddStreamState");
      }, 514, 292, 516, "new _AddStreamState" /* new _AddStreamState:3:0 */], _AddStreamState_makeErrorHandler: [function(controller) {
        return new P._AddStreamState_makeErrorHandler_closure(controller);
      }, "call$1" /* tearOffInfo */, "_AddStreamState_makeErrorHandler$closure", 2, 0, 567, 514, "makeErrorHandler"]}
  },
  "+_AddStreamState": [0],
  _AddStreamState_makeErrorHandler_closure: {
    "": "Closure:511;controller_0-1450",
    call$2: [function(e, s) {
      var t1 = this.controller_0;
      t1._addError$2(e, s);
      t1._close$0();
    }, "call$2" /* tearOffInfo */, null, 4, 0, 511, 256, 383, "call"]
  },
  "+_AddStreamState_makeErrorHandler_closure": [1060],
  _StreamControllerAddStreamState: {
    "": "_AddStreamState;varData@-370,addStreamFuture-1343,addSubscription-1449",
    $as_AddStreamState: null,
    "<>": [148],
    static: {_StreamControllerAddStreamState$: [function(controller, varData, source, cancelOnError, $T) {
        var t1, t2, t3;
        t1 = P._Future$(null);
        t2 = controller.get$_add();
        t3 = cancelOnError === true ? P._AddStreamState_makeErrorHandler(controller) : controller.get$_addError();
        t3 = H.setRuntimeTypeInfo(new P._StreamControllerAddStreamState(varData, t1, source.listen$4$cancelOnError$onDone$onError(t2, cancelOnError, controller.get$_close(), t3)), [$T]);
        if (controller.get$isPaused())
          t3.addSubscription.pause$0();
        return t3;
      }, null /* tearOffInfo */, null, 8, 0, 568, 514, 569, 292, 516, "new _StreamControllerAddStreamState" /* new _StreamControllerAddStreamState:4:0 */]}
  },
  "+_StreamControllerAddStreamState": [1451],
  _EventSink: {
    "": "Object;",
    "<>": [65]
  },
  "+_EventSink": [0],
  _EventDispatch: {
    "": "Object;",
    "<>": [64]
  },
  "+_EventDispatch": [0],
  _BufferingStreamSubscription: {
    "": "Object;_onData@-1335,_onError@-1098,_onDone@-494,_zone<-1336,_state@-1075,_cancelFuture@-1337,_pending@-1338",
    _onData$1: function(arg0) {
      return this._onData.call$1(arg0);
    },
    _onError$2: function(arg0, arg1) {
      return this._onError.call$2(arg0, arg1);
    },
    _onDone$0: function() {
      return this._onDone.call$0();
    },
    _setPendingEvents$1: [function(pendingEvents) {
      if (pendingEvents == null)
        return;
      this._pending = pendingEvents;
      if (J.get$isEmpty$as(pendingEvents) !== true) {
        this._state = J.$or$n(this._state, 64);
        this._pending.schedule$1(this);
      }
    }, "call$1" /* tearOffInfo */, "get$_setPendingEvents", 2, 0, 1452, 1453, "_setPendingEvents"],
    _extractPending$0: [function() {
      var events = this._pending;
      this._pending = null;
      return events;
    }, "call$0" /* tearOffInfo */, "get$_extractPending", 0, 0, 1431, "_extractPending"],
    onData$1: [function(handleData) {
      if (handleData == null)
        handleData = P._nullDataHandler$closure();
      this._onData = this._zone.registerUnaryCallback$1(handleData);
    }, "call$1" /* tearOffInfo */, "get$onData", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__void__T0", void: true, args: [{func: "void__T", void: true, args: [T]}]};
      }, this.$receiver, "_BufferingStreamSubscription");
    }, 551, "onData"],
    onError$1: [function(handleError) {
      if (handleError == null)
        handleError = P._nullErrorHandler$closure();
      this._onError = P._registerErrorHandler(handleError, this._zone);
    }, "call$1" /* tearOffInfo */, "get$onError", 2, 0, 1113, 294, "onError"],
    onDone$1: [function(handleDone) {
      if (handleDone == null)
        handleDone = P._nullDoneHandler$closure();
      this._onDone = this._zone.registerCallback$1(handleDone);
    }, "call$1" /* tearOffInfo */, "get$onDone", 2, 0, 544, 552, "onDone"],
    pause$1: [function(resumeSignal) {
      var wasPaused, t1;
      if (J.$and$n(this._state, 8) !== 0)
        return;
      wasPaused = J.$ge$n(this._state, 128);
      t1 = J.$and$n(this._state, 4);
      this._state = J.$or$n(J.$add$ns(this._state, 128), 4);
      if (resumeSignal != null)
        resumeSignal.whenComplete$1(this.get$resume());
      if (!wasPaused && this._pending != null)
        this._pending.cancelSchedule$0();
      if (t1 === 0 && J.$and$n(this._state, 32) === 0)
        this._guardCallback$1(this.get$_onPause());
    }, function() {
      return this.pause$1(null);
    }, "pause$0", "call$1" /* tearOffInfo */, null /* tearOffInfo */, "get$pause", 0, 2, 1360, 370, 1361, "pause"],
    resume$0: [function() {
      if (J.$and$n(this._state, 8) !== 0)
        return;
      if (J.$ge$n(this._state, 128)) {
        var t1 = J.$sub$n(this._state, 128);
        this._state = t1;
        if (!J.$ge$n(t1, 128))
          if (J.$and$n(this._state, 64) !== 0 && J.get$isEmpty$as(this._pending) !== true)
            this._pending.schedule$1(this);
          else {
            t1 = J.$and$n(this._state, 4294967291);
            this._state = t1;
            if ((t1 & 32) === 0)
              this._guardCallback$1(this.get$_onResume());
          }
      }
    }, "call$0" /* tearOffInfo */, "get$resume", 0, 0, 494, "resume"],
    cancel$0: [function() {
      var t1 = J.$and$n(this._state, 4294967279);
      this._state = t1;
      if ((t1 & 8) !== 0)
        return this._cancelFuture;
      this._cancel$0();
      return this._cancelFuture;
    }, "call$0" /* tearOffInfo */, "get$cancel", 0, 0, 1347, "cancel"],
    asFuture$1: [function(futureValue) {
      var result = P._Future$(H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0));
      this._onDone = new P._BufferingStreamSubscription_asFuture_closure(futureValue, result);
      this._onError = new P._BufferingStreamSubscription_asFuture_closure0(this, result);
      return result;
    }, "call$1" /* tearOffInfo */, "get$asFuture", 0, 2, 1398, 370, 1399, "asFuture"],
    get$_isInputPaused: [function() {
      return J.$and$n(this._state, 4) !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_isInputPaused"],
    get$_async$_isClosed: [function() {
      return J.$and$n(this._state, 2) !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_isClosed"],
    get$_isCanceled: [function() {
      return J.$and$n(this._state, 8) !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_isCanceled"],
    get$_waitsForCancel: [function() {
      return J.$and$n(this._state, 16) !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_waitsForCancel"],
    get$_inCallback: [function() {
      return J.$and$n(this._state, 32) !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_inCallback"],
    get$_hasPending: [function() {
      return J.$and$n(this._state, 64) !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_hasPending"],
    get$_isPaused: [function() {
      return J.$ge$n(this._state, 128);
    }, null /* tearOffInfo */, null, 1, 0, 849, "_isPaused"],
    get$_canFire: [function() {
      return J.$lt$n(this._state, 32);
    }, null /* tearOffInfo */, null, 1, 0, 849, "_canFire"],
    get$_mayResumeInput: [function() {
      if (!J.$ge$n(this._state, 128)) {
        var t1 = this._pending;
        t1 = t1 == null || J.get$isEmpty$as(t1) === true;
      } else
        t1 = false;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_mayResumeInput"],
    get$_cancelOnError: [function() {
      return J.$and$n(this._state, 1) !== 0;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_cancelOnError"],
    get$isPaused: [function() {
      return J.$ge$n(this._state, 128);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isPaused"],
    _cancel$0: [function() {
      var t1 = J.$or$n(this._state, 8);
      this._state = t1;
      if ((t1 & 64) !== 0)
        this._pending.cancelSchedule$0();
      if (J.$and$n(this._state, 32) === 0)
        this._pending = null;
      this._cancelFuture = this._onCancel$0();
    }, "call$0" /* tearOffInfo */, "get$_cancel", 0, 0, 494, "_cancel"],
    _incrementPauseCount$0: [function() {
      this._state = J.$or$n(J.$add$ns(this._state, 128), 4);
    }, "call$0" /* tearOffInfo */, "get$_incrementPauseCount", 0, 0, 494, "_incrementPauseCount"],
    _decrementPauseCount$0: [function() {
      this._state = J.$sub$n(this._state, 128);
    }, "call$0" /* tearOffInfo */, "get$_decrementPauseCount", 0, 0, 494, "_decrementPauseCount"],
    _add$1: [function(data) {
      if (J.$and$n(this._state, 8) !== 0)
        return;
      if (J.$lt$n(this._state, 32))
        this._sendData$1(data);
      else
        this._addPending$1(H.setRuntimeTypeInfo(new P._DelayedData(data, null), [null]));
    }, "call$1" /* tearOffInfo */, "get$_add", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T", void: true, args: [T]};
      }, this.$receiver, "_BufferingStreamSubscription");
    }, 546, "_add"],
    _addError$2: [function(error, stackTrace) {
      if (J.$and$n(this._state, 8) !== 0)
        return;
      if (J.$lt$n(this._state, 32))
        this._sendError$2(error, stackTrace);
      else
        this._addPending$1(new P._DelayedError(error, stackTrace, null));
    }, "call$2" /* tearOffInfo */, "get$_addError", 4, 0, 1348, 507, 508, "_addError"],
    _close$0: [function() {
      if (J.$and$n(this._state, 8) !== 0)
        return;
      var t1 = J.$or$n(this._state, 2);
      this._state = t1;
      if (t1 < 32)
        this._sendDone$0();
      else
        this._addPending$1(C.C__DelayedDone);
    }, "call$0" /* tearOffInfo */, "get$_close", 0, 0, 494, "_close"],
    _onPause$0: [function() {
    }, "call$0" /* tearOffInfo */, "get$_onPause", 0, 0, 494, "_onPause"],
    _onResume$0: [function() {
    }, "call$0" /* tearOffInfo */, "get$_onResume", 0, 0, 494, "_onResume"],
    _onCancel$0: [function() {
    }, "call$0" /* tearOffInfo */, "get$_onCancel", 0, 0, 1347, "_onCancel"],
    _addPending$1: [function($event) {
      var pending, t1;
      pending = this._pending;
      if (pending == null) {
        pending = new P._StreamImplEvents(null, null, 0);
        this._pending = pending;
      }
      J.add$1$a(pending, $event);
      if (J.$and$n(this._state, 64) === 0) {
        t1 = J.$or$n(this._state, 64);
        this._state = t1;
        if (t1 < 128)
          this._pending.schedule$1(this);
      }
    }, "call$1" /* tearOffInfo */, "get$_addPending", 2, 0, 1357, 504, "_addPending"],
    _sendData$1: [function(data) {
      var t1 = J.$and$n(this._state, 4);
      this._state = J.$or$n(this._state, 32);
      this._zone.runUnaryGuarded$2(this._onData, data);
      this._state = J.$and$n(this._state, 4294967263);
      this._checkState$1(t1 !== 0);
    }, "call$1" /* tearOffInfo */, "get$_sendData", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T", void: true, args: [T]};
      }, this.$receiver, "_BufferingStreamSubscription");
    }, 546, "_sendData"],
    _sendError$2: [function(error, stackTrace) {
      var t1, t2, t3;
      t1 = J.$and$n(this._state, 4);
      t2 = new P._BufferingStreamSubscription__sendError_sendError(this, error, stackTrace);
      if (J.$and$n(this._state, 1) !== 0) {
        this._state = J.$or$n(this._state, 16);
        this._cancel$0();
        t1 = this._cancelFuture;
        t3 = J.getInterceptor(t1);
        if (typeof t1 === "object" && t1 !== null && !!t3.$isFuture)
          t1.whenComplete$1(t2);
        else
          t2.call$0();
      } else {
        t2.call$0();
        this._checkState$1(t1 !== 0);
      }
    }, "call$2" /* tearOffInfo */, "get$_sendError", 4, 0, 1387, 507, 508, "_sendError"],
    _sendDone$0: [function() {
      var t1, t2, t3;
      t1 = new P._BufferingStreamSubscription__sendDone_sendDone(this);
      this._cancel$0();
      this._state = J.$or$n(this._state, 16);
      t2 = this._cancelFuture;
      t3 = J.getInterceptor(t2);
      if (typeof t2 === "object" && t2 !== null && !!t3.$isFuture)
        t2.whenComplete$1(t1);
      else
        t1.call$0();
    }, "call$0" /* tearOffInfo */, "get$_sendDone", 0, 0, 494, "_sendDone"],
    _guardCallback$1: [function(callback) {
      var t1 = J.$and$n(this._state, 4);
      this._state = J.$or$n(this._state, 32);
      callback.call$0();
      this._state = J.$and$n(this._state, 4294967263);
      this._checkState$1(t1 !== 0);
    }, "call$1" /* tearOffInfo */, "get$_guardCallback", 2, 0, 251, 277, "_guardCallback"],
    _checkState$1: [function(wasInputPaused) {
      var t1, isInputPaused;
      if (J.$and$n(this._state, 64) !== 0 && J.get$isEmpty$as(this._pending) === true) {
        t1 = J.$and$n(this._state, 4294967231);
        this._state = t1;
        if ((t1 & 4) !== 0)
          if (!J.$ge$n(this._state, 128)) {
            t1 = this._pending;
            t1 = t1 == null || J.get$isEmpty$as(t1) === true;
          } else
            t1 = false;
        else
          t1 = false;
        if (t1)
          this._state = J.$and$n(this._state, 4294967291);
      }
      for (; true; wasInputPaused = isInputPaused) {
        if (J.$and$n(this._state, 8) !== 0) {
          this._pending = null;
          return;
        }
        isInputPaused = J.$and$n(this._state, 4) !== 0;
        if (J.$eq(wasInputPaused, isInputPaused))
          break;
        this._state = J.$xor$n(this._state, 32);
        if (isInputPaused)
          this._onPause$0();
        else
          this._onResume$0();
        this._state = J.$and$n(this._state, 4294967263);
      }
      if (J.$and$n(this._state, 64) !== 0 && !J.$ge$n(this._state, 128))
        this._pending.schedule$1(this);
    }, "call$1" /* tearOffInfo */, "get$_checkState", 2, 0, 1454, 1455, "_checkState"],
    $isStreamSubscription: true,
    "<>": [76],
    static: {"": "_BufferingStreamSubscription__STATE_CANCEL_ON_ERROR<-1075,_BufferingStreamSubscription__STATE_CLOSED<-1075,_BufferingStreamSubscription__STATE_INPUT_PAUSED<-1075,_BufferingStreamSubscription__STATE_CANCELED<-1075,_BufferingStreamSubscription__STATE_WAIT_FOR_CANCEL<-1075,_BufferingStreamSubscription__STATE_IN_CALLBACK<-1075,_BufferingStreamSubscription__STATE_HAS_PENDING<-1075,_BufferingStreamSubscription__STATE_PAUSE_COUNT<-1075,_BufferingStreamSubscription__STATE_PAUSE_COUNT_SHIFT<-1075", _BufferingStreamSubscription$: [function(cancelOnError, $T) {
        var t1, t2;
        t1 = $.Zone__current;
        t2 = cancelOnError === true ? 1 : 0;
        return H.setRuntimeTypeInfo(new P._BufferingStreamSubscription(null, null, null, t1, t2, null, null), [$T]);
      }, null /* tearOffInfo */, null, 2, 0, 570, 516, "new _BufferingStreamSubscription" /* new _BufferingStreamSubscription:1:0 */]}
  },
  "+_BufferingStreamSubscription": [0, 1456, 1457, 1458],
  _BufferingStreamSubscription_asFuture_closure: {
    "": "Closure:319;futureValue_0-370,result_1-1459",
    call$0: [function() {
      this.result_1._complete$1(this.futureValue_0);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_BufferingStreamSubscription_asFuture_closure": [1060],
  _BufferingStreamSubscription_asFuture_closure0: {
    "": "Closure:311;this_2-370,result_3-1459",
    call$2: [function(error, stackTrace) {
      this.this_2.cancel$0();
      this.result_3._completeError$2(error, stackTrace);
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 507, 508, "call"]
  },
  "+_BufferingStreamSubscription_asFuture_closure": [1060],
  _BufferingStreamSubscription__sendError_sendError: {
    "": "Closure:494;this_0-370,error_1-370,stackTrace_2-1153",
    call$0: [function() {
      var t1, t2, t3, t4;
      t1 = this.this_0;
      if (J.$and$n(t1.get$_state(), 8) !== 0 && J.$and$n(t1.get$_state(), 16) === 0)
        return;
      t1.set$_state(J.$or$n(t1.get$_state(), 32));
      if (!t1.get$_zone().inSameErrorZone$1($.Zone__current))
        $.Zone__current.handleUncaughtError$2(this.error_1, this.stackTrace_2);
      else {
        t2 = t1.get$_onError();
        t3 = H.getDynamicRuntimeType();
        t3 = H.buildFunctionType(t3, [t3, t3])._isTest$1(t2);
        t4 = this.error_1;
        if (t3)
          t1.get$_zone().runBinaryGuarded$3(t1.get$_onError(), t4, this.stackTrace_2);
        else
          t1.get$_zone().runUnaryGuarded$2(t1.get$_onError(), t4);
      }
      t1.set$_state(J.$and$n(t1.get$_state(), 4294967263));
    }, "call$0" /* tearOffInfo */, null, 0, 0, 494, "call"]
  },
  "+_BufferingStreamSubscription__sendError_sendError": [1060],
  _BufferingStreamSubscription__sendDone_sendDone: {
    "": "Closure:494;this_0-370",
    call$0: [function() {
      var t1 = this.this_0;
      if (J.$and$n(t1.get$_state(), 16) === 0)
        return;
      t1.set$_state(J.$or$n(t1.get$_state(), 42));
      t1.get$_zone().runGuarded$1(t1.get$_onDone());
      t1.set$_state(J.$and$n(t1.get$_state(), 4294967263));
    }, "call$0" /* tearOffInfo */, null, 0, 0, 494, "call"]
  },
  "+_BufferingStreamSubscription__sendDone_sendDone": [1060],
  _StreamImpl: {
    "": "Stream;",
    listen$4$cancelOnError$onDone$onError: [function(onData, cancelOnError, onDone, onError) {
      var subscription = this._createSubscription$1(true === cancelOnError);
      subscription.onData$1(onData);
      subscription.onError$1(onError);
      subscription.onDone$1(onDone);
      return subscription;
    }, function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    }, "listen$1", function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }, "listen$3$onDone$onError", function(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    }, "listen$2$cancelOnError", "call$4$cancelOnError$onDone$onError" /* tearOffInfo */, null /* tearOffInfo */, null /* tearOffInfo */, null /* tearOffInfo */, "get$listen", 2, 7, function() {
      return H.computeSignature(function(T) {
        return {func: "StreamSubscription__void__T__bool_void__Function0", ret: [P.StreamSubscription, T], args: [{func: "void__T13", void: true, args: [T]}], named: {cancelOnError: J.JSBool, onDone: {func: "void_", void: true}, onError: P.Function}};
      }, this.$receiver, "_StreamImpl");
    }, 370, 370, 370, 1120, 516, 1121, 581, "listen"],
    _createSubscription$1: [function(cancelOnError) {
      var t1, t2;
      t1 = $.Zone__current;
      t2 = cancelOnError === true ? 1 : 0;
      t2 = new P._BufferingStreamSubscription(null, null, null, t1, t2, null, null);
      t2.$builtinTypeInfo = this.$builtinTypeInfo;
      return t2;
    }, "call$1" /* tearOffInfo */, "get$_createSubscription", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "_BufferingStreamSubscription__bool", ret: [P._BufferingStreamSubscription, T], args: [J.JSBool]};
      }, this.$receiver, "_StreamImpl");
    }, 516, "_createSubscription"],
    _onListen$1: [function(subscription) {
    }, "call$1" /* tearOffInfo */, "get$_onListen", 2, 0, 1460, 583, "_onListen"],
    $asStream: null,
    "<>": [74]
  },
  "+_StreamImpl": [1461],
  _GeneratedStreamImpl: {
    "": "_StreamImpl;_pending<-1431,_isUsed@-1043",
    _pending$0: function() {
      return this._pending.call$0();
    },
    _createSubscription$1: [function(cancelOnError) {
      var t1, t2, subscription;
      if (this._isUsed === true)
        throw H.wrapException(new P.StateError("Stream has already been listened to."));
      this._isUsed = true;
      t1 = $.Zone__current;
      t2 = cancelOnError === true ? 1 : 0;
      subscription = H.setRuntimeTypeInfo(new P._BufferingStreamSubscription(null, null, null, t1, t2, null, null), [null]);
      subscription._setPendingEvents$1(this._pending$0());
      return subscription;
    }, "call$1" /* tearOffInfo */, "get$_createSubscription", 2, 0, 1462, 516, "_createSubscription"],
    $as_StreamImpl: null,
    "<>": [149],
    static: {_GeneratedStreamImpl$: [function(_pending, $T) {
        return H.setRuntimeTypeInfo(new P._GeneratedStreamImpl(_pending, false), [$T]);
      }, null /* tearOffInfo */, null, 2, 0, 571, 572, "new _GeneratedStreamImpl" /* new _GeneratedStreamImpl:1:0 */]}
  },
  "+_GeneratedStreamImpl": [1463],
  _IterablePendingEvents: {
    "": "_PendingEvents;_async$_iterator@-1464,_state-1075",
    get$isEmpty: [function(_) {
      return this._async$_iterator == null;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    handleNext$1: [function(dispatch) {
      var isDone, e, s, t1, exception;
      t1 = this._async$_iterator;
      if (t1 == null)
        throw H.wrapException(new P.StateError("No events pending."));
      isDone = null;
      try {
        isDone = t1.moveNext$0() !== true;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        this._async$_iterator = null;
        dispatch._sendError$2(e, s);
        return;
      }

      if (isDone !== true)
        dispatch._sendData$1(this._async$_iterator.get$current());
      else {
        this._async$_iterator = null;
        dispatch._sendDone$0();
      }
    }, "call$1" /* tearOffInfo */, "get$handleNext", 2, 0, 1465, 1466, "handleNext"],
    clear$0: [function(_) {
      if (J.$eq(this._state, 1))
        if (J.$eq(this._state, 1))
          this._state = 3;
      this._async$_iterator = null;
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    "<>": [150],
    static: {_IterablePendingEvents$: [function(data, $T) {
        return H.setRuntimeTypeInfo(new P._IterablePendingEvents(J.get$iterator$a(data), 0), [$T]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic__Iterable", args: [[P.Iterable, T]]};
        }, this.$receiver, "_IterablePendingEvents");
      }, 546, "new _IterablePendingEvents" /* new _IterablePendingEvents:1:0 */]}
  },
  "+_IterablePendingEvents": [1338],
  _DelayedEvent: {
    "": "Object;next@-1467",
    next$0: function() {
      return this.next.call$0();
    }
  },
  "+_DelayedEvent": [0],
  _DelayedData: {
    "": "_DelayedEvent;value<-1468,next-1467",
    perform$1: [function(dispatch) {
      dispatch._sendData$1(this.value);
    }, "call$1" /* tearOffInfo */, "get$perform", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void___EventDispatch0", void: true, args: [[P._EventDispatch, T]]};
      }, this.$receiver, "_DelayedData");
    }, 1466, "perform"],
    "<>": [72],
    static: {_DelayedData$: [function(value, $T) {
        return H.setRuntimeTypeInfo(new P._DelayedData(value, null), [$T]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic__T", args: [T]};
        }, this.$receiver, "_DelayedData");
      }, 280, "new _DelayedData" /* new _DelayedData:1:0 */]}
  },
  "+_DelayedData": [1467],
  _DelayedError: {
    "": "_DelayedEvent;error<-370,stackTrace<-1153,next-1467",
    perform$1: [function(dispatch) {
      dispatch._sendError$2(this.error, this.stackTrace);
    }, "call$1" /* tearOffInfo */, "get$perform", 2, 0, 1465, 1466, "perform"],
    static: {_DelayedError$: [function(error, stackTrace) {
        return new P._DelayedError(error, stackTrace, null);
      }, null /* tearOffInfo */, null, 4, 0, 511, 507, 508, "new _DelayedError" /* new _DelayedError:2:0 */]}
  },
  "+_DelayedError": [1467],
  _DelayedDone: {
    "": "Object;",
    perform$1: [function(dispatch) {
      dispatch._sendDone$0();
    }, "call$1" /* tearOffInfo */, "get$perform", 2, 0, 1465, 1466, "perform"],
    get$next: [function() {
      return;
    }, null /* tearOffInfo */, null, 1, 0, 1469, "next"],
    next$0: function() {
      return this.get$next().call$0();
    },
    set$next: [function(_) {
      throw H.wrapException(new P.StateError("No events after a done."));
    }, null /* tearOffInfo */, null, 3, 0, 1357, 820, "next"],
    static: {_DelayedDone$: [function() {
        return new P._DelayedDone();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new _DelayedDone" /* new _DelayedDone:0:0 */]}
  },
  "+_DelayedDone": [0, 1467],
  _PendingEvents: {
    "": "Object;_state@-1075",
    get$isScheduled: [function() {
      return J.$eq(this._state, 1);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isScheduled"],
    get$_eventScheduled: [function() {
      return J.$ge$n(this._state, 1);
    }, null /* tearOffInfo */, null, 1, 0, 849, "_eventScheduled"],
    schedule$1: [function(dispatch) {
      if (J.$eq(this._state, 1))
        return;
      if (J.$ge$n(this._state, 1)) {
        this._state = 1;
        return;
      }
      P.scheduleMicrotask(new P._PendingEvents_schedule_closure(this, dispatch));
      this._state = 1;
    }, "call$1" /* tearOffInfo */, "get$schedule", 2, 0, 1465, 1466, "schedule"],
    cancelSchedule$0: [function() {
      if (J.$eq(this._state, 1))
        this._state = 3;
    }, "call$0" /* tearOffInfo */, "get$cancelSchedule", 0, 0, 494, "cancelSchedule"],
    static: {"": "_PendingEvents__STATE_UNSCHEDULED<-1075,_PendingEvents__STATE_SCHEDULED<-1075,_PendingEvents__STATE_CANCELED<-1075"}
  },
  "+_PendingEvents": [0],
  _PendingEvents_schedule_closure: {
    "": "Closure:319;this_0-370,dispatch_1-1470",
    call$0: [function() {
      var t1, oldState;
      t1 = this.this_0;
      oldState = t1.get$_state();
      t1.set$_state(0);
      if (J.$eq(oldState, 3))
        return;
      t1.handleNext$1(this.dispatch_1);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_PendingEvents_schedule_closure": [1060],
  _StreamImplEvents: {
    "": "_PendingEvents;firstPendingEvent@-1467,lastPendingEvent@-1467,_state-1075",
    get$isEmpty: [function(_) {
      return this.lastPendingEvent == null;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    add$1: [function(_, $event) {
      var t1 = this.lastPendingEvent;
      if (t1 == null) {
        this.lastPendingEvent = $event;
        this.firstPendingEvent = $event;
      } else {
        t1.set$next($event);
        this.lastPendingEvent = $event;
      }
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, 1357, 504, "add"],
    handleNext$1: [function(dispatch) {
      var $event, t1;
      $event = this.firstPendingEvent;
      t1 = $event.get$next();
      this.firstPendingEvent = t1;
      if (t1 == null)
        this.lastPendingEvent = null;
      $event.perform$1(dispatch);
    }, "call$1" /* tearOffInfo */, "get$handleNext", 2, 0, 1465, 1466, "handleNext"],
    clear$0: [function(_) {
      if (J.$eq(this._state, 1))
        if (J.$eq(this._state, 1))
          this._state = 3;
      this.lastPendingEvent = null;
      this.firstPendingEvent = null;
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"]
  },
  "+_StreamImplEvents": [1338],
  _BroadcastLinkedList: {
    "": "Object;_async$_next@-1471,_async$_previous@-1471",
    _async$_unlink$0: [function() {
      this._async$_previous.set$_async$_next(this._async$_next);
      this._async$_next.set$_async$_previous(this._async$_previous);
      this._async$_previous = this;
      this._async$_next = this;
    }, "call$0" /* tearOffInfo */, "get$_async$_unlink", 0, 0, 494, "_unlink"],
    _insertBefore$1: [function(newNext) {
      var newPrevious = newNext.get$_async$_previous();
      newPrevious.set$_async$_next(this);
      newNext.set$_async$_previous(this._async$_previous);
      this._async$_previous.set$_async$_next(newNext);
      this._async$_previous = newPrevious;
    }, "call$1" /* tearOffInfo */, "get$_insertBefore", 2, 0, 1472, 1473, "_insertBefore"]
  },
  "+_BroadcastLinkedList": [0],
  _DummyStreamSubscription: {
    "": "Object;_pauseCounter@-1075",
    onData$1: [function(handleData) {
    }, "call$1" /* tearOffInfo */, "get$onData", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__void__T1", void: true, args: [{func: "void__T14", void: true, args: [T]}]};
      }, this.$receiver, "_DummyStreamSubscription");
    }, 551, "onData"],
    onError$1: [function(handleError) {
    }, "call$1" /* tearOffInfo */, "get$onError", 2, 0, 1113, 294, "onError"],
    onDone$1: [function(handleDone) {
    }, "call$1" /* tearOffInfo */, "get$onDone", 2, 0, 544, 552, "onDone"],
    pause$1: [function(resumeSignal) {
      this._pauseCounter = J.$add$ns(this._pauseCounter, 1);
      if (resumeSignal != null)
        resumeSignal.then$1(new P._DummyStreamSubscription_pause_closure(this));
    }, function() {
      return this.pause$1(null);
    }, "pause$0", "call$1" /* tearOffInfo */, null /* tearOffInfo */, "get$pause", 0, 2, 1360, 370, 1361, "pause"],
    resume$0: [function() {
      if (J.$gt$n(this._pauseCounter, 0))
        this._pauseCounter = J.$sub$n(this._pauseCounter, 1);
    }, "call$0" /* tearOffInfo */, "get$resume", 0, 0, 494, "resume"],
    cancel$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, "get$cancel", 0, 0, 1347, "cancel"],
    get$isPaused: [function() {
      return J.$gt$n(this._pauseCounter, 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isPaused"],
    asFuture$1: [function(futureValue) {
      return P._Future$(null);
    }, "call$1" /* tearOffInfo */, "get$asFuture", 0, 2, 1398, 370, 1399, "asFuture"],
    $isStreamSubscription: true,
    "<>": [225]
  },
  "+_DummyStreamSubscription": [0, 1474],
  _DummyStreamSubscription_pause_closure: {
    "": "Closure:241;this_0-370",
    call$1: [function(_) {
      var t1 = this.this_0;
      if (J.$gt$n(t1.get$_pauseCounter(), 0))
        t1.set$_pauseCounter(J.$sub$n(t1.get$_pauseCounter(), 1));
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 820, "call"]
  },
  "+_DummyStreamSubscription_pause_closure": [1060],
  _AsBroadcastStream: {
    "": "Stream;_async$_source<-1475,_onListenHandler<-1460,_onCancelHandler<-1460,_zone<-1336,_async$_controller@-1476,_subscription@-1477",
    get$isBroadcast: [function() {
      return true;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isBroadcast"],
    listen$4$cancelOnError$onDone$onError: [function(onData, cancelOnError, onDone, onError) {
      var t1, t2, result;
      t1 = this._async$_controller;
      if (t1 == null) {
        t1 = new P._DummyStreamSubscription(0);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        return t1;
      }
      if (this._subscription == null) {
        t1 = J.get$add$a(t1);
        t2 = this._async$_controller.get$addError();
        this._subscription = this._async$_source.listen$3$onDone$onError(t1, this._async$_controller.get$close(), t2);
      }
      result = this._async$_controller._subscribe$1(true === cancelOnError);
      result.onData$1(onData);
      result.onError$1(onError);
      result.onDone$1(onDone);
      return result;
    }, function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }, "listen$3$onDone$onError", function(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    }, "listen$2$cancelOnError", "call$4$cancelOnError$onDone$onError" /* tearOffInfo */, null /* tearOffInfo */, null /* tearOffInfo */, "get$listen", 2, 7, function() {
      return H.computeSignature(function(T) {
        return {func: "StreamSubscription__void__T__bool_void__Function1", ret: [P.StreamSubscription, T], args: [{func: "void__T15", void: true, args: [T]}], named: {cancelOnError: J.JSBool, onDone: {func: "void_", void: true}, onError: P.Function}};
      }, this.$receiver, "_AsBroadcastStream");
    }, 370, 370, 370, 1120, 516, 1121, 581, "listen"],
    _onCancel$0: [function() {
      var t1, shutdown;
      t1 = this._async$_controller;
      shutdown = t1 == null || t1.get$isClosed();
      t1 = this._onCancelHandler;
      if (t1 != null)
        this._zone.runUnary$2(t1, H.setRuntimeTypeInfo(new P._BroadcastSubscriptionWrapper(this), [null]));
      if (shutdown) {
        t1 = this._subscription;
        if (t1 != null) {
          t1.cancel$0();
          this._subscription = null;
        }
      }
    }, "call$0" /* tearOffInfo */, "get$_onCancel", 0, 0, 494, "_onCancel"],
    _onListen$0: [function() {
      var t1 = this._onListenHandler;
      if (t1 != null)
        this._zone.runUnary$2(t1, H.setRuntimeTypeInfo(new P._BroadcastSubscriptionWrapper(this), [null]));
    }, "call$0" /* tearOffInfo */, "get$_onListen", 0, 0, 494, "_onListen"],
    _cancelSubscription$0: [function() {
      var t1 = this._subscription;
      if (t1 == null)
        return;
      this._subscription = null;
      this._async$_controller = null;
      t1.cancel$0();
    }, "call$0" /* tearOffInfo */, "get$_cancelSubscription", 0, 0, 494, "_cancelSubscription"],
    _pauseSubscription$1: [function(resumeSignal) {
      var t1 = this._subscription;
      if (t1 == null)
        return;
      t1.pause$1(resumeSignal);
    }, "call$1" /* tearOffInfo */, "get$_pauseSubscription", 2, 0, 1478, 1361, "_pauseSubscription"],
    _resumeSubscription$0: [function() {
      var t1 = this._subscription;
      if (t1 == null)
        return;
      t1.resume$0();
    }, "call$0" /* tearOffInfo */, "get$_resumeSubscription", 0, 0, 494, "_resumeSubscription"],
    get$_isSubscriptionPaused: [function() {
      var t1 = this._subscription;
      if (t1 == null)
        return false;
      return t1.get$isPaused();
    }, null /* tearOffInfo */, null, 1, 0, 849, "_isSubscriptionPaused"],
    _AsBroadcastStream$3: [function(_source, onListenHandler, onCancelHandler, $T) {
      var t1 = H.setRuntimeTypeInfo(new P._AsBroadcastStreamController(null, this.get$_onListen(), this.get$_onCancel(), 0, null, null, null, null), [$T]);
      t1._async$_previous = t1;
      t1._async$_next = t1;
      this._async$_controller = t1;
    }, null /* tearOffInfo */, null, 6, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__Stream_void__StreamSubscription_void__StreamSubscription", args: [[P.Stream, T], {func: "void__StreamSubscription", void: true, args: [P.StreamSubscription]}, {func: "void__StreamSubscription", void: true, args: [P.StreamSubscription]}]};
      }, this.$receiver, "_AsBroadcastStream");
    }, 574, 575, 576, ""],
    $asStream: null,
    "<>": [151],
    static: {_AsBroadcastStream$: [function(_source, onListenHandler, onCancelHandler, $T) {
        var t1 = H.setRuntimeTypeInfo(new P._AsBroadcastStream(_source, $.Zone__current.registerUnaryCallback$1(onListenHandler), $.Zone__current.registerUnaryCallback$1(onCancelHandler), $.Zone__current, null, null), [$T]);
        t1._AsBroadcastStream$3(_source, onListenHandler, onCancelHandler, $T);
        return t1;
      }, null /* tearOffInfo */, null, 6, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic__Stream_void__StreamSubscription_void__StreamSubscription", args: [[P.Stream, T], {func: "void__StreamSubscription", void: true, args: [P.StreamSubscription]}, {func: "void__StreamSubscription", void: true, args: [P.StreamSubscription]}]};
        }, this.$receiver, "_AsBroadcastStream");
      }, 574, 575, 576, "new _AsBroadcastStream" /* new _AsBroadcastStream:3:0 */]}
  },
  "+_AsBroadcastStream": [1475],
  _BroadcastSubscriptionWrapper: {
    "": "Object;_stream<-1479",
    onData$1: [function(handleData) {
      throw H.wrapException(P.UnsupportedError$("Cannot change handlers of asBroadcastStream source subscription."));
    }, "call$1" /* tearOffInfo */, "get$onData", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__void__T2", void: true, args: [{func: "void__T16", void: true, args: [T]}]};
      }, this.$receiver, "_BroadcastSubscriptionWrapper");
    }, 551, "onData"],
    onError$1: [function(handleError) {
      throw H.wrapException(P.UnsupportedError$("Cannot change handlers of asBroadcastStream source subscription."));
    }, "call$1" /* tearOffInfo */, "get$onError", 2, 0, 1480, 294, "onError"],
    onDone$1: [function(handleDone) {
      throw H.wrapException(P.UnsupportedError$("Cannot change handlers of asBroadcastStream source subscription."));
    }, "call$1" /* tearOffInfo */, "get$onDone", 2, 0, 544, 552, "onDone"],
    pause$1: [function(resumeSignal) {
      this._stream._pauseSubscription$1(resumeSignal);
    }, function() {
      return this.pause$1(null);
    }, "pause$0", "call$1" /* tearOffInfo */, null /* tearOffInfo */, "get$pause", 0, 2, 1360, 370, 1361, "pause"],
    resume$0: [function() {
      this._stream._resumeSubscription$0();
    }, "call$0" /* tearOffInfo */, "get$resume", 0, 0, 494, "resume"],
    cancel$0: [function() {
      this._stream._cancelSubscription$0();
      return;
    }, "call$0" /* tearOffInfo */, "get$cancel", 0, 0, 1347, "cancel"],
    get$isPaused: [function() {
      return this._stream.get$_isSubscriptionPaused();
    }, null /* tearOffInfo */, null, 1, 0, 849, "isPaused"],
    asFuture$1: [function(futureValue) {
      throw H.wrapException(P.UnsupportedError$("Cannot change handlers of asBroadcastStream source subscription."));
    }, "call$1" /* tearOffInfo */, "get$asFuture", 0, 2, 1398, 370, 1399, "asFuture"],
    $isStreamSubscription: true,
    "<>": [152],
    static: {_BroadcastSubscriptionWrapper$: [function(_stream, $T) {
        return H.setRuntimeTypeInfo(new P._BroadcastSubscriptionWrapper(_stream), [$T]);
      }, null /* tearOffInfo */, null, 2, 0, 577, 549, "new _BroadcastSubscriptionWrapper" /* new _BroadcastSubscriptionWrapper:1:0 */]}
  },
  "+_BroadcastSubscriptionWrapper": [0, 1481],
  _StreamIteratorImpl: {
    "": "Object;_subscription@-1449,_async$_current@-1482,_futureOrPrefetch@-370,_state@-1075",
    get$current: [function() {
      return this._async$_current;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "T_6", ret: T};
      }, this.$receiver, "_StreamIteratorImpl");
    }, "current"],
    moveNext$0: [function() {
      var t1, prefetch;
      if (J.$eq(this._state, 1))
        return P._Future$immediate(false, J.JSBool);
      if (J.$eq(this._state, 2))
        throw H.wrapException(new P.StateError("Already waiting for next."));
      if (J.$eq(this._state, 0)) {
        this._state = 2;
        t1 = P._Future$(J.JSBool);
        this._futureOrPrefetch = t1;
        return t1;
      } else
        switch (this._state) {
          case 3:
            this._state = 0;
            this._async$_current = this._futureOrPrefetch;
            this._futureOrPrefetch = null;
            this._subscription.resume$0();
            return P._Future$immediate(true, J.JSBool);
          case 4:
            prefetch = this._futureOrPrefetch;
            this._clear$0();
            return P._Future$immediateError(prefetch, null, J.JSBool);
          case 5:
            this._clear$0();
            return P._Future$immediate(false, J.JSBool);
          default:
        }
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 1364, "moveNext"],
    _clear$0: [function() {
      this._subscription = null;
      this._futureOrPrefetch = null;
      this._async$_current = null;
      this._state = 1;
    }, "call$0" /* tearOffInfo */, "get$_clear", 0, 0, 494, "_clear"],
    cancel$0: [function() {
      var subscription, hasNext;
      subscription = this._subscription;
      if (J.$eq(this._state, 2)) {
        hasNext = this._futureOrPrefetch;
        this._clear$0();
        hasNext._complete$1(false);
      } else
        this._clear$0();
      return subscription.cancel$0();
    }, "call$0" /* tearOffInfo */, "get$cancel", 0, 0, 1347, "cancel"],
    _onData$1: [function(data) {
      var hasNext;
      if (J.$eq(this._state, 2)) {
        this._async$_current = data;
        hasNext = this._futureOrPrefetch;
        this._futureOrPrefetch = null;
        this._state = 0;
        hasNext._complete$1(true);
        return;
      }
      this._subscription.pause$0();
      this._futureOrPrefetch = data;
      this._state = 3;
    }, "call$1" /* tearOffInfo */, "get$_onData", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T17", void: true, args: [T]};
      }, this.$receiver, "_StreamIteratorImpl");
    }, 546, "_onData"],
    _onError$2: [function(error, stackTrace) {
      var hasNext;
      if (J.$eq(this._state, 2)) {
        hasNext = this._futureOrPrefetch;
        this._clear$0();
        hasNext._completeError$2(error, stackTrace);
        return;
      }
      this._subscription.pause$0();
      this._futureOrPrefetch = error;
      this._state = 4;
    }, function(error) {
      return this._onError$2(error, null);
    }, null, "call$2" /* tearOffInfo */, "call$1" /* tearOffInfo */, "get$_onError", 2, 2, 1346, 370, 507, 508, "_onError"],
    _onDone$0: [function() {
      if (J.$eq(this._state, 2)) {
        var hasNext = this._futureOrPrefetch;
        this._clear$0();
        hasNext._complete$1(false);
        return;
      }
      this._subscription.pause$0();
      this._futureOrPrefetch = null;
      this._state = 5;
    }, "call$0" /* tearOffInfo */, "get$_onDone", 0, 0, 494, "_onDone"],
    _StreamIteratorImpl$1: [function(stream, $T) {
      var t1, t2;
      t1 = this.get$_onData();
      t2 = this.get$_onError();
      this._subscription = stream.listen$4$cancelOnError$onDone$onError(t1, true, this.get$_onDone(), t2);
    }, null /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__Stream0", args: [[P.Stream, T]]};
      }, this.$receiver, "_StreamIteratorImpl");
    }, 553, ""],
    "<>": [153],
    static: {"": "_StreamIteratorImpl__STATE_FOUND<-1075,_StreamIteratorImpl__STATE_DONE<-1075,_StreamIteratorImpl__STATE_MOVING<-1075,_StreamIteratorImpl__STATE_EXTRA_DATA<-1075,_StreamIteratorImpl__STATE_EXTRA_ERROR<-1075,_StreamIteratorImpl__STATE_EXTRA_DONE<-1075", _StreamIteratorImpl$: [function(stream, $T) {
        var t1 = H.setRuntimeTypeInfo(new P._StreamIteratorImpl(null, null, null, 0), [$T]);
        t1._StreamIteratorImpl$1(stream, $T);
        return t1;
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic__Stream0", args: [[P.Stream, T]]};
        }, this.$receiver, "_StreamIteratorImpl");
      }, 553, "new _StreamIteratorImpl" /* new _StreamIteratorImpl:1:0 */]}
  },
  "+_StreamIteratorImpl": [0, 1483],
  _cancelAndError_closure: {
    "": "Closure:319;future_0-1343,error_1-370,stackTrace_2-1153",
    call$0: [function() {
      return this.future_0._completeError$2(this.error_1, this.stackTrace_2);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_cancelAndError_closure": [1060],
  _cancelAndErrorClosure_closure: {
    "": "Closure:511;subscription_0-1449,future_1-1343",
    call$2: [function(error, stackTrace) {
      return P._cancelAndError(this.subscription_0, this.future_1, error, stackTrace);
    }, "call$2" /* tearOffInfo */, null, 4, 0, 511, 507, 508, "call"]
  },
  "+_cancelAndErrorClosure_closure": [1060],
  _cancelAndValue_closure: {
    "": "Closure:319;future_0-1343,value_1-370",
    call$0: [function() {
      return this.future_0._complete$1(this.value_1);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_cancelAndValue_closure": [1060],
  _ForwardingStream: {
    "": "Stream;_async$_source<-1484",
    get$isBroadcast: [function() {
      return this._async$_source.get$isBroadcast();
    }, null /* tearOffInfo */, null, 1, 0, 849, "isBroadcast"],
    listen$4$cancelOnError$onDone$onError: [function(onData, cancelOnError, onDone, onError) {
      var t1, t2, t3, t4, result;
      cancelOnError = true === cancelOnError;
      t1 = H.getRuntimeTypeArgument(this, "_ForwardingStream", 0);
      t2 = H.getRuntimeTypeArgument(this, "_ForwardingStream", 1);
      t3 = $.Zone__current;
      t4 = cancelOnError ? 1 : 0;
      result = H.setRuntimeTypeInfo(new P._ForwardingStreamSubscription(this, null, null, null, null, t3, t4, null, null), [t1, t2]);
      result._ForwardingStreamSubscription$2(this, cancelOnError, t1, t2);
      result.onData$1(onData);
      result.onError$1(onError);
      result.onDone$1(onDone);
      return result;
    }, function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }, "listen$3$onDone$onError", function(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    }, "listen$2$cancelOnError", "call$4$cancelOnError$onDone$onError" /* tearOffInfo */, null /* tearOffInfo */, null /* tearOffInfo */, "get$listen", 2, 7, function() {
      return H.computeSignature(function(S, T) {
        return {func: "StreamSubscription__void__T__bool_void__Function2", ret: [P.StreamSubscription, T], args: [{func: "void__T18", void: true, args: [T]}], named: {cancelOnError: J.JSBool, onDone: {func: "void_", void: true}, onError: P.Function}};
      }, this.$receiver, "_ForwardingStream");
    }, 370, 370, 370, 1120, 516, 1121, 581, "listen"],
    _createSubscription$1: [function(cancelOnError) {
      var t1, t2, t3, t4;
      t1 = H.getRuntimeTypeArgument(this, "_ForwardingStream", 0);
      t2 = H.getRuntimeTypeArgument(this, "_ForwardingStream", 1);
      t3 = $.Zone__current;
      t4 = cancelOnError === true ? 1 : 0;
      t4 = H.setRuntimeTypeInfo(new P._ForwardingStreamSubscription(this, null, null, null, null, t3, t4, null, null), [t1, t2]);
      t4._ForwardingStreamSubscription$2(this, cancelOnError, t1, t2);
      return t4;
    }, "call$1" /* tearOffInfo */, "get$_createSubscription", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "StreamSubscription__bool3", ret: [P.StreamSubscription, T], args: [J.JSBool]};
      }, this.$receiver, "_ForwardingStream");
    }, 516, "_createSubscription"],
    _handleData$2: [function(data, sink) {
      sink._add$1(data);
    }, "call$2" /* tearOffInfo */, "get$_handleData", 4, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "void__S__EventSink", void: true, args: [S, [P._EventSink, T]]};
      }, this.$receiver, "_ForwardingStream");
    }, 546, 595, "_handleData"],
    _handleError$3: [function(error, stackTrace, sink) {
      sink._addError$2(error, stackTrace);
    }, "call$3" /* tearOffInfo */, "get$_handleError", 6, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "void__dynamic_StackTrace__EventSink", void: true, args: [null, P.StackTrace, [P._EventSink, T]]};
      }, this.$receiver, "_ForwardingStream");
    }, 507, 508, 595, "_handleError"],
    _handleDone$1: [function(sink) {
      sink._close$0();
    }, "call$1" /* tearOffInfo */, "get$_handleDone", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "void___EventSink", void: true, args: [[P._EventSink, T]]};
      }, this.$receiver, "_ForwardingStream");
    }, 595, "_handleDone"],
    $asStream: function($S, $T) {
      return [$T];
    },
    "<>": [86, 87],
    static: {_ForwardingStream$: [function(_source, $S, $T) {
        return H.setRuntimeTypeInfo(new P._ForwardingStream(_source), [$S, $T]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(S, T) {
          return {func: "dynamic__Stream1", args: [[P.Stream, S]]};
        }, this.$receiver, "_ForwardingStream");
      }, 574, "new _ForwardingStream" /* new _ForwardingStream:1:0 */]}
  },
  "+_ForwardingStream": [1485],
  _ForwardingStreamSubscription: {
    "": "_BufferingStreamSubscription;_stream<-1486,_subscription@-1487,_onData-1335,_onError-1098,_onDone-494,_zone-1336,_state-1075,_cancelFuture-1337,_pending-1338",
    _add$1: [function(data) {
      if (J.$and$n(this._state, 2) !== 0)
        return;
      P._BufferingStreamSubscription.prototype._add$1.call(this, data);
    }, "call$1" /* tearOffInfo */, "get$_add", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "void__T19", void: true, args: [T]};
      }, this.$receiver, "_ForwardingStreamSubscription");
    }, 546, "_add"],
    _addError$2: [function(error, stackTrace) {
      if (J.$and$n(this._state, 2) !== 0)
        return;
      P._BufferingStreamSubscription.prototype._addError$2.call(this, error, stackTrace);
    }, "call$2" /* tearOffInfo */, "get$_addError", 4, 0, 1348, 507, 508, "_addError"],
    _onPause$0: [function() {
      var t1 = this._subscription;
      if (t1 == null)
        return;
      t1.pause$0();
    }, "call$0" /* tearOffInfo */, "get$_onPause", 0, 0, 494, "_onPause"],
    _onResume$0: [function() {
      var t1 = this._subscription;
      if (t1 == null)
        return;
      t1.resume$0();
    }, "call$0" /* tearOffInfo */, "get$_onResume", 0, 0, 494, "_onResume"],
    _onCancel$0: [function() {
      var t1 = this._subscription;
      if (t1 != null) {
        this._subscription = null;
        t1.cancel$0();
      }
      return;
    }, "call$0" /* tearOffInfo */, "get$_onCancel", 0, 0, 1347, "_onCancel"],
    _handleData$1: [function(data) {
      this._stream._handleData$2(data, this);
    }, "call$1" /* tearOffInfo */, "get$_handleData", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "void__S", void: true, args: [S]};
      }, this.$receiver, "_ForwardingStreamSubscription");
    }, 546, "_handleData"],
    _handleError$2: [function(error, stackTrace) {
      this._stream._handleError$3(error, stackTrace, this);
    }, "call$2" /* tearOffInfo */, "get$_handleError", 4, 0, 1387, 507, 508, "_handleError"],
    _handleDone$0: [function() {
      this._stream._handleDone$1(this);
    }, "call$0" /* tearOffInfo */, "get$_handleDone", 0, 0, 494, "_handleDone"],
    _ForwardingStreamSubscription$2: [function(_stream, cancelOnError, $S, $T) {
      var t1, t2, t3;
      t1 = this._stream.get$_async$_source();
      t2 = this.get$_handleData();
      t3 = this.get$_handleError();
      this._subscription = t1.listen$3$onDone$onError(t2, this.get$_handleDone(), t3);
    }, null /* tearOffInfo */, null, 4, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "dynamic___ForwardingStream_bool", args: [[P._ForwardingStream, S, T], J.JSBool]};
      }, this.$receiver, "_ForwardingStreamSubscription");
    }, 549, 516, ""],
    $as_BufferingStreamSubscription: function($S, $T) {
      return [$T];
    },
    $asStreamSubscription: function($S, $T) {
      return [$T];
    },
    "<>": [88, 89],
    static: {_ForwardingStreamSubscription$: [function(_stream, cancelOnError, $S, $T) {
        var t1, t2;
        t1 = $.Zone__current;
        t2 = cancelOnError === true ? 1 : 0;
        t2 = H.setRuntimeTypeInfo(new P._ForwardingStreamSubscription(_stream, null, null, null, null, t1, t2, null, null), [$S, $T]);
        t2._ForwardingStreamSubscription$2(_stream, cancelOnError, $S, $T);
        return t2;
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(S, T) {
          return {func: "dynamic___ForwardingStream_bool", args: [[P._ForwardingStream, S, T], J.JSBool]};
        }, this.$receiver, "_ForwardingStreamSubscription");
      }, 549, 516, "new _ForwardingStreamSubscription" /* new _ForwardingStreamSubscription:2:0 */]}
  },
  "+_ForwardingStreamSubscription": [1488],
  _WhereStream: {
    "": "_ForwardingStream;_test<-1489,_async$_source-1484",
    _test$1: function(arg0) {
      return this._test.call$1(arg0);
    },
    _handleData$2: [function(inputEvent, sink) {
      var satisfies, e, s, exception, t1;
      satisfies = null;
      try {
        satisfies = this._test$1(inputEvent);
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        sink._addError$2(e, s);
        return;
      }

      if (satisfies === true)
        sink._add$1(inputEvent);
    }, "call$2" /* tearOffInfo */, "get$_handleData", 4, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T__EventSink", void: true, args: [T, [P._EventSink, T]]};
      }, this.$receiver, "_WhereStream");
    }, 1490, 595, "_handleData"],
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    },
    "<>": [154],
    static: {_WhereStream$: [function(source, test, $T) {
        return H.setRuntimeTypeInfo(new P._WhereStream(test, source), [$T]);
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic__Stream_bool__T", args: [[P.Stream, T], {func: "bool__T", ret: J.JSBool, args: [T]}]};
        }, this.$receiver, "_WhereStream");
      }, 292, 428, "new _WhereStream" /* new _WhereStream:2:0 */]}
  },
  "+_WhereStream": [1491],
  _MapStream: {
    "": "_ForwardingStream;_transform<-241,_async$_source-1484",
    _transform$1: function(arg0) {
      return this._transform.call$1(arg0);
    },
    _handleData$2: [function(inputEvent, sink) {
      var outputEvent, e, s, exception, t1;
      outputEvent = null;
      try {
        outputEvent = this._transform$1(inputEvent);
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        sink._addError$2(e, s);
        return;
      }

      sink._add$1(outputEvent);
    }, "call$2" /* tearOffInfo */, "get$_handleData", 4, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "void__S__EventSink0", void: true, args: [S, [P._EventSink, T]]};
      }, this.$receiver, "_MapStream");
    }, 1490, 595, "_handleData"],
    $as_ForwardingStream: null,
    "<>": [118, 119],
    static: {_MapStream$: [function(source, transform, $S, $T) {
        return H.setRuntimeTypeInfo(new P._MapStream(transform, source), [$S, $T]);
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(S, T) {
          return {func: "dynamic__Stream_T__S", args: [[P.Stream, S], {func: "T__S0", ret: T, args: [S]}]};
        }, this.$receiver, "_MapStream");
      }, 292, 586, "new _MapStream" /* new _MapStream:2:0 */]}
  },
  "+_MapStream": [1492],
  _ExpandStream: {
    "": "_ForwardingStream;_expand<-1493,_async$_source-1484",
    _expand$1: function(arg0) {
      return this._expand.call$1(arg0);
    },
    _handleData$2: [function(inputEvent, sink) {
      var value, e, s, t1, exception;
      try {
        for (t1 = J.get$iterator$a(this._expand$1(inputEvent)); t1.moveNext$0() === true;) {
          value = t1.get$current();
          sink._add$1(value);
        }
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        sink._addError$2(e, s);
      }

    }, "call$2" /* tearOffInfo */, "get$_handleData", 4, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "void__S__EventSink1", void: true, args: [S, [P._EventSink, T]]};
      }, this.$receiver, "_ExpandStream");
    }, 1490, 595, "_handleData"],
    $as_ForwardingStream: null,
    "<>": [128, 129],
    static: {_ExpandStream$: [function(source, expand, $S, $T) {
        return H.setRuntimeTypeInfo(new P._ExpandStream(expand, source), [$S, $T]);
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(S, T) {
          return {func: "dynamic__Stream_Iterable__S", args: [[P.Stream, S], {func: "Iterable__S", ret: [P.Iterable, T], args: [S]}]};
        }, this.$receiver, "_ExpandStream");
      }, 292, 587, "new _ExpandStream" /* new _ExpandStream:2:0 */]}
  },
  "+_ExpandStream": [1494],
  _HandleErrorStream: {
    "": "_ForwardingStream;_transform<-1098,_test<-273,_async$_source-1484",
    _test$1: function(arg0) {
      return this._test.call$1(arg0);
    },
    _handleError$3: [function(error, stackTrace, sink) {
      var matches, e, s, e0, s0, exception, t1, t2;
      matches = true;
      if (this._test != null)
        try {
          matches = this._test$1(error);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = new H._StackTrace(exception, null);
          sink._addError$2(e, s);
          return;
        }

      if (matches === true)
        try {
          P._invokeErrorHandler(this._transform, error, stackTrace);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e0 = t1;
          s0 = new H._StackTrace(exception, null);
          t1 = e0;
          t2 = error;
          if (t1 == null ? t2 == null : t1 === t2)
            sink._addError$2(error, stackTrace);
          else
            sink._addError$2(e0, s0);
          return;
        }

      else
        sink._addError$2(error, stackTrace);
    }, "call$3" /* tearOffInfo */, "get$_handleError", 6, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__Object_StackTrace__EventSink", void: true, args: [P.Object, P.StackTrace, [P._EventSink, T]]};
      }, this.$receiver, "_HandleErrorStream");
    }, 507, 508, 595, "_handleError"],
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    },
    "<>": [155],
    static: {_HandleErrorStream$: [function(source, onError, test, $T) {
        return H.setRuntimeTypeInfo(new P._HandleErrorStream(onError, test, source), [$T]);
      }, null /* tearOffInfo */, null, 6, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic__Stream_Function_bool__dynamic", args: [[P.Stream, T], P.Function, {func: "bool__dynamic", ret: J.JSBool, args: [null]}]};
        }, this.$receiver, "_HandleErrorStream");
      }, 292, 581, 428, "new _HandleErrorStream" /* new _HandleErrorStream:3:0 */]}
  },
  "+_HandleErrorStream": [1495],
  _TakeStream: {
    "": "_ForwardingStream;_remaining@-1075,_async$_source-1484",
    _handleData$2: [function(inputEvent, sink) {
      var t1;
      if (J.$gt$n(this._remaining, 0)) {
        sink._add$1(inputEvent);
        t1 = J.$sub$n(this._remaining, 1);
        this._remaining = t1;
        if (J.$eq(t1, 0))
          sink._close$0();
      }
    }, "call$2" /* tearOffInfo */, "get$_handleData", 4, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T__EventSink0", void: true, args: [T, [P._EventSink, T]]};
      }, this.$receiver, "_TakeStream");
    }, 1490, 595, "_handleData"],
    _TakeStream$2: [function(source, count, $T) {
      if (typeof count !== "number" || Math.floor(count) !== count)
        throw H.wrapException(new P.ArgumentError(count));
    }, null /* tearOffInfo */, null, 4, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__Stream_int", args: [[P.Stream, T], J.JSInt]};
      }, this.$receiver, "_TakeStream");
    }, 292, 450, ""],
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    },
    "<>": [156],
    static: {_TakeStream$: [function(source, count, $T) {
        var t1 = H.setRuntimeTypeInfo(new P._TakeStream(count, source), [$T]);
        t1._TakeStream$2(source, count, $T);
        return t1;
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic__Stream_int", args: [[P.Stream, T], J.JSInt]};
        }, this.$receiver, "_TakeStream");
      }, 292, 450, "new _TakeStream" /* new _TakeStream:2:0 */]}
  },
  "+_TakeStream": [1496],
  _TakeWhileStream: {
    "": "_ForwardingStream;_test<-1497,_async$_source-1484",
    _test$1: function(arg0) {
      return this._test.call$1(arg0);
    },
    _handleData$2: [function(inputEvent, sink) {
      var satisfies, e, s, exception, t1;
      satisfies = null;
      try {
        satisfies = this._test$1(inputEvent);
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        sink._addError$2(e, s);
        sink._close$0();
        return;
      }

      if (satisfies === true)
        sink._add$1(inputEvent);
      else
        sink._close$0();
    }, "call$2" /* tearOffInfo */, "get$_handleData", 4, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T__EventSink1", void: true, args: [T, [P._EventSink, T]]};
      }, this.$receiver, "_TakeWhileStream");
    }, 1490, 595, "_handleData"],
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    },
    "<>": [157],
    static: {_TakeWhileStream$: [function(source, test, $T) {
        return H.setRuntimeTypeInfo(new P._TakeWhileStream(test, source), [$T]);
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic__Stream_bool__T0", args: [[P.Stream, T], {func: "bool__T0", ret: J.JSBool, args: [T]}]};
        }, this.$receiver, "_TakeWhileStream");
      }, 292, 428, "new _TakeWhileStream" /* new _TakeWhileStream:2:0 */]}
  },
  "+_TakeWhileStream": [1498],
  _SkipStream: {
    "": "_ForwardingStream;_remaining@-1075,_async$_source-1484",
    _handleData$2: [function(inputEvent, sink) {
      if (J.$gt$n(this._remaining, 0)) {
        this._remaining = J.$sub$n(this._remaining, 1);
        return;
      }
      sink._add$1(inputEvent);
    }, "call$2" /* tearOffInfo */, "get$_handleData", 4, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T__EventSink2", void: true, args: [T, [P._EventSink, T]]};
      }, this.$receiver, "_SkipStream");
    }, 1490, 595, "_handleData"],
    _SkipStream$2: [function(source, count, $T) {
      if (typeof count !== "number" || Math.floor(count) !== count || count < 0)
        throw H.wrapException(new P.ArgumentError(count));
    }, null /* tearOffInfo */, null, 4, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__Stream_int0", args: [[P.Stream, T], J.JSInt]};
      }, this.$receiver, "_SkipStream");
    }, 292, 450, ""],
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    },
    "<>": [85],
    static: {_SkipStream$: [function(source, count, $T) {
        var t1 = H.setRuntimeTypeInfo(new P._SkipStream(count, source), [$T]);
        t1._SkipStream$2(source, count, $T);
        return t1;
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic__Stream_int0", args: [[P.Stream, T], J.JSInt]};
        }, this.$receiver, "_SkipStream");
      }, 292, 450, "new _SkipStream" /* new _SkipStream:2:0 */]}
  },
  "+_SkipStream": [1499],
  _SkipWhileStream: {
    "": "_ForwardingStream;_test<-1500,_hasFailed@-1043,_async$_source-1484",
    _test$1: function(arg0) {
      return this._test.call$1(arg0);
    },
    _handleData$2: [function(inputEvent, sink) {
      var satisfies, e, s, exception, t1;
      if (this._hasFailed === true) {
        sink._add$1(inputEvent);
        return;
      }
      satisfies = null;
      try {
        satisfies = this._test$1(inputEvent);
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        sink._addError$2(e, s);
        this._hasFailed = true;
        return;
      }

      if (satisfies !== true) {
        this._hasFailed = true;
        sink._add$1(inputEvent);
      }
    }, "call$2" /* tearOffInfo */, "get$_handleData", 4, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T__EventSink3", void: true, args: [T, [P._EventSink, T]]};
      }, this.$receiver, "_SkipWhileStream");
    }, 1490, 595, "_handleData"],
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    },
    "<>": [158],
    static: {_SkipWhileStream$: [function(source, test, $T) {
        return H.setRuntimeTypeInfo(new P._SkipWhileStream(test, false, source), [$T]);
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic__Stream_bool__T1", args: [[P.Stream, T], {func: "bool__T1", ret: J.JSBool, args: [T]}]};
        }, this.$receiver, "_SkipWhileStream");
      }, 292, 428, "new _SkipWhileStream" /* new _SkipWhileStream:2:0 */]}
  },
  "+_SkipWhileStream": [1501],
  _DistinctStream: {
    "": "_ForwardingStream;_async$_equals@-1502,_async$_previous@-370,_async$_source-1484",
    _async$_equals$2: function(arg0, arg1) {
      return this._async$_equals.call$2(arg0, arg1);
    },
    _handleData$2: [function(inputEvent, sink) {
      var isEqual, e, s, t1, t2, exception;
      t1 = this._async$_previous;
      t2 = $.get$_DistinctStream__SENTINEL();
      if (t1 == null ? t2 == null : t1 === t2) {
        this._async$_previous = inputEvent;
        return sink._add$1(inputEvent);
      } else {
        isEqual = null;
        try {
          if (this._async$_equals == null)
            isEqual = J.$eq(t1, inputEvent);
          else
            isEqual = this._async$_equals$2(t1, inputEvent);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = new H._StackTrace(exception, null);
          sink._addError$2(e, s);
          return;
        }

        if (isEqual !== true) {
          sink._add$1(inputEvent);
          this._async$_previous = inputEvent;
        }
      }
    }, "call$2" /* tearOffInfo */, "get$_handleData", 4, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T__EventSink4", void: true, args: [T, [P._EventSink, T]]};
      }, this.$receiver, "_DistinctStream");
    }, 1490, 595, "_handleData"],
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    },
    "<>": [159],
    static: {"": "_DistinctStream__SENTINEL@-370", _DistinctStream$: [function(source, equals, $T) {
        return H.setRuntimeTypeInfo(new P._DistinctStream(equals, $.get$_DistinctStream__SENTINEL(), source), [$T]);
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic__Stream_bool__T_T", args: [[P.Stream, T], {func: "bool__T_T", ret: J.JSBool, args: [T, T]}]};
        }, this.$receiver, "_DistinctStream");
      }, 292, 588, "new _DistinctStream" /* new _DistinctStream:2:0 */]}
  },
  "+_DistinctStream": [1503],
  _EventSinkWrapper: {
    "": "Object;_sink@-1450",
    add$1: [function(_, data) {
      this._sink._add$1(data);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T20", void: true, args: [T]};
      }, this.$receiver, "_EventSinkWrapper");
    }, 546, "add"],
    addError$2: [function(error, stackTrace) {
      this._sink._addError$2(error, stackTrace);
    }, function(error) {
      return this.addError$2(error, null);
    }, "addError$1", "call$2" /* tearOffInfo */, "call$1" /* tearOffInfo */, "get$addError", 2, 2, 573, 370, 507, 508, "addError"],
    close$0: [function() {
      this._sink._close$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    "<>": [160],
    static: {_EventSinkWrapper$: [function(_sink, $T) {
        return H.setRuntimeTypeInfo(new P._EventSinkWrapper(_sink), [$T]);
      }, null /* tearOffInfo */, null, 2, 0, 567, 555, "new _EventSinkWrapper" /* new _EventSinkWrapper:1:0 */]}
  },
  "+_EventSinkWrapper": [0, 1504],
  _SinkTransformerStreamSubscription: {
    "": "_BufferingStreamSubscription;_transformerSink@-1428,_subscription@-1505,_onData-1335,_onError-1098,_onDone-494,_zone-1336,_state-1075,_cancelFuture-1337,_pending-1338",
    get$_isSubscribed: [function() {
      return this._subscription != null;
    }, null /* tearOffInfo */, null, 1, 0, 849, "_isSubscribed"],
    _add$1: [function(data) {
      if (J.$and$n(this._state, 2) !== 0)
        throw H.wrapException(new P.StateError("Stream is already closed"));
      P._BufferingStreamSubscription.prototype._add$1.call(this, data);
    }, "call$1" /* tearOffInfo */, "get$_add", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "void__T21", void: true, args: [T]};
      }, this.$receiver, "_SinkTransformerStreamSubscription");
    }, 546, "_add"],
    _addError$2: [function(error, stackTrace) {
      if (J.$and$n(this._state, 2) !== 0)
        throw H.wrapException(new P.StateError("Stream is already closed"));
      P._BufferingStreamSubscription.prototype._addError$2.call(this, error, stackTrace);
    }, "call$2" /* tearOffInfo */, "get$_addError", 4, 0, 1348, 507, 508, "_addError"],
    _close$0: [function() {
      if (J.$and$n(this._state, 2) !== 0)
        throw H.wrapException(new P.StateError("Stream is already closed"));
      P._BufferingStreamSubscription.prototype._close$0.call(this);
    }, "call$0" /* tearOffInfo */, "get$_close", 0, 0, 494, "_close"],
    _onPause$0: [function() {
      var t1 = this._subscription;
      if (t1 != null)
        t1.pause$0();
    }, "call$0" /* tearOffInfo */, "get$_onPause", 0, 0, 494, "_onPause"],
    _onResume$0: [function() {
      var t1 = this._subscription;
      if (t1 != null)
        t1.resume$0();
    }, "call$0" /* tearOffInfo */, "get$_onResume", 0, 0, 494, "_onResume"],
    _onCancel$0: [function() {
      var t1 = this._subscription;
      if (t1 != null) {
        this._subscription = null;
        t1.cancel$0();
      }
      return;
    }, "call$0" /* tearOffInfo */, "get$_onCancel", 0, 0, 1347, "_onCancel"],
    _handleData$1: [function(data) {
      var e, s, exception, t1;
      try {
        J.add$1$a(this._transformerSink, data);
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        if (J.$and$n(this._state, 2) !== 0)
          H.throwExpression(new P.StateError("Stream is already closed"));
        P._BufferingStreamSubscription.prototype._addError$2.call(this, e, s);
      }

    }, "call$1" /* tearOffInfo */, "get$_handleData", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "void__S0", void: true, args: [S]};
      }, this.$receiver, "_SinkTransformerStreamSubscription");
    }, 546, "_handleData"],
    _handleError$2: [function(error, stackTrace) {
      var e, s, exception, t1, t2;
      try {
        this._transformerSink.addError$2(error, stackTrace);
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        t1 = e;
        t2 = error;
        if (t1 == null ? t2 == null : t1 === t2) {
          if (J.$and$n(this._state, 2) !== 0)
            H.throwExpression(new P.StateError("Stream is already closed"));
          P._BufferingStreamSubscription.prototype._addError$2.call(this, error, stackTrace);
        } else {
          if (J.$and$n(this._state, 2) !== 0)
            H.throwExpression(new P.StateError("Stream is already closed"));
          P._BufferingStreamSubscription.prototype._addError$2.call(this, e, s);
        }
      }

    }, function(error) {
      return this._handleError$2(error, null);
    }, null, "call$2" /* tearOffInfo */, "call$1" /* tearOffInfo */, "get$_handleError", 2, 2, 1506, 370, 507, 508, "_handleError"],
    _handleDone$0: [function() {
      var e, s, exception, t1;
      try {
        this._subscription = null;
        this._transformerSink.close$0();
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        if (J.$and$n(this._state, 2) !== 0)
          H.throwExpression(new P.StateError("Stream is already closed"));
        P._BufferingStreamSubscription.prototype._addError$2.call(this, e, s);
      }

    }, "call$0" /* tearOffInfo */, "get$_handleDone", 0, 0, 494, "_handleDone"],
    _SinkTransformerStreamSubscription$3: [function(source, mapper, cancelOnError, $S, $T) {
      var t1, t2;
      this._transformerSink = mapper.call$1(H.setRuntimeTypeInfo(new P._EventSinkWrapper(this), [$T]));
      t1 = this.get$_handleData();
      t2 = this.get$_handleError();
      this._subscription = source.listen$3$onDone$onError(t1, this.get$_handleDone(), t2);
    }, null /* tearOffInfo */, null, 6, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "dynamic__Stream__SinkMapper_bool", args: [[P.Stream, S], {func: "EventSink__EventSink0", ret: P.EventSink, args: [P.EventSink]}, J.JSBool]};
      }, this.$receiver, "_SinkTransformerStreamSubscription");
    }, 292, 589, 516, ""],
    $as_BufferingStreamSubscription: function($S, $T) {
      return [$T];
    },
    $asStreamSubscription: function($S, $T) {
      return [$T];
    },
    "<>": [161, 162],
    static: {_SinkTransformerStreamSubscription$: [function(source, mapper, cancelOnError, $S, $T) {
        var t1, t2;
        t1 = $.Zone__current;
        t2 = cancelOnError === true ? 1 : 0;
        t2 = H.setRuntimeTypeInfo(new P._SinkTransformerStreamSubscription(null, null, null, null, null, t1, t2, null, null), [$S, $T]);
        t2._SinkTransformerStreamSubscription$3(source, mapper, cancelOnError, $S, $T);
        return t2;
      }, null /* tearOffInfo */, null, 6, 0, function() {
        return H.computeSignature(function(S, T) {
          return {func: "dynamic__Stream__SinkMapper_bool", args: [[P.Stream, S], {func: "EventSink__EventSink0", ret: P.EventSink, args: [P.EventSink]}, J.JSBool]};
        }, this.$receiver, "_SinkTransformerStreamSubscription");
      }, 292, 589, 516, "new _SinkTransformerStreamSubscription" /* new _SinkTransformerStreamSubscription:3:0 */]}
  },
  "+_SinkTransformerStreamSubscription": [1507],
  _StreamSinkTransformer: {
    "": "Object;_sinkMapper<-1508",
    bind$1: [function(stream) {
      var t1 = new P._BoundSinkStream(this._sinkMapper, stream);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, "call$1" /* tearOffInfo */, "get$bind", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "Stream__Stream", ret: [P.Stream, T], args: [[P.Stream, S]]};
      }, this.$receiver, "_StreamSinkTransformer");
    }, 553, "bind"],
    "<>": [163, 164],
    static: {_StreamSinkTransformer$: [function(_sinkMapper, $S, $T) {
        return H.setRuntimeTypeInfo(new P._StreamSinkTransformer(_sinkMapper), [$S, $T]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(S, T) {
          return {func: "dynamic___SinkMapper", args: [{func: "EventSink__EventSink1", ret: [P.EventSink, S], args: [[P.EventSink, T]]}]};
        }, this.$receiver, "_StreamSinkTransformer");
      }, 590, "new _StreamSinkTransformer" /* new _StreamSinkTransformer:1:0 */]}
  },
  "+_StreamSinkTransformer": [0, 1509],
  _BoundSinkStream: {
    "": "Stream;_sinkMapper<-1510,_stream<-1511",
    listen$4$cancelOnError$onDone$onError: [function(onData, cancelOnError, onDone, onError) {
      var t1, t2, subscription;
      cancelOnError = true === cancelOnError;
      t1 = $.Zone__current;
      t2 = cancelOnError ? 1 : 0;
      subscription = H.setRuntimeTypeInfo(new P._SinkTransformerStreamSubscription(null, null, null, null, null, t1, t2, null, null), [null, null]);
      subscription._SinkTransformerStreamSubscription$3(this._stream, this._sinkMapper, cancelOnError, null, null);
      subscription.onData$1(onData);
      subscription.onError$1(onError);
      subscription.onDone$1(onDone);
      return subscription;
    }, function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }, "listen$3$onDone$onError", function(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    }, "listen$2$cancelOnError", "call$4$cancelOnError$onDone$onError" /* tearOffInfo */, null /* tearOffInfo */, null /* tearOffInfo */, "get$listen", 2, 7, function() {
      return H.computeSignature(function(S, T) {
        return {func: "StreamSubscription__void__T__bool_void__Function3", ret: [P.StreamSubscription, T], args: [{func: "void__T22", void: true, args: [T]}], named: {cancelOnError: J.JSBool, onDone: {func: "void_", void: true}, onError: P.Function}};
      }, this.$receiver, "_BoundSinkStream");
    }, 370, 370, 370, 1120, 516, 1121, 581, "listen"],
    $asStream: function($S, $T) {
      return [$T];
    },
    "<>": [165, 166],
    static: {_BoundSinkStream$: [function(_stream, _sinkMapper, $S, $T) {
        return H.setRuntimeTypeInfo(new P._BoundSinkStream(_sinkMapper, _stream), [$S, $T]);
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(S, T) {
          return {func: "dynamic__Stream__SinkMapper", args: [[P.Stream, S], {func: "EventSink__EventSink2", ret: [P.EventSink, S], args: [[P.EventSink, T]]}]};
        }, this.$receiver, "_BoundSinkStream");
      }, 549, 590, "new _BoundSinkStream" /* new _BoundSinkStream:2:0 */]}
  },
  "+_BoundSinkStream": [1512],
  _HandlerEventSink: {
    "": "Object;_handleData<-1513,_handleError<-1514,_handleDone<-1515,_sink<-1516",
    _handleData$2: function(arg0, arg1) {
      return this._handleData.call$2(arg0, arg1);
    },
    _handleData$1: function(arg0) {
      return this._handleData.call$1(arg0);
    },
    _handleError$3: function(arg0, arg1, arg2) {
      return this._handleError.call$3(arg0, arg1, arg2);
    },
    _handleError$2: function(arg0, arg1) {
      return this._handleError.call$2(arg0, arg1);
    },
    _handleDone$1: function(arg0) {
      return this._handleDone.call$1(arg0);
    },
    _handleDone$0: function() {
      return this._handleDone.call$0();
    },
    add$1: [function(_, data) {
      return this._handleData$2(data, this._sink);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "void__S1", void: true, args: [S]};
      }, this.$receiver, "_HandlerEventSink");
    }, 546, "add"],
    addError$2: [function(error, stackTrace) {
      return this._handleError$3(error, stackTrace, this._sink);
    }, function(error) {
      return this.addError$2(error, null);
    }, "addError$1", "call$2" /* tearOffInfo */, "call$1" /* tearOffInfo */, "get$addError", 2, 2, 1346, 370, 507, 508, "addError"],
    close$0: [function() {
      return this._handleDone$1(this._sink);
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    "<>": [167, 168],
    static: {_HandlerEventSink$: [function(_handleData, _handleError, _handleDone, _sink, $S, $T) {
        return H.setRuntimeTypeInfo(new P._HandlerEventSink(_handleData, _handleError, _handleDone, _sink), [$S, $T]);
      }, null /* tearOffInfo */, null, 8, 0, function() {
        return H.computeSignature(function(S, T) {
          return {func: "dynamic___TransformDataHandler__TransformErrorHandler__TransformDoneHandler_EventSink", args: [{func: "void__S_EventSink0", void: true, args: [S, [P.EventSink, T]]}, {func: "void__Object_StackTrace_EventSink0", void: true, args: [P.Object, P.StackTrace, [P.EventSink, T]]}, {func: "void__EventSink0", void: true, args: [[P.EventSink, T]]}, [P.EventSink, T]]};
        }, this.$receiver, "_HandlerEventSink");
      }, 591, 592, 593, 555, "new _HandlerEventSink" /* new _HandlerEventSink:4:0 */]}
  },
  "+_HandlerEventSink": [0, 1517],
  _StreamHandlerTransformer: {
    "": "_StreamSinkTransformer;_sinkMapper-1508",
    bind$1: [function(stream) {
      return P._StreamSinkTransformer.prototype.bind$1.call(this, stream);
    }, "call$1" /* tearOffInfo */, "get$bind", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "Stream__Stream0", ret: [P.Stream, T], args: [[P.Stream, S]]};
      }, this.$receiver, "_StreamHandlerTransformer");
    }, 553, "bind"],
    $as_StreamSinkTransformer: null,
    "<>": [169, 170],
    static: {_StreamHandlerTransformer$: [function(handleData, handleDone, handleError, $S, $T) {
        var t1 = {};
        t1.handleData_0 = handleData;
        t1.handleError_1 = handleError;
        t1.handleDone_2 = handleDone;
        return H.setRuntimeTypeInfo(new P._StreamHandlerTransformer(new P._StreamHandlerTransformer_closure(t1, $S, $T)), [$S, $T]);
      }, null /* tearOffInfo */, null, 0, 7, function() {
        return H.computeSignature(function(S, T) {
          return {func: "dynamic___void__S_EventSink_void__EventSink_void__Object_StackTrace_EventSink", named: {handleData: {func: "void__S_EventSink1", void: true, args: [S, [P.EventSink, T]]}, handleDone: {func: "void__EventSink1", void: true, args: [[P.EventSink, T]]}, handleError: {func: "void__Object_StackTrace_EventSink1", void: true, args: [P.Object, P.StackTrace, [P.EventSink, T]]}}};
        }, this.$receiver, "_StreamHandlerTransformer");
      }, 370, 370, 370, 551, 552, 294, "new _StreamHandlerTransformer" /* new _StreamHandlerTransformer:0:3:handleData:handleDone:handleError */], _StreamHandlerTransformer__defaultHandleData: [function(data, sink) {
        J.add$1$a(sink, data);
      }, "call$2" /* tearOffInfo */, "_StreamHandlerTransformer__defaultHandleData$closure", 4, 0, 594, 546, 595, "_defaultHandleData"], _StreamHandlerTransformer__defaultHandleError: [function(error, stackTrace, sink) {
        sink.addError$1(error);
      }, "call$3" /* tearOffInfo */, "_StreamHandlerTransformer__defaultHandleError$closure", 6, 0, 596, 507, 508, 595, "_defaultHandleError"], _StreamHandlerTransformer__defaultHandleDone: [function(sink) {
        sink.close$0();
      }, "call$1" /* tearOffInfo */, "_StreamHandlerTransformer__defaultHandleDone$closure", 2, 0, 597, 595, "_defaultHandleDone"]}
  },
  "+_StreamHandlerTransformer": [1518],
  _StreamHandlerTransformer_closure: {
    "": "Closure;box_0-370,S_1-1519,T_2-1520",
    call$1: [function(outputSink) {
      var t1, t2, t3, t4;
      t1 = this.box_0;
      t2 = t1.handleData_0;
      if (t2 == null) {
        t1.handleData_0 = P._StreamHandlerTransformer__defaultHandleData$closure();
        t2 = P._StreamHandlerTransformer__defaultHandleData$closure();
      }
      t3 = t1.handleError_1;
      if (t3 == null) {
        t1.handleError_1 = P._StreamHandlerTransformer__defaultHandleError$closure();
        t3 = P._StreamHandlerTransformer__defaultHandleError$closure();
      }
      t4 = t1.handleDone_2;
      if (t4 == null) {
        t1.handleDone_2 = P._StreamHandlerTransformer__defaultHandleDone$closure();
        t1 = P._StreamHandlerTransformer__defaultHandleDone$closure();
      } else
        t1 = t4;
      return H.setRuntimeTypeInfo(new P._HandlerEventSink(t2, t3, t1, outputSink), [this.S_1, this.T_2]);
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "dynamic__EventSink1", args: [[P.EventSink, T]]};
      }, this.$receiver, "_StreamHandlerTransformer");
    }, 1521, "call"],
    $signature: function() {
      return H.computeSignature(function(S, T) {
        return {func: "dynamic__EventSink1", args: [[P.EventSink, T]]};
      }, this, "_StreamHandlerTransformer");
    }
  },
  "+_StreamHandlerTransformer_closure": [1060],
  _StreamSubscriptionTransformer: {
    "": "Object;_transformer<-1522",
    bind$1: [function(stream) {
      var t1 = new P._BoundSubscriptionStream(this._transformer, stream);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, "call$1" /* tearOffInfo */, "get$bind", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "Stream__Stream1", ret: [P.Stream, T], args: [[P.Stream, S]]};
      }, this.$receiver, "_StreamSubscriptionTransformer");
    }, 553, "bind"],
    "<>": [171, 172],
    static: {_StreamSubscriptionTransformer$: [function(_transformer, $S, $T) {
        return H.setRuntimeTypeInfo(new P._StreamSubscriptionTransformer(_transformer), [$S, $T]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(S, T) {
          return {func: "dynamic___SubscriptionTransformer", args: [{func: "StreamSubscription__Stream_bool0", ret: [P.StreamSubscription, T], args: [[P.Stream, S], J.JSBool]}]};
        }, this.$receiver, "_StreamSubscriptionTransformer");
      }, 598, "new _StreamSubscriptionTransformer" /* new _StreamSubscriptionTransformer:1:0 */]}
  },
  "+_StreamSubscriptionTransformer": [0, 1523],
  _BoundSubscriptionStream: {
    "": "Stream;_transformer<-1524,_stream<-1525",
    _transformer$2: function(arg0, arg1) {
      return this._transformer.call$2(arg0, arg1);
    },
    listen$4$cancelOnError$onDone$onError: [function(onData, cancelOnError, onDone, onError) {
      var result = this._transformer$2(this._stream, true === cancelOnError);
      result.onData$1(onData);
      result.onError$1(onError);
      result.onDone$1(onDone);
      return result;
    }, function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }, "listen$3$onDone$onError", function(onData, cancelOnError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, null, null);
    }, "listen$2$cancelOnError", "call$4$cancelOnError$onDone$onError" /* tearOffInfo */, null /* tearOffInfo */, null /* tearOffInfo */, "get$listen", 2, 7, function() {
      return H.computeSignature(function(S, T) {
        return {func: "StreamSubscription__void__T__bool_void__Function4", ret: [P.StreamSubscription, T], args: [{func: "void__T23", void: true, args: [T]}], named: {cancelOnError: J.JSBool, onDone: {func: "void_", void: true}, onError: P.Function}};
      }, this.$receiver, "_BoundSubscriptionStream");
    }, 370, 370, 370, 1120, 516, 1121, 581, "listen"],
    $asStream: function($S, $T) {
      return [$T];
    },
    "<>": [173, 174],
    static: {_BoundSubscriptionStream$: [function(_stream, _transformer, $S, $T) {
        return H.setRuntimeTypeInfo(new P._BoundSubscriptionStream(_transformer, _stream), [$S, $T]);
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(S, T) {
          return {func: "dynamic__Stream__SubscriptionTransformer", args: [[P.Stream, S], {func: "StreamSubscription__Stream_bool1", ret: [P.StreamSubscription, T], args: [[P.Stream, S], J.JSBool]}]};
        }, this.$receiver, "_BoundSubscriptionStream");
      }, 549, 598, "new _BoundSubscriptionStream" /* new _BoundSubscriptionStream:2:0 */]}
  },
  "+_BoundSubscriptionStream": [1526],
  Timer: {
    "": "Object;",
    static: {Timer_Timer: [function(duration, callback) {
        var t1;
        if (J.$eq($.Zone__current, C.C__RootZone))
          return $.Zone__current.createTimer$2(duration, callback);
        t1 = $.Zone__current;
        return t1.createTimer$2(duration, t1.bindCallback$2$runGuarded(callback, true));
      }, "call$2" /* tearOffInfo */, null, 4, 0, 599, 525, 277, "new Timer" /* new Timer:2:0 */], Timer_Timer$periodic: [function(duration, callback) {
        var t1;
        if (J.$eq($.Zone__current, C.C__RootZone))
          return $.Zone__current.createPeriodicTimer$2(duration, callback);
        t1 = $.Zone__current;
        return t1.createPeriodicTimer$2(duration, t1.bindUnaryCallback$2$runGuarded(callback, true));
      }, "call$2" /* tearOffInfo */, null, 4, 0, 600, 525, 277, "new Timer$periodic" /* new Timer$periodic:2:0 */], Timer_run: [function(callback) {
        P.Timer_Timer(C.Duration_0, callback);
      }, "call$1" /* tearOffInfo */, "Timer_run$closure", 2, 0, 544, 277, "run"]}
  },
  "+Timer": [0],
  ZoneSpecification: {
    "": "Object;",
    handleUncaughtError$2: function(arg0, arg1) {
      return this.get$handleUncaughtError().call$2(arg0, arg1);
    },
    handleUncaughtError$3: function(arg0, arg1, arg2) {
      return this.get$handleUncaughtError().call$3(arg0, arg1, arg2);
    },
    run$1: function(arg0) {
      return this.get$run().call$1(arg0);
    },
    run$0: function() {
      return this.get$run().call$0();
    },
    run$2: function(arg0, arg1) {
      return this.get$run().call$2(arg0, arg1);
    },
    runUnary$3: function(arg0, arg1, arg2) {
      return this.get$runUnary().call$3(arg0, arg1, arg2);
    },
    runUnary$2: function(arg0, arg1) {
      return this.get$runUnary().call$2(arg0, arg1);
    },
    runBinary$4: function(arg0, arg1, arg2, arg3) {
      return this.get$runBinary().call$4(arg0, arg1, arg2, arg3);
    },
    runBinary$3: function(arg0, arg1, arg2) {
      return this.get$runBinary().call$3(arg0, arg1, arg2);
    },
    registerCallback$1: function(arg0) {
      return this.get$registerCallback().call$1(arg0);
    },
    registerCallback$2: function(arg0, arg1) {
      return this.get$registerCallback().call$2(arg0, arg1);
    },
    registerUnaryCallback$1: function(arg0) {
      return this.get$registerUnaryCallback().call$1(arg0);
    },
    registerUnaryCallback$2: function(arg0, arg1) {
      return this.get$registerUnaryCallback().call$2(arg0, arg1);
    },
    registerBinaryCallback$1: function(arg0) {
      return this.get$registerBinaryCallback().call$1(arg0);
    },
    registerBinaryCallback$2: function(arg0, arg1) {
      return this.get$registerBinaryCallback().call$2(arg0, arg1);
    },
    scheduleMicrotask$1: function(arg0) {
      return this.get$scheduleMicrotask().call$1(arg0);
    },
    scheduleMicrotask$2: function(arg0, arg1) {
      return this.get$scheduleMicrotask().call$2(arg0, arg1);
    },
    createTimer$2: function(arg0, arg1) {
      return this.get$createTimer().call$2(arg0, arg1);
    },
    createTimer$3: function(arg0, arg1, arg2) {
      return this.get$createTimer().call$3(arg0, arg1, arg2);
    },
    createPeriodicTimer$3: function(arg0, arg1, arg2) {
      return this.get$createPeriodicTimer().call$3(arg0, arg1, arg2);
    },
    createPeriodicTimer$2: function(arg0, arg1) {
      return this.get$createPeriodicTimer().call$2(arg0, arg1);
    },
    print$2: function(arg0, arg1) {
      return this.get$print().call$2(arg0, arg1);
    },
    print$1: function(arg0) {
      return this.get$print().call$1(arg0);
    },
    fork$3: function(arg0, arg1, arg2) {
      return this.get$fork().call$3(arg0, arg1, arg2);
    },
    fork$2$specification$zoneValues: function(arg0, arg1) {
      return this.get$fork().call$2$specification$zoneValues(arg0, arg1);
    },
    fork$1$specification: function(arg0) {
      return this.get$fork().call$1$specification(arg0);
    },
    static: {ZoneSpecification_ZoneSpecification: [function(createPeriodicTimer, createTimer, fork, handleUncaughtError, $print, registerBinaryCallback, registerCallback, registerUnaryCallback, run, runBinary, runUnary, scheduleMicrotask) {
        return new P._ZoneSpecification(handleUncaughtError, run, runUnary, runBinary, registerCallback, registerUnaryCallback, registerBinaryCallback, scheduleMicrotask, createTimer, createPeriodicTimer, $print, fork);
      }, "call$12$createPeriodicTimer$createTimer$fork$handleUncaughtError$print$registerBinaryCallback$registerCallback$registerUnaryCallback$run$runBinary$runUnary$scheduleMicrotask" /* tearOffInfo */, null, 0, 25, 601, 370, 370, 370, 370, 370, 370, 370, 370, 370, 370, 370, 370, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, "new ZoneSpecification" /* new ZoneSpecification:0:12:createPeriodicTimer:createTimer:fork:handleUncaughtError:print:registerBinaryCallback:registerCallback:registerUnaryCallback:run:runBinary:runUnary:scheduleMicrotask */], ZoneSpecification_ZoneSpecification$from: [function(other, createPeriodicTimer, createTimer, fork, handleUncaughtError, $print, registerBinaryCallback, registerCallback, registerUnaryCallback, run, runBinary, runUnary, scheduleMicrotask) {
        var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
        t1 = handleUncaughtError != null ? handleUncaughtError : other.get$handleUncaughtError();
        t2 = run != null ? run : other.get$run();
        t3 = runUnary != null ? runUnary : other.get$runUnary();
        t4 = runBinary != null ? runBinary : other.get$runBinary();
        t5 = registerCallback != null ? registerCallback : other.get$registerCallback();
        t6 = registerUnaryCallback != null ? registerUnaryCallback : other.get$registerUnaryCallback();
        t7 = registerBinaryCallback != null ? registerBinaryCallback : other.get$registerBinaryCallback();
        t8 = scheduleMicrotask != null ? scheduleMicrotask : other.get$scheduleMicrotask();
        t9 = createTimer != null ? createTimer : other.get$createTimer();
        t10 = createPeriodicTimer != null ? createPeriodicTimer : other.get$createPeriodicTimer();
        t11 = $print != null ? $print : other.get$print();
        t12 = fork != null ? fork : other.get$fork();
        return new P._ZoneSpecification(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12);
      }, "call$13$createPeriodicTimer$createTimer$fork$handleUncaughtError$print$registerBinaryCallback$registerCallback$registerUnaryCallback$run$runBinary$runUnary$scheduleMicrotask" /* tearOffInfo */, null, 2, 25, 614, 370, 370, 370, 370, 370, 370, 370, 370, 370, 370, 370, 370, 403, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, "new ZoneSpecification$from" /* new ZoneSpecification$from:1:12:createPeriodicTimer:createTimer:fork:handleUncaughtError:print:registerBinaryCallback:registerCallback:registerUnaryCallback:run:runBinary:runUnary:scheduleMicrotask */]}
  },
  "+ZoneSpecification": [0],
  _ZoneSpecification: {
    "": "Object;handleUncaughtError<-370,run<-370,runUnary<-370,runBinary<-370,registerCallback<-370,registerUnaryCallback<-370,registerBinaryCallback<-370,scheduleMicrotask<-370,createTimer<-370,createPeriodicTimer<-370,print<-370,fork<-370",
    handleUncaughtError$2: function(arg0, arg1) {
      return this.handleUncaughtError.call$2(arg0, arg1);
    },
    handleUncaughtError$3: function(arg0, arg1, arg2) {
      return this.handleUncaughtError.call$3(arg0, arg1, arg2);
    },
    run$1: function(arg0) {
      return this.run.call$1(arg0);
    },
    run$0: function() {
      return this.run.call$0();
    },
    run$2: function(arg0, arg1) {
      return this.run.call$2(arg0, arg1);
    },
    runUnary$3: function(arg0, arg1, arg2) {
      return this.runUnary.call$3(arg0, arg1, arg2);
    },
    runUnary$2: function(arg0, arg1) {
      return this.runUnary.call$2(arg0, arg1);
    },
    runBinary$4: function(arg0, arg1, arg2, arg3) {
      return this.runBinary.call$4(arg0, arg1, arg2, arg3);
    },
    runBinary$3: function(arg0, arg1, arg2) {
      return this.runBinary.call$3(arg0, arg1, arg2);
    },
    registerCallback$1: function(arg0) {
      return this.registerCallback.call$1(arg0);
    },
    registerCallback$2: function(arg0, arg1) {
      return this.registerCallback.call$2(arg0, arg1);
    },
    registerUnaryCallback$1: function(arg0) {
      return this.registerUnaryCallback.call$1(arg0);
    },
    registerUnaryCallback$2: function(arg0, arg1) {
      return this.registerUnaryCallback.call$2(arg0, arg1);
    },
    registerBinaryCallback$1: function(arg0) {
      return this.registerBinaryCallback.call$1(arg0);
    },
    registerBinaryCallback$2: function(arg0, arg1) {
      return this.registerBinaryCallback.call$2(arg0, arg1);
    },
    scheduleMicrotask$1: function(arg0) {
      return this.scheduleMicrotask.call$1(arg0);
    },
    scheduleMicrotask$2: function(arg0, arg1) {
      return this.scheduleMicrotask.call$2(arg0, arg1);
    },
    createTimer$2: function(arg0, arg1) {
      return this.createTimer.call$2(arg0, arg1);
    },
    createTimer$3: function(arg0, arg1, arg2) {
      return this.createTimer.call$3(arg0, arg1, arg2);
    },
    createPeriodicTimer$3: function(arg0, arg1, arg2) {
      return this.createPeriodicTimer.call$3(arg0, arg1, arg2);
    },
    createPeriodicTimer$2: function(arg0, arg1) {
      return this.createPeriodicTimer.call$2(arg0, arg1);
    },
    print$2: function(arg0, arg1) {
      return this.print.call$2(arg0, arg1);
    },
    print$1: function(arg0) {
      return this.print.call$1(arg0);
    },
    fork$3: function(arg0, arg1, arg2) {
      return this.fork.call$3(arg0, arg1, arg2);
    },
    fork$2$specification$zoneValues: function(arg0, arg1) {
      return this.fork.call$2$specification$zoneValues(arg0, arg1);
    },
    fork$1$specification: function(arg0) {
      return this.fork.call$1$specification(arg0);
    },
    $is_ZoneSpecification: true,
    static: {_ZoneSpecification$: [function(createPeriodicTimer, createTimer, fork, handleUncaughtError, $print, registerBinaryCallback, registerCallback, registerUnaryCallback, run, runBinary, runUnary, scheduleMicrotask) {
        return new P._ZoneSpecification(handleUncaughtError, run, runUnary, runBinary, registerCallback, registerUnaryCallback, registerBinaryCallback, scheduleMicrotask, createTimer, createPeriodicTimer, $print, fork);
      }, null /* tearOffInfo */, null, 0, 25, 615, 370, 370, 370, 370, 370, 370, 370, 370, 370, 370, 370, 370, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, "new _ZoneSpecification" /* new _ZoneSpecification:0:12:createPeriodicTimer:createTimer:fork:handleUncaughtError:print:registerBinaryCallback:registerCallback:registerUnaryCallback:run:runBinary:runUnary:scheduleMicrotask */]}
  },
  "+_ZoneSpecification": [0, 1527],
  ZoneDelegate: {
    "": "Object;"
  },
  "+ZoneDelegate": [0],
  Zone: {
    "": "Object;",
    static: {"": "Zone_ROOT<-1336,Zone__current@-1336", Zone$_: [function() {
        return new P.Zone();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new Zone$_" /* new Zone$_:0:0 */], Zone_current: [function() {
        return $.Zone__current;
      }, null /* tearOffInfo */, null, 1, 0, 616, "current"]}
  },
  "+Zone": [0],
  _ZoneDelegate: {
    "": "Object;_degelationTarget<-1528",
    get$_zone: [function() {
      return this._degelationTarget;
    }, null /* tearOffInfo */, null, 1, 0, 616, "_zone"],
    handleUncaughtError$3: [function(zone, error, stackTrace) {
      var $parent = this._degelationTarget;
      for (; $parent.get$_specification().get$handleUncaughtError() == null;)
        $parent = $parent.get$parent();
      return $parent.get$_specification().get$handleUncaughtError().call$5($parent, new P._ZoneDelegate($parent.get$parent()), zone, error, stackTrace);
    }, "call$3" /* tearOffInfo */, "get$handleUncaughtError", 6, 0, 1529, 510, 507, 508, "handleUncaughtError"],
    run$2: [function(zone, f) {
      var $parent = this._degelationTarget;
      for (; $parent.get$_specification().get$run() == null;)
        $parent = $parent.get$parent();
      return $parent.get$_specification().get$run().call$4($parent, new P._ZoneDelegate($parent.get$parent()), zone, f);
    }, "call$2" /* tearOffInfo */, "get$run", 4, 0, 1530, 510, 412, "run"],
    runUnary$3: [function(zone, f, arg) {
      var $parent = this._degelationTarget;
      for (; $parent.get$_specification().get$runUnary() == null;)
        $parent = $parent.get$parent();
      return $parent.get$_specification().get$runUnary().call$5($parent, new P._ZoneDelegate($parent.get$parent()), zone, f, arg);
    }, "call$3" /* tearOffInfo */, "get$runUnary", 6, 0, 1531, 510, 412, 627, "runUnary"],
    runBinary$4: [function(zone, f, arg1, arg2) {
      var $parent = this._degelationTarget;
      for (; $parent.get$_specification().get$runBinary() == null;)
        $parent = $parent.get$parent();
      return $parent.get$_specification().get$runBinary().call$6($parent, new P._ZoneDelegate($parent.get$parent()), zone, f, arg1, arg2);
    }, "call$4" /* tearOffInfo */, "get$runBinary", 8, 0, 1532, 510, 412, 333, 334, "runBinary"],
    registerCallback$2: [function(zone, f) {
      var $parent = this._degelationTarget;
      for (; $parent.get$_specification().get$registerCallback() == null;)
        $parent = $parent.get$parent();
      return $parent.get$_specification().get$registerCallback().call$4($parent, new P._ZoneDelegate($parent.get$parent()), zone, f);
    }, "call$2" /* tearOffInfo */, "get$registerCallback", 4, 0, 1533, 510, 412, "registerCallback"],
    registerUnaryCallback$2: [function(zone, f) {
      var $parent = this._degelationTarget;
      for (; $parent.get$_specification().get$registerUnaryCallback() == null;)
        $parent = $parent.get$parent();
      return $parent.get$_specification().get$registerUnaryCallback().call$4($parent, new P._ZoneDelegate($parent.get$parent()), zone, f);
    }, "call$2" /* tearOffInfo */, "get$registerUnaryCallback", 4, 0, 1534, 510, 412, "registerUnaryCallback"],
    registerBinaryCallback$2: [function(zone, f) {
      var $parent = this._degelationTarget;
      for (; $parent.get$_specification().get$registerBinaryCallback() == null;)
        $parent = $parent.get$parent();
      return $parent.get$_specification().get$registerBinaryCallback().call$4($parent, new P._ZoneDelegate($parent.get$parent()), zone, f);
    }, "call$2" /* tearOffInfo */, "get$registerBinaryCallback", 4, 0, 1535, 510, 412, "registerBinaryCallback"],
    scheduleMicrotask$2: [function(zone, f) {
      var $parent, t1;
      $parent = this._degelationTarget;
      for (; $parent.get$_specification().get$scheduleMicrotask() == null;)
        $parent = $parent.get$parent();
      t1 = $parent.get$parent();
      $parent.get$_specification().get$scheduleMicrotask().call$4($parent, new P._ZoneDelegate(t1), zone, f);
    }, "call$2" /* tearOffInfo */, "get$scheduleMicrotask", 4, 0, 1536, 510, 412, "scheduleMicrotask"],
    createTimer$3: [function(zone, duration, f) {
      var $parent = this._degelationTarget;
      for (; $parent.get$_specification().get$createTimer() == null;)
        $parent = $parent.get$parent();
      return $parent.get$_specification().get$createTimer().call$5($parent, new P._ZoneDelegate($parent.get$parent()), zone, duration, f);
    }, "call$3" /* tearOffInfo */, "get$createTimer", 6, 0, 1537, 510, 525, 412, "createTimer"],
    createPeriodicTimer$3: [function(zone, period, f) {
      var $parent = this._degelationTarget;
      for (; $parent.get$_specification().get$createPeriodicTimer() == null;)
        $parent = $parent.get$parent();
      return $parent.get$_specification().get$createPeriodicTimer().call$5($parent, new P._ZoneDelegate($parent.get$parent()), zone, period, f);
    }, "call$3" /* tearOffInfo */, "get$createPeriodicTimer", 6, 0, 1538, 510, 547, 412, "createPeriodicTimer"],
    print$2: [function(zone, line) {
      var $parent = this._degelationTarget;
      for (; $parent.get$_specification().get$print() == null;)
        $parent = $parent.get$parent();
      $parent.get$_specification().get$print().call$4($parent, new P._ZoneDelegate($parent.get$parent()), zone, line);
    }, "call$2" /* tearOffInfo */, "get$print", 4, 0, 1539, 510, 636, "print"],
    fork$3: [function(zone, specification, zoneValues) {
      var $parent, t1;
      $parent = this._degelationTarget;
      for (; $parent.get$_specification().get$fork() == null;)
        $parent = $parent.get$parent();
      t1 = $parent.get$parent();
      return $parent.get$_specification().get$fork().call$5($parent, new P._ZoneDelegate(t1), zone, specification, zoneValues);
    }, "call$3" /* tearOffInfo */, "get$fork", 6, 0, 1540, 510, 638, 639, "fork"],
    static: {_ZoneDelegate$: [function(_degelationTarget) {
        return new P._ZoneDelegate(_degelationTarget);
      }, null /* tearOffInfo */, null, 2, 0, 617, 618, "new _ZoneDelegate" /* new _ZoneDelegate:1:0 */]}
  },
  "+_ZoneDelegate": [0, 1541],
  _BaseZone: {
    "": "Object;",
    inSameErrorZone$1: [function(otherZone) {
      return this.get$_errorZone() === otherZone.get$_errorZone();
    }, "call$1" /* tearOffInfo */, "get$inSameErrorZone", 2, 0, 1542, 1543, "inSameErrorZone"],
    runGuarded$1: [function(f) {
      var e, s, t1, exception;
      try {
        t1 = this.run$1(f);
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        return this.handleUncaughtError$2(e, s);
      }

    }, "call$1" /* tearOffInfo */, "get$runGuarded", 2, 0, 539, 412, "runGuarded"],
    runUnaryGuarded$2: [function(f, arg) {
      var e, s, t1, exception;
      try {
        t1 = this.runUnary$2(f, arg);
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        return this.handleUncaughtError$2(e, s);
      }

    }, "call$2" /* tearOffInfo */, "get$runUnaryGuarded", 4, 0, 1544, 412, 627, "runUnaryGuarded"],
    runBinaryGuarded$3: [function(f, arg1, arg2) {
      var e, s, t1, exception;
      try {
        t1 = this.runBinary$3(f, arg1, arg2);
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        return this.handleUncaughtError$2(e, s);
      }

    }, "call$3" /* tearOffInfo */, "get$runBinaryGuarded", 6, 0, 1545, 412, 333, 334, "runBinaryGuarded"],
    bindCallback$2$runGuarded: [function(f, runGuarded) {
      var registered = this.registerCallback$1(f);
      if (runGuarded === true)
        return new P._BaseZone_bindCallback_closure(this, registered);
      else
        return new P._BaseZone_bindCallback_closure0(this, registered);
    }, function(f) {
      return this.bindCallback$2$runGuarded(f, true);
    }, "bindCallback$1", "call$2$runGuarded" /* tearOffInfo */, null /* tearOffInfo */, "get$bindCallback", 2, 3, 1546, 816, 412, 1547, "bindCallback"],
    bindUnaryCallback$2$runGuarded: [function(f, runGuarded) {
      var registered = this.registerUnaryCallback$1(f);
      if (runGuarded === true)
        return new P._BaseZone_bindUnaryCallback_closure(this, registered);
      else
        return new P._BaseZone_bindUnaryCallback_closure0(this, registered);
    }, function(f) {
      return this.bindUnaryCallback$2$runGuarded(f, true);
    }, "bindUnaryCallback$1", "call$2$runGuarded" /* tearOffInfo */, null /* tearOffInfo */, "get$bindUnaryCallback", 2, 3, 1548, 816, 412, 1547, "bindUnaryCallback"],
    bindBinaryCallback$2$runGuarded: [function(f, runGuarded) {
      var registered = this.registerBinaryCallback$1(f);
      if (runGuarded === true)
        return new P._BaseZone_bindBinaryCallback_closure(this, registered);
      else
        return new P._BaseZone_bindBinaryCallback_closure0(this, registered);
    }, "call$2$runGuarded" /* tearOffInfo */, "get$bindBinaryCallback", 2, 3, 1549, 816, 412, 1547, "bindBinaryCallback"],
    static: {_BaseZone$: [function() {
        return new P._BaseZone();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new _BaseZone" /* new _BaseZone:0:0 */]}
  },
  "+_BaseZone": [0, 1336],
  _BaseZone_bindCallback_closure: {
    "": "Closure:319;this_0-370,registered_1-319",
    call$0: [function() {
      return this.this_0.runGuarded$1(this.registered_1);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_BaseZone_bindCallback_closure": [1060],
  _BaseZone_bindCallback_closure0: {
    "": "Closure:319;this_2-370,registered_3-319",
    call$0: [function() {
      return this.this_2.run$1(this.registered_3);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_BaseZone_bindCallback_closure": [1060],
  _BaseZone_bindUnaryCallback_closure: {
    "": "Closure:241;this_0-370,registered_1-241",
    call$1: [function(arg) {
      return this.this_0.runUnaryGuarded$2(this.registered_1, arg);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 627, "call"]
  },
  "+_BaseZone_bindUnaryCallback_closure": [1060],
  _BaseZone_bindUnaryCallback_closure0: {
    "": "Closure:241;this_2-370,registered_3-241",
    call$1: [function(arg) {
      return this.this_2.runUnary$2(this.registered_3, arg);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 627, "call"]
  },
  "+_BaseZone_bindUnaryCallback_closure": [1060],
  _BaseZone_bindBinaryCallback_closure: {
    "": "Closure:311;this_0-370,registered_1-311",
    call$2: [function(arg1, arg2) {
      return this.this_0.runBinaryGuarded$3(this.registered_1, arg1, arg2);
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 333, 334, "call"]
  },
  "+_BaseZone_bindBinaryCallback_closure": [1060],
  _BaseZone_bindBinaryCallback_closure0: {
    "": "Closure:311;this_2-370,registered_3-311",
    call$2: [function(arg1, arg2) {
      return this.this_2.runBinary$3(this.registered_3, arg1, arg2);
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 333, 334, "call"]
  },
  "+_BaseZone_bindBinaryCallback_closure": [1060],
  _CustomizedZone: {
    "": "_BaseZone;parent<-1528,_specification<-1527,_async$_map<-1311",
    get$_errorZone: [function() {
      if (this._specification.get$handleUncaughtError() != null)
        return this;
      return this.parent.get$_errorZone();
    }, null /* tearOffInfo */, null, 1, 0, 616, "_errorZone"],
    $index: [function(_, key) {
      var t1, result;
      t1 = this._async$_map;
      result = J.$index$as(t1, key);
      if (result != null || t1.containsKey$1(key))
        return result;
      t1 = this.parent;
      if (t1 != null)
        return J.$index$as(t1, key);
      return;
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, 1550, 312, "[]"],
    handleUncaughtError$2: [function(error, stackTrace) {
      return new P._ZoneDelegate(this).handleUncaughtError$3(this, error, stackTrace);
    }, "call$2" /* tearOffInfo */, "get$handleUncaughtError", 4, 0, 511, 507, 508, "handleUncaughtError"],
    fork$2$specification$zoneValues: [function(specification, zoneValues) {
      return new P._ZoneDelegate(this).fork$3(this, specification, zoneValues);
    }, function(specification) {
      return this.fork$2$specification$zoneValues(specification, null);
    }, "fork$1$specification", function() {
      return this.fork$2$specification$zoneValues(null, null);
    }, null, "call$2$specification$zoneValues" /* tearOffInfo */, "call$1$specification" /* tearOffInfo */, "call$0" /* tearOffInfo */, "get$fork", 0, 5, 1551, 370, 370, 638, 639, "fork"],
    run$1: [function(f) {
      return new P._ZoneDelegate(this).run$2(this, f);
    }, "call$1" /* tearOffInfo */, "get$run", 2, 0, 539, 412, "run"],
    runUnary$2: [function(f, arg) {
      return new P._ZoneDelegate(this).runUnary$3(this, f, arg);
    }, "call$2" /* tearOffInfo */, "get$runUnary", 4, 0, 1544, 412, 627, "runUnary"],
    runBinary$3: [function(f, arg1, arg2) {
      return new P._ZoneDelegate(this).runBinary$4(this, f, arg1, arg2);
    }, "call$3" /* tearOffInfo */, "get$runBinary", 6, 0, 1545, 412, 333, 334, "runBinary"],
    registerCallback$1: [function(f) {
      return new P._ZoneDelegate(this).registerCallback$2(this, f);
    }, "call$1" /* tearOffInfo */, "get$registerCallback", 2, 0, 1552, 412, "registerCallback"],
    registerUnaryCallback$1: [function(f) {
      return new P._ZoneDelegate(this).registerUnaryCallback$2(this, f);
    }, "call$1" /* tearOffInfo */, "get$registerUnaryCallback", 2, 0, 1553, 412, "registerUnaryCallback"],
    registerBinaryCallback$1: [function(f) {
      return new P._ZoneDelegate(this).registerBinaryCallback$2(this, f);
    }, "call$1" /* tearOffInfo */, "get$registerBinaryCallback", 2, 0, 1554, 412, "registerBinaryCallback"],
    scheduleMicrotask$1: [function(f) {
      new P._ZoneDelegate(this).scheduleMicrotask$2(this, f);
    }, "call$1" /* tearOffInfo */, "get$scheduleMicrotask", 2, 0, 544, 412, "scheduleMicrotask"],
    createTimer$2: [function(duration, f) {
      return new P._ZoneDelegate(this).createTimer$3(this, duration, f);
    }, "call$2" /* tearOffInfo */, "get$createTimer", 4, 0, 599, 525, 412, "createTimer"],
    createPeriodicTimer$2: [function(duration, f) {
      return new P._ZoneDelegate(this).createPeriodicTimer$3(this, duration, f);
    }, "call$2" /* tearOffInfo */, "get$createPeriodicTimer", 4, 0, 600, 525, 412, "createPeriodicTimer"],
    print$1: [function(line) {
      new P._ZoneDelegate(this).print$2(this, line);
    }, "call$1" /* tearOffInfo */, "get$print", 2, 0, 281, 636, "print"],
    static: {_CustomizedZone$: [function($parent, _specification, _map) {
        return new P._CustomizedZone($parent, _specification, _map);
      }, null /* tearOffInfo */, null, 6, 0, 619, 620, 621, 622, "new _CustomizedZone" /* new _CustomizedZone:3:0 */]}
  },
  "+_CustomizedZone": [1528],
  _rootHandleUncaughtError_closure: {
    "": "Closure:319;error_0-370,stackTrace_1-1153",
    call$0: [function() {
      P._scheduleAsyncCallback(new P._rootHandleUncaughtError__closure(this.error_0, this.stackTrace_1));
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_rootHandleUncaughtError_closure": [1060],
  _rootHandleUncaughtError__closure: {
    "": "Closure:319;error_2-370,stackTrace_3-1153",
    call$0: [function() {
      var t1, trace, t2;
      t1 = this.error_2;
      P.print("Uncaught Error: " + H.S(t1));
      trace = this.stackTrace_3;
      if (trace == null) {
        t2 = J.getInterceptor(t1);
        t2 = typeof t1 === "object" && t1 !== null && !!t2.$isError;
      } else
        t2 = false;
      if (t2)
        trace = t1.get$stackTrace();
      if (trace != null)
        P.print("Stack Trace: \n" + H.S(trace) + "\n");
      throw H.wrapException(t1);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+_rootHandleUncaughtError__closure": [1060],
  _rootFork_closure: {
    "": "Closure:1291;copiedMap_0-1311",
    call$2: [function(key, value) {
      if (key == null)
        throw H.wrapException(new P.ArgumentError("ZoneValue key must not be null"));
      J.$indexSet$a(this.copiedMap_0, key, value);
    }, "call$2" /* tearOffInfo */, null, 4, 0, 1291, 312, 280, "call"]
  },
  "+_rootFork_closure": [1060],
  _RootZoneSpecification: {
    "": "Object;",
    get$handleUncaughtError: [function() {
      return P._rootHandleUncaughtError$closure();
    }, null /* tearOffInfo */, null, 1, 0, 1555, "handleUncaughtError"],
    handleUncaughtError$2: function(arg0, arg1) {
      return this.get$handleUncaughtError().call$2(arg0, arg1);
    },
    handleUncaughtError$3: function(arg0, arg1, arg2) {
      return this.get$handleUncaughtError().call$3(arg0, arg1, arg2);
    },
    get$run: [function() {
      return P._rootRun$closure();
    }, null /* tearOffInfo */, null, 1, 0, 1556, "run"],
    run$1: function(arg0) {
      return this.get$run().call$1(arg0);
    },
    run$0: function() {
      return this.get$run().call$0();
    },
    run$2: function(arg0, arg1) {
      return this.get$run().call$2(arg0, arg1);
    },
    get$runUnary: [function() {
      return P._rootRunUnary$closure();
    }, null /* tearOffInfo */, null, 1, 0, 1557, "runUnary"],
    runUnary$3: function(arg0, arg1, arg2) {
      return this.get$runUnary().call$3(arg0, arg1, arg2);
    },
    runUnary$2: function(arg0, arg1) {
      return this.get$runUnary().call$2(arg0, arg1);
    },
    get$runBinary: [function() {
      return P._rootRunBinary$closure();
    }, null /* tearOffInfo */, null, 1, 0, 1558, "runBinary"],
    runBinary$4: function(arg0, arg1, arg2, arg3) {
      return this.get$runBinary().call$4(arg0, arg1, arg2, arg3);
    },
    runBinary$3: function(arg0, arg1, arg2) {
      return this.get$runBinary().call$3(arg0, arg1, arg2);
    },
    get$registerCallback: [function() {
      return P._rootRegisterCallback$closure();
    }, null /* tearOffInfo */, null, 1, 0, 1559, "registerCallback"],
    registerCallback$1: function(arg0) {
      return this.get$registerCallback().call$1(arg0);
    },
    registerCallback$2: function(arg0, arg1) {
      return this.get$registerCallback().call$2(arg0, arg1);
    },
    get$registerUnaryCallback: [function() {
      return P._rootRegisterUnaryCallback$closure();
    }, null /* tearOffInfo */, null, 1, 0, 1560, "registerUnaryCallback"],
    registerUnaryCallback$1: function(arg0) {
      return this.get$registerUnaryCallback().call$1(arg0);
    },
    registerUnaryCallback$2: function(arg0, arg1) {
      return this.get$registerUnaryCallback().call$2(arg0, arg1);
    },
    get$registerBinaryCallback: [function() {
      return P._rootRegisterBinaryCallback$closure();
    }, null /* tearOffInfo */, null, 1, 0, 1561, "registerBinaryCallback"],
    registerBinaryCallback$1: function(arg0) {
      return this.get$registerBinaryCallback().call$1(arg0);
    },
    registerBinaryCallback$2: function(arg0, arg1) {
      return this.get$registerBinaryCallback().call$2(arg0, arg1);
    },
    get$scheduleMicrotask: [function() {
      return P._rootScheduleMicrotask$closure();
    }, null /* tearOffInfo */, null, 1, 0, 1562, "scheduleMicrotask"],
    scheduleMicrotask$1: function(arg0) {
      return this.get$scheduleMicrotask().call$1(arg0);
    },
    scheduleMicrotask$2: function(arg0, arg1) {
      return this.get$scheduleMicrotask().call$2(arg0, arg1);
    },
    get$createTimer: [function() {
      return P._rootCreateTimer$closure();
    }, null /* tearOffInfo */, null, 1, 0, 1563, "createTimer"],
    createTimer$2: function(arg0, arg1) {
      return this.get$createTimer().call$2(arg0, arg1);
    },
    createTimer$3: function(arg0, arg1, arg2) {
      return this.get$createTimer().call$3(arg0, arg1, arg2);
    },
    get$createPeriodicTimer: [function() {
      return P._rootCreatePeriodicTimer$closure();
    }, null /* tearOffInfo */, null, 1, 0, 1564, "createPeriodicTimer"],
    createPeriodicTimer$3: function(arg0, arg1, arg2) {
      return this.get$createPeriodicTimer().call$3(arg0, arg1, arg2);
    },
    createPeriodicTimer$2: function(arg0, arg1) {
      return this.get$createPeriodicTimer().call$2(arg0, arg1);
    },
    get$print: [function() {
      return P._rootPrint$closure();
    }, null /* tearOffInfo */, null, 1, 0, 1565, "print"],
    print$2: function(arg0, arg1) {
      return this.get$print().call$2(arg0, arg1);
    },
    print$1: function(arg0) {
      return this.get$print().call$1(arg0);
    },
    get$fork: [function() {
      return P._rootFork$closure();
    }, null /* tearOffInfo */, null, 1, 0, 1566, "fork"],
    fork$3: function(arg0, arg1, arg2) {
      return this.get$fork().call$3(arg0, arg1, arg2);
    },
    fork$2$specification$zoneValues: function(arg0, arg1) {
      return this.get$fork().call$2$specification$zoneValues(arg0, arg1);
    },
    fork$1$specification: function(arg0) {
      return this.get$fork().call$1$specification(arg0);
    },
    static: {_RootZoneSpecification$: [function() {
        return new P._RootZoneSpecification();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new _RootZoneSpecification" /* new _RootZoneSpecification:0:0 */]}
  },
  "+_RootZoneSpecification": [0, 1527],
  _RootZone: {
    "": "_BaseZone;",
    get$parent: [function() {
      return;
    }, null /* tearOffInfo */, null, 1, 0, 616, "parent"],
    get$_specification: [function() {
      return C.C__RootZoneSpecification;
    }, null /* tearOffInfo */, null, 1, 0, 996, "_specification"],
    get$_errorZone: [function() {
      return this;
    }, null /* tearOffInfo */, null, 1, 0, 616, "_errorZone"],
    inSameErrorZone$1: [function(otherZone) {
      return otherZone.get$_errorZone() === this;
    }, "call$1" /* tearOffInfo */, "get$inSameErrorZone", 2, 0, 1542, 1543, "inSameErrorZone"],
    $index: [function(_, key) {
      return;
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, 1550, 312, "[]"],
    handleUncaughtError$2: [function(error, stackTrace) {
      return P._rootHandleUncaughtError(this, null, this, error, stackTrace);
    }, "call$2" /* tearOffInfo */, "get$handleUncaughtError", 4, 0, 511, 507, 508, "handleUncaughtError"],
    fork$2$specification$zoneValues: [function(specification, zoneValues) {
      return P._rootFork(this, null, this, specification, zoneValues);
    }, function(specification) {
      return this.fork$2$specification$zoneValues(specification, null);
    }, "fork$1$specification", function() {
      return this.fork$2$specification$zoneValues(null, null);
    }, null, "call$2$specification$zoneValues" /* tearOffInfo */, "call$1$specification" /* tearOffInfo */, "call$0" /* tearOffInfo */, "get$fork", 0, 5, 1551, 370, 370, 638, 639, "fork"],
    run$1: [function(f) {
      return P._rootRun(this, null, this, f);
    }, "call$1" /* tearOffInfo */, "get$run", 2, 0, 539, 412, "run"],
    runUnary$2: [function(f, arg) {
      return P._rootRunUnary(this, null, this, f, arg);
    }, "call$2" /* tearOffInfo */, "get$runUnary", 4, 0, 1544, 412, 627, "runUnary"],
    runBinary$3: [function(f, arg1, arg2) {
      return P._rootRunBinary(this, null, this, f, arg1, arg2);
    }, "call$3" /* tearOffInfo */, "get$runBinary", 6, 0, 1545, 412, 333, 334, "runBinary"],
    registerCallback$1: [function(f) {
      return f;
    }, "call$1" /* tearOffInfo */, "get$registerCallback", 2, 0, 1552, 412, "registerCallback"],
    registerUnaryCallback$1: [function(f) {
      return f;
    }, "call$1" /* tearOffInfo */, "get$registerUnaryCallback", 2, 0, 1553, 412, "registerUnaryCallback"],
    registerBinaryCallback$1: [function(f) {
      return f;
    }, "call$1" /* tearOffInfo */, "get$registerBinaryCallback", 2, 0, 1554, 412, "registerBinaryCallback"],
    scheduleMicrotask$1: [function(f) {
      P._rootScheduleMicrotask(this, null, this, f);
    }, "call$1" /* tearOffInfo */, "get$scheduleMicrotask", 2, 0, 544, 412, "scheduleMicrotask"],
    createTimer$2: [function(duration, f) {
      return P._rootCreateTimer(this, null, this, duration, f);
    }, "call$2" /* tearOffInfo */, "get$createTimer", 4, 0, 599, 525, 412, "createTimer"],
    createPeriodicTimer$2: [function(duration, f) {
      return P._rootCreatePeriodicTimer(this, null, this, duration, f);
    }, "call$2" /* tearOffInfo */, "get$createPeriodicTimer", 4, 0, 600, 525, 412, "createPeriodicTimer"],
    print$1: [function(line) {
      H.printString(H.S(line));
      return;
    }, "call$1" /* tearOffInfo */, "get$print", 2, 0, 281, 636, "print"],
    static: {_RootZone$: [function() {
        return new P._RootZone();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new _RootZone" /* new _RootZone:0:0 */]}
  },
  "+_RootZone": [1528],
  runZoned_closure: {
    "": "Closure:1567;onError_0-1098",
    call$5: [function($self, $parent, zone, error, stackTrace) {
      var e, s, t1, t2, exception;
      try {
        t1 = this.onError_0;
        t2 = H.getDynamicRuntimeType();
        t2 = H.buildFunctionType(t2, [t2, t2])._isTest$1(t1);
        if (t2) {
          t1 = $self.get$parent().runBinary$3(t1, error, stackTrace);
          return t1;
        }
        t1 = $self.get$parent().runUnary$2(t1, error);
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        t1 = e;
        t2 = error;
        if (t1 == null ? t2 == null : t1 === t2)
          return $parent.handleUncaughtError$3(zone, error, stackTrace);
        else
          return $parent.handleUncaughtError$3(zone, e, s);
      }

    }, "call$5" /* tearOffInfo */, null, 10, 0, 1567, 624, 620, 510, 507, 508, "call"]
  },
  "+runZoned_closure": [1060],
  "": "_ROOT_ZONE<-370,_asyncCallbacks@-2043,_callbacksAreEnqueued@-1043,_loadedLibraries<-2044"
}],
["dart.collection", "dart:collection", , P, {
  "": "",
  _defaultEquals: [function(a, b) {
    return J.$eq(a, b);
  }, "call$2" /* tearOffInfo */, "_defaultEquals$closure", 4, 0, 382, 452, 649, "_defaultEquals"],
  _defaultHashCode: [function(a) {
    return J.get$hashCode$(a);
  }, "call$1" /* tearOffInfo */, "_defaultHashCode$closure", 2, 0, 288, 452, "_defaultHashCode"],
  _iterableToString: [function(iterable) {
    var parts, t1;
    if (J.contains$1$as($.get$_toStringVisiting(), iterable) === true)
      return "(...)";
    J.add$1$a($.get$_toStringVisiting(), iterable);
    parts = [];
    try {
      P._iterablePartsToStrings(iterable, parts);
    } finally {
      J.remove$1$a($.get$_toStringVisiting(), iterable);
    }
    t1 = P.StringBuffer$("(");
    t1.writeAll$2(parts, ", ");
    t1.write$1(")");
    return t1._contents;
  }, "call$1" /* tearOffInfo */, "_iterableToString$closure", 2, 0, 654, 417, "_iterableToString"],
  _iterablePartsToStrings: [function(iterable, parts) {
    var it, t1, $length, count, next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, t2, elision;
    it = J.get$iterator$a(iterable);
    t1 = J.getInterceptor$as(parts);
    $length = 0;
    count = 0;
    while (true) {
      if (!($length < 80 || count < 3))
        break;
      if (it.moveNext$0() !== true)
        return;
      next = H.S(it.get$current());
      t1.add$1(parts, next);
      $length += next.length + 2;
      ++count;
    }
    if (it.moveNext$0() !== true) {
      if (count <= 5)
        return;
      ultimateString = t1.removeLast$0(parts);
      penultimateString = t1.removeLast$0(parts);
    } else {
      penultimate = it.get$current();
      ++count;
      if (it.moveNext$0() !== true) {
        if (count <= 4) {
          t1.add$1(parts, H.S(penultimate));
          return;
        }
        ultimateString = H.S(penultimate);
        penultimateString = t1.removeLast$0(parts);
        $length += ultimateString.length + 2;
      } else {
        ultimate = it.get$current();
        ++count;
        for (; it.moveNext$0() === true; penultimate = ultimate, ultimate = ultimate0) {
          ultimate0 = it.get$current();
          ++count;
          if (count > 100) {
            while (true) {
              if (!($length > 75 && count > 3))
                break;
              t2 = J.$add$ns(J.get$length$as(t1.removeLast$0(parts)), 2);
              if (typeof t2 !== "number")
                return H.iae(t2);
              $length -= t2;
              --count;
            }
            t1.add$1(parts, "...");
            return;
          }
        }
        penultimateString = H.S(penultimate);
        ultimateString = H.S(ultimate);
        $length += ultimateString.length + penultimateString.length + 4;
      }
    }
    t2 = J.$add$ns(t1.get$length(parts), 2);
    if (typeof t2 !== "number")
      return H.iae(t2);
    if (count > t2) {
      $length += 5;
      elision = "...";
    } else
      elision = null;
    while (true) {
      if (!($length > 80 && J.$gt$n(t1.get$length(parts), 3)))
        break;
      t2 = J.$add$ns(J.get$length$as(t1.removeLast$0(parts)), 2);
      if (typeof t2 !== "number")
        return H.iae(t2);
      $length -= t2;
      if (elision == null) {
        $length += 5;
        elision = "...";
      }
    }
    if (elision != null)
      t1.add$1(parts, elision);
    t1.add$1(parts, penultimateString);
    t1.add$1(parts, ultimateString);
  }, "call$2" /* tearOffInfo */, "_iterablePartsToStrings$closure", 4, 0, 655, 417, 656, "_iterablePartsToStrings"],
  _HashMap: {
    "": "Object;_collection$_length@-1075,_strings@-370,_nums@-370,_rest@-370,_keys@-1129",
    get$length: [function(_) {
      return this._collection$_length;
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$isEmpty: [function(_) {
      return J.$eq(this._collection$_length, 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$isNotEmpty: [function(_) {
      return !J.$eq(this._collection$_length, 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty"],
    get$keys: [function() {
      return H.setRuntimeTypeInfo(new P.HashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "Iterable_4", ret: [P.Iterable, K]};
      }, this.$receiver, "_HashMap");
    }, "keys"],
    get$values: [function() {
      return H.MappedIterable_MappedIterable(H.setRuntimeTypeInfo(new P.HashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]), new P._HashMap_values_closure(this), H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1));
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "Iterable_5", ret: [P.Iterable, V]};
      }, this.$receiver, "_HashMap");
    }, "values"],
    containsKey$1: [function(key) {
      var strings, nums, rest;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        return strings == null ? false : strings[key] != null;
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        return nums == null ? false : nums[key] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(key)], key) >= 0;
      }
    }, "call$1" /* tearOffInfo */, "get$containsKey", 2, 0, 1047, 312, "containsKey"],
    containsValue$1: [function(value) {
      return J.any$1$a(this._computeKeys$0(), new P._HashMap_containsValue_closure(this, value));
    }, "call$1" /* tearOffInfo */, "get$containsValue", 2, 0, 1047, 280, "containsValue"],
    addAll$1: [function(_, other) {
      J.forEach$1$a(other, new P._HashMap_addAll_closure(this));
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__Map1", void: true, args: [[P.Map, K, V]]};
      }, this.$receiver, "_HashMap");
    }, 403, "addAll"],
    $index: [function(_, key) {
      var strings, t1, entry, nums, rest, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          t1 = null;
        else {
          entry = strings[key];
          t1 = entry === strings ? null : entry;
        }
        return t1;
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null)
          t1 = null;
        else {
          entry = nums[key];
          t1 = entry === nums ? null : entry;
        }
        return t1;
      } else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        return index < 0 ? null : bucket[index + 1];
      }
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__Object", ret: V, args: [P.Object]};
      }, this.$receiver, "_HashMap");
    }, 312, "[]"],
    $indexSet: [function(_, key, value) {
      var strings, table, nums, rest, hash, bucket, t1, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null) {
          table = Object.create(null);
          if (table == null)
            table["<non-identifier-key>"] = table;
          else
            table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._strings = table;
          strings = table;
        }
        if (strings[key] == null) {
          this._collection$_length = J.$add$ns(this._collection$_length, 1);
          this._keys = null;
        }
        if (value == null)
          strings[key] = strings;
        else
          strings[key] = value;
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null) {
          table = Object.create(null);
          if (table == null)
            table["<non-identifier-key>"] = table;
          else
            table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._nums = table;
          nums = table;
        }
        if (nums[key] == null) {
          this._collection$_length = J.$add$ns(this._collection$_length, 1);
          this._keys = null;
        }
        if (value == null)
          nums[key] = nums;
        else
          nums[key] = value;
      } else {
        rest = this._rest;
        if (rest == null) {
          table = Object.create(null);
          if (table == null)
            table["<non-identifier-key>"] = table;
          else
            table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._rest = table;
          rest = table;
        }
        hash = this._computeHashCode$1(key);
        bucket = rest[hash];
        if (bucket == null) {
          t1 = [key, value];
          if (t1 == null)
            rest[hash] = rest;
          else
            rest[hash] = t1;
          this._collection$_length = J.$add$ns(this._collection$_length, 1);
          this._keys = null;
        } else {
          index = this._findBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index + 1] = value;
          else {
            bucket.push(key, value);
            this._collection$_length = J.$add$ns(this._collection$_length, 1);
            this._keys = null;
          }
        }
      }
    }, "call$2" /* tearOffInfo */, "get$[]=", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__K_V0", void: true, args: [K, V]};
      }, this.$receiver, "_HashMap");
    }, 312, 280, "[]="],
    putIfAbsent$2: [function(key, ifAbsent) {
      var value;
      if (this.containsKey$1(key))
        return this.$index(0, key);
      value = ifAbsent.call$0();
      this.$indexSet(0, key, value);
      return value;
    }, "call$2" /* tearOffInfo */, "get$putIfAbsent", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__K_V_0", ret: V, args: [K, {func: "V_0", ret: V}]};
      }, this.$receiver, "_HashMap");
    }, 312, 663, "putIfAbsent"],
    remove$1: [function(_, key) {
      var rest, bucket, index;
      if (typeof key === "string" && key !== "__proto__")
        return this._removeHashTableEntry$2(this._strings, key);
      else if (typeof key === "number" && (key & 0x3ffffff) === key)
        return this._removeHashTableEntry$2(this._nums, key);
      else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        this._collection$_length = J.$sub$n(this._collection$_length, 1);
        this._keys = null;
        return bucket.splice(index, 2)[1];
      }
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__Object", ret: V, args: [P.Object]};
      }, this.$receiver, "_HashMap");
    }, 312, "remove"],
    clear$0: [function(_) {
      if (J.$gt$n(this._collection$_length, 0)) {
        this._keys = null;
        this._rest = null;
        this._nums = null;
        this._strings = null;
        this._collection$_length = 0;
      }
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    forEach$1: [function(_, action) {
      var keys, $length, i, key;
      keys = this._computeKeys$0();
      $length = J.get$length$as(keys);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        key = keys[i];
        action.call$2(key, this.$index(0, key));
        if (keys !== this._keys)
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__void__K_V0", void: true, args: [{func: "void__K_V0", void: true, args: [K, V]}]};
      }, this.$receiver, "_HashMap");
    }, 1174, "forEach"],
    _computeKeys$0: [function() {
      var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
      t1 = this._keys;
      if (t1 != null)
        return t1;
      t1 = this._collection$_length;
      if (typeof t1 !== "number")
        return H.iae(t1);
      result = Array(t1);
      result.fixed$length = init;
      strings = this._strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = this._nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = this._rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      this._keys = result;
      return result;
    }, "call$0" /* tearOffInfo */, "get$_computeKeys", 0, 0, 1140, "_computeKeys"],
    _removeHashTableEntry$2: [function(table, key) {
      var value;
      if (table != null && table[key] != null) {
        value = P._HashMap__getTableEntry(table, key);
        delete table[key];
        this._collection$_length = J.$sub$n(this._collection$_length, 1);
        this._keys = null;
        return value;
      } else
        return;
    }, "call$2" /* tearOffInfo */, "get$_removeHashTableEntry", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__dynamic_Object", ret: V, args: [null, P.Object]};
      }, this.$receiver, "_HashMap");
    }, 643, 312, "_removeHashTableEntry"],
    _computeHashCode$1: [function(key) {
      return J.get$hashCode$(key) & 0x3ffffff;
    }, "call$1" /* tearOffInfo */, "get$_computeHashCode", 2, 0, 288, 312, "_computeHashCode"],
    _findBucketIndex$2: [function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (J.$eq(bucket[i], key))
          return i;
      return -1;
    }, "call$2" /* tearOffInfo */, "get$_findBucketIndex", 4, 0, 893, 1568, 312, "_findBucketIndex"],
    $isMap: true,
    "<>": [38, 39],
    static: {_HashMap__getTableEntry: [function(table, key) {
        var entry = table[key];
        return entry === table ? null : entry;
      }, "call$2" /* tearOffInfo */, "_HashMap__getTableEntry$closure", 4, 0, 311, 643, 312, "_getTableEntry"]}
  },
  "+_HashMap": [0, 1569],
  _HashMap_values_closure: {
    "": "Closure:241;this_0-370",
    call$1: [function(each) {
      return J.$index$as(this.this_0, each);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1570, "call"]
  },
  "+_HashMap_values_closure": [1060],
  _HashMap_containsValue_closure: {
    "": "Closure:241;this_0-370,value_1-0",
    call$1: [function(each) {
      return J.$eq(J.$index$as(this.this_0, each), this.value_1);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1570, "call"]
  },
  "+_HashMap_containsValue_closure": [1060],
  _HashMap_addAll_closure: {
    "": "Closure;this_0-370",
    call$2: [function(key, value) {
      J.$indexSet$a(this.this_0, key, value);
    }, "call$2" /* tearOffInfo */, null, 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "dynamic__K_V1", args: [K, V]};
      }, this.$receiver, "_HashMap");
    }, 312, 280, "call"],
    $signature: function() {
      return H.computeSignature(function(K, V) {
        return {func: "dynamic__K_V1", args: [K, V]};
      }, this.this_0, "_HashMap");
    }
  },
  "+_HashMap_addAll_closure": [1060],
  _IdentityHashMap: {
    "": "_HashMap;_collection$_length-1075,_strings-370,_nums-370,_rest-370,_keys-1129",
    _computeHashCode$1: [function(key) {
      return H.objectHashCode(key) & 0x3ffffff;
    }, "call$1" /* tearOffInfo */, "get$_computeHashCode", 2, 0, 288, 312, "_computeHashCode"],
    _findBucketIndex$2: [function(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2) {
        t1 = bucket[i];
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }, "call$2" /* tearOffInfo */, "get$_findBucketIndex", 4, 0, 893, 1568, 312, "_findBucketIndex"],
    $as_HashMap: null,
    $asMap: null,
    "<>": [40, 41]
  },
  "+_IdentityHashMap": [1571],
  _CustomHashMap: {
    "": "_HashMap;_equals<-1572,_hashCode<-1573,_validKey<-273,_collection$_length-1075,_strings-370,_nums-370,_rest-370,_keys-1129",
    _equals$2: function(arg0, arg1) {
      return this._equals.call$2(arg0, arg1);
    },
    _hashCode$1: function(arg0) {
      return this._hashCode.call$1(arg0);
    },
    _validKey$1: function(arg0) {
      return this._validKey.call$1(arg0);
    },
    $index: [function(_, key) {
      if (this._validKey$1(key) !== true)
        return;
      return P._HashMap.prototype.$index.call(this, this, key);
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__Object0", ret: V, args: [P.Object]};
      }, this.$receiver, "_CustomHashMap");
    }, 312, "[]"],
    containsKey$1: [function(key) {
      if (this._validKey$1(key) !== true)
        return false;
      return P._HashMap.prototype.containsKey$1.call(this, key);
    }, "call$1" /* tearOffInfo */, "get$containsKey", 2, 0, 1047, 312, "containsKey"],
    remove$1: [function(_, key) {
      if (this._validKey$1(key) !== true)
        return;
      return P._HashMap.prototype.remove$1.call(this, this, key);
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__Object0", ret: V, args: [P.Object]};
      }, this.$receiver, "_CustomHashMap");
    }, 312, "remove"],
    _computeHashCode$1: [function(key) {
      return this._hashCode$1(key) & 0x3ffffff;
    }, "call$1" /* tearOffInfo */, "get$_computeHashCode", 2, 0, 288, 312, "_computeHashCode"],
    _findBucketIndex$2: [function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (this._equals$2(bucket[i], key) === true)
          return i;
      return -1;
    }, "call$2" /* tearOffInfo */, "get$_findBucketIndex", 4, 0, 893, 1568, 312, "_findBucketIndex"],
    toString$0: [function(_) {
      return P.Maps_mapToString(this);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $as_HashMap: null,
    $asMap: null,
    "<>": [42, 43],
    static: {_CustomHashMap$: [function(_equals, _hashCode, validKey, $K, $V) {
        var t1 = validKey != null ? validKey : new P._CustomHashMap_closure($K);
        return H.setRuntimeTypeInfo(new P._CustomHashMap(_equals, _hashCode, t1, 0, null, null, null, null), [$K, $V]);
      }, null /* tearOffInfo */, null, 6, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "dynamic___Equality__Hasher_bool__dynamic", args: [{func: "bool__K_K", ret: J.JSBool, args: [K, K]}, {func: "int__K", ret: J.JSInt, args: [K]}, {func: "bool__dynamic", ret: J.JSBool, args: [null]}]};
        }, this.$receiver, "_CustomHashMap");
      }, 644, 645, 646, "new _CustomHashMap" /* new _CustomHashMap:3:0 */]}
  },
  "+_CustomHashMap": [1574],
  _CustomHashMap_closure: {
    "": "Closure:241;K_0-1575",
    call$1: [function(v) {
      var t1 = H.checkSubtypeOfRuntimeType(v, this.K_0);
      return t1;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 700, "call"]
  },
  "+_CustomHashMap_closure": [1060],
  HashMapKeyIterable: {
    "": "IterableBase;_collection$_map<-370",
    get$length: [function(_) {
      return this._collection$_map.get$_collection$_length();
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$isEmpty: [function(_) {
      return J.$eq(this._collection$_map.get$_collection$_length(), 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$iterator: [function(_) {
      var t1 = this._collection$_map;
      t1 = new P.HashMapKeyIterator(t1, t1._computeKeys$0(), 0, null);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterator_9", ret: [P.Iterator, E]};
      }, this.$receiver, "HashMapKeyIterable");
    }, "iterator"],
    contains$1: [function(_, element) {
      return this._collection$_map.containsKey$1(element);
    }, "call$1" /* tearOffInfo */, "get$contains", 2, 0, 1047, 453, "contains"],
    forEach$1: [function(_, f) {
      var t1, keys, $length, i;
      t1 = this._collection$_map;
      keys = t1._computeKeys$0();
      for ($length = keys.length, i = 0; i < $length; ++i) {
        f.call$1(keys[i]);
        if (keys !== t1.get$_keys())
          throw H.wrapException(P.ConcurrentModificationError$(t1));
      }
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__void__E1", void: true, args: [{func: "void__E2", void: true, args: [E]}]};
      }, this.$receiver, "HashMapKeyIterable");
    }, 412, "forEach"],
    $asIterableBase: null,
    $asIterable: null,
    $isEfficientLength: true,
    "<>": [52]
  },
  "+HashMapKeyIterable": [1576, 1176],
  HashMapKeyIterator: {
    "": "Object;_collection$_map<-370,_keys<-1129,_offset@-1075,_collection$_current@-1577",
    get$current: [function() {
      return this._collection$_current;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_11", ret: E};
      }, this.$receiver, "HashMapKeyIterator");
    }, "current"],
    moveNext$0: [function() {
      var keys, offset, t1;
      keys = this._keys;
      offset = this._offset;
      t1 = this._collection$_map;
      if (keys !== t1.get$_keys())
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = J.getInterceptor$n(offset);
        if (t1.$ge(offset, keys.length)) {
          this._collection$_current = null;
          return false;
        } else {
          this._collection$_current = keys[offset];
          this._offset = t1.$add(offset, 1);
          return true;
        }
      }
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    "<>": [53]
  },
  "+HashMapKeyIterator": [0, 1578],
  _LinkedHashMap: {
    "": "Object;_collection$_length@-1075,_strings@-370,_nums@-370,_rest@-370,_first@-1579,_last@-1579,_modifications@-1075",
    get$length: [function(_) {
      return this._collection$_length;
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$isEmpty: [function(_) {
      return J.$eq(this._collection$_length, 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$isNotEmpty: [function(_) {
      return !J.$eq(this._collection$_length, 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty"],
    get$keys: [function() {
      return H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "Iterable_6", ret: [P.Iterable, K]};
      }, this.$receiver, "_LinkedHashMap");
    }, "keys"],
    get$values: [function() {
      return H.MappedIterable_MappedIterable(H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]), new P._LinkedHashMap_values_closure(this), H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1));
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "Iterable_7", ret: [P.Iterable, V]};
      }, this.$receiver, "_LinkedHashMap");
    }, "values"],
    containsKey$1: [function(key) {
      var strings, nums, rest;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          return false;
        return strings[key] != null;
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return false;
        return nums[key] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(key)], key) >= 0;
      }
    }, "call$1" /* tearOffInfo */, "get$containsKey", 2, 0, 1047, 312, "containsKey"],
    containsValue$1: [function(value) {
      return H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]).any$1(0, new P._LinkedHashMap_containsValue_closure(this, value));
    }, "call$1" /* tearOffInfo */, "get$containsValue", 2, 0, 1047, 280, "containsValue"],
    addAll$1: [function(_, other) {
      J.forEach$1$a(other, new P._LinkedHashMap_addAll_closure(this));
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__Map2", void: true, args: [[P.Map, K, V]]};
      }, this.$receiver, "_LinkedHashMap");
    }, 403, "addAll"],
    $index: [function(_, key) {
      var strings, cell, nums, rest, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          return;
        cell = strings[key];
        return cell == null ? null : cell.get$_value();
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return;
        cell = nums[key];
        return cell == null ? null : cell.get$_value();
      } else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        return bucket[index].get$_value();
      }
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__Object1", ret: V, args: [P.Object]};
      }, this.$receiver, "_LinkedHashMap");
    }, 312, "[]"],
    $indexSet: [function(_, key, value) {
      var strings, table, cell, nums, rest, hash, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null) {
          table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._strings = table;
          strings = table;
        }
        cell = strings[key];
        if (cell == null)
          strings[key] = this._newLinkedCell$2(key, value);
        else
          cell.set$_value(value);
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null) {
          table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._nums = table;
          nums = table;
        }
        cell = nums[key];
        if (cell == null)
          nums[key] = this._newLinkedCell$2(key, value);
        else
          cell.set$_value(value);
      } else {
        rest = this._rest;
        if (rest == null) {
          table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._rest = table;
          rest = table;
        }
        hash = this._computeHashCode$1(key);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [this._newLinkedCell$2(key, value)];
        else {
          index = this._findBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index].set$_value(value);
          else
            bucket.push(this._newLinkedCell$2(key, value));
        }
      }
    }, "call$2" /* tearOffInfo */, "get$[]=", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__K_V1", void: true, args: [K, V]};
      }, this.$receiver, "_LinkedHashMap");
    }, 312, 280, "[]="],
    putIfAbsent$2: [function(key, ifAbsent) {
      var value;
      if (this.containsKey$1(key))
        return this.$index(0, key);
      value = ifAbsent.call$0();
      this.$indexSet(0, key, value);
      return value;
    }, "call$2" /* tearOffInfo */, "get$putIfAbsent", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__K_V_1", ret: V, args: [K, {func: "V_1", ret: V}]};
      }, this.$receiver, "_LinkedHashMap");
    }, 312, 663, "putIfAbsent"],
    remove$1: [function(_, key) {
      var rest, bucket, index, cell;
      if (typeof key === "string" && key !== "__proto__")
        return this._removeHashTableEntry$2(this._strings, key);
      else if (typeof key === "number" && (key & 0x3ffffff) === key)
        return this._removeHashTableEntry$2(this._nums, key);
      else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        cell = bucket.splice(index, 1)[0];
        this._unlinkCell$1(cell);
        return cell.get$_value();
      }
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__Object1", ret: V, args: [P.Object]};
      }, this.$receiver, "_LinkedHashMap");
    }, 312, "remove"],
    clear$0: [function(_) {
      if (J.$gt$n(this._collection$_length, 0)) {
        this._last = null;
        this._first = null;
        this._rest = null;
        this._nums = null;
        this._strings = null;
        this._collection$_length = 0;
        this._modifications = J.$and$n(J.$add$ns(this._modifications, 1), 67108863);
      }
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    forEach$1: [function(_, action) {
      var cell, modifications, t1;
      cell = this._first;
      modifications = this._modifications;
      for (t1 = J.getInterceptor(modifications); cell != null;) {
        action.call$2(cell.get$_key(), cell.get$_value());
        if (!t1.$eq(modifications, this._modifications))
          throw H.wrapException(P.ConcurrentModificationError$(this));
        cell = cell.get$_next();
      }
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__void__K_V1", void: true, args: [{func: "void__K_V1", void: true, args: [K, V]}]};
      }, this.$receiver, "_LinkedHashMap");
    }, 1174, "forEach"],
    _removeHashTableEntry$2: [function(table, key) {
      var cell;
      if (table == null)
        return;
      cell = table[key];
      if (cell == null)
        return;
      this._unlinkCell$1(cell);
      delete table[key];
      return cell.get$_value();
    }, "call$2" /* tearOffInfo */, "get$_removeHashTableEntry", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__dynamic_Object0", ret: V, args: [null, P.Object]};
      }, this.$receiver, "_LinkedHashMap");
    }, 643, 312, "_removeHashTableEntry"],
    _newLinkedCell$2: [function(key, value) {
      var cell, last;
      cell = new P.LinkedHashMapCell(key, value, null, null);
      if (this._first == null) {
        this._last = cell;
        this._first = cell;
      } else {
        last = this._last;
        cell._previous = last;
        last.set$_next(cell);
        this._last = cell;
      }
      this._collection$_length = J.$add$ns(this._collection$_length, 1);
      this._modifications = J.$and$n(J.$add$ns(this._modifications, 1), 67108863);
      return cell;
    }, "call$2" /* tearOffInfo */, "get$_newLinkedCell", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "LinkedHashMapCell__K_V", ret: P.LinkedHashMapCell, args: [K, V]};
      }, this.$receiver, "_LinkedHashMap");
    }, 312, 280, "_newLinkedCell"],
    _unlinkCell$1: [function(cell) {
      var previous, next;
      previous = cell.get$_previous();
      next = cell.get$_next();
      if (previous == null)
        this._first = next;
      else
        previous.set$_next(next);
      if (next == null)
        this._last = previous;
      else
        next.set$_previous(previous);
      this._collection$_length = J.$sub$n(this._collection$_length, 1);
      this._modifications = J.$and$n(J.$add$ns(this._modifications, 1), 67108863);
    }, "call$1" /* tearOffInfo */, "get$_unlinkCell", 2, 0, 1580, 1581, "_unlinkCell"],
    _computeHashCode$1: [function(key) {
      return J.get$hashCode$(key) & 0x3ffffff;
    }, "call$1" /* tearOffInfo */, "get$_computeHashCode", 2, 0, 288, 312, "_computeHashCode"],
    _findBucketIndex$2: [function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq(bucket[i].get$_key(), key))
          return i;
      return -1;
    }, "call$2" /* tearOffInfo */, "get$_findBucketIndex", 4, 0, 893, 1568, 312, "_findBucketIndex"],
    toString$0: [function(_) {
      return P.Maps_mapToString(this);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isLinkedHashMap: true,
    $isMap: true,
    "<>": [32, 33]
  },
  "+_LinkedHashMap": [0, 1582],
  _LinkedHashMap_values_closure: {
    "": "Closure:241;this_0-370",
    call$1: [function(each) {
      return J.$index$as(this.this_0, each);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1570, "call"]
  },
  "+_LinkedHashMap_values_closure": [1060],
  _LinkedHashMap_containsValue_closure: {
    "": "Closure:241;this_0-370,value_1-0",
    call$1: [function(each) {
      return J.$eq(J.$index$as(this.this_0, each), this.value_1);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1570, "call"]
  },
  "+_LinkedHashMap_containsValue_closure": [1060],
  _LinkedHashMap_addAll_closure: {
    "": "Closure;this_0-370",
    call$2: [function(key, value) {
      J.$indexSet$a(this.this_0, key, value);
    }, "call$2" /* tearOffInfo */, null, 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "dynamic__K_V2", args: [K, V]};
      }, this.$receiver, "_LinkedHashMap");
    }, 312, 280, "call"],
    $signature: function() {
      return H.computeSignature(function(K, V) {
        return {func: "dynamic__K_V2", args: [K, V]};
      }, this.this_0, "_LinkedHashMap");
    }
  },
  "+_LinkedHashMap_addAll_closure": [1060],
  _LinkedIdentityHashMap: {
    "": "_LinkedHashMap;_collection$_length-1075,_strings-370,_nums-370,_rest-370,_first-1579,_last-1579,_modifications-1075",
    _computeHashCode$1: [function(key) {
      return H.objectHashCode(key) & 0x3ffffff;
    }, "call$1" /* tearOffInfo */, "get$_computeHashCode", 2, 0, 288, 312, "_computeHashCode"],
    _findBucketIndex$2: [function(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i) {
        t1 = bucket[i].get$_key();
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }, "call$2" /* tearOffInfo */, "get$_findBucketIndex", 4, 0, 893, 1568, 312, "_findBucketIndex"],
    $as_LinkedHashMap: null,
    $asLinkedHashMap: null,
    $asMap: null,
    "<>": [34, 35]
  },
  "+_LinkedIdentityHashMap": [1583],
  _LinkedCustomHashMap: {
    "": "_LinkedHashMap;_equals<-1584,_hashCode<-1585,_validKey<-273,_collection$_length-1075,_strings-370,_nums-370,_rest-370,_first-1579,_last-1579,_modifications-1075",
    _equals$2: function(arg0, arg1) {
      return this._equals.call$2(arg0, arg1);
    },
    _hashCode$1: function(arg0) {
      return this._hashCode.call$1(arg0);
    },
    _validKey$1: function(arg0) {
      return this._validKey.call$1(arg0);
    },
    $index: [function(_, key) {
      if (this._validKey$1(key) !== true)
        return;
      return P._LinkedHashMap.prototype.$index.call(this, this, key);
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__Object2", ret: V, args: [P.Object]};
      }, this.$receiver, "_LinkedCustomHashMap");
    }, 312, "[]"],
    containsKey$1: [function(key) {
      if (this._validKey$1(key) !== true)
        return false;
      return P._LinkedHashMap.prototype.containsKey$1.call(this, key);
    }, "call$1" /* tearOffInfo */, "get$containsKey", 2, 0, 1047, 312, "containsKey"],
    remove$1: [function(_, key) {
      if (this._validKey$1(key) !== true)
        return;
      return P._LinkedHashMap.prototype.remove$1.call(this, this, key);
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__Object2", ret: V, args: [P.Object]};
      }, this.$receiver, "_LinkedCustomHashMap");
    }, 312, "remove"],
    _computeHashCode$1: [function(key) {
      return this._hashCode$1(key) & 0x3ffffff;
    }, "call$1" /* tearOffInfo */, "get$_computeHashCode", 2, 0, 288, 312, "_computeHashCode"],
    _findBucketIndex$2: [function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (this._equals$2(bucket[i].get$_key(), key) === true)
          return i;
      return -1;
    }, "call$2" /* tearOffInfo */, "get$_findBucketIndex", 4, 0, 893, 1568, 312, "_findBucketIndex"],
    $as_LinkedHashMap: null,
    $asLinkedHashMap: null,
    $asMap: null,
    "<>": [36, 37],
    static: {_LinkedCustomHashMap$: [function(_equals, _hashCode, validKey, $K, $V) {
        var t1 = validKey != null ? validKey : new P._LinkedCustomHashMap_closure($K);
        return H.setRuntimeTypeInfo(new P._LinkedCustomHashMap(_equals, _hashCode, t1, 0, null, null, null, null, null, 0), [$K, $V]);
      }, null /* tearOffInfo */, null, 6, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "dynamic___Equality__Hasher_bool__dynamic0", args: [{func: "bool__K_K0", ret: J.JSBool, args: [K, K]}, {func: "int__K0", ret: J.JSInt, args: [K]}, {func: "bool__dynamic", ret: J.JSBool, args: [null]}]};
        }, this.$receiver, "_LinkedCustomHashMap");
      }, 644, 645, 646, "new _LinkedCustomHashMap" /* new _LinkedCustomHashMap:3:0 */]}
  },
  "+_LinkedCustomHashMap": [1586],
  _LinkedCustomHashMap_closure: {
    "": "Closure:241;K_0-1587",
    call$1: [function(v) {
      var t1 = H.checkSubtypeOfRuntimeType(v, this.K_0);
      return t1;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 700, "call"]
  },
  "+_LinkedCustomHashMap_closure": [1060],
  LinkedHashMapCell: {
    "": "Object;_key<-370,_value@-370,_next@-1579,_previous@-1579"
  },
  "+LinkedHashMapCell": [0],
  LinkedHashMapKeyIterable: {
    "": "IterableBase;_collection$_map<-370",
    get$length: [function(_) {
      return this._collection$_map.get$_collection$_length();
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$isEmpty: [function(_) {
      return J.$eq(this._collection$_map.get$_collection$_length(), 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$iterator: [function(_) {
      var t1, t2;
      t1 = this._collection$_map;
      t2 = new P.LinkedHashMapKeyIterator(t1, t1.get$_modifications(), null, null);
      t2.$builtinTypeInfo = this.$builtinTypeInfo;
      t2._cell = t1.get$_first();
      return t2;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterator_10", ret: [P.Iterator, E]};
      }, this.$receiver, "LinkedHashMapKeyIterable");
    }, "iterator"],
    contains$1: [function(_, element) {
      return this._collection$_map.containsKey$1(element);
    }, "call$1" /* tearOffInfo */, "get$contains", 2, 0, 1047, 453, "contains"],
    forEach$1: [function(_, f) {
      var t1, cell, modifications, t2;
      t1 = this._collection$_map;
      cell = t1.get$_first();
      modifications = t1.get$_modifications();
      for (t2 = J.getInterceptor(modifications); cell != null;) {
        f.call$1(cell.get$_key());
        if (!t2.$eq(modifications, t1.get$_modifications()))
          throw H.wrapException(P.ConcurrentModificationError$(t1));
        cell = cell.get$_next();
      }
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__void__E2", void: true, args: [{func: "void__E3", void: true, args: [E]}]};
      }, this.$receiver, "LinkedHashMapKeyIterable");
    }, 412, "forEach"],
    $asIterableBase: null,
    $asIterable: null,
    $isEfficientLength: true,
    "<>": [50]
  },
  "+LinkedHashMapKeyIterable": [1588, 1176],
  LinkedHashMapKeyIterator: {
    "": "Object;_collection$_map<-370,_modifications<-1075,_cell@-1579,_collection$_current@-1589",
    get$current: [function() {
      return this._collection$_current;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_12", ret: E};
      }, this.$receiver, "LinkedHashMapKeyIterator");
    }, "current"],
    moveNext$0: [function() {
      var t1 = this._collection$_map;
      if (!J.$eq(this._modifications, t1.get$_modifications()))
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = this._cell;
        if (t1 == null) {
          this._collection$_current = null;
          return false;
        } else {
          this._collection$_current = t1.get$_key();
          this._cell = this._cell.get$_next();
          return true;
        }
      }
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    "<>": [51]
  },
  "+LinkedHashMapKeyIterator": [0, 1590],
  _HashSet: {
    "": "_HashSetBase;_collection$_length@-1075,_strings@-370,_nums@-370,_rest@-370,_elements@-1129",
    _newSet$0: [function() {
      var t1 = new P._HashSet(0, null, null, null, null);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, "call$0" /* tearOffInfo */, "get$_newSet", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set_2", ret: [P.Set, E]};
      }, this.$receiver, "_HashSet");
    }, "_newSet"],
    get$iterator: [function(_) {
      var t1 = new P.HashSetIterator(this, this._computeElements$0(), 0, null);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterator_11", ret: [P.Iterator, E]};
      }, this.$receiver, "_HashSet");
    }, "iterator"],
    get$length: [function(_) {
      return this._collection$_length;
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$isEmpty: [function(_) {
      return J.$eq(this._collection$_length, 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$isNotEmpty: [function(_) {
      return !J.$eq(this._collection$_length, 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty"],
    contains$1: [function(_, object) {
      var strings, nums, rest;
      if (typeof object === "string" && object !== "__proto__") {
        strings = this._strings;
        return strings == null ? false : strings[object] != null;
      } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
        nums = this._nums;
        return nums == null ? false : nums[object] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
      }
    }, "call$1" /* tearOffInfo */, "get$contains", 2, 0, 1047, 242, "contains"],
    lookup$1: [function(object) {
      var t1, rest, bucket, index;
      if (!(typeof object === "string" && object !== "__proto__"))
        t1 = typeof object === "number" && (object & 0x3ffffff) === object;
      else
        t1 = true;
      if (t1)
        return this.contains$1(0, object) ? object : null;
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[this._computeHashCode$1(object)];
      index = this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return;
      return J.$index$as(bucket, index);
    }, "call$1" /* tearOffInfo */, "get$lookup", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__Object", ret: E, args: [P.Object]};
      }, this.$receiver, "_HashSet");
    }, 242, "lookup"],
    add$1: [function(_, element) {
      var strings, table, nums, rest, hash, bucket;
      if (typeof element === "string" && element !== "__proto__") {
        strings = this._strings;
        if (strings == null) {
          table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._strings = table;
          strings = table;
        }
        return this._addHashTableEntry$2(strings, element);
      } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
        nums = this._nums;
        if (nums == null) {
          table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._nums = table;
          nums = table;
        }
        return this._addHashTableEntry$2(nums, element);
      } else {
        rest = this._rest;
        if (rest == null) {
          table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._rest = table;
          rest = table;
        }
        hash = this._computeHashCode$1(element);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [element];
        else {
          if (this._findBucketIndex$2(bucket, element) >= 0)
            return false;
          bucket.push(element);
        }
        this._collection$_length = J.$add$ns(this._collection$_length, 1);
        this._elements = null;
        return true;
      }
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__E2", ret: J.JSBool, args: [E]};
      }, this.$receiver, "_HashSet");
    }, 453, "add"],
    addAll$1: [function(_, objects) {
      var t1;
      for (t1 = J.get$iterator$a(objects); t1.moveNext$0() === true;)
        this.add$1(0, t1.get$current());
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__Iterable1", void: true, args: [[P.Iterable, E]]};
      }, this.$receiver, "_HashSet");
    }, 1591, "addAll"],
    remove$1: [function(_, object) {
      var rest, bucket, index;
      if (typeof object === "string" && object !== "__proto__")
        return this._removeHashTableEntry$2(this._strings, object);
      else if (typeof object === "number" && (object & 0x3ffffff) === object)
        return this._removeHashTableEntry$2(this._nums, object);
      else {
        rest = this._rest;
        if (rest == null)
          return false;
        bucket = rest[this._computeHashCode$1(object)];
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return false;
        this._collection$_length = J.$sub$n(this._collection$_length, 1);
        this._elements = null;
        bucket.splice(index, 1);
        return true;
      }
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, 1047, 242, "remove"],
    removeAll$1: [function(objectsToRemove) {
      var t1;
      for (t1 = J.get$iterator$a(objectsToRemove); t1.moveNext$0() === true;)
        this.remove$1(0, t1.get$current());
    }, "call$1" /* tearOffInfo */, "get$removeAll", 2, 0, 1592, 1593, "removeAll"],
    retainAll$1: [function(elements) {
      P._HashSetBase.prototype._retainAll$2.call(this, elements, new P._HashSet_retainAll_closure(this));
    }, "call$1" /* tearOffInfo */, "get$retainAll", 2, 0, 1592, 1594, "retainAll"],
    removeWhere$1: [function(_, test) {
      this.removeAll$1(J.where$1$a(this._computeElements$0(), test));
    }, "call$1" /* tearOffInfo */, "get$removeWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E1", void: true, args: [{func: "bool__E2", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "_HashSet");
    }, 428, "removeWhere"],
    retainWhere$1: [function(_, test) {
      this.removeAll$1(J.where$1$a(this._computeElements$0(), new P._HashSet_retainWhere_closure(this, test)));
    }, "call$1" /* tearOffInfo */, "get$retainWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E1", void: true, args: [{func: "bool__E2", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "_HashSet");
    }, 428, "retainWhere"],
    clear$0: [function(_) {
      if (J.$gt$n(this._collection$_length, 0)) {
        this._elements = null;
        this._rest = null;
        this._nums = null;
        this._strings = null;
        this._collection$_length = 0;
      }
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    _computeElements$0: [function() {
      var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
      t1 = this._elements;
      if (t1 != null)
        return t1;
      t1 = this._collection$_length;
      if (typeof t1 !== "number")
        return H.iae(t1);
      result = Array(t1);
      result.fixed$length = init;
      strings = this._strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = this._nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = this._rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; ++i0) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      this._elements = result;
      return result;
    }, "call$0" /* tearOffInfo */, "get$_computeElements", 0, 0, 1140, "_computeElements"],
    _addHashTableEntry$2: [function(table, element) {
      if (table[element] != null)
        return false;
      table[element] = 0;
      this._collection$_length = J.$add$ns(this._collection$_length, 1);
      this._elements = null;
      return true;
    }, "call$2" /* tearOffInfo */, "get$_addHashTableEntry", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__dynamic_E", ret: J.JSBool, args: [null, E]};
      }, this.$receiver, "_HashSet");
    }, 643, 453, "_addHashTableEntry"],
    _removeHashTableEntry$2: [function(table, element) {
      if (table != null && table[element] != null) {
        delete table[element];
        this._collection$_length = J.$sub$n(this._collection$_length, 1);
        this._elements = null;
        return true;
      } else
        return false;
    }, "call$2" /* tearOffInfo */, "get$_removeHashTableEntry", 4, 0, 1595, 643, 453, "_removeHashTableEntry"],
    _computeHashCode$1: [function(element) {
      return J.get$hashCode$(element) & 0x3ffffff;
    }, "call$1" /* tearOffInfo */, "get$_computeHashCode", 2, 0, 288, 453, "_computeHashCode"],
    _findBucketIndex$2: [function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq(bucket[i], element))
          return i;
      return -1;
    }, "call$2" /* tearOffInfo */, "get$_findBucketIndex", 4, 0, 893, 1568, 453, "_findBucketIndex"],
    $as_HashSetBase: null,
    $asSet: null,
    $asIterable: null,
    $isSet: true,
    $isEfficientLength: true,
    $isIterable: true,
    "<>": [18]
  },
  "+_HashSet": [1596, 1597],
  _HashSet_retainAll_closure: {
    "": "Closure:241;this_0-370",
    call$1: [function(o) {
      var t1 = H.checkSubtypeOfRuntimeType(o, H.getTypeArgumentByIndex(this.this_0, 0));
      return t1;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 389, "call"]
  },
  "+_HashSet_retainAll_closure": [1060],
  _HashSet_retainWhere_closure: {
    "": "Closure;this_0-370,test_1-1598",
    call$1: [function(element) {
      return this.test_1.call$1(element) !== true;
    }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__E2", args: [E]};
      }, this.$receiver, "_HashSet");
    }, 453, "call"],
    $signature: function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__E2", args: [E]};
      }, this.this_0, "_HashSet");
    }
  },
  "+_HashSet_retainWhere_closure": [1060],
  _IdentityHashSet: {
    "": "_HashSet;_collection$_length-1075,_strings-370,_nums-370,_rest-370,_elements-1129",
    _newSet$0: [function() {
      var t1 = new P._IdentityHashSet(0, null, null, null, null);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, "call$0" /* tearOffInfo */, "get$_newSet", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set_3", ret: [P.Set, E]};
      }, this.$receiver, "_IdentityHashSet");
    }, "_newSet"],
    _computeHashCode$1: [function(key) {
      return H.objectHashCode(key) & 0x3ffffff;
    }, "call$1" /* tearOffInfo */, "get$_computeHashCode", 2, 0, 288, 312, "_computeHashCode"],
    _findBucketIndex$2: [function(bucket, element) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i) {
        t1 = bucket[i];
        if (t1 == null ? element == null : t1 === element)
          return i;
      }
      return -1;
    }, "call$2" /* tearOffInfo */, "get$_findBucketIndex", 4, 0, 893, 1568, 453, "_findBucketIndex"],
    $as_HashSet: null,
    $as_HashSet: null,
    $asSet: null,
    $asIterable: null,
    "<>": [17]
  },
  "+_IdentityHashSet": [1599],
  _CustomHashSet: {
    "": "_HashSet;_equality@-1600,_hasher@-1601,_validKey@-273,_collection$_length-1075,_strings-370,_nums-370,_rest-370,_elements-1129",
    _equality$2: function(arg0, arg1) {
      return this._equality.call$2(arg0, arg1);
    },
    _hasher$1: function(arg0) {
      return this._hasher.call$1(arg0);
    },
    _validKey$1: function(arg0) {
      return this._validKey.call$1(arg0);
    },
    _newSet$0: [function() {
      return P._CustomHashSet$(this._equality, this._hasher, this._validKey, H.getTypeArgumentByIndex(this, 0));
    }, "call$0" /* tearOffInfo */, "get$_newSet", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set_4", ret: [P.Set, E]};
      }, this.$receiver, "_CustomHashSet");
    }, "_newSet"],
    _findBucketIndex$2: [function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (this._equality$2(bucket[i], element) === true)
          return i;
      return -1;
    }, "call$2" /* tearOffInfo */, "get$_findBucketIndex", 4, 0, 893, 1568, 453, "_findBucketIndex"],
    _computeHashCode$1: [function(element) {
      return this._hasher$1(element) & 0x3ffffff;
    }, "call$1" /* tearOffInfo */, "get$_computeHashCode", 2, 0, 288, 453, "_computeHashCode"],
    contains$1: [function(_, object) {
      if (this._validKey$1(object) !== true)
        return false;
      return P._HashSet.prototype.contains$1.call(this, this, object);
    }, "call$1" /* tearOffInfo */, "get$contains", 2, 0, 1047, 242, "contains"],
    lookup$1: [function(object) {
      if (this._validKey$1(object) !== true)
        return;
      return P._HashSet.prototype.lookup$1.call(this, object);
    }, "call$1" /* tearOffInfo */, "get$lookup", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__Object0", ret: E, args: [P.Object]};
      }, this.$receiver, "_CustomHashSet");
    }, 242, "lookup"],
    remove$1: [function(_, object) {
      if (this._validKey$1(object) !== true)
        return false;
      return P._HashSet.prototype.remove$1.call(this, this, object);
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, 1047, 242, "remove"],
    containsAll$1: [function(elements) {
      var t1, element;
      for (t1 = J.get$iterator$a(elements); t1.moveNext$0() === true;) {
        element = t1.get$current();
        if (this._validKey$1(element) !== true || !this.contains$1(0, element))
          return false;
      }
      return true;
    }, "call$1" /* tearOffInfo */, "get$containsAll", 2, 0, 1602, 1594, "containsAll"],
    removeAll$1: [function(elements) {
      var t1, element;
      for (t1 = J.get$iterator$a(elements); t1.moveNext$0() === true;) {
        element = t1.get$current();
        if (this._validKey$1(element) === true)
          P._HashSet.prototype.remove$1.call(this, this, element);
      }
    }, "call$1" /* tearOffInfo */, "get$removeAll", 2, 0, 1592, 1594, "removeAll"],
    retainAll$1: [function(elements) {
      P._HashSetBase.prototype._retainAll$2.call(this, elements, this._validKey);
    }, "call$1" /* tearOffInfo */, "get$retainAll", 2, 0, 1592, 1594, "retainAll"],
    $as_HashSet: null,
    $as_HashSet: null,
    $asSet: null,
    $asIterable: null,
    "<>": [240],
    static: {_CustomHashSet$: [function(_equality, _hasher, validKey, $E) {
        var t1 = validKey != null ? validKey : new P._CustomHashSet_closure($E);
        return H.setRuntimeTypeInfo(new P._CustomHashSet(_equality, _hasher, t1, 0, null, null, null, null), [$E]);
      }, null /* tearOffInfo */, null, 6, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "dynamic___Equality__Hasher_bool__dynamic1", args: [{func: "bool__E_E", ret: J.JSBool, args: [E, E]}, {func: "int__E", ret: J.JSInt, args: [E]}, {func: "bool__dynamic", ret: J.JSBool, args: [null]}]};
        }, this.$receiver, "_CustomHashSet");
      }, 647, 648, 646, "new _CustomHashSet" /* new _CustomHashSet:3:0 */]}
  },
  "+_CustomHashSet": [1603],
  _CustomHashSet_closure: {
    "": "Closure:241;E_0-1604",
    call$1: [function(x) {
      var t1 = H.checkSubtypeOfRuntimeType(x, this.E_0);
      return t1;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 274, "call"]
  },
  "+_CustomHashSet_closure": [1060],
  HashSetIterator: {
    "": "Object;_set<-370,_elements<-1129,_offset@-1075,_collection$_current@-1605",
    get$current: [function() {
      return this._collection$_current;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_13", ret: E};
      }, this.$receiver, "HashSetIterator");
    }, "current"],
    moveNext$0: [function() {
      var elements, offset, t1;
      elements = this._elements;
      offset = this._offset;
      t1 = this._set;
      if (elements !== t1.get$_elements())
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = J.getInterceptor$n(offset);
        if (t1.$ge(offset, elements.length)) {
          this._collection$_current = null;
          return false;
        } else {
          this._collection$_current = elements[offset];
          this._offset = t1.$add(offset, 1);
          return true;
        }
      }
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    "<>": [20]
  },
  "+HashSetIterator": [0, 1606],
  _LinkedHashSet: {
    "": "_HashSetBase;_collection$_length@-1075,_strings@-370,_nums@-370,_rest@-370,_first@-1607,_last@-1607,_modifications@-1075",
    _newSet$0: [function() {
      var t1 = new P._LinkedHashSet(0, null, null, null, null, null, 0);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, "call$0" /* tearOffInfo */, "get$_newSet", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set_5", ret: [P.Set, E]};
      }, this.$receiver, "_LinkedHashSet");
    }, "_newSet"],
    get$iterator: [function(_) {
      var t1 = H.setRuntimeTypeInfo(new P.LinkedHashSetIterator(this, this._modifications, null, null), [null]);
      t1._cell = t1._set.get$_first();
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterator_12", ret: [P.Iterator, E]};
      }, this.$receiver, "_LinkedHashSet");
    }, "iterator"],
    get$length: [function(_) {
      return this._collection$_length;
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$isEmpty: [function(_) {
      return J.$eq(this._collection$_length, 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$isNotEmpty: [function(_) {
      return !J.$eq(this._collection$_length, 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty"],
    contains$1: [function(_, object) {
      var strings, nums, rest;
      if (typeof object === "string" && object !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          return false;
        return strings[object] != null;
      } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
        nums = this._nums;
        if (nums == null)
          return false;
        return nums[object] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
      }
    }, "call$1" /* tearOffInfo */, "get$contains", 2, 0, 1047, 242, "contains"],
    lookup$1: [function(object) {
      var t1, rest, bucket, index;
      if (!(typeof object === "string" && object !== "__proto__"))
        t1 = typeof object === "number" && (object & 0x3ffffff) === object;
      else
        t1 = true;
      if (t1)
        return this.contains$1(0, object) ? object : null;
      else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(object)];
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return;
        return J.$index$as(bucket, index).get$_element();
      }
    }, "call$1" /* tearOffInfo */, "get$lookup", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__Object1", ret: E, args: [P.Object]};
      }, this.$receiver, "_LinkedHashSet");
    }, 242, "lookup"],
    forEach$1: [function(_, action) {
      var cell, modifications, t1;
      cell = this._first;
      modifications = this._modifications;
      for (t1 = J.getInterceptor(modifications); cell != null;) {
        action.call$1(cell.get$_element());
        if (!t1.$eq(modifications, this._modifications))
          throw H.wrapException(P.ConcurrentModificationError$(this));
        cell = cell.get$_next();
      }
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__void__E3", void: true, args: [{func: "void__E4", void: true, args: [E]}]};
      }, this.$receiver, "_LinkedHashSet");
    }, 1174, "forEach"],
    get$first: [function(_) {
      var t1 = this._first;
      if (t1 == null)
        throw H.wrapException(new P.StateError("No elements"));
      return t1.get$_element();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_14", ret: E};
      }, this.$receiver, "_LinkedHashSet");
    }, "first"],
    get$last: [function(_) {
      var t1 = this._last;
      if (t1 == null)
        throw H.wrapException(new P.StateError("No elements"));
      return t1.get$_element();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_14", ret: E};
      }, this.$receiver, "_LinkedHashSet");
    }, "last"],
    add$1: [function(_, element) {
      var strings, table, nums, rest, hash, bucket;
      if (typeof element === "string" && element !== "__proto__") {
        strings = this._strings;
        if (strings == null) {
          table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._strings = table;
          strings = table;
        }
        return this._addHashTableEntry$2(strings, element);
      } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
        nums = this._nums;
        if (nums == null) {
          table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._nums = table;
          nums = table;
        }
        return this._addHashTableEntry$2(nums, element);
      } else {
        rest = this._rest;
        if (rest == null) {
          table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._rest = table;
          rest = table;
        }
        hash = this._computeHashCode$1(element);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [this._newLinkedCell$1(element)];
        else {
          if (this._findBucketIndex$2(bucket, element) >= 0)
            return false;
          bucket.push(this._newLinkedCell$1(element));
        }
        return true;
      }
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__E3", ret: J.JSBool, args: [E]};
      }, this.$receiver, "_LinkedHashSet");
    }, 453, "add"],
    addAll$1: [function(_, objects) {
      var t1;
      for (t1 = J.get$iterator$a(objects); t1.moveNext$0() === true;)
        this.add$1(0, t1.get$current());
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__Iterable3", void: true, args: [[P.Iterable, E]]};
      }, this.$receiver, "_LinkedHashSet");
    }, 1591, "addAll"],
    remove$1: [function(_, object) {
      var rest, bucket, index;
      if (typeof object === "string" && object !== "__proto__")
        return this._removeHashTableEntry$2(this._strings, object);
      else if (typeof object === "number" && (object & 0x3ffffff) === object)
        return this._removeHashTableEntry$2(this._nums, object);
      else {
        rest = this._rest;
        if (rest == null)
          return false;
        bucket = rest[this._computeHashCode$1(object)];
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return false;
        this._unlinkCell$1(bucket.splice(index, 1)[0]);
        return true;
      }
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, 1047, 242, "remove"],
    removeAll$1: [function(objectsToRemove) {
      var t1;
      for (t1 = J.get$iterator$a(objectsToRemove); t1.moveNext$0() === true;)
        this.remove$1(0, t1.get$current());
    }, "call$1" /* tearOffInfo */, "get$removeAll", 2, 0, 1608, 1593, "removeAll"],
    retainAll$1: [function(elements) {
      P._HashSetBase.prototype._retainAll$2.call(this, elements, new P._LinkedHashSet_retainAll_closure(this));
    }, "call$1" /* tearOffInfo */, "get$retainAll", 2, 0, 1592, 1594, "retainAll"],
    removeWhere$1: [function(_, test) {
      this._filterWhere$2(test, true);
    }, "call$1" /* tearOffInfo */, "get$removeWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E2", void: true, args: [{func: "bool__E3", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "_LinkedHashSet");
    }, 428, "removeWhere"],
    retainWhere$1: [function(_, test) {
      this._filterWhere$2(test, false);
    }, "call$1" /* tearOffInfo */, "get$retainWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E2", void: true, args: [{func: "bool__E3", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "_LinkedHashSet");
    }, 428, "retainWhere"],
    _filterWhere$2: [function(test, removeMatching) {
      var cell, t1, element, next, modifications, shouldRemove;
      cell = this._first;
      for (t1 = J.getInterceptor(removeMatching); cell != null; cell = next) {
        element = cell.get$_element();
        next = cell.get$_next();
        modifications = this._modifications;
        shouldRemove = t1.$eq(removeMatching, test.call$1(element));
        if (!J.$eq(modifications, this._modifications))
          throw H.wrapException(P.ConcurrentModificationError$(this));
        if (shouldRemove)
          this.remove$1(0, element);
      }
    }, "call$2" /* tearOffInfo */, "get$_filterWhere", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E_bool", void: true, args: [{func: "bool__E3", ret: J.JSBool, args: [E]}, J.JSBool]};
      }, this.$receiver, "_LinkedHashSet");
    }, 428, 1609, "_filterWhere"],
    clear$0: [function(_) {
      if (J.$gt$n(this._collection$_length, 0)) {
        this._last = null;
        this._first = null;
        this._rest = null;
        this._nums = null;
        this._strings = null;
        this._collection$_length = 0;
        this._modifications = J.$and$n(J.$add$ns(this._modifications, 1), 67108863);
      }
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    _addHashTableEntry$2: [function(table, element) {
      if (table[element] != null)
        return false;
      table[element] = this._newLinkedCell$1(element);
      return true;
    }, "call$2" /* tearOffInfo */, "get$_addHashTableEntry", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__dynamic_E0", ret: J.JSBool, args: [null, E]};
      }, this.$receiver, "_LinkedHashSet");
    }, 643, 453, "_addHashTableEntry"],
    _removeHashTableEntry$2: [function(table, element) {
      var cell;
      if (table == null)
        return false;
      cell = table[element];
      if (cell == null)
        return false;
      this._unlinkCell$1(cell);
      delete table[element];
      return true;
    }, "call$2" /* tearOffInfo */, "get$_removeHashTableEntry", 4, 0, 1595, 643, 453, "_removeHashTableEntry"],
    _newLinkedCell$1: [function(element) {
      var cell, last;
      cell = new P.LinkedHashSetCell(element, null, null);
      if (this._first == null) {
        this._last = cell;
        this._first = cell;
      } else {
        last = this._last;
        cell._previous = last;
        last.set$_next(cell);
        this._last = cell;
      }
      this._collection$_length = J.$add$ns(this._collection$_length, 1);
      this._modifications = J.$and$n(J.$add$ns(this._modifications, 1), 67108863);
      return cell;
    }, "call$1" /* tearOffInfo */, "get$_newLinkedCell", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "LinkedHashSetCell__E", ret: P.LinkedHashSetCell, args: [E]};
      }, this.$receiver, "_LinkedHashSet");
    }, 453, "_newLinkedCell"],
    _unlinkCell$1: [function(cell) {
      var previous, next;
      previous = cell.get$_previous();
      next = cell.get$_next();
      if (previous == null)
        this._first = next;
      else
        previous.set$_next(next);
      if (next == null)
        this._last = previous;
      else
        next.set$_previous(previous);
      this._collection$_length = J.$sub$n(this._collection$_length, 1);
      this._modifications = J.$and$n(J.$add$ns(this._modifications, 1), 67108863);
    }, "call$1" /* tearOffInfo */, "get$_unlinkCell", 2, 0, 1610, 1581, "_unlinkCell"],
    _computeHashCode$1: [function(element) {
      return J.get$hashCode$(element) & 0x3ffffff;
    }, "call$1" /* tearOffInfo */, "get$_computeHashCode", 2, 0, 288, 453, "_computeHashCode"],
    _findBucketIndex$2: [function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq(bucket[i].get$_element(), element))
          return i;
      return -1;
    }, "call$2" /* tearOffInfo */, "get$_findBucketIndex", 4, 0, 893, 1568, 453, "_findBucketIndex"],
    $as_HashSetBase: null,
    $asSet: null,
    $asIterable: null,
    $isSet: true,
    $isEfficientLength: true,
    $isIterable: true,
    "<>": [22]
  },
  "+_LinkedHashSet": [1611, 1612],
  _LinkedHashSet_retainAll_closure: {
    "": "Closure:241;this_0-370",
    call$1: [function(o) {
      var t1 = H.checkSubtypeOfRuntimeType(o, H.getTypeArgumentByIndex(this.this_0, 0));
      return t1;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 389, "call"]
  },
  "+_LinkedHashSet_retainAll_closure": [1060],
  _LinkedIdentityHashSet: {
    "": "_LinkedHashSet;_collection$_length-1075,_strings-370,_nums-370,_rest-370,_first-1607,_last-1607,_modifications-1075",
    _newSet$0: [function() {
      var t1 = new P._LinkedIdentityHashSet(0, null, null, null, null, null, 0);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, "call$0" /* tearOffInfo */, "get$_newSet", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set_6", ret: [P.Set, E]};
      }, this.$receiver, "_LinkedIdentityHashSet");
    }, "_newSet"],
    _computeHashCode$1: [function(key) {
      return H.objectHashCode(key) & 0x3ffffff;
    }, "call$1" /* tearOffInfo */, "get$_computeHashCode", 2, 0, 288, 312, "_computeHashCode"],
    _findBucketIndex$2: [function(bucket, element) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i) {
        t1 = bucket[i].get$_element();
        if (t1 == null ? element == null : t1 === element)
          return i;
      }
      return -1;
    }, "call$2" /* tearOffInfo */, "get$_findBucketIndex", 4, 0, 893, 1568, 453, "_findBucketIndex"],
    $as_LinkedHashSet: null,
    $as_LinkedHashSet: null,
    $asSet: null,
    $asIterable: null,
    "<>": [23]
  },
  "+_LinkedIdentityHashSet": [1613],
  _LinkedCustomHashSet: {
    "": "_LinkedHashSet;_equality@-1614,_hasher@-1615,_validKey@-273,_collection$_length-1075,_strings-370,_nums-370,_rest-370,_first-1607,_last-1607,_modifications-1075",
    _equality$2: function(arg0, arg1) {
      return this._equality.call$2(arg0, arg1);
    },
    _hasher$1: function(arg0) {
      return this._hasher.call$1(arg0);
    },
    _validKey$1: function(arg0) {
      return this._validKey.call$1(arg0);
    },
    _newSet$0: [function() {
      return P._LinkedCustomHashSet$(this._equality, this._hasher, this._validKey, H.getTypeArgumentByIndex(this, 0));
    }, "call$0" /* tearOffInfo */, "get$_newSet", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set_7", ret: [P.Set, E]};
      }, this.$receiver, "_LinkedCustomHashSet");
    }, "_newSet"],
    _findBucketIndex$2: [function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (this._equality$2(bucket[i].get$_element(), element) === true)
          return i;
      return -1;
    }, "call$2" /* tearOffInfo */, "get$_findBucketIndex", 4, 0, 893, 1568, 453, "_findBucketIndex"],
    _computeHashCode$1: [function(element) {
      return this._hasher$1(element) & 0x3ffffff;
    }, "call$1" /* tearOffInfo */, "get$_computeHashCode", 2, 0, 288, 453, "_computeHashCode"],
    contains$1: [function(_, object) {
      if (this._validKey$1(object) !== true)
        return false;
      return P._LinkedHashSet.prototype.contains$1.call(this, this, object);
    }, "call$1" /* tearOffInfo */, "get$contains", 2, 0, 1047, 242, "contains"],
    lookup$1: [function(object) {
      if (this._validKey$1(object) !== true)
        return;
      return P._LinkedHashSet.prototype.lookup$1.call(this, object);
    }, "call$1" /* tearOffInfo */, "get$lookup", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__Object2", ret: E, args: [P.Object]};
      }, this.$receiver, "_LinkedCustomHashSet");
    }, 242, "lookup"],
    remove$1: [function(_, object) {
      if (this._validKey$1(object) !== true)
        return false;
      return P._LinkedHashSet.prototype.remove$1.call(this, this, object);
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, 1047, 242, "remove"],
    containsAll$1: [function(elements) {
      var t1, element;
      for (t1 = J.get$iterator$a(elements); t1.moveNext$0() === true;) {
        element = t1.get$current();
        if (this._validKey$1(element) !== true || !this.contains$1(0, element))
          return false;
      }
      return true;
    }, "call$1" /* tearOffInfo */, "get$containsAll", 2, 0, 1602, 1594, "containsAll"],
    removeAll$1: [function(elements) {
      var t1, element;
      for (t1 = J.get$iterator$a(elements); t1.moveNext$0() === true;) {
        element = t1.get$current();
        if (this._validKey$1(element) === true)
          P._LinkedHashSet.prototype.remove$1.call(this, this, element);
      }
    }, "call$1" /* tearOffInfo */, "get$removeAll", 2, 0, 1592, 1594, "removeAll"],
    retainAll$1: [function(elements) {
      P._HashSetBase.prototype._retainAll$2.call(this, elements, this._validKey);
    }, "call$1" /* tearOffInfo */, "get$retainAll", 2, 0, 1592, 1594, "retainAll"],
    $as_LinkedHashSet: null,
    $as_LinkedHashSet: null,
    $asSet: null,
    $asIterable: null,
    "<>": [24],
    static: {_LinkedCustomHashSet$: [function(_equality, _hasher, validKey, $E) {
        var t1 = validKey != null ? validKey : new P._LinkedCustomHashSet_closure($E);
        return H.setRuntimeTypeInfo(new P._LinkedCustomHashSet(_equality, _hasher, t1, 0, null, null, null, null, null, 0), [$E]);
      }, null /* tearOffInfo */, null, 6, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "dynamic___Equality__Hasher_bool__dynamic2", args: [{func: "bool__E_E0", ret: J.JSBool, args: [E, E]}, {func: "int__E0", ret: J.JSInt, args: [E]}, {func: "bool__dynamic", ret: J.JSBool, args: [null]}]};
        }, this.$receiver, "_LinkedCustomHashSet");
      }, 647, 648, 646, "new _LinkedCustomHashSet" /* new _LinkedCustomHashSet:3:0 */]}
  },
  "+_LinkedCustomHashSet": [1616],
  _LinkedCustomHashSet_closure: {
    "": "Closure:241;E_0-1617",
    call$1: [function(x) {
      var t1 = H.checkSubtypeOfRuntimeType(x, this.E_0);
      return t1;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 274, "call"]
  },
  "+_LinkedCustomHashSet_closure": [1060],
  LinkedHashSetCell: {
    "": "Object;_element<-370,_next@-1607,_previous@-1607"
  },
  "+LinkedHashSetCell": [0],
  LinkedHashSetIterator: {
    "": "Object;_set<-370,_modifications<-1075,_cell@-1607,_collection$_current@-1618",
    get$current: [function() {
      return this._collection$_current;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_15", ret: E};
      }, this.$receiver, "LinkedHashSetIterator");
    }, "current"],
    moveNext$0: [function() {
      var t1 = this._set;
      if (!J.$eq(this._modifications, t1.get$_modifications()))
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = this._cell;
        if (t1 == null) {
          this._collection$_current = null;
          return false;
        } else {
          this._collection$_current = t1.get$_element();
          this._cell = this._cell.get$_next();
          return true;
        }
      }
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    "<>": [25]
  },
  "+LinkedHashSetIterator": [0, 1619],
  UnmodifiableListView: {
    "": "UnmodifiableListBase;_source<-1620",
    get$length: [function(_) {
      return J.get$length$as(this._source);
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    $index: [function(_, index) {
      return J.elementAt$1$a(this._source, index);
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int8", ret: E, args: [J.JSInt]};
      }, this.$receiver, "UnmodifiableListView");
    }, 321, "[]"],
    $asUnmodifiableListBase: null,
    $asList: null,
    $asIterable: null,
    "<>": [94],
    static: {UnmodifiableListView$: [function(source, $E) {
        return H.setRuntimeTypeInfo(new P.UnmodifiableListView(source), [$E]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "dynamic__Iterable0", args: [[P.Iterable, E]]};
        }, this.$receiver, "UnmodifiableListView");
      }, 292, "new UnmodifiableListView" /* new UnmodifiableListView:1:0 */]}
  },
  "+UnmodifiableListView": [1621],
  HashMap: {
    "": "Object;",
    $isMap: true,
    "<>": [30, 31],
    static: {HashMap_HashMap: [function(equals, hashCode, isValidKey, $K, $V) {
        if (isValidKey == null)
          if (hashCode == null) {
            if (equals == null)
              return H.setRuntimeTypeInfo(new P._HashMap(0, null, null, null, null), [$K, $V]);
            hashCode = P._defaultHashCode$closure();
          } else {
            if (P.identityHashCode$closure() === hashCode && P.identical$closure() === equals)
              return H.setRuntimeTypeInfo(new P._IdentityHashMap(0, null, null, null, null), [$K, $V]);
            if (equals == null)
              equals = P._defaultEquals$closure();
          }
        else {
          if (hashCode == null)
            hashCode = P._defaultHashCode$closure();
          if (equals == null)
            equals = P._defaultEquals$closure();
        }
        return P._CustomHashMap$(equals, hashCode, isValidKey, $K, $V);
      }, "call$3$equals$hashCode$isValidKey" /* tearOffInfo */, null, 0, 7, function() {
        return H.computeSignature(function(K, V) {
          return {func: "HashMap___bool__K_K_int__K_bool__dynamic", ret: [P.HashMap, K, V], named: {equals: {func: "bool__K_K1", ret: J.JSBool, args: [K, K]}, hashCode: {func: "int__K1", ret: J.JSInt, args: [K]}, isValidKey: {func: "bool__dynamic", ret: J.JSBool, args: [null]}}};
        }, this.$receiver, "HashMap");
      }, 370, 370, 370, 588, 650, 651, "new HashMap" /* new HashMap:0:3:equals:hashCode:isValidKey */], HashMap_HashMap$identity: [function($K, $V) {
        return H.setRuntimeTypeInfo(new P._IdentityHashMap(0, null, null, null, null), [$K, $V]);
      }, "call$0" /* tearOffInfo */, null, 0, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "HashMap_", ret: [P.HashMap, K, V]};
        }, this.$receiver, "HashMap");
      }, "new HashMap$identity" /* new HashMap$identity:0:0 */], HashMap_HashMap$from: [function(other, $K, $V) {
        var t1 = P.HashMap_HashMap(null, null, null, $K, $V);
        t1.addAll$1(0, other);
        return t1;
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "HashMap__Map", ret: [P.HashMap, K, V], args: [[P.Map, K, V]]};
        }, this.$receiver, "HashMap");
      }, 403, "new HashMap$from" /* new HashMap$from:1:0 */], HashMap_HashMap$fromIterable: [function(iterable, key, value, $K, $V) {
        var map = P.HashMap_HashMap(null, null, null, $K, $V);
        P.Maps__fillMapWithMappedIterable(map, iterable, key, value);
        return map;
      }, "call$3$key$value" /* tearOffInfo */, null, 2, 5, function() {
        return H.computeSignature(function(K, V) {
          return {func: "HashMap__Iterable__K__dynamic_V__dynamic", ret: [P.HashMap, K, V], args: [P.Iterable], named: {key: {func: "K__dynamic", ret: K, args: [null]}, value: {func: "V__dynamic", ret: V, args: [null]}}};
        }, this.$receiver, "HashMap");
      }, 370, 370, 417, 312, 280, "new HashMap$fromIterable" /* new HashMap$fromIterable:1:2:key:value */], HashMap_HashMap$fromIterables: [function(keys, values, $K, $V) {
        var map = P.HashMap_HashMap(null, null, null, $K, $V);
        P.Maps__fillMapWithIterables(map, keys, values);
        return map;
      }, "call$2" /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "HashMap__Iterable_Iterable", ret: [P.HashMap, K, V], args: [[P.Iterable, K], [P.Iterable, V]]};
        }, this.$receiver, "HashMap");
      }, 652, 653, "new HashMap$fromIterables" /* new HashMap$fromIterables:2:0 */]}
  },
  "+HashMap": [0, 1622],
  _HashSetBase: {
    "": "IterableBase;",
    containsAll$1: [function(other) {
      var t1;
      for (t1 = J.get$iterator$a(other); t1.moveNext$0() === true;)
        if (!this.contains$1(0, t1.get$current()))
          return false;
      return true;
    }, "call$1" /* tearOffInfo */, "get$containsAll", 2, 0, 1602, 403, "containsAll"],
    intersection$1: [function(other) {
      var result, t1, t2, element;
      result = this._newSet$0();
      for (t1 = this.get$iterator(0), t2 = J.getInterceptor$as(other); t1.moveNext$0();) {
        element = t1.get$current();
        if (t2.contains$1(other, element) === true)
          result.add$1(0, element);
      }
      return result;
    }, "call$1" /* tearOffInfo */, "get$intersection", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set__Set", ret: [P.Set, E], args: [[P.Set, P.Object]]};
      }, this.$receiver, "_HashSetBase");
    }, 403, "intersection"],
    union$1: [function(other) {
      var t1 = this._newSet$0();
      t1.addAll$1(0, this);
      t1.addAll$1(0, other);
      return t1;
    }, "call$1" /* tearOffInfo */, "get$union", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set__Set0", ret: [P.Set, E], args: [[P.Set, E]]};
      }, this.$receiver, "_HashSetBase");
    }, 403, "union"],
    difference$1: [function(other) {
      var result, t1, t2, element;
      result = this._newSet$0();
      for (t1 = this.get$iterator(0), t2 = J.getInterceptor$as(other); t1.moveNext$0();) {
        element = t1.get$current();
        if (t2.contains$1(other, element) !== true)
          result.add$1(0, element);
      }
      return result;
    }, "call$1" /* tearOffInfo */, "get$difference", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set__Set0", ret: [P.Set, E], args: [[P.Set, E]]};
      }, this.$receiver, "_HashSetBase");
    }, 403, "difference"],
    _retainAll$2: [function(objectsToRetain, isValidKey) {
      var retainSet, t1, o;
      retainSet = this._newSet$0();
      for (t1 = J.get$iterator$a(objectsToRetain); t1.moveNext$0() === true;) {
        o = t1.get$current();
        if (isValidKey.call$1(o) === true)
          retainSet.add$1(0, o);
      }
      this.retainWhere$1(0, retainSet.get$contains(0));
    }, "call$2" /* tearOffInfo */, "get$_retainAll", 4, 0, 1623, 1624, 651, "_retainAll"],
    toList$1$growable: [function(_, growable) {
      var result, t1, i, element, i0;
      if (growable === true) {
        result = H.setRuntimeTypeInfo([], [H.getTypeArgumentByIndex(this, 0)]);
        C.JSArray_methods.set$length(result, this.get$length(0));
      } else {
        t1 = this.get$length(0);
        if (typeof t1 !== "number")
          return H.iae(t1);
        t1 = Array(t1);
        t1.fixed$length = init;
        result = H.setRuntimeTypeInfo(t1, [H.getTypeArgumentByIndex(this, 0)]);
      }
      for (t1 = this.get$iterator(0), i = 0; t1.moveNext$0(); i = i0) {
        element = t1.get$current();
        i0 = i + 1;
        if (i >= result.length)
          return H.ioore(result, i);
        result[i] = element;
      }
      return result;
    }, function($receiver) {
      return this.toList$1$growable($receiver, true);
    }, "toList$0", "call$1$growable" /* tearOffInfo */, null /* tearOffInfo */, "get$toList", 0, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "List___bool1", ret: [J.JSArray, E], named: {growable: J.JSBool}};
      }, this.$receiver, "_HashSetBase");
    }, 816, 817, "toList"],
    toSet$0: [function(_) {
      var t1 = this._newSet$0();
      t1.addAll$1(0, this);
      return t1;
    }, "call$0" /* tearOffInfo */, "get$toSet", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set_8", ret: [P.Set, E]};
      }, this.$receiver, "_HashSetBase");
    }, "toSet"],
    toString$0: [function(_) {
      return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $asIterableBase: null,
    $asSet: null,
    $asIterable: null,
    $isSet: true,
    $isEfficientLength: true,
    $isIterable: true,
    "<>": [19]
  },
  "+_HashSetBase": [1625, 1626],
  HashSet: {
    "": "Object;",
    $isSet: true,
    $isEfficientLength: true,
    $isIterable: true,
    "<>": [16],
    static: {HashSet_HashSet: [function(equals, hashCode, isValidKey, $E) {
        if (isValidKey == null)
          if (hashCode == null) {
            if (equals == null)
              return H.setRuntimeTypeInfo(new P._HashSet(0, null, null, null, null), [$E]);
            hashCode = P._defaultHashCode$closure();
          } else {
            if (P.identityHashCode$closure() === hashCode && P.identical$closure() === equals)
              return H.setRuntimeTypeInfo(new P._IdentityHashSet(0, null, null, null, null), [$E]);
            if (equals == null)
              equals = P._defaultEquals$closure();
          }
        else {
          if (hashCode == null)
            hashCode = P._defaultHashCode$closure();
          if (equals == null)
            equals = P._defaultEquals$closure();
        }
        return P._CustomHashSet$(equals, hashCode, isValidKey, $E);
      }, "call$3$equals$hashCode$isValidKey" /* tearOffInfo */, null, 0, 7, function() {
        return H.computeSignature(function(E) {
          return {func: "HashSet___bool__E_E_int__E_bool__dynamic", ret: [P.HashSet, E], named: {equals: {func: "bool__E_E1", ret: J.JSBool, args: [E, E]}, hashCode: {func: "int__E1", ret: J.JSInt, args: [E]}, isValidKey: {func: "bool__dynamic", ret: J.JSBool, args: [null]}}};
        }, this.$receiver, "HashSet");
      }, 370, 370, 370, 588, 650, 651, "new HashSet" /* new HashSet:0:3:equals:hashCode:isValidKey */], HashSet_HashSet$identity: [function($E) {
        return H.setRuntimeTypeInfo(new P._IdentityHashSet(0, null, null, null, null), [$E]);
      }, "call$0" /* tearOffInfo */, null, 0, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "HashSet_", ret: [P.HashSet, E]};
        }, this.$receiver, "HashSet");
      }, "new HashSet$identity" /* new HashSet$identity:0:0 */], HashSet_HashSet$from: [function(iterable, $E) {
        var t1 = P.HashSet_HashSet(null, null, null, $E);
        t1.addAll$1(0, iterable);
        return t1;
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "HashSet__Iterable", ret: [P.HashSet, E], args: [[P.Iterable, E]]};
        }, this.$receiver, "HashSet");
      }, 417, "new HashSet$from" /* new HashSet$from:1:0 */]}
  },
  "+HashSet": [0, 1627],
  IterableMixin: {
    "": "Object;",
    map$1: [function(_, f) {
      return H.MappedIterable_MappedIterable(this, f, H.getRuntimeTypeArgument(this, "IterableMixin", 0), null);
    }, "call$1" /* tearOffInfo */, "get$map", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__dynamic__E1", ret: P.Iterable, args: [{func: "dynamic__E3", args: [E]}]};
      }, this.$receiver, "IterableMixin");
    }, 412, "map"],
    where$1: [function(_, f) {
      return H.setRuntimeTypeInfo(new H.WhereIterable(this, f), [H.getRuntimeTypeArgument(this, "IterableMixin", 0)]);
    }, "call$1" /* tearOffInfo */, "get$where", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E1", ret: [P.Iterable, E], args: [{func: "bool__E4", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "IterableMixin");
    }, 412, "where"],
    expand$1: [function(_, f) {
      return H.setRuntimeTypeInfo(new H.ExpandIterable(this, f), [H.getRuntimeTypeArgument(this, "IterableMixin", 0), null]);
    }, "call$1" /* tearOffInfo */, "get$expand", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__Iterable__E0", ret: P.Iterable, args: [{func: "Iterable__E0", ret: P.Iterable, args: [E]}]};
      }, this.$receiver, "IterableMixin");
    }, 412, "expand"],
    contains$1: [function(_, element) {
      var t1;
      for (t1 = this.get$iterator(0); t1.moveNext$0();)
        if (J.$eq(t1.get$current(), element))
          return true;
      return false;
    }, "call$1" /* tearOffInfo */, "get$contains", 2, 0, 1047, 453, "contains"],
    forEach$1: [function(_, f) {
      var t1;
      for (t1 = this.get$iterator(0); t1.moveNext$0();)
        f.call$1(t1.get$current());
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__void__E4", void: true, args: [{func: "void__E5", void: true, args: [E]}]};
      }, this.$receiver, "IterableMixin");
    }, 412, "forEach"],
    reduce$1: [function(_, combine) {
      var iterator, value;
      iterator = this.get$iterator(0);
      if (!iterator.moveNext$0())
        throw H.wrapException(new P.StateError("No elements"));
      value = iterator.get$current();
      for (; iterator.moveNext$0();)
        value = combine.call$2(value, iterator.get$current());
      return value;
    }, "call$1" /* tearOffInfo */, "get$reduce", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__E__E_E0", ret: E, args: [{func: "E__E_E0", ret: E, args: [E, E]}]};
      }, this.$receiver, "IterableMixin");
    }, 424, "reduce"],
    fold$2: [function(_, initialValue, combine) {
      var t1, value;
      for (t1 = this.get$iterator(0), value = initialValue; t1.moveNext$0();)
        value = combine.call$2(value, t1.get$current());
      return value;
    }, "call$2" /* tearOffInfo */, "get$fold", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__dynamic_dynamic__dynamic_E1", args: [null, {func: "dynamic__dynamic_E1", args: [null, E]}]};
      }, this.$receiver, "IterableMixin");
    }, 426, 424, "fold"],
    every$1: [function(_, f) {
      var t1;
      for (t1 = this.get$iterator(0); t1.moveNext$0();)
        if (f.call$1(t1.get$current()) !== true)
          return false;
      return true;
    }, "call$1" /* tearOffInfo */, "get$every", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__bool__E1", ret: J.JSBool, args: [{func: "bool__E4", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "IterableMixin");
    }, 412, "every"],
    join$1: [function(_, separator) {
      var iterator, buffer, t1, str, t2;
      iterator = this.get$iterator(0);
      if (!iterator.moveNext$0())
        return "";
      buffer = P.StringBuffer$("");
      if (separator == null || J.$eq(separator, ""))
        do {
          t1 = H.S(iterator.get$current());
          buffer._contents = buffer._contents + t1;
        } while (iterator.moveNext$0());
      else {
        buffer.write$1(H.S(iterator.get$current()));
        for (t1 = typeof separator === "string"; iterator.moveNext$0();) {
          str = t1 ? separator : H.S(separator);
          buffer._contents = buffer._contents + str;
          t2 = H.S(iterator.get$current());
          buffer._contents = buffer._contents + t2;
        }
      }
      return buffer._contents;
    }, "call$1" /* tearOffInfo */, "get$join", 0, 2, 1049, 806, 1050, "join"],
    any$1: [function(_, f) {
      var t1;
      for (t1 = this.get$iterator(0); t1.moveNext$0();)
        if (f.call$1(t1.get$current()) === true)
          return true;
      return false;
    }, "call$1" /* tearOffInfo */, "get$any", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__bool__E1", ret: J.JSBool, args: [{func: "bool__E4", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "IterableMixin");
    }, 412, "any"],
    toList$1$growable: [function(_, growable) {
      return P.List_List$from(this, growable, H.getRuntimeTypeArgument(this, "IterableMixin", 0));
    }, function($receiver) {
      return this.toList$1$growable($receiver, true);
    }, "toList$0", "call$1$growable" /* tearOffInfo */, null /* tearOffInfo */, "get$toList", 0, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "List___bool2", ret: [J.JSArray, E], named: {growable: J.JSBool}};
      }, this.$receiver, "IterableMixin");
    }, 816, 817, "toList"],
    toSet$0: [function(_) {
      var t1 = P.LinkedHashSet_LinkedHashSet(null, null, null, H.getRuntimeTypeArgument(this, "IterableMixin", 0));
      t1.addAll$1(0, this);
      return t1;
    }, "call$0" /* tearOffInfo */, "get$toSet", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set_9", ret: [P.Set, E]};
      }, this.$receiver, "IterableMixin");
    }, "toSet"],
    get$length: [function(_) {
      var it, count;
      it = this.get$iterator(0);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$isEmpty: [function(_) {
      return !this.get$iterator(0).moveNext$0();
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$isNotEmpty: [function(_) {
      return !this.get$isEmpty(0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty"],
    take$1: [function(_, n) {
      return H.TakeIterable_TakeIterable(this, n, H.getRuntimeTypeArgument(this, "IterableMixin", 0));
    }, "call$1" /* tearOffInfo */, "get$take", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int3", ret: [P.Iterable, E], args: [J.JSInt]};
      }, this.$receiver, "IterableMixin");
    }, 1051, "take"],
    takeWhile$1: [function(_, test) {
      return H.setRuntimeTypeInfo(new H.TakeWhileIterable(this, test), [H.getRuntimeTypeArgument(this, "IterableMixin", 0)]);
    }, "call$1" /* tearOffInfo */, "get$takeWhile", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E1", ret: [P.Iterable, E], args: [{func: "bool__E4", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "IterableMixin");
    }, 428, "takeWhile"],
    skip$1: [function(_, n) {
      return H.SkipIterable_SkipIterable(this, n, H.getRuntimeTypeArgument(this, "IterableMixin", 0));
    }, "call$1" /* tearOffInfo */, "get$skip", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int3", ret: [P.Iterable, E], args: [J.JSInt]};
      }, this.$receiver, "IterableMixin");
    }, 1051, "skip"],
    skipWhile$1: [function(_, test) {
      return H.setRuntimeTypeInfo(new H.SkipWhileIterable(this, test), [H.getRuntimeTypeArgument(this, "IterableMixin", 0)]);
    }, "call$1" /* tearOffInfo */, "get$skipWhile", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E1", ret: [P.Iterable, E], args: [{func: "bool__E4", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "IterableMixin");
    }, 428, "skipWhile"],
    get$first: [function(_) {
      var it = this.get$iterator(0);
      if (!it.moveNext$0())
        throw H.wrapException(new P.StateError("No elements"));
      return it.get$current();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_16", ret: E};
      }, this.$receiver, "IterableMixin");
    }, "first"],
    get$last: [function(_) {
      var it, result;
      it = this.get$iterator(0);
      if (!it.moveNext$0())
        throw H.wrapException(new P.StateError("No elements"));
      do
        result = it.get$current();
      while (it.moveNext$0());
      return result;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_16", ret: E};
      }, this.$receiver, "IterableMixin");
    }, "last"],
    get$single: [function(_) {
      var it, result;
      it = this.get$iterator(0);
      if (!it.moveNext$0())
        throw H.wrapException(new P.StateError("No elements"));
      result = it.get$current();
      if (it.moveNext$0())
        throw H.wrapException(new P.StateError("More than one element"));
      return result;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_16", ret: E};
      }, this.$receiver, "IterableMixin");
    }, "single"],
    firstWhere$2$orElse: [function(_, test, orElse) {
      var t1, element;
      for (t1 = this.get$iterator(0); t1.moveNext$0();) {
        element = t1.get$current();
        if (test.call$1(element) === true)
          return element;
      }
      if (orElse != null)
        return orElse.call$0();
      throw H.wrapException(new P.StateError("No matching element"));
    }, "call$2$orElse" /* tearOffInfo */, "get$firstWhere", 2, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__bool__E__Object_1", args: [{func: "bool__E4", ret: J.JSBool, args: [E]}], named: {orElse: {func: "Object_", ret: P.Object}}};
      }, this.$receiver, "IterableMixin");
    }, 370, 428, 430, "firstWhere"],
    lastWhere$2$orElse: [function(_, test, orElse) {
      var t1, result, foundMatching, element;
      for (t1 = this.get$iterator(0), result = null, foundMatching = false; t1.moveNext$0();) {
        element = t1.get$current();
        if (test.call$1(element) === true) {
          result = element;
          foundMatching = true;
        }
      }
      if (foundMatching)
        return result;
      if (orElse != null)
        return orElse.call$0();
      throw H.wrapException(new P.StateError("No matching element"));
    }, "call$2$orElse" /* tearOffInfo */, "get$lastWhere", 2, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__bool__E__Object_1", args: [{func: "bool__E4", ret: J.JSBool, args: [E]}], named: {orElse: {func: "Object_", ret: P.Object}}};
      }, this.$receiver, "IterableMixin");
    }, 370, 428, 430, "lastWhere"],
    singleWhere$1: [function(_, test) {
      var t1, result, foundMatching, element;
      for (t1 = this.get$iterator(0), result = null, foundMatching = false; t1.moveNext$0();) {
        element = t1.get$current();
        if (test.call$1(element) === true) {
          if (foundMatching)
            throw H.wrapException(new P.StateError("More than one matching element"));
          result = element;
          foundMatching = true;
        }
      }
      if (foundMatching)
        return result;
      throw H.wrapException(new P.StateError("No matching element"));
    }, "call$1" /* tearOffInfo */, "get$singleWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__bool__E1", ret: E, args: [{func: "bool__E4", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "IterableMixin");
    }, 428, "singleWhere"],
    elementAt$1: [function(_, index) {
      var t1, remaining, element, t2;
      if (typeof index !== "number" || Math.floor(index) !== index || index < 0)
        throw H.wrapException(new P.RangeError("value " + H.S(index)));
      for (t1 = this.get$iterator(0), remaining = index; t1.moveNext$0();) {
        element = t1.get$current();
        t2 = J.getInterceptor(remaining);
        if (t2.$eq(remaining, 0))
          return element;
        remaining = t2.$sub(remaining, 1);
      }
      throw H.wrapException(new P.RangeError("value " + H.S(index)));
    }, "call$1" /* tearOffInfo */, "get$elementAt", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int9", ret: E, args: [J.JSInt]};
      }, this.$receiver, "IterableMixin");
    }, 321, "elementAt"],
    toString$0: [function(_) {
      return P._iterableToString(this);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isIterable: true,
    "<>": [214]
  },
  "+IterableMixin": [0, 1628],
  IterableBase: {
    "": "Object;",
    map$1: [function(_, f) {
      return H.MappedIterable_MappedIterable(this, f, H.getRuntimeTypeArgument(this, "IterableBase", 0), null);
    }, "call$1" /* tearOffInfo */, "get$map", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__dynamic__E2", ret: P.Iterable, args: [{func: "dynamic__E4", args: [E]}]};
      }, this.$receiver, "IterableBase");
    }, 412, "map"],
    where$1: [function(_, f) {
      return H.setRuntimeTypeInfo(new H.WhereIterable(this, f), [H.getRuntimeTypeArgument(this, "IterableBase", 0)]);
    }, "call$1" /* tearOffInfo */, "get$where", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E2", ret: [P.Iterable, E], args: [{func: "bool__E5", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "IterableBase");
    }, 412, "where"],
    expand$1: [function(_, f) {
      return H.setRuntimeTypeInfo(new H.ExpandIterable(this, f), [H.getRuntimeTypeArgument(this, "IterableBase", 0), null]);
    }, "call$1" /* tearOffInfo */, "get$expand", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__Iterable__E1", ret: P.Iterable, args: [{func: "Iterable__E1", ret: P.Iterable, args: [E]}]};
      }, this.$receiver, "IterableBase");
    }, 412, "expand"],
    contains$1: [function(_, element) {
      var t1;
      for (t1 = this.get$iterator(0); t1.moveNext$0() === true;)
        if (J.$eq(t1.get$current(), element))
          return true;
      return false;
    }, "call$1" /* tearOffInfo */, "get$contains", 2, 0, 1047, 453, "contains"],
    forEach$1: [function(_, f) {
      var t1;
      for (t1 = this.get$iterator(0); t1.moveNext$0() === true;)
        f.call$1(t1.get$current());
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__void__E5", void: true, args: [{func: "void__E6", void: true, args: [E]}]};
      }, this.$receiver, "IterableBase");
    }, 412, "forEach"],
    reduce$1: [function(_, combine) {
      var iterator, value;
      iterator = this.get$iterator(0);
      if (iterator.moveNext$0() !== true)
        throw H.wrapException(new P.StateError("No elements"));
      value = iterator.get$current();
      for (; iterator.moveNext$0() === true;)
        value = combine.call$2(value, iterator.get$current());
      return value;
    }, "call$1" /* tearOffInfo */, "get$reduce", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__E__E_E1", ret: E, args: [{func: "E__E_E1", ret: E, args: [E, E]}]};
      }, this.$receiver, "IterableBase");
    }, 424, "reduce"],
    fold$2: [function(_, initialValue, combine) {
      var t1, value;
      for (t1 = this.get$iterator(0), value = initialValue; t1.moveNext$0() === true;)
        value = combine.call$2(value, t1.get$current());
      return value;
    }, "call$2" /* tearOffInfo */, "get$fold", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__dynamic_dynamic__dynamic_E2", args: [null, {func: "dynamic__dynamic_E2", args: [null, E]}]};
      }, this.$receiver, "IterableBase");
    }, 426, 424, "fold"],
    every$1: [function(_, f) {
      var t1;
      for (t1 = this.get$iterator(0); t1.moveNext$0() === true;)
        if (f.call$1(t1.get$current()) !== true)
          return false;
      return true;
    }, "call$1" /* tearOffInfo */, "get$every", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__bool__E2", ret: J.JSBool, args: [{func: "bool__E5", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "IterableBase");
    }, 412, "every"],
    join$1: [function(_, separator) {
      var iterator, buffer, t1, str, t2;
      iterator = this.get$iterator(0);
      if (iterator.moveNext$0() !== true)
        return "";
      buffer = P.StringBuffer$("");
      if (separator == null || J.$eq(separator, ""))
        do {
          t1 = H.S(iterator.get$current());
          buffer._contents = buffer._contents + t1;
        } while (iterator.moveNext$0() === true);
      else {
        buffer.write$1(H.S(iterator.get$current()));
        for (t1 = typeof separator === "string"; iterator.moveNext$0() === true;) {
          str = t1 ? separator : H.S(separator);
          buffer._contents = buffer._contents + str;
          t2 = H.S(iterator.get$current());
          buffer._contents = buffer._contents + t2;
        }
      }
      return buffer._contents;
    }, "call$1" /* tearOffInfo */, "get$join", 0, 2, 1049, 806, 1050, "join"],
    any$1: [function(_, f) {
      var t1;
      for (t1 = this.get$iterator(0); t1.moveNext$0() === true;)
        if (f.call$1(t1.get$current()) === true)
          return true;
      return false;
    }, "call$1" /* tearOffInfo */, "get$any", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__bool__E2", ret: J.JSBool, args: [{func: "bool__E5", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "IterableBase");
    }, 412, "any"],
    toList$1$growable: [function(_, growable) {
      return P.List_List$from(this, growable, H.getRuntimeTypeArgument(this, "IterableBase", 0));
    }, function($receiver) {
      return this.toList$1$growable($receiver, true);
    }, "toList$0", "call$1$growable" /* tearOffInfo */, null /* tearOffInfo */, "get$toList", 0, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "List___bool3", ret: [J.JSArray, E], named: {growable: J.JSBool}};
      }, this.$receiver, "IterableBase");
    }, 816, 817, "toList"],
    toSet$0: [function(_) {
      var t1 = P.LinkedHashSet_LinkedHashSet(null, null, null, H.getRuntimeTypeArgument(this, "IterableBase", 0));
      t1.addAll$1(0, this);
      return t1;
    }, "call$0" /* tearOffInfo */, "get$toSet", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set_10", ret: [P.Set, E]};
      }, this.$receiver, "IterableBase");
    }, "toSet"],
    get$length: [function(_) {
      var it, count;
      it = this.get$iterator(0);
      for (count = 0; it.moveNext$0() === true;)
        ++count;
      return count;
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$isEmpty: [function(_) {
      return this.get$iterator(0).moveNext$0() !== true;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$isNotEmpty: [function(_) {
      return this.get$isEmpty(0) !== true;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty"],
    take$1: [function(_, n) {
      return H.TakeIterable_TakeIterable(this, n, H.getRuntimeTypeArgument(this, "IterableBase", 0));
    }, "call$1" /* tearOffInfo */, "get$take", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int4", ret: [P.Iterable, E], args: [J.JSInt]};
      }, this.$receiver, "IterableBase");
    }, 1051, "take"],
    takeWhile$1: [function(_, test) {
      return H.setRuntimeTypeInfo(new H.TakeWhileIterable(this, test), [H.getRuntimeTypeArgument(this, "IterableBase", 0)]);
    }, "call$1" /* tearOffInfo */, "get$takeWhile", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E2", ret: [P.Iterable, E], args: [{func: "bool__E5", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "IterableBase");
    }, 428, "takeWhile"],
    skip$1: [function(_, n) {
      return H.SkipIterable_SkipIterable(this, n, H.getRuntimeTypeArgument(this, "IterableBase", 0));
    }, "call$1" /* tearOffInfo */, "get$skip", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int4", ret: [P.Iterable, E], args: [J.JSInt]};
      }, this.$receiver, "IterableBase");
    }, 1051, "skip"],
    skipWhile$1: [function(_, test) {
      return H.setRuntimeTypeInfo(new H.SkipWhileIterable(this, test), [H.getRuntimeTypeArgument(this, "IterableBase", 0)]);
    }, "call$1" /* tearOffInfo */, "get$skipWhile", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E2", ret: [P.Iterable, E], args: [{func: "bool__E5", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "IterableBase");
    }, 428, "skipWhile"],
    get$first: [function(_) {
      var it = this.get$iterator(0);
      if (it.moveNext$0() !== true)
        throw H.wrapException(new P.StateError("No elements"));
      return it.get$current();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_17", ret: E};
      }, this.$receiver, "IterableBase");
    }, "first"],
    get$last: [function(_) {
      var it, result;
      it = this.get$iterator(0);
      if (it.moveNext$0() !== true)
        throw H.wrapException(P.StateError$("No elements"));
      do
        result = it.get$current();
      while (it.moveNext$0() === true);
      return result;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_17", ret: E};
      }, this.$receiver, "IterableBase");
    }, "last"],
    get$single: [function(_) {
      var it, result;
      it = this.get$iterator(0);
      if (it.moveNext$0() !== true)
        throw H.wrapException(new P.StateError("No elements"));
      result = it.get$current();
      if (it.moveNext$0() === true)
        throw H.wrapException(new P.StateError("More than one element"));
      return result;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_17", ret: E};
      }, this.$receiver, "IterableBase");
    }, "single"],
    firstWhere$2$orElse: [function(_, test, orElse) {
      var t1, element;
      for (t1 = this.get$iterator(0); t1.moveNext$0() === true;) {
        element = t1.get$current();
        if (test.call$1(element) === true)
          return element;
      }
      if (orElse != null)
        return orElse.call$0();
      throw H.wrapException(P.StateError$("No matching element"));
    }, function($receiver, test) {
      return this.firstWhere$2$orElse($receiver, test, null);
    }, "firstWhere$1", "call$2$orElse" /* tearOffInfo */, null /* tearOffInfo */, "get$firstWhere", 2, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__bool__E__Object_2", args: [{func: "bool__E5", ret: J.JSBool, args: [E]}], named: {orElse: {func: "Object_", ret: P.Object}}};
      }, this.$receiver, "IterableBase");
    }, 370, 428, 430, "firstWhere"],
    lastWhere$2$orElse: [function(_, test, orElse) {
      var t1, result, foundMatching, element;
      for (t1 = this.get$iterator(0), result = null, foundMatching = false; t1.moveNext$0() === true;) {
        element = t1.get$current();
        if (test.call$1(element) === true) {
          result = element;
          foundMatching = true;
        }
      }
      if (foundMatching)
        return result;
      if (orElse != null)
        return orElse.call$0();
      throw H.wrapException(new P.StateError("No matching element"));
    }, "call$2$orElse" /* tearOffInfo */, "get$lastWhere", 2, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__bool__E__Object_2", args: [{func: "bool__E5", ret: J.JSBool, args: [E]}], named: {orElse: {func: "Object_", ret: P.Object}}};
      }, this.$receiver, "IterableBase");
    }, 370, 428, 430, "lastWhere"],
    singleWhere$1: [function(_, test) {
      var t1, result, foundMatching, element;
      for (t1 = this.get$iterator(0), result = null, foundMatching = false; t1.moveNext$0() === true;) {
        element = t1.get$current();
        if (test.call$1(element) === true) {
          if (foundMatching)
            throw H.wrapException(new P.StateError("More than one matching element"));
          result = element;
          foundMatching = true;
        }
      }
      if (foundMatching)
        return result;
      throw H.wrapException(new P.StateError("No matching element"));
    }, "call$1" /* tearOffInfo */, "get$singleWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__bool__E2", ret: E, args: [{func: "bool__E5", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "IterableBase");
    }, 428, "singleWhere"],
    elementAt$1: [function(_, index) {
      var t1, remaining, element, t2;
      if (typeof index !== "number" || Math.floor(index) !== index || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      for (t1 = this.get$iterator(0), remaining = index; t1.moveNext$0() === true;) {
        element = t1.get$current();
        t2 = J.getInterceptor(remaining);
        if (t2.$eq(remaining, 0))
          return element;
        remaining = t2.$sub(remaining, 1);
      }
      throw H.wrapException(P.RangeError$value(index));
    }, "call$1" /* tearOffInfo */, "get$elementAt", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int10", ret: E, args: [J.JSInt]};
      }, this.$receiver, "IterableBase");
    }, 321, "elementAt"],
    toString$0: [function(_) {
      return P._iterableToString(this);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isIterable: true,
    "<>": [15],
    static: {IterableBase$: [function($E) {
        return H.setRuntimeTypeInfo(new P.IterableBase(), [$E]);
      }, null /* tearOffInfo */, null, 0, 0, 319, "new IterableBase" /* new IterableBase:0:0 */]}
  },
  "+IterableBase": [0, 1629],
  HasNextIterator: {
    "": "Object;_collection$_iterator@-1371,_collection$_state@-1075",
    get$hasNext: [function() {
      if (J.$eq(this._collection$_state, 2))
        this._move$0();
      return J.$eq(this._collection$_state, 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "hasNext"],
    next$0: [function() {
      if (J.$eq(this._collection$_state, 2))
        this._move$0();
      if (!J.$eq(this._collection$_state, 0))
        throw H.wrapException(new P.StateError("No more elements"));
      var result = this._collection$_iterator.get$current();
      this._move$0();
      return result;
    }, "call$0" /* tearOffInfo */, "get$next", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_18", ret: E};
      }, this.$receiver, "HasNextIterator");
    }, "next"],
    _move$0: [function() {
      if (this._collection$_iterator.moveNext$0() === true)
        this._collection$_state = 0;
      else
        this._collection$_state = 1;
    }, "call$0" /* tearOffInfo */, "get$_move", 0, 0, 494, "_move"],
    "<>": [193],
    static: {"": "HasNextIterator__HAS_NEXT_AND_NEXT_IN_CURRENT<-1075,HasNextIterator__NO_NEXT<-1075,HasNextIterator__NOT_MOVED_YET<-1075", HasNextIterator$: [function(_iterator, $E) {
        return H.setRuntimeTypeInfo(new P.HasNextIterator(_iterator, 2), [$E]);
      }, null /* tearOffInfo */, null, 2, 0, 657, 658, "new HasNextIterator" /* new HasNextIterator:1:0 */]}
  },
  "+HasNextIterator": [0],
  LinkedHashMap: {
    "": "Object;",
    $isLinkedHashMap: true,
    $isMap: true,
    "<>": [28, 29],
    static: {LinkedHashMap_LinkedHashMap: [function(equals, hashCode, isValidKey, $K, $V) {
        if (isValidKey == null)
          if (hashCode == null) {
            if (equals == null)
              return H.setRuntimeTypeInfo(new P._LinkedHashMap(0, null, null, null, null, null, 0), [$K, $V]);
            hashCode = P._defaultHashCode$closure();
          } else {
            if (P.identityHashCode$closure() === hashCode && P.identical$closure() === equals)
              return H.setRuntimeTypeInfo(new P._LinkedIdentityHashMap(0, null, null, null, null, null, 0), [$K, $V]);
            if (equals == null)
              equals = P._defaultEquals$closure();
          }
        else {
          if (hashCode == null)
            hashCode = P._defaultHashCode$closure();
          if (equals == null)
            equals = P._defaultEquals$closure();
        }
        return P._LinkedCustomHashMap$(equals, hashCode, isValidKey, $K, $V);
      }, "call$3$equals$hashCode$isValidKey" /* tearOffInfo */, null, 0, 7, function() {
        return H.computeSignature(function(K, V) {
          return {func: "LinkedHashMap___bool__K_K_int__K_bool__dynamic", ret: [P.LinkedHashMap, K, V], named: {equals: {func: "bool__K_K2", ret: J.JSBool, args: [K, K]}, hashCode: {func: "int__K2", ret: J.JSInt, args: [K]}, isValidKey: {func: "bool__dynamic", ret: J.JSBool, args: [null]}}};
        }, this.$receiver, "LinkedHashMap");
      }, 370, 370, 370, 588, 650, 651, "new LinkedHashMap" /* new LinkedHashMap:0:3:equals:hashCode:isValidKey */], LinkedHashMap_LinkedHashMap$identity: [function($K, $V) {
        return H.setRuntimeTypeInfo(new P._LinkedIdentityHashMap(0, null, null, null, null, null, 0), [$K, $V]);
      }, "call$0" /* tearOffInfo */, null, 0, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "LinkedHashMap_", ret: [P.LinkedHashMap, K, V]};
        }, this.$receiver, "LinkedHashMap");
      }, "new LinkedHashMap$identity" /* new LinkedHashMap$identity:0:0 */], LinkedHashMap_LinkedHashMap$from: [function(other, $K, $V) {
        var t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V);
        t1.addAll$1(0, other);
        return t1;
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "LinkedHashMap__Map", ret: [P.LinkedHashMap, K, V], args: [[P.Map, K, V]]};
        }, this.$receiver, "LinkedHashMap");
      }, 403, "new LinkedHashMap$from" /* new LinkedHashMap$from:1:0 */], LinkedHashMap_LinkedHashMap$fromIterable: [function(iterable, key, value, $K, $V) {
        var map = P.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V);
        P.Maps__fillMapWithMappedIterable(map, iterable, key, value);
        return map;
      }, "call$3$key$value" /* tearOffInfo */, null, 2, 5, function() {
        return H.computeSignature(function(K, V) {
          return {func: "LinkedHashMap__Iterable__K__dynamic_V__dynamic", ret: [P.LinkedHashMap, K, V], args: [P.Iterable], named: {key: {func: "K__dynamic0", ret: K, args: [null]}, value: {func: "V__dynamic0", ret: V, args: [null]}}};
        }, this.$receiver, "LinkedHashMap");
      }, 370, 370, 417, 312, 280, "new LinkedHashMap$fromIterable" /* new LinkedHashMap$fromIterable:1:2:key:value */], LinkedHashMap_LinkedHashMap$fromIterables: [function(keys, values, $K, $V) {
        var map = P.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V);
        P.Maps__fillMapWithIterables(map, keys, values);
        return map;
      }, "call$2" /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "LinkedHashMap__Iterable_Iterable", ret: [P.LinkedHashMap, K, V], args: [[P.Iterable, K], [P.Iterable, V]]};
        }, this.$receiver, "LinkedHashMap");
      }, 652, 653, "new LinkedHashMap$fromIterables" /* new LinkedHashMap$fromIterables:2:0 */]}
  },
  "+LinkedHashMap": [0, 1630],
  LinkedHashSet: {
    "": "Object;",
    $isSet: true,
    $isEfficientLength: true,
    $isIterable: true,
    "<>": [21],
    static: {LinkedHashSet_LinkedHashSet: [function(equals, hashCode, isValidKey, $E) {
        if (isValidKey == null)
          if (hashCode == null) {
            if (equals == null)
              return H.setRuntimeTypeInfo(new P._LinkedHashSet(0, null, null, null, null, null, 0), [$E]);
            hashCode = P._defaultHashCode$closure();
          } else {
            if (P.identityHashCode$closure() === hashCode && P.identical$closure() === equals)
              return H.setRuntimeTypeInfo(new P._LinkedIdentityHashSet(0, null, null, null, null, null, 0), [$E]);
            if (equals == null)
              equals = P._defaultEquals$closure();
          }
        else {
          if (hashCode == null)
            hashCode = P._defaultHashCode$closure();
          if (equals == null)
            equals = P._defaultEquals$closure();
        }
        return P._LinkedCustomHashSet$(equals, hashCode, isValidKey, $E);
      }, "call$3$equals$hashCode$isValidKey" /* tearOffInfo */, null, 0, 7, function() {
        return H.computeSignature(function(E) {
          return {func: "LinkedHashSet___bool__E_E_int__E_bool__dynamic", ret: [P.LinkedHashSet, E], named: {equals: {func: "bool__E_E2", ret: J.JSBool, args: [E, E]}, hashCode: {func: "int__E2", ret: J.JSInt, args: [E]}, isValidKey: {func: "bool__dynamic", ret: J.JSBool, args: [null]}}};
        }, this.$receiver, "LinkedHashSet");
      }, 370, 370, 370, 588, 650, 651, "new LinkedHashSet" /* new LinkedHashSet:0:3:equals:hashCode:isValidKey */], LinkedHashSet_LinkedHashSet$identity: [function($E) {
        return H.setRuntimeTypeInfo(new P._LinkedIdentityHashSet(0, null, null, null, null, null, 0), [$E]);
      }, "call$0" /* tearOffInfo */, null, 0, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "LinkedHashSet_", ret: [P.LinkedHashSet, E]};
        }, this.$receiver, "LinkedHashSet");
      }, "new LinkedHashSet$identity" /* new LinkedHashSet$identity:0:0 */], LinkedHashSet_LinkedHashSet$from: [function(iterable, $E) {
        var t1 = P.LinkedHashSet_LinkedHashSet(null, null, null, $E);
        t1.addAll$1(0, iterable);
        return t1;
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "LinkedHashSet__Iterable", ret: [P.LinkedHashSet, E], args: [[P.Iterable, E]]};
        }, this.$receiver, "LinkedHashSet");
      }, 417, "new LinkedHashSet$from" /* new LinkedHashSet$from:1:0 */]}
  },
  "+LinkedHashSet": [0, 1631],
  LinkedList: {
    "": "IterableBase;_modificationCount@-1075,_collection$_length@-1075,_next@-1632,_previous@-1632",
    addFirst$1: [function(entry) {
      this._insertAfter$2(this, entry);
    }, "call$1" /* tearOffInfo */, "get$addFirst", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E7", void: true, args: [E]};
      }, this.$receiver, "LinkedList");
    }, 252, "addFirst"],
    add$1: [function(_, entry) {
      this._insertAfter$2(this._previous, entry);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E7", void: true, args: [E]};
      }, this.$receiver, "LinkedList");
    }, 252, "add"],
    addAll$1: [function(_, entries) {
      J.forEach$1$a(entries, new P.LinkedList_addAll_closure(this));
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__Iterable5", void: true, args: [[P.Iterable, E]]};
      }, this.$receiver, "LinkedList");
    }, 1633, "addAll"],
    remove$1: [function(_, entry) {
      if (!J.$eq(entry.get$_collection$_list(), this))
        return false;
      this._unlink$1(entry);
      return true;
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__E6", ret: J.JSBool, args: [E]};
      }, this.$receiver, "LinkedList");
    }, 252, "remove"],
    get$iterator: [function(_) {
      var t1 = new P._LinkedListIterator(this, this._modificationCount, null, this._next);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterator_13", ret: [P.Iterator, E]};
      }, this.$receiver, "LinkedList");
    }, "iterator"],
    toString$0: [function(_) {
      return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    get$length: [function(_) {
      return this._collection$_length;
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    clear$0: [function(_) {
      var next, next0;
      this._modificationCount = J.$add$ns(this._modificationCount, 1);
      next = this._next;
      for (; next !== this; next = next0) {
        next0 = next.get$_next();
        next.set$_collection$_list(null);
        next.set$_previous(null);
        next.set$_next(null);
      }
      this._previous = this;
      this._next = this;
      this._collection$_length = 0;
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    get$first: [function(_) {
      var t1 = this._next;
      if (t1 === this)
        throw H.wrapException(new P.StateError("No such element"));
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_19", ret: E};
      }, this.$receiver, "LinkedList");
    }, "first"],
    get$last: [function(_) {
      var t1 = this._previous;
      if (t1 === this)
        throw H.wrapException(new P.StateError("No such element"));
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_19", ret: E};
      }, this.$receiver, "LinkedList");
    }, "last"],
    get$single: [function(_) {
      var t1, t2;
      t1 = this._previous;
      if (t1 === this)
        throw H.wrapException(new P.StateError("No such element"));
      t2 = this._next;
      if (t1 == null ? t2 != null : t1 !== t2)
        throw H.wrapException(new P.StateError("Too many elements"));
      return t2;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_19", ret: E};
      }, this.$receiver, "LinkedList");
    }, "single"],
    forEach$1: [function(_, action) {
      var modificationCount, current, t1;
      modificationCount = this._modificationCount;
      current = this._next;
      for (t1 = J.getInterceptor(modificationCount); current !== this;) {
        action.call$1(current);
        if (!t1.$eq(modificationCount, this._modificationCount))
          throw H.wrapException(P.ConcurrentModificationError$(this));
        current = current.get$_next();
      }
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__void__E6", void: true, args: [{func: "void__E7", void: true, args: [E]}]};
      }, this.$receiver, "LinkedList");
    }, 1174, "forEach"],
    get$isEmpty: [function(_) {
      return J.$eq(this._collection$_length, 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    _insertAfter$2: [function(entry, newEntry) {
      var successor;
      if (newEntry.get$list() != null)
        throw H.wrapException(new P.StateError("LinkedListEntry is already in a LinkedList"));
      this._modificationCount = J.$add$ns(this._modificationCount, 1);
      newEntry.set$_collection$_list(this);
      successor = entry.get$_next();
      successor.set$_previous(newEntry);
      newEntry.set$_previous(entry);
      newEntry.set$_next(successor);
      entry.set$_next(newEntry);
      this._collection$_length = J.$add$ns(this._collection$_length, 1);
    }, "call$2" /* tearOffInfo */, "get$_insertAfter", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void___LinkedListLink_E", void: true, args: [P._LinkedListLink, E]};
      }, this.$receiver, "LinkedList");
    }, 252, 1634, "_insertAfter"],
    _unlink$1: [function(entry) {
      this._modificationCount = J.$add$ns(this._modificationCount, 1);
      entry.get$_next().set$_previous(entry.get$_previous());
      entry.get$_previous().set$_next(entry.get$_next());
      this._collection$_length = J.$sub$n(this._collection$_length, 1);
      entry.set$_previous(null);
      entry.set$_next(null);
      entry.set$_collection$_list(null);
    }, "call$1" /* tearOffInfo */, "get$_unlink", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__LinkedListEntry", void: true, args: [[P.LinkedListEntry, E]]};
      }, this.$receiver, "LinkedList");
    }, 252, "_unlink"],
    $asIterableBase: null,
    $asIterable: null,
    "<>": [215],
    static: {LinkedList$: [function($E) {
        var t1 = H.setRuntimeTypeInfo(new P.LinkedList(0, 0, null, null), [$E]);
        t1._previous = t1;
        t1._next = t1;
        return t1;
      }, null /* tearOffInfo */, null, 0, 0, 319, "new LinkedList" /* new LinkedList:0:0 */]}
  },
  "+LinkedList": [1635, 1632],
  LinkedList_addAll_closure: {
    "": "Closure:241;this_0-370",
    call$1: [function(entry) {
      var t1 = this.this_0;
      return t1._insertAfter$2(t1.get$_previous(), entry);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 252, "call"]
  },
  "+LinkedList_addAll_closure": [1060],
  _LinkedListIterator: {
    "": "Object;_collection$_list<-1636,_modificationCount<-1075,_collection$_current@-1637,_next@-1632",
    get$current: [function() {
      return this._collection$_current;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_20", ret: E};
      }, this.$receiver, "_LinkedListIterator");
    }, "current"],
    moveNext$0: [function() {
      var t1, t2;
      t1 = this._next;
      t2 = this._collection$_list;
      if (t1 == null ? t2 == null : t1 === t2) {
        this._collection$_current = null;
        return false;
      }
      if (!J.$eq(this._modificationCount, t2.get$_modificationCount()))
        throw H.wrapException(P.ConcurrentModificationError$(this));
      t1 = this._next;
      this._collection$_current = t1;
      this._next = t1.get$_next();
      return true;
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    "<>": [217],
    static: {_LinkedListIterator$: [function(list, $E) {
        return H.setRuntimeTypeInfo(new P._LinkedListIterator(list, list.get$_modificationCount(), null, list.get$_next()), [$E]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "dynamic__LinkedList", args: [[P.LinkedList, E]]};
        }, this.$receiver, "_LinkedListIterator");
      }, 352, "new _LinkedListIterator" /* new _LinkedListIterator:1:0 */]}
  },
  "+_LinkedListIterator": [0, 1638],
  _LinkedListLink: {
    "": "Object;_next@-1632,_previous@-1632"
  },
  "+_LinkedListLink": [0],
  LinkedListEntry: {
    "": "Object;_collection$_list@-1639,_next@-1632,_previous@-1632",
    get$list: [function() {
      return this._collection$_list;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "LinkedList_", ret: [P.LinkedList, E]};
      }, this.$receiver, "LinkedListEntry");
    }, "list"],
    unlink$0: [function() {
      this._collection$_list._unlink$1(this);
    }, "call$0" /* tearOffInfo */, "get$unlink", 0, 0, 494, "unlink"],
    get$next: [function() {
      var t1, t2;
      t1 = this._next;
      t2 = this._collection$_list;
      if (t1 == null ? t2 == null : t1 === t2)
        return;
      return H.subtypeOfRuntimeTypeCast(t1, H.getTypeArgumentByIndex(this, 0));
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_21", ret: E};
      }, this.$receiver, "LinkedListEntry");
    }, "next"],
    next$0: function() {
      return this.get$next().call$0();
    },
    get$previous: [function() {
      var t1, t2;
      t1 = this._previous;
      t2 = this._collection$_list;
      if (t1 == null ? t2 == null : t1 === t2)
        return;
      return H.subtypeOfRuntimeTypeCast(t1, H.getTypeArgumentByIndex(this, 0));
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_21", ret: E};
      }, this.$receiver, "LinkedListEntry");
    }, "previous"],
    insertAfter$1: [function(entry) {
      this._collection$_list._insertAfter$2(this, entry);
    }, "call$1" /* tearOffInfo */, "get$insertAfter", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E8", void: true, args: [E]};
      }, this.$receiver, "LinkedListEntry");
    }, 252, "insertAfter"],
    insertBefore$1: [function(entry) {
      this._collection$_list._insertAfter$2(this._previous, entry);
    }, "call$1" /* tearOffInfo */, "get$insertBefore", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E8", void: true, args: [E]};
      }, this.$receiver, "LinkedListEntry");
    }, 252, "insertBefore"],
    "<>": [222]
  },
  "+LinkedListEntry": [0, 1632],
  ListBase: {
    "": "Object+ListMixin;",
    $isList: true,
    $isEfficientLength: true,
    $isIterable: true,
    "<>": [96]
  },
  "+ListBase": [0, 1640],
  ListMixin: {
    "": "Object;",
    get$iterator: [function(_) {
      return H.setRuntimeTypeInfo(new H.ListIterator(this, this.get$length(0), 0, null), [H.getRuntimeTypeArgument(this, "ListMixin", 0)]);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterator_14", ret: [P.Iterator, E]};
      }, this.$receiver, "ListMixin");
    }, "iterator"],
    elementAt$1: [function(_, index) {
      return this.$index(0, index);
    }, "call$1" /* tearOffInfo */, "get$elementAt", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int11", ret: E, args: [J.JSInt]};
      }, this.$receiver, "ListMixin");
    }, 321, "elementAt"],
    forEach$1: [function(_, action) {
      var $length, i;
      $length = this.get$length(0);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        action.call$1(this.$index(0, i));
        if ($length !== this.get$length(0))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__void__E7", void: true, args: [{func: "void__E9", void: true, args: [E]}]};
      }, this.$receiver, "ListMixin");
    }, 1174, "forEach"],
    get$isEmpty: [function(_) {
      return J.$eq(this.get$length(0), 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$isNotEmpty: [function(_) {
      return !J.$eq(this.get$length(0), 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty"],
    get$first: [function(_) {
      if (J.$eq(this.get$length(0), 0))
        throw H.wrapException(new P.StateError("No elements"));
      return this.$index(0, 0);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_22", ret: E};
      }, this.$receiver, "ListMixin");
    }, "first"],
    get$last: [function(_) {
      if (J.$eq(this.get$length(0), 0))
        throw H.wrapException(P.StateError$("No elements"));
      return this.$index(0, J.$sub$n(this.get$length(0), 1));
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_22", ret: E};
      }, this.$receiver, "ListMixin");
    }, "last"],
    get$single: [function(_) {
      if (J.$eq(this.get$length(0), 0))
        throw H.wrapException(new P.StateError("No elements"));
      if (J.$gt$n(this.get$length(0), 1))
        throw H.wrapException(new P.StateError("Too many elements"));
      return this.$index(0, 0);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_22", ret: E};
      }, this.$receiver, "ListMixin");
    }, "single"],
    contains$1: [function(_, element) {
      var $length, i;
      $length = this.get$length(0);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        if (J.$eq(this.$index(0, i), element))
          return true;
        if ($length !== this.get$length(0))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      return false;
    }, "call$1" /* tearOffInfo */, "get$contains", 2, 0, 1047, 453, "contains"],
    every$1: [function(_, test) {
      var $length, i;
      $length = this.get$length(0);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        if (test.call$1(this.$index(0, i)) !== true)
          return false;
        if ($length !== this.get$length(0))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      return true;
    }, "call$1" /* tearOffInfo */, "get$every", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__bool__E3", ret: J.JSBool, args: [{func: "bool__E7", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "ListMixin");
    }, 428, "every"],
    any$1: [function(_, test) {
      var $length, i;
      $length = this.get$length(0);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        if (test.call$1(this.$index(0, i)) === true)
          return true;
        if ($length !== this.get$length(0))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      return false;
    }, "call$1" /* tearOffInfo */, "get$any", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__bool__E3", ret: J.JSBool, args: [{func: "bool__E7", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "ListMixin");
    }, 428, "any"],
    firstWhere$2$orElse: [function(_, test, orElse) {
      var $length, i, element;
      $length = this.get$length(0);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        element = this.$index(0, i);
        if (test.call$1(element) === true)
          return element;
        if ($length !== this.get$length(0))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      if (orElse != null)
        return orElse.call$0();
      throw H.wrapException(P.StateError$("No matching element"));
    }, "call$2$orElse" /* tearOffInfo */, "get$firstWhere", 2, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__bool__E__Object_3", args: [{func: "bool__E7", ret: J.JSBool, args: [E]}], named: {orElse: {func: "Object_", ret: P.Object}}};
      }, this.$receiver, "ListMixin");
    }, 370, 428, 430, "firstWhere"],
    lastWhere$2$orElse: [function(_, test, orElse) {
      var $length, t1, i, t2, element;
      $length = this.get$length(0);
      for (t1 = J.getInterceptor$n($length), i = t1.$sub($length, 1); t2 = J.getInterceptor$n(i), t2.$ge(i, 0); i = t2.$sub(i, 1)) {
        element = this.$index(0, i);
        if (test.call$1(element) === true)
          return element;
        if (!t1.$eq($length, this.get$length(0)))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      if (orElse != null)
        return orElse.call$0();
      throw H.wrapException(new P.StateError("No matching element"));
    }, "call$2$orElse" /* tearOffInfo */, "get$lastWhere", 2, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__bool__E__Object_3", args: [{func: "bool__E7", ret: J.JSBool, args: [E]}], named: {orElse: {func: "Object_", ret: P.Object}}};
      }, this.$receiver, "ListMixin");
    }, 370, 428, 430, "lastWhere"],
    singleWhere$1: [function(_, test) {
      var $length, match, matchFound, i, element;
      $length = this.get$length(0);
      if (typeof $length !== "number")
        return H.iae($length);
      match = null;
      matchFound = false;
      i = 0;
      for (; i < $length; ++i) {
        element = this.$index(0, i);
        if (test.call$1(element) === true) {
          if (matchFound)
            throw H.wrapException(new P.StateError("More than one matching element"));
          match = element;
          matchFound = true;
        }
        if ($length !== this.get$length(0))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      if (matchFound)
        return match;
      throw H.wrapException(new P.StateError("No matching element"));
    }, "call$1" /* tearOffInfo */, "get$singleWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__bool__E3", ret: E, args: [{func: "bool__E7", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "ListMixin");
    }, 428, "singleWhere"],
    join$1: [function(_, separator) {
      var $length, t1, first, buffer, i, str;
      $length = this.get$length(0);
      if (J.get$isEmpty$as(separator) !== true) {
        t1 = J.getInterceptor($length);
        if (t1.$eq($length, 0))
          return "";
        first = H.S(this.$index(0, 0));
        if (!t1.$eq($length, this.get$length(0)))
          throw H.wrapException(P.ConcurrentModificationError$(this));
        buffer = P.StringBuffer$(first);
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = typeof separator === "string";
        i = 1;
        for (; i < $length; ++i) {
          str = t1 ? separator : H.S(separator);
          buffer._contents = buffer._contents + str;
          str = this.$index(0, i);
          str = typeof str === "string" ? str : H.S(str);
          buffer._contents = buffer._contents + str;
          if ($length !== this.get$length(0))
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
        return buffer._contents;
      } else {
        buffer = P.StringBuffer$("");
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          str = this.$index(0, i);
          str = typeof str === "string" ? str : H.S(str);
          buffer._contents = buffer._contents + str;
          if ($length !== this.get$length(0))
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
        return buffer._contents;
      }
    }, "call$1" /* tearOffInfo */, "get$join", 0, 2, 1049, 806, 1050, "join"],
    where$1: [function(_, test) {
      return H.setRuntimeTypeInfo(new H.WhereIterable(this, test), [H.getRuntimeTypeArgument(this, "ListMixin", 0)]);
    }, "call$1" /* tearOffInfo */, "get$where", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E3", ret: [P.Iterable, E], args: [{func: "bool__E7", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "ListMixin");
    }, 428, "where"],
    map$1: [function(_, f) {
      return H.setRuntimeTypeInfo(new H.MappedListIterable(this, f), [null, null]);
    }, "call$1" /* tearOffInfo */, "get$map", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__dynamic__E3", ret: P.Iterable, args: [{func: "dynamic__E5", args: [E]}]};
      }, this.$receiver, "ListMixin");
    }, 412, "map"],
    expand$1: [function(_, f) {
      return H.setRuntimeTypeInfo(new H.ExpandIterable(this, f), [H.getRuntimeTypeArgument(this, "ListMixin", 0), null]);
    }, "call$1" /* tearOffInfo */, "get$expand", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__Iterable__E2", ret: P.Iterable, args: [{func: "Iterable__E2", ret: P.Iterable, args: [E]}]};
      }, this.$receiver, "ListMixin");
    }, 412, "expand"],
    reduce$1: [function(_, combine) {
      var value, i, t1;
      if (J.$eq(this.get$length(0), 0))
        throw H.wrapException(new P.StateError("No elements"));
      value = this.$index(0, 0);
      i = 1;
      while (true) {
        t1 = this.get$length(0);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        value = combine.call$2(value, this.$index(0, i));
        ++i;
      }
      return value;
    }, "call$1" /* tearOffInfo */, "get$reduce", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__E__E_E2", ret: E, args: [{func: "E__E_E2", ret: E, args: [E, E]}]};
      }, this.$receiver, "ListMixin");
    }, 424, "reduce"],
    fold$2: [function(_, initialValue, combine) {
      var $length, value, i;
      $length = this.get$length(0);
      if (typeof $length !== "number")
        return H.iae($length);
      value = initialValue;
      i = 0;
      for (; i < $length; ++i) {
        value = combine.call$2(value, this.$index(0, i));
        if ($length !== this.get$length(0))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      return value;
    }, "call$2" /* tearOffInfo */, "get$fold", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__dynamic_dynamic__dynamic_E3", args: [null, {func: "dynamic__dynamic_E3", args: [null, E]}]};
      }, this.$receiver, "ListMixin");
    }, 426, 424, "fold"],
    skip$1: [function(_, count) {
      return H.SubListIterable$(this, count, null, null);
    }, "call$1" /* tearOffInfo */, "get$skip", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int5", ret: [P.Iterable, E], args: [J.JSInt]};
      }, this.$receiver, "ListMixin");
    }, 450, "skip"],
    skipWhile$1: [function(_, test) {
      return H.setRuntimeTypeInfo(new H.SkipWhileIterable(this, test), [H.getRuntimeTypeArgument(this, "ListMixin", 0)]);
    }, "call$1" /* tearOffInfo */, "get$skipWhile", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E3", ret: [P.Iterable, E], args: [{func: "bool__E7", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "ListMixin");
    }, 428, "skipWhile"],
    take$1: [function(_, count) {
      return H.SubListIterable$(this, 0, count, null);
    }, "call$1" /* tearOffInfo */, "get$take", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int5", ret: [P.Iterable, E], args: [J.JSInt]};
      }, this.$receiver, "ListMixin");
    }, 450, "take"],
    takeWhile$1: [function(_, test) {
      return H.setRuntimeTypeInfo(new H.TakeWhileIterable(this, test), [H.getRuntimeTypeArgument(this, "ListMixin", 0)]);
    }, "call$1" /* tearOffInfo */, "get$takeWhile", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E3", ret: [P.Iterable, E], args: [{func: "bool__E7", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "ListMixin");
    }, 428, "takeWhile"],
    toList$1$growable: [function(_, growable) {
      var result, t1, i;
      if (growable === true) {
        result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgument(this, "ListMixin", 0)]);
        C.JSArray_methods.set$length(result, this.get$length(0));
      } else {
        t1 = this.get$length(0);
        if (typeof t1 !== "number")
          return H.iae(t1);
        t1 = Array(t1);
        t1.fixed$length = init;
        result = H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "ListMixin", 0)]);
      }
      i = 0;
      while (true) {
        t1 = this.get$length(0);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        t1 = this.$index(0, i);
        if (i >= result.length)
          return H.ioore(result, i);
        result[i] = t1;
        ++i;
      }
      return result;
    }, function($receiver) {
      return this.toList$1$growable($receiver, true);
    }, "toList$0", "call$1$growable" /* tearOffInfo */, null /* tearOffInfo */, "get$toList", 0, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "List___bool4", ret: [J.JSArray, E], named: {growable: J.JSBool}};
      }, this.$receiver, "ListMixin");
    }, 816, 817, "toList"],
    toSet$0: [function(_) {
      var result, i, t1;
      result = P.LinkedHashSet_LinkedHashSet(null, null, null, H.getRuntimeTypeArgument(this, "ListMixin", 0));
      i = 0;
      while (true) {
        t1 = this.get$length(0);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        result.add$1(0, this.$index(0, i));
        ++i;
      }
      return result;
    }, "call$0" /* tearOffInfo */, "get$toSet", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set_11", ret: [P.Set, E]};
      }, this.$receiver, "ListMixin");
    }, "toSet"],
    add$1: [function(_, element) {
      var t1 = this.get$length(0);
      this.set$length(0, J.$add$ns(t1, 1));
      this.$indexSet(0, t1, element);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E9", void: true, args: [E]};
      }, this.$receiver, "ListMixin");
    }, 453, "add"],
    addAll$1: [function(_, iterable) {
      var t1, element, t2;
      for (t1 = J.get$iterator$a(iterable); t1.moveNext$0() === true;) {
        element = t1.get$current();
        t2 = this.get$length(0);
        this.set$length(0, J.$add$ns(t2, 1));
        this.$indexSet(0, t2, element);
      }
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__Iterable6", void: true, args: [[P.Iterable, E]]};
      }, this.$receiver, "ListMixin");
    }, 417, "addAll"],
    remove$1: [function(_, element) {
      var i, t1;
      i = 0;
      while (true) {
        t1 = this.get$length(0);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        if (J.$eq(this.$index(0, i), element)) {
          this.setRange$4(0, i, J.$sub$n(this.get$length(0), 1), this, i + 1);
          this.set$length(0, J.$sub$n(this.get$length(0), 1));
          return true;
        }
        ++i;
      }
      return false;
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, 1047, 453, "remove"],
    removeWhere$1: [function(_, test) {
      P.ListMixin__filter(this, test, false);
    }, "call$1" /* tearOffInfo */, "get$removeWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E3", void: true, args: [{func: "bool__E7", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "ListMixin");
    }, 428, "removeWhere"],
    retainWhere$1: [function(_, test) {
      P.ListMixin__filter(this, test, true);
    }, "call$1" /* tearOffInfo */, "get$retainWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E3", void: true, args: [{func: "bool__E7", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "ListMixin");
    }, 428, "retainWhere"],
    clear$0: [function(_) {
      this.set$length(0, 0);
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    removeLast$0: [function(_) {
      var result;
      if (J.$eq(this.get$length(0), 0))
        throw H.wrapException(P.StateError$("No elements"));
      result = this.$index(0, J.$sub$n(this.get$length(0), 1));
      this.set$length(0, J.$sub$n(this.get$length(0), 1));
      return result;
    }, "call$0" /* tearOffInfo */, "get$removeLast", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_22", ret: E};
      }, this.$receiver, "ListMixin");
    }, "removeLast"],
    sort$1: [function(_, compare) {
      if (compare == null)
        compare = P.Comparable_compare$closure();
      H.Sort__doSort(this, 0, J.$sub$n(this.get$length(0), 1), compare);
    }, "call$1" /* tearOffInfo */, "get$sort", 0, 2, function() {
      return H.computeSignature(function(E) {
        return {func: "void___int__E_E0", void: true, opt: [{func: "int__E_E2", ret: J.JSInt, args: [E, E]}]};
      }, this.$receiver, "ListMixin");
    }, 370, 459, "sort"],
    shuffle$1: [function(_, random) {
      var $length, t1, pos, tmp;
      if (random == null)
        random = C.C__JSRandom;
      $length = this.get$length(0);
      for (; t1 = J.getInterceptor$n($length), t1.$gt($length, 1);) {
        pos = random.nextInt$1($length);
        $length = t1.$sub($length, 1);
        tmp = this.$index(0, $length);
        this.$indexSet(0, $length, this.$index(0, pos));
        this.$indexSet(0, pos, tmp);
      }
    }, "call$1" /* tearOffInfo */, "get$shuffle", 0, 2, 1053, 370, 437, "shuffle"],
    asMap$0: [function(_) {
      return H.setRuntimeTypeInfo(new H.ListMapView(this), [null]);
    }, "call$0" /* tearOffInfo */, "get$asMap", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Map_9", ret: [P.Map, J.JSInt, E]};
      }, this.$receiver, "ListMixin");
    }, "asMap"],
    _rangeCheck$2: [function(start, end) {
      var t1 = J.getInterceptor$n(start);
      if (t1.$lt(start, 0) || t1.$gt(start, this.get$length(0)))
        throw H.wrapException(P.RangeError$range(start, 0, this.get$length(0)));
      t1 = J.getInterceptor$n(end);
      if (t1.$lt(end, start) || t1.$gt(end, this.get$length(0)))
        throw H.wrapException(P.RangeError$range(end, start, this.get$length(0)));
    }, "call$2" /* tearOffInfo */, "get$_rangeCheck", 4, 0, 1052, 439, 440, "_rangeCheck"],
    sublist$2: [function(_, start, end) {
      var $length, result, t1, i, t2;
      if (end == null)
        end = this.get$length(0);
      this._rangeCheck$2(start, end);
      $length = J.$sub$n(end, start);
      result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgument(this, "ListMixin", 0)]);
      C.JSArray_methods.set$length(result, $length);
      if (typeof $length !== "number")
        return H.iae($length);
      t1 = J.getInterceptor$ns(start);
      i = 0;
      for (; i < $length; ++i) {
        t2 = this.$index(0, t1.$add(start, i));
        if (i >= result.length)
          return H.ioore(result, i);
        result[i] = t2;
      }
      return result;
    }, function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }, "sublist$1", "call$2" /* tearOffInfo */, null /* tearOffInfo */, "get$sublist", 2, 2, function() {
      return H.computeSignature(function(E) {
        return {func: "List__int__int0", ret: [J.JSArray, E], args: [J.JSInt], opt: [J.JSInt]};
      }, this.$receiver, "ListMixin");
    }, 370, 439, 440, "sublist"],
    getRange$2: [function(_, start, end) {
      this._rangeCheck$2(start, end);
      return H.SubListIterable$(this, start, end, null);
    }, "call$2" /* tearOffInfo */, "get$getRange", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int_int0", ret: [P.Iterable, E], args: [J.JSInt, J.JSInt]};
      }, this.$receiver, "ListMixin");
    }, 439, 440, "getRange"],
    removeRange$2: [function(_, start, end) {
      var $length;
      this._rangeCheck$2(start, end);
      $length = J.$sub$n(end, start);
      this.setRange$4(0, start, J.$sub$n(this.get$length(0), $length), this, end);
      this.set$length(0, J.$sub$n(this.get$length(0), $length));
    }, "call$2" /* tearOffInfo */, "get$removeRange", 4, 0, 1052, 439, 440, "removeRange"],
    fillRange$3: [function(_, start, end, fill) {
      var i, t1;
      this._rangeCheck$2(start, end);
      for (i = start; t1 = J.getInterceptor$n(i), t1.$lt(i, end); i = t1.$add(i, 1))
        this.$indexSet(0, i, fill);
    }, "call$3" /* tearOffInfo */, "get$fillRange", 4, 2, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_int__E1", void: true, args: [J.JSInt, J.JSInt], opt: [E]};
      }, this.$receiver, "ListMixin");
    }, 370, 439, 440, 815, "fillRange"],
    setRange$4: [function(_, start, end, iterable, skipCount) {
      var t1, t2, $length, t3, otherStart, otherList, t4, i;
      t1 = J.getInterceptor$n(start);
      if (t1.$lt(start, 0) || t1.$gt(start, this.get$length(0)))
        H.throwExpression(P.RangeError$range(start, 0, this.get$length(0)));
      t2 = J.getInterceptor$n(end);
      if (t2.$lt(end, start) || t2.$gt(end, this.get$length(0)))
        H.throwExpression(P.RangeError$range(end, start, this.get$length(0)));
      $length = t2.$sub(end, start);
      t2 = J.getInterceptor($length);
      if (t2.$eq($length, 0))
        return;
      if (J.$lt$n(skipCount, 0))
        throw H.wrapException(P.ArgumentError$(skipCount));
      t3 = J.getInterceptor$a(iterable);
      if (typeof iterable === "object" && iterable !== null && (iterable.constructor === Array || !!t3.$isList)) {
        otherStart = skipCount;
        otherList = iterable;
      } else {
        otherList = t3.skip$1(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t3 = J.getInterceptor$ns(otherStart);
      t4 = J.getInterceptor$as(otherList);
      if (J.$gt$n(t3.$add(otherStart, $length), t4.get$length(otherList)))
        throw H.wrapException(P.StateError$("Not enough elements"));
      if (t3.$lt(otherStart, start))
        for (i = t2.$sub($length, 1); t2 = J.getInterceptor$n(i), t2.$ge(i, 0); i = t2.$sub(i, 1))
          this.$indexSet(0, t1.$add(start, i), t4.$index(otherList, t3.$add(otherStart, i)));
      else {
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i)
          this.$indexSet(0, t1.$add(start, i), t4.$index(otherList, t3.$add(otherStart, i)));
      }
    }, function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    }, "setRange$3", "call$4" /* tearOffInfo */, null /* tearOffInfo */, "get$setRange", 6, 2, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_int_Iterable__int1", void: true, args: [J.JSInt, J.JSInt, [P.Iterable, E]], opt: [J.JSInt]};
      }, this.$receiver, "ListMixin");
    }, 778, 439, 440, 417, 419, "setRange"],
    replaceRange$3: [function(_, start, end, newContents) {
      var t1, removeLength, insertLength, t2, delta, insertEnd, newLength;
      this._rangeCheck$2(start, end);
      t1 = J.getInterceptor$a(newContents);
      if (typeof newContents !== "object" || newContents === null || !t1.$isEfficientLength)
        newContents = t1.toList$0(newContents);
      removeLength = J.$sub$n(end, start);
      insertLength = J.get$length$as(newContents);
      t1 = J.getInterceptor$n(removeLength);
      t2 = J.getInterceptor$ns(start);
      if (t1.$ge(removeLength, insertLength)) {
        delta = t1.$sub(removeLength, insertLength);
        insertEnd = t2.$add(start, insertLength);
        newLength = J.$sub$n(this.get$length(0), delta);
        this.setRange$3(0, start, insertEnd, newContents);
        if (!J.$eq(delta, 0)) {
          this.setRange$4(0, insertEnd, newLength, this, end);
          this.set$length(0, newLength);
        }
      } else {
        delta = J.$sub$n(insertLength, removeLength);
        newLength = J.$add$ns(this.get$length(0), delta);
        insertEnd = t2.$add(start, insertLength);
        this.set$length(0, newLength);
        this.setRange$4(0, insertEnd, newLength, this, end);
        this.setRange$3(0, start, insertEnd, newContents);
      }
    }, "call$3" /* tearOffInfo */, "get$replaceRange", 6, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_int_Iterable1", void: true, args: [J.JSInt, J.JSInt, [P.Iterable, E]]};
      }, this.$receiver, "ListMixin");
    }, 439, 440, 1641, "replaceRange"],
    indexOf$2: [function(_, element, startIndex) {
      var t1, i;
      t1 = J.getInterceptor$n(startIndex);
      if (t1.$ge(startIndex, this.get$length(0)))
        return -1;
      if (t1.$lt(startIndex, 0))
        startIndex = 0;
      for (i = startIndex; t1 = J.getInterceptor$n(i), t1.$lt(i, this.get$length(0)); i = t1.$add(i, 1))
        if (J.$eq(this.$index(0, i), element))
          return i;
      return -1;
    }, function($receiver, element) {
      return this.indexOf$2($receiver, element, 0);
    }, "indexOf$1", "call$2" /* tearOffInfo */, null /* tearOffInfo */, "get$indexOf", 2, 2, 1054, 778, 453, 375, "indexOf"],
    lastIndexOf$2: [function(_, element, startIndex) {
      var t1, i;
      if (startIndex == null)
        startIndex = J.$sub$n(this.get$length(0), 1);
      else {
        t1 = J.getInterceptor$n(startIndex);
        if (t1.$lt(startIndex, 0))
          return -1;
        if (t1.$ge(startIndex, this.get$length(0)))
          startIndex = J.$sub$n(this.get$length(0), 1);
      }
      for (i = startIndex; t1 = J.getInterceptor$n(i), t1.$ge(i, 0); i = t1.$sub(i, 1))
        if (J.$eq(this.$index(0, i), element))
          return i;
      return -1;
    }, function($receiver, element) {
      return this.lastIndexOf$2($receiver, element, null);
    }, "lastIndexOf$1", "call$2" /* tearOffInfo */, null /* tearOffInfo */, "get$lastIndexOf", 2, 2, 1054, 370, 453, 375, "lastIndexOf"],
    insert$2: [function(_, index, element) {
      var t1 = J.getInterceptor$n(index);
      if (t1.$lt(index, 0) || t1.$gt(index, this.get$length(0)))
        throw H.wrapException(P.RangeError$range(index, 0, this.get$length(0)));
      if (t1.$eq(index, this.get$length(0))) {
        this.add$1(0, element);
        return;
      }
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(new P.ArgumentError(index));
      this.set$length(0, J.$add$ns(this.get$length(0), 1));
      this.setRange$4(0, index + 1, this.get$length(0), this, index);
      this.$indexSet(0, index, element);
    }, "call$2" /* tearOffInfo */, "get$insert", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_E2", void: true, args: [J.JSInt, E]};
      }, this.$receiver, "ListMixin");
    }, 321, 453, "insert"],
    removeAt$1: [function(_, index) {
      var result = this.$index(0, index);
      this.setRange$4(0, index, J.$sub$n(this.get$length(0), 1), this, J.$add$ns(index, 1));
      this.set$length(0, J.$sub$n(this.get$length(0), 1));
      return result;
    }, "call$1" /* tearOffInfo */, "get$removeAt", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int11", ret: E, args: [J.JSInt]};
      }, this.$receiver, "ListMixin");
    }, 321, "removeAt"],
    insertAll$2: [function(_, index, iterable) {
      var t1, t2, insertionLength;
      t1 = J.getInterceptor$n(index);
      if (t1.$lt(index, 0) || t1.$gt(index, this.get$length(0)))
        throw H.wrapException(P.RangeError$range(index, 0, this.get$length(0)));
      t2 = J.getInterceptor$a(iterable);
      if (typeof iterable === "object" && iterable !== null && !!t2.$isEfficientLength)
        iterable = t2.toList$0(iterable);
      insertionLength = J.get$length$as(iterable);
      this.set$length(0, J.$add$ns(this.get$length(0), insertionLength));
      this.setRange$4(0, t1.$add(index, insertionLength), this.get$length(0), this, index);
      this.setAll$2(0, index, iterable);
    }, "call$2" /* tearOffInfo */, "get$insertAll", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_Iterable1", void: true, args: [J.JSInt, [P.Iterable, E]]};
      }, this.$receiver, "ListMixin");
    }, 321, 417, "insertAll"],
    setAll$2: [function(_, index, iterable) {
      var t1, element, index0;
      t1 = J.getInterceptor(iterable);
      if (typeof iterable === "object" && iterable !== null && (iterable.constructor === Array || !!t1.$isList))
        this.setRange$3(0, index, J.$add$ns(index, t1.get$length(iterable)), iterable);
      else
        for (t1 = t1.get$iterator(iterable); t1.moveNext$0() === true; index = index0) {
          element = t1.get$current();
          index0 = J.$add$ns(index, 1);
          this.$indexSet(0, index, element);
        }
    }, "call$2" /* tearOffInfo */, "get$setAll", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_Iterable1", void: true, args: [J.JSInt, [P.Iterable, E]]};
      }, this.$receiver, "ListMixin");
    }, 321, 417, "setAll"],
    get$reversed: [function(_) {
      return H.setRuntimeTypeInfo(new H.ReversedListIterable(this), [null]);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable_8", ret: [P.Iterable, E]};
      }, this.$receiver, "ListMixin");
    }, "reversed"],
    toString$0: [function(_) {
      var result;
      if (J.contains$1$as($.get$_toStringVisiting(), this) === true)
        return "[...]";
      result = P.StringBuffer$("");
      try {
        J.add$1$a($.get$_toStringVisiting(), this);
        result.write$1("[");
        result.writeAll$2(this, ", ");
        result.write$1("]");
      } finally {
        J.remove$1$a($.get$_toStringVisiting(), this);
      }
      return result.get$_contents();
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isList: true,
    $isEfficientLength: true,
    $isIterable: true,
    "<>": [98],
    static: {ListMixin__filter: [function(source, test, retainMatching) {
        var retained, t1, $length, i, element;
        retained = [];
        t1 = J.getInterceptor$as(source);
        $length = t1.get$length(source);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          element = t1.$index(source, i);
          if (J.$eq(test.call$1(element), retainMatching))
            retained.push(element);
          if ($length !== t1.get$length(source))
            throw H.wrapException(P.ConcurrentModificationError$(source));
        }
        if (retained.length !== t1.get$length(source)) {
          t1.setRange$3(source, 0, retained.length, retained);
          t1.set$length(source, retained.length);
        }
      }, "call$3" /* tearOffInfo */, "ListMixin__filter$closure", 6, 0, 659, 292, 428, 660, "_filter"]}
  },
  "+ListMixin": [0, 1642],
  Maps: {
    "": "Object;",
    static: {"": "Maps__toStringList@-1129", Maps_containsValue: [function(map, value) {
        var t1, t2;
        for (t1 = map.get$values().get$iterator(0), t2 = J.getInterceptor(value); t1.moveNext$0();)
          if (t2.$eq(value, t1.get$current()))
            return true;
        return false;
      }, "call$2" /* tearOffInfo */, "Maps_containsValue$closure", 4, 0, 661, 499, 280, "containsValue"], Maps_containsKey: [function(map, key) {
        var t1, t2;
        for (t1 = map.get$keys().get$iterator(0), t2 = J.getInterceptor(key); t1.moveNext$0();)
          if (t2.$eq(key, t1.get$current()))
            return true;
        return false;
      }, "call$2" /* tearOffInfo */, "Maps_containsKey$closure", 4, 0, 661, 499, 312, "containsKey"], Maps_putIfAbsent: [function(map, key, ifAbsent) {
        var v;
        if (map.containsKey$1(key))
          return J.$index$as(map, key);
        v = ifAbsent.call$0();
        J.$indexSet$a(map, key, v);
        return v;
      }, "call$3" /* tearOffInfo */, "Maps_putIfAbsent$closure", 6, 0, 662, 499, 312, 663, "putIfAbsent"], Maps_clear: [function(map) {
        var t1, t2;
        for (t1 = map.get$keys().toList$0(0), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]), t2 = J.getInterceptor$a(map); t1.moveNext$0();)
          t2.remove$1(map, t1._current);
      }, "call$1" /* tearOffInfo */, "Maps_clear$closure", 2, 0, 664, 499, "clear"], Maps_forEach: [function(map, f) {
        var t1, t2, k;
        for (t1 = map.get$keys().get$iterator(0), t2 = J.getInterceptor$as(map); t1.moveNext$0();) {
          k = t1.get$current();
          f.call$2(k, t2.$index(map, k));
        }
      }, "call$2" /* tearOffInfo */, "Maps_forEach$closure", 4, 0, 665, 499, 412, "forEach"], Maps_getValues: [function(map) {
        return map.get$keys().map$1(0, new P.Maps_getValues_closure(map));
      }, "call$1" /* tearOffInfo */, "Maps_getValues$closure", 2, 0, 666, 499, "getValues"], Maps_length: [function(map) {
        return map.get$keys().get$length(0);
      }, "call$1" /* tearOffInfo */, "Maps_length$closure", 2, 0, 667, 499, "length"], Maps_isEmpty: [function(map) {
        return map.get$keys().get$isEmpty(0);
      }, "call$1" /* tearOffInfo */, "Maps_isEmpty$closure", 2, 0, 668, 499, "isEmpty"], Maps_isNotEmpty: [function(map) {
        return !map.get$keys().get$isEmpty(0);
      }, "call$1" /* tearOffInfo */, "Maps_isNotEmpty$closure", 2, 0, 668, 499, "isNotEmpty"], Maps_mapToString: [function(m) {
        var t1, result, i, t2, t3;
        t1 = {};
        i = 0;
        while (true) {
          t2 = J.get$length$as($.get$Maps__toStringList());
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (!(i < t2))
            break;
          t2 = J.$index$as($.get$Maps__toStringList(), i);
          t3 = m;
          if (t2 == null ? t3 == null : t2 === t3)
            return "{...}";
          ++i;
        }
        result = P.StringBuffer$("");
        try {
          J.add$1$a($.get$Maps__toStringList(), m);
          result.write$1("{");
          t1.first_0 = true;
          J.forEach$1$a(m, new P.Maps_mapToString_closure(t1, result));
          result.write$1("}");
        } finally {
          J.removeLast$0$a($.get$Maps__toStringList());
        }
        return result.get$_contents();
      }, "call$1" /* tearOffInfo */, "Maps_mapToString$closure", 2, 0, 669, 670, "mapToString"], Maps__id: [function(x) {
        return x;
      }, "call$1" /* tearOffInfo */, "Maps__id$closure", 2, 0, 241, 274, "_id"], Maps__fillMapWithMappedIterable: [function(map, iterable, key, value) {
        var t1, t2, element;
        if (key == null)
          key = P.Maps__id$closure();
        if (value == null)
          value = P.Maps__id$closure();
        for (t1 = J.get$iterator$a(iterable), t2 = J.getInterceptor$a(map); t1.moveNext$0() === true;) {
          element = t1.get$current();
          t2.$indexSet(map, key.call$1(element), value.call$1(element));
        }
      }, "call$4" /* tearOffInfo */, "Maps__fillMapWithMappedIterable$closure", 8, 0, 671, 499, 417, 312, 280, "_fillMapWithMappedIterable"], Maps__fillMapWithIterables: [function(map, keys, values) {
        var keyIterator, valueIterator, hasNextKey, hasNextValue, t1, t2;
        keyIterator = J.get$iterator$a(keys);
        valueIterator = J.get$iterator$a(values);
        hasNextKey = keyIterator.moveNext$0();
        hasNextValue = valueIterator.moveNext$0();
        t1 = J.getInterceptor$a(map);
        while (true) {
          t2 = hasNextKey === true;
          if (!(t2 && hasNextValue === true))
            break;
          t1.$indexSet(map, keyIterator.get$current(), valueIterator.get$current());
          hasNextKey = keyIterator.moveNext$0();
          hasNextValue = valueIterator.moveNext$0();
        }
        if (t2 || hasNextValue === true)
          throw H.wrapException(new P.ArgumentError("Iterables do not have same length."));
      }, "call$3" /* tearOffInfo */, "Maps__fillMapWithIterables$closure", 6, 0, 672, 499, 652, 653, "_fillMapWithIterables"]}
  },
  "+Maps": [0],
  Maps_getValues_closure: {
    "": "Closure:241;map_0-1643",
    call$1: [function(key) {
      return J.$index$as(this.map_0, key);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 312, "call"]
  },
  "+Maps_getValues_closure": [1060],
  Maps_mapToString_closure: {
    "": "Closure:311;box_0-370,result_1-370",
    call$2: [function(k, v) {
      var t1 = this.box_0;
      if (t1.first_0 !== true)
        this.result_1.write$1(", ");
      t1.first_0 = false;
      t1 = this.result_1;
      t1.write$1(k);
      t1.write$1(": ");
      t1.write$1(v);
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 1644, 700, "call"]
  },
  "+Maps_mapToString_closure": [1060],
  Queue: {
    "": "Object;",
    $isEfficientLength: true,
    $isIterable: true,
    "<>": [78],
    static: {Queue_Queue: [function($E) {
        return P.ListQueue$(null, $E);
      }, "call$0" /* tearOffInfo */, null, 0, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "Queue_", ret: [P.Queue, E]};
        }, this.$receiver, "Queue");
      }, "new Queue" /* new Queue:0:0 */], Queue_Queue$from: [function(other, $E) {
        return P.ListQueue_ListQueue$from(other, $E);
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "Queue__Iterable", ret: [P.Queue, E], args: [[P.Iterable, E]]};
        }, this.$receiver, "Queue");
      }, 403, "new Queue$from" /* new Queue$from:1:0 */]}
  },
  "+Queue": [0, 1176, 1645],
  DoubleLinkedQueueEntry: {
    "": "Object;_previous@-1646,_next@-1646,_element@-1647",
    _link$2: [function(p, n) {
      this._next = n;
      this._previous = p;
      p.set$_next(this);
      n.set$_previous(this);
    }, "call$2" /* tearOffInfo */, "get$_link", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__DoubleLinkedQueueEntry_DoubleLinkedQueueEntry", void: true, args: [[P.DoubleLinkedQueueEntry, E], [P.DoubleLinkedQueueEntry, E]]};
      }, this.$receiver, "DoubleLinkedQueueEntry");
    }, 1648, 1051, "_link"],
    append$1: [function(e) {
      var t1 = new P.DoubleLinkedQueueEntry(null, null, null);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      t1._element = e;
      t1._link$2(this, this._next);
    }, "call$1" /* tearOffInfo */, "get$append", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E10", void: true, args: [E]};
      }, this.$receiver, "DoubleLinkedQueueEntry");
    }, 256, "append"],
    prepend$1: [function(e) {
      var t1 = new P.DoubleLinkedQueueEntry(null, null, null);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      t1._element = e;
      t1._link$2(this._previous, this);
    }, "call$1" /* tearOffInfo */, "get$prepend", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E10", void: true, args: [E]};
      }, this.$receiver, "DoubleLinkedQueueEntry");
    }, 256, "prepend"],
    remove$0: [function(_) {
      this._previous.set$_next(this._next);
      this._next.set$_previous(this._previous);
      this._next = null;
      this._previous = null;
      return this._element;
    }, "call$0" /* tearOffInfo */, "get$remove", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_23", ret: E};
      }, this.$receiver, "DoubleLinkedQueueEntry");
    }, "remove"],
    _asNonSentinelEntry$0: [function() {
      return this;
    }, "call$0" /* tearOffInfo */, "get$_asNonSentinelEntry", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "DoubleLinkedQueueEntry_", ret: [P.DoubleLinkedQueueEntry, E]};
      }, this.$receiver, "DoubleLinkedQueueEntry");
    }, "_asNonSentinelEntry"],
    previousEntry$0: [function() {
      return this._previous._asNonSentinelEntry$0();
    }, "call$0" /* tearOffInfo */, "get$previousEntry", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "DoubleLinkedQueueEntry_", ret: [P.DoubleLinkedQueueEntry, E]};
      }, this.$receiver, "DoubleLinkedQueueEntry");
    }, "previousEntry"],
    nextEntry$0: [function() {
      return this._next._asNonSentinelEntry$0();
    }, "call$0" /* tearOffInfo */, "get$nextEntry", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "DoubleLinkedQueueEntry_", ret: [P.DoubleLinkedQueueEntry, E]};
      }, this.$receiver, "DoubleLinkedQueueEntry");
    }, "nextEntry"],
    get$element: [function() {
      return this._element;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_23", ret: E};
      }, this.$receiver, "DoubleLinkedQueueEntry");
    }, "element"],
    set$element: [function(e) {
      this._element = e;
    }, null /* tearOffInfo */, null, 3, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E10", void: true, args: [E]};
      }, this.$receiver, "DoubleLinkedQueueEntry");
    }, 256, "element"],
    "<>": [194],
    static: {DoubleLinkedQueueEntry$: [function(e, $E) {
        var t1 = H.setRuntimeTypeInfo(new P.DoubleLinkedQueueEntry(null, null, null), [$E]);
        t1._element = e;
        return t1;
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "dynamic__E", args: [E]};
        }, this.$receiver, "DoubleLinkedQueueEntry");
      }, 256, "new DoubleLinkedQueueEntry" /* new DoubleLinkedQueueEntry:1:0 */]}
  },
  "+DoubleLinkedQueueEntry": [0],
  _DoubleLinkedQueueEntrySentinel: {
    "": "DoubleLinkedQueueEntry;_previous-1646,_next-1646,_element-1647",
    remove$0: [function(_) {
      throw H.wrapException(new P.StateError("Empty queue"));
    }, "call$0" /* tearOffInfo */, "get$remove", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_24", ret: E};
      }, this.$receiver, "_DoubleLinkedQueueEntrySentinel");
    }, "remove"],
    _asNonSentinelEntry$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, "get$_asNonSentinelEntry", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "DoubleLinkedQueueEntry_0", ret: [P.DoubleLinkedQueueEntry, E]};
      }, this.$receiver, "_DoubleLinkedQueueEntrySentinel");
    }, "_asNonSentinelEntry"],
    set$element: [function(e) {
    }, null /* tearOffInfo */, null, 3, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E11", void: true, args: [E]};
      }, this.$receiver, "_DoubleLinkedQueueEntrySentinel");
    }, 256, "element"],
    get$element: [function() {
      throw H.wrapException(new P.StateError("Empty queue"));
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_24", ret: E};
      }, this.$receiver, "_DoubleLinkedQueueEntrySentinel");
    }, "element"],
    $asDoubleLinkedQueueEntry: null,
    "<>": [195],
    static: {_DoubleLinkedQueueEntrySentinel$: [function($E) {
        var t1 = H.setRuntimeTypeInfo(new P._DoubleLinkedQueueEntrySentinel(null, null, null), [$E]);
        t1._element = null;
        t1._link$2(t1, t1);
        return t1;
      }, null /* tearOffInfo */, null, 0, 0, 319, "new _DoubleLinkedQueueEntrySentinel" /* new _DoubleLinkedQueueEntrySentinel:0:0 */]}
  },
  "+_DoubleLinkedQueueEntrySentinel": [1649],
  DoubleLinkedQueue: {
    "": "IterableBase;_sentinel@-1650,_elementCount@-1075",
    get$length: [function(_) {
      return this._elementCount;
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    addLast$1: [function(value) {
      this._sentinel.prepend$1(value);
      this._elementCount = J.$add$ns(this._elementCount, 1);
    }, "call$1" /* tearOffInfo */, "get$addLast", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E12", void: true, args: [E]};
      }, this.$receiver, "DoubleLinkedQueue");
    }, 280, "addLast"],
    addFirst$1: [function(value) {
      this._sentinel.append$1(value);
      this._elementCount = J.$add$ns(this._elementCount, 1);
    }, "call$1" /* tearOffInfo */, "get$addFirst", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E12", void: true, args: [E]};
      }, this.$receiver, "DoubleLinkedQueue");
    }, 280, "addFirst"],
    add$1: [function(_, value) {
      this._sentinel.prepend$1(value);
      this._elementCount = J.$add$ns(this._elementCount, 1);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E12", void: true, args: [E]};
      }, this.$receiver, "DoubleLinkedQueue");
    }, 280, "add"],
    addAll$1: [function(_, iterable) {
      var t1, value;
      for (t1 = J.get$iterator$a(iterable); t1.moveNext$0() === true;) {
        value = t1.get$current();
        this._sentinel.prepend$1(value);
        this._elementCount = J.$add$ns(this._elementCount, 1);
      }
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__Iterable7", void: true, args: [[P.Iterable, E]]};
      }, this.$receiver, "DoubleLinkedQueue");
    }, 417, "addAll"],
    removeLast$0: [function(_) {
      var result = J.remove$0$a(this._sentinel.get$_previous());
      this._elementCount = J.$sub$n(this._elementCount, 1);
      return result;
    }, "call$0" /* tearOffInfo */, "get$removeLast", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_25", ret: E};
      }, this.$receiver, "DoubleLinkedQueue");
    }, "removeLast"],
    removeFirst$0: [function() {
      var result = J.remove$0$a(this._sentinel.get$_next());
      this._elementCount = J.$sub$n(this._elementCount, 1);
      return result;
    }, "call$0" /* tearOffInfo */, "get$removeFirst", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_25", ret: E};
      }, this.$receiver, "DoubleLinkedQueue");
    }, "removeFirst"],
    remove$1: [function(_, o) {
      var entry, t1;
      entry = this._sentinel.nextEntry$0();
      for (; t1 = this._sentinel, entry == null ? t1 != null : entry !== t1;) {
        if (J.$eq(entry.get$element(), o)) {
          J.remove$0$a(entry);
          this._elementCount = J.$sub$n(this._elementCount, 1);
          return true;
        }
        entry = entry.get$_next();
      }
      return false;
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, 1047, 389, "remove"],
    _filter$2: [function(test, removeMatching) {
      var entry, t1, next;
      entry = this._sentinel.nextEntry$0();
      for (; t1 = this._sentinel, entry == null ? t1 != null : entry !== t1; entry = next) {
        next = entry.get$_next();
        t1 = test.call$1(entry.get$element());
        if (removeMatching == null ? t1 == null : removeMatching === t1) {
          J.remove$0$a(entry);
          this._elementCount = J.$sub$n(this._elementCount, 1);
        }
      }
    }, "call$2" /* tearOffInfo */, "get$_filter", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E_bool0", void: true, args: [{func: "bool__E8", ret: J.JSBool, args: [E]}, J.JSBool]};
      }, this.$receiver, "DoubleLinkedQueue");
    }, 428, 1609, "_filter"],
    removeWhere$1: [function(_, test) {
      this._filter$2(test, true);
    }, "call$1" /* tearOffInfo */, "get$removeWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E4", void: true, args: [{func: "bool__E8", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "DoubleLinkedQueue");
    }, 428, "removeWhere"],
    retainWhere$1: [function(_, test) {
      this._filter$2(test, false);
    }, "call$1" /* tearOffInfo */, "get$retainWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E4", void: true, args: [{func: "bool__E8", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "DoubleLinkedQueue");
    }, 428, "retainWhere"],
    get$first: [function(_) {
      return this._sentinel.get$_next().get$element();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_25", ret: E};
      }, this.$receiver, "DoubleLinkedQueue");
    }, "first"],
    get$last: [function(_) {
      return this._sentinel.get$_previous().get$element();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_25", ret: E};
      }, this.$receiver, "DoubleLinkedQueue");
    }, "last"],
    get$single: [function(_) {
      var t1, t2;
      t1 = this._sentinel.get$_next();
      t2 = this._sentinel.get$_previous();
      if (t1 == null ? t2 == null : t1 === t2)
        return this._sentinel.get$_next().get$element();
      throw H.wrapException(new P.StateError("More than one element"));
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_25", ret: E};
      }, this.$receiver, "DoubleLinkedQueue");
    }, "single"],
    lastEntry$0: [function() {
      return this._sentinel.previousEntry$0();
    }, "call$0" /* tearOffInfo */, "get$lastEntry", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "DoubleLinkedQueueEntry_1", ret: [P.DoubleLinkedQueueEntry, E]};
      }, this.$receiver, "DoubleLinkedQueue");
    }, "lastEntry"],
    firstEntry$0: [function() {
      return this._sentinel.nextEntry$0();
    }, "call$0" /* tearOffInfo */, "get$firstEntry", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "DoubleLinkedQueueEntry_1", ret: [P.DoubleLinkedQueueEntry, E]};
      }, this.$receiver, "DoubleLinkedQueue");
    }, "firstEntry"],
    get$isEmpty: [function(_) {
      var t1, t2;
      t1 = this._sentinel.get$_next();
      t2 = this._sentinel;
      return t1 == null ? t2 == null : t1 === t2;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    clear$0: [function(_) {
      var t1 = this._sentinel;
      t1.set$_next(t1);
      t1 = this._sentinel;
      t1.set$_previous(t1);
      this._elementCount = 0;
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    forEachEntry$1: [function(f) {
      var entry, t1, nextEntry;
      entry = this._sentinel.get$_next();
      for (; t1 = this._sentinel, entry == null ? t1 != null : entry !== t1; entry = nextEntry) {
        nextEntry = entry.get$_next();
        f.call$1(entry);
      }
    }, "call$1" /* tearOffInfo */, "get$forEachEntry", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__void__DoubleLinkedQueueEntry", void: true, args: [{func: "void__DoubleLinkedQueueEntry", void: true, args: [[P.DoubleLinkedQueueEntry, E]]}]};
      }, this.$receiver, "DoubleLinkedQueue");
    }, 412, "forEachEntry"],
    get$iterator: [function(_) {
      var t1 = this._sentinel;
      t1 = new P._DoubleLinkedQueueIterator(t1, t1.get$_next(), null);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "_DoubleLinkedQueueIterator_", ret: [P._DoubleLinkedQueueIterator, E]};
      }, this.$receiver, "DoubleLinkedQueue");
    }, "iterator"],
    toString$0: [function(_) {
      return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $asIterableBase: null,
    $asIterable: null,
    $isEfficientLength: true,
    $isIterable: true,
    "<>": [196],
    static: {DoubleLinkedQueue$: [function($E) {
        var t1, t2;
        t1 = H.setRuntimeTypeInfo(new P.DoubleLinkedQueue(null, 0), [$E]);
        t2 = H.setRuntimeTypeInfo(new P._DoubleLinkedQueueEntrySentinel(null, null, null), [$E]);
        t2._element = null;
        t2._link$2(t2, t2);
        t1._sentinel = t2;
        return t1;
      }, null /* tearOffInfo */, null, 0, 0, 319, "new DoubleLinkedQueue" /* new DoubleLinkedQueue:0:0 */], DoubleLinkedQueue_DoubleLinkedQueue$from: [function(other, $E) {
        var list, t1, e;
        list = H.setRuntimeTypeInfo(new P.DoubleLinkedQueue(null, 0), [null]);
        t1 = H.setRuntimeTypeInfo(new P._DoubleLinkedQueueEntrySentinel(null, null, null), [null]);
        t1._element = null;
        t1._link$2(t1, t1);
        list._sentinel = t1;
        for (t1 = J.get$iterator$a(other); t1.moveNext$0() === true;) {
          e = t1.get$current();
          list._sentinel.prepend$1(e);
          list._elementCount = J.$add$ns(list._elementCount, 1);
        }
        return list;
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "DoubleLinkedQueue__Iterable", ret: [P.DoubleLinkedQueue, E], args: [[P.Iterable, E]]};
        }, this.$receiver, "DoubleLinkedQueue");
      }, 403, "new DoubleLinkedQueue$from" /* new DoubleLinkedQueue$from:1:0 */]}
  },
  "+DoubleLinkedQueue": [1651, 1652],
  _DoubleLinkedQueueIterator: {
    "": "Object;_sentinel@-1653,_nextEntry@-1654,_collection$_current@-1655",
    moveNext$0: [function() {
      var t1, t2;
      t1 = this._nextEntry;
      t2 = this._sentinel;
      if (t1 == null ? t2 != null : t1 !== t2) {
        this._collection$_current = t1.get$_element();
        this._nextEntry = this._nextEntry.get$_next();
        return true;
      }
      this._collection$_current = null;
      this._sentinel = null;
      this._nextEntry = null;
      return false;
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    get$current: [function() {
      return this._collection$_current;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_26", ret: E};
      }, this.$receiver, "_DoubleLinkedQueueIterator");
    }, "current"],
    "<>": [197],
    static: {_DoubleLinkedQueueIterator$: [function(sentinel, $E) {
        return H.setRuntimeTypeInfo(new P._DoubleLinkedQueueIterator(sentinel, sentinel.get$_next(), null), [$E]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "dynamic___DoubleLinkedQueueEntrySentinel", args: [[P._DoubleLinkedQueueEntrySentinel, E]]};
        }, this.$receiver, "_DoubleLinkedQueueIterator");
      }, 673, "new _DoubleLinkedQueueIterator" /* new _DoubleLinkedQueueIterator:1:0 */]}
  },
  "+_DoubleLinkedQueueIterator": [0, 1656],
  ListQueue: {
    "": "IterableBase;_table@-1657,_head@-1075,_tail@-1075,_modificationCount@-1075",
    get$iterator: [function(_) {
      var t1 = new P._ListQueueIterator(this, this._tail, this._modificationCount, this._head, null);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterator_15", ret: [P.Iterator, E]};
      }, this.$receiver, "ListQueue");
    }, "iterator"],
    forEach$1: [function(_, action) {
      var modificationCount, i, t1, t2;
      modificationCount = this._modificationCount;
      for (i = this._head, t1 = J.getInterceptor(modificationCount); t2 = J.getInterceptor(i), !t2.$eq(i, this._tail); i = J.$and$n(t2.$add(i, 1), J.$sub$n(J.get$length$as(this._table), 1))) {
        action.call$1(J.$index$as(this._table, i));
        if (!t1.$eq(modificationCount, this._modificationCount))
          H.throwExpression(P.ConcurrentModificationError$(this));
      }
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__void__E8", void: true, args: [{func: "void__E13", void: true, args: [E]}]};
      }, this.$receiver, "ListQueue");
    }, 1174, "forEach"],
    get$isEmpty: [function(_) {
      return J.$eq(this._head, this._tail);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$length: [function(_) {
      return J.$and$n(J.$sub$n(this._tail, this._head), J.$sub$n(J.get$length$as(this._table), 1));
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$first: [function(_) {
      if (J.$eq(this._head, this._tail))
        throw H.wrapException(new P.StateError("No elements"));
      return J.$index$as(this._table, this._head);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_27", ret: E};
      }, this.$receiver, "ListQueue");
    }, "first"],
    get$last: [function(_) {
      if (J.$eq(this._head, this._tail))
        throw H.wrapException(P.StateError$("No elements"));
      return J.$index$as(this._table, J.$and$n(J.$sub$n(this._tail, 1), J.$sub$n(J.get$length$as(this._table), 1)));
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_27", ret: E};
      }, this.$receiver, "ListQueue");
    }, "last"],
    get$single: [function(_) {
      if (J.$eq(this._head, this._tail))
        throw H.wrapException(new P.StateError("No elements"));
      if (this.get$length(0) > 1)
        throw H.wrapException(new P.StateError("Too many elements"));
      return J.$index$as(this._table, this._head);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_27", ret: E};
      }, this.$receiver, "ListQueue");
    }, "single"],
    elementAt$1: [function(_, index) {
      var t1 = J.getInterceptor$n(index);
      if (t1.$lt(index, 0) || t1.$gt(index, this.get$length(0)))
        throw H.wrapException(P.RangeError$range(index, 0, this.get$length(0)));
      return J.$index$as(this._table, J.$and$n(J.$add$ns(this._head, index), J.$sub$n(J.get$length$as(this._table), 1)));
    }, "call$1" /* tearOffInfo */, "get$elementAt", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int12", ret: E, args: [J.JSInt]};
      }, this.$receiver, "ListQueue");
    }, 321, "elementAt"],
    toList$1$growable: [function(_, growable) {
      var list, t1;
      if (growable === true) {
        list = H.setRuntimeTypeInfo([], [H.getTypeArgumentByIndex(this, 0)]);
        C.JSArray_methods.set$length(list, this.get$length(0));
      } else {
        t1 = Array(this.get$length(0));
        t1.fixed$length = init;
        list = H.setRuntimeTypeInfo(t1, [H.getTypeArgumentByIndex(this, 0)]);
      }
      this._writeToList$1(list);
      return list;
    }, function($receiver) {
      return this.toList$1$growable($receiver, true);
    }, "toList$0", "call$1$growable" /* tearOffInfo */, null /* tearOffInfo */, "get$toList", 0, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "List___bool5", ret: [J.JSArray, E], named: {growable: J.JSBool}};
      }, this.$receiver, "ListQueue");
    }, 816, 817, "toList"],
    add$1: [function(_, element) {
      this._collection$_add$1(element);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E13", void: true, args: [E]};
      }, this.$receiver, "ListQueue");
    }, 453, "add"],
    addAll$1: [function(_, elements) {
      var t1, addCount, $length, t2, newCapacity, newTable, endSpace, preSpace;
      t1 = J.getInterceptor(elements);
      if (typeof elements === "object" && elements !== null && (elements.constructor === Array || !!t1.$isList)) {
        addCount = t1.get$length(elements);
        $length = this.get$length(0);
        if (typeof addCount !== "number")
          return H.iae(addCount);
        t1 = $length + addCount;
        t2 = J.get$length$as(this._table);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (t1 >= t2) {
          newCapacity = P.ListQueue__nextPowerOf2(t1);
          if (typeof newCapacity !== "number")
            return H.iae(newCapacity);
          t2 = Array(newCapacity);
          t2.fixed$length = init;
          newTable = H.setRuntimeTypeInfo(t2, [H.getTypeArgumentByIndex(this, 0)]);
          this._tail = this._writeToList$1(newTable);
          this._table = newTable;
          this._head = 0;
          C.JSArray_methods.setRange$4(newTable, $length, t1, elements, 0);
          this._tail = J.$add$ns(this._tail, addCount);
        } else {
          endSpace = J.$sub$n(J.get$length$as(this._table), this._tail);
          if (typeof endSpace !== "number")
            return H.iae(endSpace);
          t1 = this._table;
          t2 = this._tail;
          if (addCount < endSpace) {
            J.setRange$4$a(t1, t2, J.$add$ns(t2, addCount), elements, 0);
            this._tail = J.$add$ns(this._tail, addCount);
          } else {
            preSpace = addCount - endSpace;
            J.setRange$4$a(t1, t2, J.$add$ns(t2, endSpace), elements, 0);
            J.setRange$4$a(this._table, 0, preSpace, elements, endSpace);
            this._tail = preSpace;
          }
        }
        this._modificationCount = J.$add$ns(this._modificationCount, 1);
      } else
        for (t1 = t1.get$iterator(elements); t1.moveNext$0() === true;)
          this._collection$_add$1(t1.get$current());
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__Iterable8", void: true, args: [[P.Iterable, E]]};
      }, this.$receiver, "ListQueue");
    }, 1594, "addAll"],
    remove$1: [function(_, object) {
      var i, t1;
      for (i = this._head; t1 = J.getInterceptor(i), !t1.$eq(i, this._tail); i = J.$and$n(t1.$add(i, 1), J.$sub$n(J.get$length$as(this._table), 1)))
        if (J.$eq(J.$index$as(this._table, i), object)) {
          this._remove$1(i);
          this._modificationCount = J.$add$ns(this._modificationCount, 1);
          return true;
        }
      return false;
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, 1047, 242, "remove"],
    _filterWhere$2: [function(test, removeMatching) {
      var modificationCount, i, t1, t2;
      modificationCount = this._modificationCount;
      i = this._head;
      for (; t1 = J.getInterceptor(i), !t1.$eq(i, this._tail);) {
        t2 = test.call$1(J.$index$as(this._table, i));
        if (!J.$eq(modificationCount, this._modificationCount))
          H.throwExpression(P.ConcurrentModificationError$(this));
        if (removeMatching == null ? t2 == null : removeMatching === t2) {
          i = this._remove$1(i);
          modificationCount = J.$add$ns(this._modificationCount, 1);
          this._modificationCount = modificationCount;
        } else
          i = J.$and$n(t1.$add(i, 1), J.$sub$n(J.get$length$as(this._table), 1));
      }
    }, "call$2" /* tearOffInfo */, "get$_filterWhere", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E_bool1", void: true, args: [{func: "bool__E9", ret: J.JSBool, args: [E]}, J.JSBool]};
      }, this.$receiver, "ListQueue");
    }, 428, 1609, "_filterWhere"],
    removeWhere$1: [function(_, test) {
      this._filterWhere$2(test, true);
    }, "call$1" /* tearOffInfo */, "get$removeWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E5", void: true, args: [{func: "bool__E9", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "ListQueue");
    }, 428, "removeWhere"],
    retainWhere$1: [function(_, test) {
      this._filterWhere$2(test, false);
    }, "call$1" /* tearOffInfo */, "get$retainWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E5", void: true, args: [{func: "bool__E9", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "ListQueue");
    }, 428, "retainWhere"],
    clear$0: [function(_) {
      var i, t1;
      if (!J.$eq(this._head, this._tail)) {
        for (i = this._head; t1 = J.getInterceptor(i), !t1.$eq(i, this._tail); i = J.$and$n(t1.$add(i, 1), J.$sub$n(J.get$length$as(this._table), 1)))
          J.$indexSet$a(this._table, i, null);
        this._tail = 0;
        this._head = 0;
        this._modificationCount = J.$add$ns(this._modificationCount, 1);
      }
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    toString$0: [function(_) {
      return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    addLast$1: [function(element) {
      this._collection$_add$1(element);
    }, "call$1" /* tearOffInfo */, "get$addLast", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E13", void: true, args: [E]};
      }, this.$receiver, "ListQueue");
    }, 453, "addLast"],
    addFirst$1: [function(element) {
      var t1 = J.$and$n(J.$sub$n(this._head, 1), J.$sub$n(J.get$length$as(this._table), 1));
      this._head = t1;
      J.$indexSet$a(this._table, t1, element);
      if (J.$eq(this._head, this._tail))
        this._grow$0();
      this._modificationCount = J.$add$ns(this._modificationCount, 1);
    }, "call$1" /* tearOffInfo */, "get$addFirst", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E13", void: true, args: [E]};
      }, this.$receiver, "ListQueue");
    }, 453, "addFirst"],
    removeFirst$0: [function() {
      if (J.$eq(this._head, this._tail))
        throw H.wrapException(P.StateError$("No elements"));
      this._modificationCount = J.$add$ns(this._modificationCount, 1);
      var result = J.$index$as(this._table, this._head);
      this._head = J.$and$n(J.$add$ns(this._head, 1), J.$sub$n(J.get$length$as(this._table), 1));
      return result;
    }, "call$0" /* tearOffInfo */, "get$removeFirst", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_27", ret: E};
      }, this.$receiver, "ListQueue");
    }, "removeFirst"],
    removeLast$0: [function(_) {
      var t1;
      if (J.$eq(this._head, this._tail))
        throw H.wrapException(P.StateError$("No elements"));
      this._modificationCount = J.$add$ns(this._modificationCount, 1);
      t1 = J.$and$n(J.$sub$n(this._tail, 1), J.$sub$n(J.get$length$as(this._table), 1));
      this._tail = t1;
      return J.$index$as(this._table, t1);
    }, "call$0" /* tearOffInfo */, "get$removeLast", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_27", ret: E};
      }, this.$receiver, "ListQueue");
    }, "removeLast"],
    _checkModification$1: [function(expectedModificationCount) {
      if (!J.$eq(expectedModificationCount, this._modificationCount))
        throw H.wrapException(P.ConcurrentModificationError$(this));
    }, "call$1" /* tearOffInfo */, "get$_checkModification", 2, 0, 1055, 1658, "_checkModification"],
    _collection$_add$1: [function(element) {
      var t1;
      J.$indexSet$a(this._table, this._tail, element);
      t1 = J.$and$n(J.$add$ns(this._tail, 1), J.$sub$n(J.get$length$as(this._table), 1));
      this._tail = t1;
      if (J.$eq(this._head, t1))
        this._grow$0();
      this._modificationCount = J.$add$ns(this._modificationCount, 1);
    }, "call$1" /* tearOffInfo */, "get$_collection$_add", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E13", void: true, args: [E]};
      }, this.$receiver, "ListQueue");
    }, 453, "_add"],
    _remove$1: [function(offset) {
      var mask, t1, i, t2, prevOffset, t3, nextOffset;
      mask = J.$sub$n(J.get$length$as(this._table), 1);
      t1 = J.getInterceptor$n(offset);
      if (J.$and$n(t1.$sub(offset, this._head), mask) < J.$and$n(J.$sub$n(this._tail, offset), mask)) {
        for (i = offset; t2 = J.getInterceptor(i), !t2.$eq(i, this._head); i = prevOffset) {
          prevOffset = J.$and$n(t2.$sub(i, 1), mask);
          t2 = this._table;
          t3 = J.getInterceptor$as(t2);
          t3.$indexSet(t2, i, t3.$index(t2, prevOffset));
        }
        J.$indexSet$a(this._table, this._head, null);
        this._head = J.$and$n(J.$add$ns(this._head, 1), mask);
        return J.$and$n(t1.$add(offset, 1), mask);
      } else {
        this._tail = J.$and$n(J.$sub$n(this._tail, 1), mask);
        for (i = offset; t1 = J.getInterceptor(i), !t1.$eq(i, this._tail); i = nextOffset) {
          nextOffset = J.$and$n(t1.$add(i, 1), mask);
          t1 = this._table;
          t2 = J.getInterceptor$as(t1);
          t2.$indexSet(t1, i, t2.$index(t1, nextOffset));
        }
        J.$indexSet$a(this._table, this._tail, null);
        return offset;
      }
    }, "call$1" /* tearOffInfo */, "get$_remove", 2, 0, 244, 1659, "_remove"],
    _grow$0: [function() {
      var t1, newTable, split, t2;
      t1 = J.$mul$n(J.get$length$as(this._table), 2);
      if (typeof t1 !== "number")
        return H.iae(t1);
      t1 = Array(t1);
      t1.fixed$length = init;
      newTable = H.setRuntimeTypeInfo(t1, [H.getTypeArgumentByIndex(this, 0)]);
      split = J.$sub$n(J.get$length$as(this._table), this._head);
      t1 = this._table;
      t2 = this._head;
      H.IterableMixinWorkaround_setRangeList(newTable, 0, split, t1, t2);
      t1 = J.$add$ns(split, this._head);
      t2 = this._table;
      H.IterableMixinWorkaround_setRangeList(newTable, split, t1, t2, 0);
      this._head = 0;
      this._tail = J.get$length$as(this._table);
      this._table = newTable;
    }, "call$0" /* tearOffInfo */, "get$_grow", 0, 0, 494, "_grow"],
    _writeToList$1: [function(target) {
      var t1, $length, firstPartSize;
      t1 = J.getInterceptor$a(target);
      if (J.$le$n(this._head, this._tail)) {
        $length = J.$sub$n(this._tail, this._head);
        t1.setRange$4(target, 0, $length, this._table, this._head);
        return $length;
      } else {
        firstPartSize = J.$sub$n(J.get$length$as(this._table), this._head);
        t1.setRange$4(target, 0, firstPartSize, this._table, this._head);
        t1.setRange$4(target, firstPartSize, J.$add$ns(firstPartSize, this._tail), this._table, 0);
        return J.$add$ns(this._tail, firstPartSize);
      }
    }, "call$1" /* tearOffInfo */, "get$_writeToList", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "int__List", ret: J.JSInt, args: [[J.JSArray, E]]};
      }, this.$receiver, "ListQueue");
    }, 360, "_writeToList"],
    _preGrow$1: [function(newElementCount) {
      var newCapacity, t1, newTable;
      newCapacity = P.ListQueue__nextPowerOf2(newElementCount);
      if (typeof newCapacity !== "number")
        return H.iae(newCapacity);
      t1 = Array(newCapacity);
      t1.fixed$length = init;
      newTable = H.setRuntimeTypeInfo(t1, [H.getTypeArgumentByIndex(this, 0)]);
      this._tail = this._writeToList$1(newTable);
      this._table = newTable;
      this._head = 0;
    }, "call$1" /* tearOffInfo */, "get$_preGrow", 2, 0, 1055, 1660, "_preGrow"],
    ListQueue$1: [function(initialCapacity, $E) {
      var t1;
      if (initialCapacity == null || J.$lt$n(initialCapacity, 8))
        initialCapacity = 8;
      else {
        t1 = J.getInterceptor$n(initialCapacity);
        if (t1.$and(initialCapacity, t1.$sub(initialCapacity, 1)) !== 0)
          initialCapacity = P.ListQueue__nextPowerOf2(initialCapacity);
      }
      if (typeof initialCapacity !== "number")
        return H.iae(initialCapacity);
      t1 = Array(initialCapacity);
      t1.fixed$length = init;
      this._table = H.setRuntimeTypeInfo(t1, [$E]);
    }, null /* tearOffInfo */, null, 0, 2, 674, 370, 675, ""],
    $asIterableBase: null,
    $asIterable: null,
    $isEfficientLength: true,
    $isIterable: true,
    "<>": [79],
    static: {"": "ListQueue__INITIAL_CAPACITY<-1075", ListQueue$: [function(initialCapacity, $E) {
        var t1 = H.setRuntimeTypeInfo(new P.ListQueue(null, 0, 0, 0), [$E]);
        t1.ListQueue$1(initialCapacity, $E);
        return t1;
      }, null /* tearOffInfo */, null, 0, 2, 674, 370, 675, "new ListQueue" /* new ListQueue:1:0 */], ListQueue_ListQueue$from: [function(source, $E) {
        var t1, $length, queue;
        t1 = J.getInterceptor$as(source);
        if (typeof source === "object" && source !== null && (source.constructor === Array || !!t1.$isList)) {
          $length = t1.get$length(source);
          queue = P.ListQueue$(J.$add$ns($length, 1), null);
          J.setRange$4$a(queue._table, 0, $length, source, 0);
          queue._tail = $length;
          return queue;
        } else {
          t1 = P.ListQueue$(null, $E);
          t1.addAll$1(0, source);
          return t1;
        }
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "ListQueue__Iterable", ret: [P.ListQueue, E], args: [[P.Iterable, E]]};
        }, this.$receiver, "ListQueue");
      }, 292, "new ListQueue$from" /* new ListQueue$from:1:0 */], ListQueue__isPowerOf2: [function(number) {
        var t1 = J.getInterceptor$n(number);
        return t1.$and(number, t1.$sub(number, 1)) === 0;
      }, "call$1" /* tearOffInfo */, "ListQueue__isPowerOf2$closure", 2, 0, 246, 676, "_isPowerOf2"], ListQueue__nextPowerOf2: [function(number) {
        var nextNumber;
        number = J.$shl$n(number, 2) - 1;
        for (; true; number = nextNumber) {
          nextNumber = (number & number - 1) >>> 0;
          if (nextNumber === 0)
            return number;
        }
      }, "call$1" /* tearOffInfo */, "ListQueue__nextPowerOf2$closure", 2, 0, 244, 676, "_nextPowerOf2"]}
  },
  "+ListQueue": [1661, 1662],
  _ListQueueIterator: {
    "": "Object;_queue<-1663,_end<-1075,_modificationCount<-1075,_position@-1075,_collection$_current@-1664",
    get$current: [function() {
      return this._collection$_current;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_28", ret: E};
      }, this.$receiver, "_ListQueueIterator");
    }, "current"],
    moveNext$0: [function() {
      var t1 = this._queue;
      t1._checkModification$1(this._modificationCount);
      if (J.$eq(this._position, this._end)) {
        this._collection$_current = null;
        return false;
      }
      this._collection$_current = J.$index$as(t1.get$_table(), this._position);
      this._position = J.$and$n(J.$add$ns(this._position, 1), J.$sub$n(J.get$length$as(t1.get$_table()), 1));
      return true;
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    "<>": [90],
    static: {_ListQueueIterator$: [function(queue, $E) {
        return H.setRuntimeTypeInfo(new P._ListQueueIterator(queue, queue.get$_tail(), queue.get$_modificationCount(), queue.get$_head(), null), [$E]);
      }, null /* tearOffInfo */, null, 2, 0, 677, 678, "new _ListQueueIterator" /* new _ListQueueIterator:1:0 */]}
  },
  "+_ListQueueIterator": [0, 1665],
  _SplayTreeNode: {
    "": "Object;key<-1666,left@-1667,right@-1667",
    $is_SplayTreeNode: true,
    "<>": [198],
    static: {_SplayTreeNode$: [function(key, $K) {
        return H.setRuntimeTypeInfo(new P._SplayTreeNode(key, null, null), [$K]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(K) {
          return {func: "dynamic__K", args: [K]};
        }, this.$receiver, "_SplayTreeNode");
      }, 312, "new _SplayTreeNode" /* new _SplayTreeNode:1:0 */]}
  },
  "+_SplayTreeNode": [0],
  _SplayTreeMapNode: {
    "": "_SplayTreeNode;value@-1668,key-1666,left-1667,right-1667",
    $as_SplayTreeNode: function($K, $V) {
      return [$K];
    },
    "<>": [199, 200],
    static: {_SplayTreeMapNode$: [function(key, value, $K, $V) {
        return H.setRuntimeTypeInfo(new P._SplayTreeMapNode(value, key, null, null), [$K, $V]);
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "dynamic__K_V", args: [K, V]};
        }, this.$receiver, "_SplayTreeMapNode");
      }, 312, 280, "new _SplayTreeMapNode" /* new _SplayTreeMapNode:2:0 */]}
  },
  "+_SplayTreeMapNode": [1669],
  _SplayTree: {
    "": "Object;_root@-1670,_dummy@-1670,_count@-1075,_modificationCount@-1075,_splayCount@-1075",
    _splay$1: [function(key) {
      var current, left, right, comp, t1, tmp, current0;
      current = this._root;
      if (current == null)
        return -1;
      left = this._dummy;
      for (right = left, comp = null; true;) {
        comp = this._compare$2(current.get$key(), key);
        t1 = J.getInterceptor$n(comp);
        if (t1.$gt(comp, 0)) {
          if (current.get$left() == null)
            break;
          comp = this._compare$2(current.get$left().get$key(), key);
          if (J.$gt$n(comp, 0)) {
            tmp = current.get$left();
            current.set$left(tmp.get$right());
            tmp.set$right(current);
            if (tmp.get$left() == null) {
              current = tmp;
              break;
            }
            current = tmp;
          }
          right.set$left(current);
          current0 = current.get$left();
          right = current;
          current = current0;
        } else {
          if (t1.$lt(comp, 0)) {
            if (current.get$right() == null)
              break;
            comp = this._compare$2(current.get$right().get$key(), key);
            if (J.$lt$n(comp, 0)) {
              tmp = current.get$right();
              current.set$right(tmp.get$left());
              tmp.set$left(current);
              if (tmp.get$right() == null) {
                current = tmp;
                break;
              }
              current = tmp;
            }
            left.set$right(current);
            current0 = current.get$right();
          } else
            break;
          left = current;
          current = current0;
        }
      }
      left.set$right(current.get$left());
      right.set$left(current.get$right());
      current.set$left(this._dummy.get$right());
      current.set$right(this._dummy.get$left());
      this._root = current;
      this._dummy.set$right(null);
      this._dummy.set$left(null);
      this._splayCount = J.$add$ns(this._splayCount, 1);
      return comp;
    }, "call$1" /* tearOffInfo */, "get$_splay", 2, 0, function() {
      return H.computeSignature(function(K) {
        return {func: "int__K3", ret: J.JSInt, args: [K]};
      }, this.$receiver, "_SplayTree");
    }, 312, "_splay"],
    _splayMin$1: [function(node) {
      var current, left;
      for (current = node; current.get$left() != null; current = left) {
        left = current.get$left();
        current.set$left(left.get$right());
        left.set$right(current);
      }
      return current;
    }, "call$1" /* tearOffInfo */, "get$_splayMin", 2, 0, function() {
      return H.computeSignature(function(K) {
        return {func: "_SplayTreeNode___SplayTreeNode", ret: [P._SplayTreeNode, K], args: [[P._SplayTreeNode, K]]};
      }, this.$receiver, "_SplayTree");
    }, 1671, "_splayMin"],
    _splayMax$1: [function(node) {
      var current, right;
      for (current = node; current.get$right() != null; current = right) {
        right = current.get$right();
        current.set$right(right.get$left());
        right.set$left(current);
      }
      return current;
    }, "call$1" /* tearOffInfo */, "get$_splayMax", 2, 0, function() {
      return H.computeSignature(function(K) {
        return {func: "_SplayTreeNode___SplayTreeNode", ret: [P._SplayTreeNode, K], args: [[P._SplayTreeNode, K]]};
      }, this.$receiver, "_SplayTree");
    }, 1671, "_splayMax"],
    _remove$1: [function(key) {
      var result, t1, t2, right;
      if (this._root == null)
        return;
      if (!J.$eq(this._splay$1(key), 0))
        return;
      result = this._root;
      this._count = J.$sub$n(this._count, 1);
      t1 = this._root.get$left();
      t2 = this._root;
      if (t1 == null)
        this._root = t2.get$right();
      else {
        right = t2.get$right();
        t1 = this._splayMax$1(this._root.get$left());
        this._root = t1;
        t1.set$right(right);
      }
      this._modificationCount = J.$add$ns(this._modificationCount, 1);
      return result;
    }, "call$1" /* tearOffInfo */, "get$_remove", 2, 0, function() {
      return H.computeSignature(function(K) {
        return {func: "_SplayTreeNode__K", ret: P._SplayTreeNode, args: [K]};
      }, this.$receiver, "_SplayTree");
    }, 312, "_remove"],
    _addNewRoot$2: [function(node, comp) {
      var t1, t2;
      this._count = J.$add$ns(this._count, 1);
      this._modificationCount = J.$add$ns(this._modificationCount, 1);
      if (this._root == null) {
        this._root = node;
        return;
      }
      t1 = J.$lt$n(comp, 0);
      t2 = this._root;
      if (t1) {
        node.set$left(t2);
        node.set$right(this._root.get$right());
        this._root.set$right(null);
      } else {
        node.set$right(t2);
        node.set$left(this._root.get$left());
        this._root.set$left(null);
      }
      this._root = node;
    }, "call$2" /* tearOffInfo */, "get$_addNewRoot", 4, 0, function() {
      return H.computeSignature(function(K) {
        return {func: "void___SplayTreeNode_int", void: true, args: [[P._SplayTreeNode, K], J.JSInt]};
      }, this.$receiver, "_SplayTree");
    }, 1671, 1672, "_addNewRoot"],
    get$_first: [function() {
      var t1 = this._root;
      if (t1 == null)
        return;
      t1 = this._splayMin$1(t1);
      this._root = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1673, "_first"],
    get$_last: [function() {
      var t1 = this._root;
      if (t1 == null)
        return;
      t1 = this._splayMax$1(t1);
      this._root = t1;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1673, "_last"],
    _collection$_clear$0: [function() {
      this._root = null;
      this._count = 0;
      this._modificationCount = J.$add$ns(this._modificationCount, 1);
    }, "call$0" /* tearOffInfo */, "get$_collection$_clear", 0, 0, 494, "_clear"],
    "<>": [203]
  },
  "+_SplayTree": [0],
  _TypeTest: {
    "": "Object;",
    test$1: [function(v) {
      var t1 = H.checkSubtypeOfRuntimeType(v, H.getTypeArgumentByIndex(this, 0));
      return t1;
    }, "call$1" /* tearOffInfo */, "get$test", 2, 0, 273, 700, "test"],
    "<>": [224]
  },
  "+_TypeTest": [0],
  SplayTreeMap: {
    "": "_SplayTree;_comparator@-1674,_validKey@-273,_root-1670,_dummy-1670,_count-1075,_modificationCount-1075,_splayCount-1075",
    _comparator$2: function(arg0, arg1) {
      return this._comparator.call$2(arg0, arg1);
    },
    _validKey$1: function(arg0) {
      return this._validKey.call$1(arg0);
    },
    _compare$2: [function(key1, key2) {
      return this._comparator$2(key1, key2);
    }, "call$2" /* tearOffInfo */, "get$_compare", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "int__K_K", ret: J.JSInt, args: [K, K]};
      }, this.$receiver, "SplayTreeMap");
    }, 1675, 1676, "_compare"],
    $index: [function(_, key) {
      if (key == null)
        throw H.wrapException(new P.ArgumentError(key));
      if (this._validKey$1(key) !== true)
        return;
      if (this._root != null)
        if (J.$eq(this._splay$1(key), 0))
          return this._root.get$value();
      return;
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__Object3", ret: V, args: [P.Object]};
      }, this.$receiver, "SplayTreeMap");
    }, 312, "[]"],
    remove$1: [function(_, key) {
      var mapRoot;
      if (this._validKey$1(key) !== true)
        return;
      mapRoot = this._remove$1(key);
      if (mapRoot != null)
        return mapRoot.get$value();
      return;
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__Object3", ret: V, args: [P.Object]};
      }, this.$receiver, "SplayTreeMap");
    }, 312, "remove"],
    $indexSet: [function(_, key, value) {
      var comp, t1;
      if (key == null)
        throw H.wrapException(new P.ArgumentError(key));
      comp = this._splay$1(key);
      if (J.$eq(comp, 0)) {
        this._root.set$value(value);
        return;
      }
      t1 = new P._SplayTreeMapNode(value, key, null, null);
      t1.$builtinTypeInfo = [null, null];
      this._addNewRoot$2(t1, comp);
    }, "call$2" /* tearOffInfo */, "get$[]=", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__K_V2", void: true, args: [K, V]};
      }, this.$receiver, "SplayTreeMap");
    }, 312, 280, "[]="],
    putIfAbsent$2: [function(key, ifAbsent) {
      var comp, modificationCount, splayCount, value;
      if (key == null)
        throw H.wrapException(new P.ArgumentError(key));
      comp = this._splay$1(key);
      if (J.$eq(comp, 0))
        return this._root.get$value();
      modificationCount = this._modificationCount;
      splayCount = this._splayCount;
      value = ifAbsent.call$0();
      if (!J.$eq(modificationCount, this._modificationCount))
        throw H.wrapException(P.ConcurrentModificationError$(this));
      if (!J.$eq(splayCount, this._splayCount))
        comp = this._splay$1(key);
      this._addNewRoot$2(H.setRuntimeTypeInfo(new P._SplayTreeMapNode(value, key, null, null), [null, null]), comp);
      return value;
    }, "call$2" /* tearOffInfo */, "get$putIfAbsent", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__K_V_2", ret: V, args: [K, {func: "V_2", ret: V}]};
      }, this.$receiver, "SplayTreeMap");
    }, 312, 663, "putIfAbsent"],
    addAll$1: [function(_, other) {
      J.forEach$1$a(other, new P.SplayTreeMap_addAll_closure(this));
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__Map3", void: true, args: [[P.Map, K, V]]};
      }, this.$receiver, "SplayTreeMap");
    }, 403, "addAll"],
    get$isEmpty: [function(_) {
      return this._root == null;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$isNotEmpty: [function(_) {
      return this._root != null;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty"],
    forEach$1: [function(_, f) {
      var t1, nodes, node;
      t1 = H.getTypeArgumentByIndex(this, 0);
      nodes = H.setRuntimeTypeInfo(new P._SplayTreeNodeIterator(this, H.setRuntimeTypeInfo([], [P._SplayTreeNode]), this._modificationCount, this._splayCount, null), [t1]);
      nodes._SplayTreeIterator$1(this, [P._SplayTreeNode, t1]);
      for (; nodes.moveNext$0();) {
        node = nodes.get$current();
        f.call$2(node.get$key(), node.get$value());
      }
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__void__K_V2", void: true, args: [{func: "void__K_V2", void: true, args: [K, V]}]};
      }, this.$receiver, "SplayTreeMap");
    }, 412, "forEach"],
    get$length: [function(_) {
      return this._count;
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    clear$0: [function(_) {
      this._root = null;
      this._count = 0;
      this._modificationCount = J.$add$ns(this._modificationCount, 1);
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    containsKey$1: [function(key) {
      return this._validKey$1(key) === true && J.$eq(this._splay$1(key), 0);
    }, "call$1" /* tearOffInfo */, "get$containsKey", 2, 0, 1047, 312, "containsKey"],
    containsValue$1: [function(value) {
      return new P.SplayTreeMap_containsValue_visit(this, value, this._splayCount).call$1(this._root);
    }, "call$1" /* tearOffInfo */, "get$containsValue", 2, 0, 1047, 280, "containsValue"],
    get$keys: [function() {
      return H.setRuntimeTypeInfo(new P._SplayTreeKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "Iterable_9", ret: [P.Iterable, K]};
      }, this.$receiver, "SplayTreeMap");
    }, "keys"],
    get$values: [function() {
      var t1 = new P._SplayTreeValueIterable(this);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "Iterable_10", ret: [P.Iterable, V]};
      }, this.$receiver, "SplayTreeMap");
    }, "values"],
    toString$0: [function(_) {
      return P.Maps_mapToString(this);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    firstKey$0: [function() {
      if (this._root == null)
        return;
      return this.get$_first().get$key();
    }, "call$0" /* tearOffInfo */, "get$firstKey", 0, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "K_", ret: K};
      }, this.$receiver, "SplayTreeMap");
    }, "firstKey"],
    lastKey$0: [function() {
      if (this._root == null)
        return;
      return this.get$_last().get$key();
    }, "call$0" /* tearOffInfo */, "get$lastKey", 0, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "K_", ret: K};
      }, this.$receiver, "SplayTreeMap");
    }, "lastKey"],
    lastKeyBefore$1: [function(key) {
      var node;
      if (key == null)
        throw H.wrapException(new P.ArgumentError(key));
      if (this._root == null)
        return;
      if (J.$lt$n(this._splay$1(key), 0))
        return this._root.get$key();
      node = this._root.get$left();
      if (node == null)
        return;
      for (; node.get$right() != null;)
        node = node.get$right();
      return node.get$key();
    }, "call$1" /* tearOffInfo */, "get$lastKeyBefore", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "K__K", ret: K, args: [K]};
      }, this.$receiver, "SplayTreeMap");
    }, 312, "lastKeyBefore"],
    firstKeyAfter$1: [function(key) {
      var node;
      if (key == null)
        throw H.wrapException(new P.ArgumentError(key));
      if (this._root == null)
        return;
      if (J.$gt$n(this._splay$1(key), 0))
        return this._root.get$key();
      node = this._root.get$right();
      if (node == null)
        return;
      for (; node.get$left() != null;)
        node = node.get$left();
      return node.get$key();
    }, "call$1" /* tearOffInfo */, "get$firstKeyAfter", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "K__K", ret: K, args: [K]};
      }, this.$receiver, "SplayTreeMap");
    }, 312, "firstKeyAfter"],
    $isSplayTreeMap: true,
    $as_SplayTree: function($K, $V) {
      return [$K];
    },
    $asMap: null,
    $isMap: true,
    "<>": [201, 202],
    static: {SplayTreeMap$: [function(compare, isValidKey, $K, $V) {
        var t1, t2;
        t1 = compare == null ? P.Comparable_compare$closure() : compare;
        t2 = isValidKey != null ? isValidKey : new P.SplayTreeMap_closure($K);
        return H.setRuntimeTypeInfo(new P.SplayTreeMap(t1, t2, null, H.setRuntimeTypeInfo(new P._SplayTreeNode(null, null, null), [$K]), 0, 0, 0), [$K, $V]);
      }, null /* tearOffInfo */, null, 0, 4, function() {
        return H.computeSignature(function(K, V) {
          return {func: "dynamic___int__K_K_bool__dynamic", opt: [{func: "int__K_K", ret: J.JSInt, args: [K, K]}, {func: "bool__dynamic", ret: J.JSBool, args: [null]}]};
        }, this.$receiver, "SplayTreeMap");
      }, 370, 370, 459, 651, "new SplayTreeMap" /* new SplayTreeMap:2:0 */], SplayTreeMap_SplayTreeMap$from: [function(other, compare, isValidKey, $K, $V) {
        var t1 = P.SplayTreeMap$(compare, isValidKey, null, null);
        t1.addAll$1(0, other);
        return t1;
      }, "call$3" /* tearOffInfo */, null, 2, 4, function() {
        return H.computeSignature(function(K, V) {
          return {func: "SplayTreeMap__Map__int__K_K_bool__dynamic", ret: [P.SplayTreeMap, K, V], args: [[P.Map, K, V]], opt: [{func: "int__K_K", ret: J.JSInt, args: [K, K]}, {func: "bool__dynamic", ret: J.JSBool, args: [null]}]};
        }, this.$receiver, "SplayTreeMap");
      }, 370, 370, 403, 459, 651, "new SplayTreeMap$from" /* new SplayTreeMap$from:3:0 */], SplayTreeMap_SplayTreeMap$fromIterable: [function(iterable, compare, isValidKey, key, value, $K, $V) {
        var map = P.SplayTreeMap$(compare, isValidKey, $K, $V);
        P.Maps__fillMapWithMappedIterable(map, iterable, key, value);
        return map;
      }, "call$5$compare$isValidKey$key$value" /* tearOffInfo */, null, 2, 9, function() {
        return H.computeSignature(function(K, V) {
          return {func: "SplayTreeMap__Iterable__int__K_K_bool__dynamic_K__dynamic_V__dynamic", ret: [P.SplayTreeMap, K, V], args: [[P.Iterable, K]], named: {compare: {func: "int__K_K", ret: J.JSInt, args: [K, K]}, isValidKey: {func: "bool__dynamic", ret: J.JSBool, args: [null]}, key: {func: "K__dynamic1", ret: K, args: [null]}, value: {func: "V__dynamic1", ret: V, args: [null]}}};
        }, this.$receiver, "SplayTreeMap");
      }, 370, 370, 370, 370, 417, 459, 651, 312, 280, "new SplayTreeMap$fromIterable" /* new SplayTreeMap$fromIterable:1:4:compare:isValidKey:key:value */], SplayTreeMap_SplayTreeMap$fromIterables: [function(keys, values, compare, isValidKey, $K, $V) {
        var map = P.SplayTreeMap$(compare, isValidKey, $K, $V);
        P.Maps__fillMapWithIterables(map, keys, values);
        return map;
      }, "call$4" /* tearOffInfo */, null, 4, 4, function() {
        return H.computeSignature(function(K, V) {
          return {func: "SplayTreeMap__Iterable_Iterable__int__K_K_bool__dynamic", ret: [P.SplayTreeMap, K, V], args: [[P.Iterable, K], [P.Iterable, V]], opt: [{func: "int__K_K", ret: J.JSInt, args: [K, K]}, {func: "bool__dynamic", ret: J.JSBool, args: [null]}]};
        }, this.$receiver, "SplayTreeMap");
      }, 370, 370, 652, 653, 459, 651, "new SplayTreeMap$fromIterables" /* new SplayTreeMap$fromIterables:4:0 */], SplayTreeMap$_internal: [function($K, $V) {
        return H.setRuntimeTypeInfo(new P.SplayTreeMap(null, null, null, H.setRuntimeTypeInfo(new P._SplayTreeNode(null, null, null), [$K]), 0, 0, 0), [$K, $V]);
      }, null /* tearOffInfo */, null, 0, 0, 319, "new SplayTreeMap$_internal" /* new SplayTreeMap$_internal:0:0 */]}
  },
  "+SplayTreeMap": [1677, 1678],
  SplayTreeMap_closure: {
    "": "Closure:241;K_0-1679",
    call$1: [function(v) {
      var t1 = H.checkSubtypeOfRuntimeType(v, this.K_0);
      return t1;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 700, "call"]
  },
  "+SplayTreeMap_closure": [1060],
  SplayTreeMap_addAll_closure: {
    "": "Closure;this_0-370",
    call$2: [function(key, value) {
      J.$indexSet$a(this.this_0, key, value);
    }, "call$2" /* tearOffInfo */, null, 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "dynamic__K_V3", args: [K, V]};
      }, this.$receiver, "SplayTreeMap");
    }, 312, 280, "call"],
    $signature: function() {
      return H.computeSignature(function(K, V) {
        return {func: "dynamic__K_V3", args: [K, V]};
      }, this.this_0, "SplayTreeMap");
    }
  },
  "+SplayTreeMap_addAll_closure": [1060],
  SplayTreeMap_containsValue_visit: {
    "": "Closure:1680;this_0-370,value_1-0,initialSplayCount_2-1075",
    call$1: [function(node) {
      var t1, t2, t3, t4;
      for (t1 = this.initialSplayCount_2, t2 = this.this_0, t3 = J.getInterceptor(t1), t4 = this.value_1; node != null;) {
        if (J.$eq(node.get$value(), t4))
          return true;
        if (!t3.$eq(t1, t2.get$_splayCount()))
          throw H.wrapException(P.ConcurrentModificationError$(t2));
        if (node.get$right() != null && this.call$1(node.get$right()) === true)
          return true;
        node = node.get$left();
      }
      return false;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1680, 1671, "call"]
  },
  "+SplayTreeMap_containsValue_visit": [1060],
  _SplayTreeIterator: {
    "": "Object;_tree<-1681,_workList<-1682,_modificationCount@-1075,_splayCount@-1075,_currentNode@-1683",
    get$current: [function() {
      var t1 = this._currentNode;
      if (t1 == null)
        return;
      return this._getValue$1(t1);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "T_7", ret: T};
      }, this.$receiver, "_SplayTreeIterator");
    }, "current"],
    _findStartNode$1: [function(key) {
    }, "call$1" /* tearOffInfo */, "get$_findStartNode", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "_SplayTreeNode__T", ret: P._SplayTreeNode, args: [T]};
      }, this.$receiver, "_SplayTreeIterator");
    }, 312, "_findStartNode"],
    _findLeftMostDescendent$1: [function(node) {
      var t1, t2;
      for (t1 = this._workList, t2 = J.getInterceptor$a(t1); node != null;) {
        t2.add$1(t1, node);
        node = node.get$left();
      }
    }, "call$1" /* tearOffInfo */, "get$_findLeftMostDescendent", 2, 0, 1684, 1671, "_findLeftMostDescendent"],
    _rebuildWorkList$1: [function(currentNode) {
      var t1;
      J.clear$0$a(this._workList);
      t1 = this._tree;
      if (currentNode == null)
        this._findLeftMostDescendent$1(t1.get$_root());
      else {
        t1._splay$1(currentNode.get$key());
        this._findLeftMostDescendent$1(t1.get$_root().get$right());
      }
    }, "call$1" /* tearOffInfo */, "get$_rebuildWorkList", 2, 0, 1684, 1685, "_rebuildWorkList"],
    moveNext$0: [function() {
      var t1, t2, t3, t4;
      t1 = this._tree;
      if (!J.$eq(this._modificationCount, t1.get$_modificationCount()))
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      t2 = this._workList;
      t3 = J.getInterceptor$as(t2);
      if (t3.get$isEmpty(t2) === true) {
        this._currentNode = null;
        return false;
      }
      if (!J.$eq(t1.get$_splayCount(), this._splayCount) && this._currentNode != null) {
        t4 = this._currentNode;
        t3.clear$0(t2);
        if (t4 == null)
          this._findLeftMostDescendent$1(t1.get$_root());
        else {
          t1._splay$1(t4.get$key());
          this._findLeftMostDescendent$1(t1.get$_root().get$right());
        }
      }
      t1 = t3.removeLast$0(t2);
      this._currentNode = t1;
      this._findLeftMostDescendent$1(t1.get$right());
      return true;
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    _SplayTreeIterator$1: [function(tree, $T) {
      this._findLeftMostDescendent$1(tree.get$_root());
    }, null /* tearOffInfo */, null, 2, 0, 679, 680, ""],
    _collection$_SplayTreeIterator$startAt$2: [function(tree, startKey, $T) {
      var compare = tree._splay$1(startKey);
      this._splayCount = tree.get$_splayCount();
      this._findLeftMostDescendent$1(J.$lt$n(compare, 0) ? tree.get$_root().get$right() : tree.get$_root());
    }, null /* tearOffInfo */, null, 4, 0, 681, 680, 682, "startAt"],
    "<>": [204],
    static: {_SplayTreeIterator$: [function(tree, $T) {
        var t1 = H.setRuntimeTypeInfo(new P._SplayTreeIterator(tree, H.setRuntimeTypeInfo([], [P._SplayTreeNode]), tree.get$_modificationCount(), tree.get$_splayCount(), null), [$T]);
        t1._SplayTreeIterator$1(tree, $T);
        return t1;
      }, null /* tearOffInfo */, null, 2, 0, 679, 680, "new _SplayTreeIterator" /* new _SplayTreeIterator:1:0 */], _SplayTreeIterator$startAt: [function(tree, startKey, $T) {
        var t1 = H.setRuntimeTypeInfo(new P._SplayTreeIterator(tree, H.setRuntimeTypeInfo([], [P._SplayTreeNode]), tree.get$_modificationCount(), null, null), [$T]);
        t1._collection$_SplayTreeIterator$startAt$2(tree, startKey, $T);
        return t1;
      }, null /* tearOffInfo */, null, 4, 0, 681, 680, 682, "new _SplayTreeIterator$startAt" /* new _SplayTreeIterator$startAt:2:0 */]}
  },
  "+_SplayTreeIterator": [0, 1686],
  _SplayTreeKeyIterable: {
    "": "IterableBase;_tree@-1687",
    get$length: [function(_) {
      return this._tree.get$_count();
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$isEmpty: [function(_) {
      return J.$eq(this._tree.get$_count(), 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$iterator: [function(_) {
      var t1, t2;
      t1 = this._tree;
      t2 = new P._SplayTreeKeyIterator(t1, H.setRuntimeTypeInfo([], [P._SplayTreeNode]), t1.get$_modificationCount(), t1.get$_splayCount(), null);
      t2.$builtinTypeInfo = this.$builtinTypeInfo;
      t2._SplayTreeIterator$1(t1, H.getTypeArgumentByIndex(this, 0));
      return t2;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(K) {
        return {func: "Iterator_16", ret: [P.Iterator, K]};
      }, this.$receiver, "_SplayTreeKeyIterable");
    }, "iterator"],
    $asIterableBase: null,
    $asIterable: null,
    $isEfficientLength: true,
    "<>": [205],
    static: {_SplayTreeKeyIterable$: [function(_tree, $K) {
        return H.setRuntimeTypeInfo(new P._SplayTreeKeyIterable(_tree), [$K]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(K) {
          return {func: "dynamic___SplayTree0", args: [[P._SplayTree, K]]};
        }, this.$receiver, "_SplayTreeKeyIterable");
      }, 683, "new _SplayTreeKeyIterable" /* new _SplayTreeKeyIterable:1:0 */]}
  },
  "+_SplayTreeKeyIterable": [1688, 1176],
  _SplayTreeValueIterable: {
    "": "IterableBase;_collection$_map@-1689",
    get$length: [function(_) {
      return this._collection$_map.get$_count();
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$isEmpty: [function(_) {
      return J.$eq(this._collection$_map.get$_count(), 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$iterator: [function(_) {
      var t1, t2;
      t1 = this._collection$_map;
      t2 = new P._SplayTreeValueIterator(t1, H.setRuntimeTypeInfo([], [P._SplayTreeNode]), t1.get$_modificationCount(), t1.get$_splayCount(), null);
      t2.$builtinTypeInfo = this.$builtinTypeInfo;
      t2._SplayTreeIterator$1(t1, H.getTypeArgumentByIndex(this, 1));
      return t2;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "Iterator_17", ret: [P.Iterator, V]};
      }, this.$receiver, "_SplayTreeValueIterable");
    }, "iterator"],
    $asIterableBase: function($K, $V) {
      return [$V];
    },
    $asIterable: function($K, $V) {
      return [$V];
    },
    $isEfficientLength: true,
    "<>": [206, 207],
    static: {_SplayTreeValueIterable$: [function(_map, $K, $V) {
        return H.setRuntimeTypeInfo(new P._SplayTreeValueIterable(_map), [$K, $V]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "dynamic__SplayTreeMap", args: [[P.SplayTreeMap, K, V]]};
        }, this.$receiver, "_SplayTreeValueIterable");
      }, 622, "new _SplayTreeValueIterable" /* new _SplayTreeValueIterable:1:0 */]}
  },
  "+_SplayTreeValueIterable": [1690, 1176],
  _SplayTreeKeyIterator: {
    "": "_SplayTreeIterator;_tree-1681,_workList-1682,_modificationCount-1075,_splayCount-1075,_currentNode-1683",
    _getValue$1: [function(node) {
      return node.get$key();
    }, "call$1" /* tearOffInfo */, "get$_getValue", 2, 0, function() {
      return H.computeSignature(function(K) {
        return {func: "K___SplayTreeNode", ret: K, args: [P._SplayTreeNode]};
      }, this.$receiver, "_SplayTreeKeyIterator");
    }, 1671, "_getValue"],
    $as_SplayTreeIterator: null,
    "<>": [208],
    static: {_SplayTreeKeyIterator$: [function(map, $K) {
        var t1 = H.setRuntimeTypeInfo(new P._SplayTreeKeyIterator(map, H.setRuntimeTypeInfo([], [P._SplayTreeNode]), map.get$_modificationCount(), map.get$_splayCount(), null), [$K]);
        t1._SplayTreeIterator$1(map, $K);
        return t1;
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(K) {
          return {func: "dynamic___SplayTree1", args: [[P._SplayTree, K]]};
        }, this.$receiver, "_SplayTreeKeyIterator");
      }, 499, "new _SplayTreeKeyIterator" /* new _SplayTreeKeyIterator:1:0 */]}
  },
  "+_SplayTreeKeyIterator": [1691],
  _SplayTreeValueIterator: {
    "": "_SplayTreeIterator;_tree-1681,_workList-1682,_modificationCount-1075,_splayCount-1075,_currentNode-1683",
    _getValue$1: [function(node) {
      return node.get$value();
    }, "call$1" /* tearOffInfo */, "get$_getValue", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V___SplayTreeMapNode", ret: V, args: [P._SplayTreeMapNode]};
      }, this.$receiver, "_SplayTreeValueIterator");
    }, 1671, "_getValue"],
    $as_SplayTreeIterator: function($K, $V) {
      return [$V];
    },
    "<>": [209, 210],
    static: {_SplayTreeValueIterator$: [function(map, $K, $V) {
        var t1 = H.setRuntimeTypeInfo(new P._SplayTreeValueIterator(map, H.setRuntimeTypeInfo([], [P._SplayTreeNode]), map.get$_modificationCount(), map.get$_splayCount(), null), [$K, $V]);
        t1._SplayTreeIterator$1(map, $V);
        return t1;
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "dynamic__SplayTreeMap0", args: [[P.SplayTreeMap, K, V]]};
        }, this.$receiver, "_SplayTreeValueIterator");
      }, 499, "new _SplayTreeValueIterator" /* new _SplayTreeValueIterator:1:0 */]}
  },
  "+_SplayTreeValueIterator": [1692],
  _SplayTreeNodeIterator: {
    "": "_SplayTreeIterator;_tree-1681,_workList-1682,_modificationCount-1075,_splayCount-1075,_currentNode-1683",
    _getValue$1: [function(node) {
      return node;
    }, "call$1" /* tearOffInfo */, "get$_getValue", 2, 0, function() {
      return H.computeSignature(function(K) {
        return {func: "_SplayTreeNode___SplayTreeNode0", ret: [P._SplayTreeNode, K], args: [P._SplayTreeNode]};
      }, this.$receiver, "_SplayTreeNodeIterator");
    }, 1671, "_getValue"],
    $as_SplayTreeIterator: function($K) {
      return [[P._SplayTreeNode, $K]];
    },
    "<>": [211],
    static: {_SplayTreeNodeIterator$: [function(tree, $K) {
        var t1 = H.setRuntimeTypeInfo(new P._SplayTreeNodeIterator(tree, H.setRuntimeTypeInfo([], [P._SplayTreeNode]), tree.get$_modificationCount(), tree.get$_splayCount(), null), [$K]);
        t1._SplayTreeIterator$1(tree, [P._SplayTreeNode, $K]);
        return t1;
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(K) {
          return {func: "dynamic___SplayTree2", args: [[P._SplayTree, K]]};
        }, this.$receiver, "_SplayTreeNodeIterator");
      }, 680, "new _SplayTreeNodeIterator" /* new _SplayTreeNodeIterator:1:0 */], _SplayTreeNodeIterator$startAt: [function(tree, startKey, $K) {
        var t1 = H.setRuntimeTypeInfo(new P._SplayTreeNodeIterator(tree, H.setRuntimeTypeInfo([], [P._SplayTreeNode]), tree.get$_modificationCount(), null, null), [$K]);
        t1._collection$_SplayTreeIterator$startAt$2(tree, startKey, [P._SplayTreeNode, $K]);
        return t1;
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(K) {
          return {func: "dynamic___SplayTree_dynamic0", args: [[P._SplayTree, K], null]};
        }, this.$receiver, "_SplayTreeNodeIterator");
      }, 680, 682, "new _SplayTreeNodeIterator$startAt" /* new _SplayTreeNodeIterator$startAt:2:0 */]}
  },
  "+_SplayTreeNodeIterator": [1693],
  SplayTreeSet: {
    "": "_SplayTree_IterableMixin;_comparator@-893,_validKey@-273,_root-1670,_dummy-1670,_count-1075,_modificationCount-1075,_splayCount-1075",
    _comparator$2: function(arg0, arg1) {
      return this._comparator.call$2(arg0, arg1);
    },
    _validKey$1: function(arg0) {
      return this._validKey.call$1(arg0);
    },
    _compare$2: [function(e1, e2) {
      return this._comparator$2(e1, e2);
    }, "call$2" /* tearOffInfo */, "get$_compare", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "int__E_E", ret: J.JSInt, args: [E, E]};
      }, this.$receiver, "SplayTreeSet");
    }, 1694, 1695, "_compare"],
    get$iterator: [function(_) {
      var t1 = new P._SplayTreeKeyIterator(this, H.setRuntimeTypeInfo([], [P._SplayTreeNode]), this._modificationCount, this._splayCount, null);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      t1._SplayTreeIterator$1(this, H.getTypeArgumentByIndex(this, 0));
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterator_18", ret: [P.Iterator, E]};
      }, this.$receiver, "SplayTreeSet");
    }, "iterator"],
    get$length: [function(_) {
      return this._count;
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$isEmpty: [function(_) {
      return this._root == null;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$isNotEmpty: [function(_) {
      return this._root != null;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty"],
    get$first: [function(_) {
      if (J.$eq(this._count, 0))
        throw H.wrapException(new P.StateError("no such element"));
      return this.get$_first().get$key();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_29", ret: E};
      }, this.$receiver, "SplayTreeSet");
    }, "first"],
    get$last: [function(_) {
      if (J.$eq(this._count, 0))
        throw H.wrapException(new P.StateError("no such element"));
      return this.get$_last().get$key();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_29", ret: E};
      }, this.$receiver, "SplayTreeSet");
    }, "last"],
    get$single: [function(_) {
      if (J.$eq(this._count, 0))
        throw H.wrapException(new P.StateError("no such element"));
      if (J.$gt$n(this._count, 1))
        throw H.wrapException(new P.StateError("too many elements"));
      return this._root.get$key();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_29", ret: E};
      }, this.$receiver, "SplayTreeSet");
    }, "single"],
    contains$1: [function(_, object) {
      return this._validKey$1(object) === true && J.$eq(this._splay$1(object), 0);
    }, "call$1" /* tearOffInfo */, "get$contains", 2, 0, 1047, 242, "contains"],
    add$1: [function(_, element) {
      var compare = this._splay$1(element);
      if (J.$eq(compare, 0))
        return false;
      this._addNewRoot$2(H.setRuntimeTypeInfo(new P._SplayTreeNode(element, null, null), [null]), compare);
      return true;
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__E10", ret: J.JSBool, args: [E]};
      }, this.$receiver, "SplayTreeSet");
    }, 453, "add"],
    remove$1: [function(_, object) {
      if (this._validKey$1(object) !== true)
        return false;
      return this._remove$1(object) != null;
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, 1047, 242, "remove"],
    addAll$1: [function(_, elements) {
      var t1, element, compare, t2;
      for (t1 = J.get$iterator$a(elements); t1.moveNext$0() === true;) {
        element = t1.get$current();
        compare = this._splay$1(element);
        if (!J.$eq(compare, 0)) {
          t2 = new P._SplayTreeNode(element, null, null);
          t2.$builtinTypeInfo = [null];
          this._addNewRoot$2(t2, compare);
        }
      }
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__Iterable9", void: true, args: [[P.Iterable, E]]};
      }, this.$receiver, "SplayTreeSet");
    }, 1594, "addAll"],
    removeAll$1: [function(elements) {
      var t1, element;
      for (t1 = J.get$iterator$a(elements); t1.moveNext$0() === true;) {
        element = t1.get$current();
        if (this._validKey$1(element) === true)
          this._remove$1(element);
      }
    }, "call$1" /* tearOffInfo */, "get$removeAll", 2, 0, 1592, 1594, "removeAll"],
    retainAll$1: [function(elements) {
      var retainSet, modificationCount, t1, t2, object;
      retainSet = P.SplayTreeSet$(this._comparator, this._validKey, H.getTypeArgumentByIndex(this, 0));
      modificationCount = this._modificationCount;
      for (t1 = J.get$iterator$a(elements), t2 = J.getInterceptor(modificationCount); t1.moveNext$0() === true;) {
        object = t1.get$current();
        if (!t2.$eq(modificationCount, this._modificationCount))
          throw H.wrapException(P.ConcurrentModificationError$(this));
        if (this._validKey$1(object) === true && J.$eq(this._splay$1(object), 0))
          retainSet.add$1(0, this._root.get$key());
      }
      if (!J.$eq(retainSet._count, this._count)) {
        this._root = retainSet._root;
        this._count = retainSet._count;
        this._modificationCount = J.$add$ns(this._modificationCount, 1);
      }
    }, "call$1" /* tearOffInfo */, "get$retainAll", 2, 0, 1592, 1594, "retainAll"],
    _filterWhere$2: [function(test, removeMatching) {
      var it, node, modificationCount, matches, t1, t2;
      it = H.setRuntimeTypeInfo(new P._SplayTreeNodeIterator(this, H.setRuntimeTypeInfo([], [P._SplayTreeNode]), this._modificationCount, this._splayCount, null), [null]);
      it._SplayTreeIterator$1(this, [P._SplayTreeNode, null]);
      for (; it.moveNext$0();) {
        node = it.get$current();
        modificationCount = this._modificationCount;
        matches = test.call$1(node.get$key());
        if (!J.$eq(modificationCount, this._modificationCount))
          throw H.wrapException(P.ConcurrentModificationError$(this));
        if (J.$eq(matches, removeMatching)) {
          this._remove$1(node.get$key());
          t1 = node.get$key();
          t2 = [];
          t2.$builtinTypeInfo = [P._SplayTreeNode];
          it = new P._SplayTreeNodeIterator(this, t2, this._modificationCount, null, null);
          it.$builtinTypeInfo = [null];
          it._collection$_SplayTreeIterator$startAt$2(this, t1, [P._SplayTreeNode, null]);
        }
      }
    }, "call$2" /* tearOffInfo */, "get$_filterWhere", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E_bool2", void: true, args: [{func: "bool__E10", ret: J.JSBool, args: [E]}, J.JSBool]};
      }, this.$receiver, "SplayTreeSet");
    }, 428, 1609, "_filterWhere"],
    removeWhere$1: [function(_, test) {
      this._filterWhere$2(test, true);
    }, "call$1" /* tearOffInfo */, "get$removeWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E6", void: true, args: [{func: "bool__E10", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "SplayTreeSet");
    }, 428, "removeWhere"],
    retainWhere$1: [function(_, test) {
      this._filterWhere$2(test, false);
    }, "call$1" /* tearOffInfo */, "get$retainWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E6", void: true, args: [{func: "bool__E10", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "SplayTreeSet");
    }, 428, "retainWhere"],
    lookup$1: [function(object) {
      if (this._validKey$1(object) !== true)
        return;
      if (!J.$eq(this._splay$1(object), 0))
        return;
      return this._root.get$key();
    }, "call$1" /* tearOffInfo */, "get$lookup", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__Object3", ret: E, args: [P.Object]};
      }, this.$receiver, "SplayTreeSet");
    }, 242, "lookup"],
    intersection$1: [function(other) {
      var result, t1, t2, element;
      result = P.SplayTreeSet$(this.get$_compare(), this._validKey, H.getTypeArgumentByIndex(this, 0));
      for (t1 = new P._SplayTreeKeyIterator(this, H.setRuntimeTypeInfo([], [P._SplayTreeNode]), this._modificationCount, this._splayCount, null), t1.$builtinTypeInfo = this.$builtinTypeInfo, t1._SplayTreeIterator$1(this, H.getTypeArgumentByIndex(this, 0)), t2 = J.getInterceptor$as(other); t1.moveNext$0();) {
        element = t1.get$current();
        if (t2.contains$1(other, element) === true)
          result.add$1(0, element);
      }
      return result;
    }, "call$1" /* tearOffInfo */, "get$intersection", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set__Set1", ret: [P.Set, E], args: [[P.Set, E]]};
      }, this.$receiver, "SplayTreeSet");
    }, 403, "intersection"],
    difference$1: [function(other) {
      var result, t1, t2, element;
      result = P.SplayTreeSet$(this.get$_compare(), this._validKey, H.getTypeArgumentByIndex(this, 0));
      for (t1 = new P._SplayTreeKeyIterator(this, H.setRuntimeTypeInfo([], [P._SplayTreeNode]), this._modificationCount, this._splayCount, null), t1.$builtinTypeInfo = this.$builtinTypeInfo, t1._SplayTreeIterator$1(this, H.getTypeArgumentByIndex(this, 0)), t2 = J.getInterceptor$as(other); t1.moveNext$0();) {
        element = t1.get$current();
        if (t2.contains$1(other, element) !== true)
          result.add$1(0, element);
      }
      return result;
    }, "call$1" /* tearOffInfo */, "get$difference", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set__Set1", ret: [P.Set, E], args: [[P.Set, E]]};
      }, this.$receiver, "SplayTreeSet");
    }, 403, "difference"],
    union$1: [function(other) {
      var set = P.SplayTreeSet$(this.get$_compare(), this._validKey, H.getTypeArgumentByIndex(this, 0));
      set._count = this._count;
      set._root = this._cloneNode$1(this._root);
      set.addAll$1(0, other);
      return set;
    }, "call$1" /* tearOffInfo */, "get$union", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set__Set1", ret: [P.Set, E], args: [[P.Set, E]]};
      }, this.$receiver, "SplayTreeSet");
    }, 403, "union"],
    _clone$0: [function() {
      var set = P.SplayTreeSet$(this.get$_compare(), this._validKey, H.getTypeArgumentByIndex(this, 0));
      set._count = this._count;
      set._root = this._cloneNode$1(this._root);
      return set;
    }, "call$0" /* tearOffInfo */, "get$_clone", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "SplayTreeSet_", ret: [P.SplayTreeSet, E]};
      }, this.$receiver, "SplayTreeSet");
    }, "_clone"],
    _cloneNode$1: [function(node) {
      var t1;
      if (node == null)
        return;
      t1 = new P._SplayTreeNode(node.get$key(), null, null);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      t1.left = this._cloneNode$1(node.get$left());
      t1.right = this._cloneNode$1(node.get$right());
      return t1;
    }, "call$1" /* tearOffInfo */, "get$_cloneNode", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "_SplayTreeNode___SplayTreeNode1", ret: [P._SplayTreeNode, E], args: [[P._SplayTreeNode, E]]};
      }, this.$receiver, "SplayTreeSet");
    }, 1671, "_cloneNode"],
    containsAll$1: [function(other) {
      var t1, element;
      for (t1 = J.get$iterator$a(other); t1.moveNext$0() === true;) {
        element = t1.get$current();
        if (!(this._validKey$1(element) === true && J.$eq(this._splay$1(element), 0)))
          return false;
      }
      return true;
    }, "call$1" /* tearOffInfo */, "get$containsAll", 2, 0, 1602, 403, "containsAll"],
    clear$0: [function(_) {
      this._root = null;
      this._count = 0;
      this._modificationCount = J.$add$ns(this._modificationCount, 1);
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    $as_SplayTree_IterableMixin: null,
    $asSet: null,
    $asIterable: null,
    $isSet: true,
    $isEfficientLength: true,
    $isIterable: true,
    "<>": [212],
    static: {SplayTreeSet$: [function(compare, isValidKey, $E) {
        var t1, t2;
        t1 = compare == null ? P.Comparable_compare$closure() : compare;
        t2 = isValidKey != null ? isValidKey : new P.SplayTreeSet_closure($E);
        return H.setRuntimeTypeInfo(new P.SplayTreeSet(t1, t2, null, H.setRuntimeTypeInfo(new P._SplayTreeNode(null, null, null), [$E]), 0, 0, 0), [$E]);
      }, null /* tearOffInfo */, null, 0, 4, function() {
        return H.computeSignature(function(E) {
          return {func: "dynamic___int__E_E_bool__dynamic", opt: [{func: "int__E_E", ret: J.JSInt, args: [E, E]}, {func: "bool__dynamic", ret: J.JSBool, args: [null]}]};
        }, this.$receiver, "SplayTreeSet");
      }, 370, 370, 459, 651, "new SplayTreeSet" /* new SplayTreeSet:2:0 */]}
  },
  "+SplayTreeSet": [1696, 1697],
  _SplayTree_IterableMixin: {
    "": "_SplayTree+IterableMixin;",
    $as_SplayTree: null,
    $asIterable: null,
    $isIterable: true,
    "<>": [213]
  },
  SplayTreeSet_closure: {
    "": "Closure:241;E_0-1698",
    call$1: [function(v) {
      var t1 = H.checkSubtypeOfRuntimeType(v, this.E_0);
      return t1;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 700, "call"]
  },
  "+SplayTreeSet_closure": [1060],
  "": "_toStringVisiting@-2045"
}],
["dart.convert", "dart:convert", , P, {
  "": "",
  _convertJsonToDart: [function(json, reviver) {
    var revive = reviver == null ? new P._convertJsonToDart_closure() : reviver;
    return revive.call$2(null, new P._convertJsonToDart_walk(revive).call$1(json));
  }, "call$2" /* tearOffInfo */, "_convertJsonToDart$closure", 4, 0, 684, 685, 686, "_convertJsonToDart"],
  _parseJson: [function(source, reviver) {
    var parsed, e, t1, exception;
    t1 = source;
    if (typeof t1 !== "string")
      throw H.wrapException(new P.ArgumentError(source));
    parsed = null;
    try {
      parsed = JSON.parse(source);
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      throw H.wrapException(P.FormatException$(String(e)));
    }

    return P._convertJsonToDart(parsed, reviver);
  }, "call$2" /* tearOffInfo */, "_parseJson$closure", 4, 0, 732, 292, 686, "_parseJson"],
  _defaultToEncodable: [function(object) {
    return object.toJson$0();
  }, "call$1" /* tearOffInfo */, "_defaultToEncodable$closure", 2, 0, 733, 242, "_defaultToEncodable"],
  _isSurrogate: [function(codeUnit) {
    return J.$and$n(codeUnit, 63488) === 55296;
  }, "call$1" /* tearOffInfo */, "_isSurrogate$closure", 2, 0, 246, 247, "_isSurrogate"],
  _isLeadSurrogate: [function(codeUnit) {
    return J.$and$n(codeUnit, 64512) === 55296;
  }, "call$1" /* tearOffInfo */, "_isLeadSurrogate$closure", 2, 0, 246, 247, "_isLeadSurrogate"],
  _isTailSurrogate: [function(codeUnit) {
    return J.$and$n(codeUnit, 64512) === 56320;
  }, "call$1" /* tearOffInfo */, "_isTailSurrogate$closure", 2, 0, 246, 247, "_isTailSurrogate"],
  _combineSurrogatePair0: [function(lead, tail) {
    return (65536 + (J.$and$n(lead, 1023) << 10 >>> 0) | J.$and$n(tail, 1023)) >>> 0;
  }, "call$2" /* tearOffInfo */, "_combineSurrogatePair0$closure", 4, 0, 766, 767, 768, "_combineSurrogatePair"],
  _convertJsonToDart_closure: {
    "": "Closure:311;",
    call$2: [function(key, value) {
      return value;
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 312, 280, "call"]
  },
  "+_convertJsonToDart_closure": [1060],
  _convertJsonToDart_walk: {
    "": "Closure:241;revive_0-370",
    call$1: [function(e) {
      var list, t1, i, keys, map, t2, key, proto;
      if (e == null || typeof e != "object")
        return e;
      if (Object.getPrototypeOf(e) === Array.prototype) {
        list = e;
        for (t1 = this.revive_0, i = 0; i < list.length; ++i)
          list[i] = t1.call$2(i, this.call$1(list[i]));
        return list;
      }
      keys = Object.keys(e);
      map = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
      for (t1 = this.revive_0, t2 = J.getInterceptor$a(map), i = 0; i < keys.length; ++i) {
        key = keys[i];
        t2.$indexSet(map, key, t1.call$2(key, this.call$1(e[key])));
      }
      proto = e.__proto__;
      if (typeof proto !== "undefined" && proto !== Object.prototype)
        t2.$indexSet(map, "__proto__", t1.call$2("__proto__", this.call$1(proto)));
      return map;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 256, "call"]
  },
  "+_convertJsonToDart_walk": [1060],
  AsciiCodec: {
    "": "Encoding;_allowInvalid<-1043",
    get$name: [function() {
      return "us-ascii";
    }, null /* tearOffInfo */, null, 1, 0, 253, "name"],
    decode$2$allowInvalid: [function(bytes, allowInvalid) {
      if ((allowInvalid == null ? this._allowInvalid : allowInvalid) === true)
        return C.AsciiDecoder_true_127.convert$1(bytes);
      else
        return C.AsciiDecoder_false_127.convert$1(bytes);
    }, function(bytes) {
      return this.decode$2$allowInvalid(bytes, null);
    }, "decode$1", "call$2$allowInvalid" /* tearOffInfo */, null /* tearOffInfo */, "get$decode", 2, 3, 1699, 370, 1700, 688, "decode"],
    get$encoder: [function() {
      return C.AsciiEncoder_127;
    }, null /* tearOffInfo */, null, 1, 0, 1701, "encoder"],
    get$decoder: [function() {
      return this._allowInvalid === true ? C.AsciiDecoder_true_127 : C.AsciiDecoder_false_127;
    }, null /* tearOffInfo */, null, 1, 0, 1702, "decoder"],
    static: {AsciiCodec$: [function(allowInvalid) {
        return new P.AsciiCodec(allowInvalid);
      }, null /* tearOffInfo */, null, 0, 3, 687, 527, 688, "new AsciiCodec" /* new AsciiCodec:0:1:allowInvalid */]}
  },
  "+AsciiCodec": [1703],
  _UnicodeSubsetEncoder: {
    "": "Converter;_subsetMask<-1075",
    convert$1: [function(string) {
      var t1, t2, result, t3, t4, i, t5, codeUnit;
      t1 = J.getInterceptor$as(string);
      t2 = t1.get$length(string);
      if (typeof t2 !== "number")
        return H.iae(t2);
      t2 = Array(t2);
      t2.fixed$length = init;
      result = H.setRuntimeTypeInfo(t2, [J.JSInt]);
      t2 = result.length;
      t3 = this._subsetMask;
      t4 = J.getInterceptor$i(t3);
      i = 0;
      while (true) {
        t5 = t1.get$length(string);
        if (typeof t5 !== "number")
          return H.iae(t5);
        if (!(i < t5))
          break;
        codeUnit = t1.codeUnitAt$1(string, i);
        t5 = t4.$not(t3);
        if (typeof t5 !== "number")
          return H.iae(t5);
        if ((codeUnit & t5) !== 0)
          throw H.wrapException(new P.ArgumentError("String contains invalid characters."));
        if (i >= t2)
          return H.ioore(result, i);
        result[i] = codeUnit;
        ++i;
      }
      return result;
    }, "call$1" /* tearOffInfo */, "get$convert", 2, 0, 870, 290, "convert"],
    startChunkedConversion$1: [function(sink) {
      var t1 = J.getInterceptor(sink);
      if (typeof sink !== "object" || sink === null || !t1.$isByteConversionSink)
        sink = new P._ByteAdapterSink(sink);
      return new P._UnicodeSubsetEncoderSink(sink, this._subsetMask);
    }, "call$1" /* tearOffInfo */, "get$startChunkedConversion", 2, 0, 1704, 595, "startChunkedConversion"],
    bind$1: [function(stream) {
      return P.Converter.prototype.bind$1.call(this, stream);
    }, "call$1" /* tearOffInfo */, "get$bind", 2, 0, 1705, 553, "bind"],
    $asConverter: function() {
      return [J.JSString, [J.JSArray, J.JSInt]];
    },
    "<>": [],
    static: {_UnicodeSubsetEncoder$: [function(_subsetMask) {
        return new P._UnicodeSubsetEncoder(_subsetMask);
      }, null /* tearOffInfo */, null, 2, 0, 689, 690, "new _UnicodeSubsetEncoder" /* new _UnicodeSubsetEncoder:1:0 */]}
  },
  "+_UnicodeSubsetEncoder": [1706],
  AsciiEncoder: {
    "": "_UnicodeSubsetEncoder;_subsetMask-1075",
    static: {AsciiEncoder$: [function() {
        return new P.AsciiEncoder(127);
      }, null /* tearOffInfo */, null, 0, 0, 319, "new AsciiEncoder" /* new AsciiEncoder:0:0 */]}
  },
  "+AsciiEncoder": [1707],
  _UnicodeSubsetEncoderSink: {
    "": "StringConversionSinkBase;_convert$_sink<-1708,_subsetMask<-1075",
    close$0: [function() {
      this._convert$_sink.close$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    addSlice$4: [function(source, start, end, isLast) {
      var t1, t2, t3, i, t4, codeUnit, t5;
      t1 = J.getInterceptor$n(start);
      if (t1.$lt(start, 0) || t1.$gt(start, J.get$length$as(source)))
        throw H.wrapException(P.RangeError$range(start, 0, J.get$length$as(source)));
      t1 = J.getInterceptor$n(end);
      if (t1.$lt(end, start) || t1.$gt(end, J.get$length$as(source)))
        throw H.wrapException(P.RangeError$range(end, start, J.get$length$as(source)));
      for (t1 = this._subsetMask, t2 = J.getInterceptor$i(t1), t3 = J.getInterceptor$s(source), i = start; t4 = J.getInterceptor$n(i), t4.$lt(i, end); i = t4.$add(i, 1)) {
        codeUnit = t3.codeUnitAt$1(source, i);
        t5 = t2.$not(t1);
        if (typeof t5 !== "number")
          return H.iae(t5);
        if ((codeUnit & t5) !== 0)
          throw H.wrapException(new P.ArgumentError("Source contains invalid character with code point: " + codeUnit + "."));
      }
      t1 = this._convert$_sink;
      J.add$1$a(t1, t3.get$codeUnits(source).sublist$2(0, start, end));
      if (isLast === true)
        t1.close$0();
    }, "call$4" /* tearOffInfo */, "get$addSlice", 8, 0, 1709, 292, 439, 440, 745, "addSlice"],
    static: {_UnicodeSubsetEncoderSink$: [function(_subsetMask, _sink) {
        return new P._UnicodeSubsetEncoderSink(_sink, _subsetMask);
      }, null /* tearOffInfo */, null, 4, 0, 691, 690, 555, "new _UnicodeSubsetEncoderSink" /* new _UnicodeSubsetEncoderSink:2:0 */]}
  },
  "+_UnicodeSubsetEncoderSink": [1710],
  _UnicodeSubsetDecoder: {
    "": "Converter;_allowInvalid<-1043,_subsetMask<-1075",
    convert$1: [function(bytes) {
      var t1, t2, t3, i, t4, $byte;
      t1 = J.getInterceptor$as(bytes);
      t2 = this._subsetMask;
      t3 = J.getInterceptor$i(t2);
      i = 0;
      while (true) {
        t4 = t1.get$length(bytes);
        if (typeof t4 !== "number")
          return H.iae(t4);
        if (!(i < t4))
          break;
        $byte = t1.$index(bytes, i);
        if (J.$and$n($byte, t3.$not(t2)) !== 0) {
          if (this._allowInvalid !== true)
            throw H.wrapException(P.FormatException$("Invalid value in input: " + H.S($byte)));
          return this._convertInvalid$1(bytes);
        }
        ++i;
      }
      return P.String_String$fromCharCodes(bytes);
    }, "call$1" /* tearOffInfo */, "get$convert", 2, 0, 298, 1700, "convert"],
    _convertInvalid$1: [function(bytes) {
      var buffer, t1, t2, t3, i, t4, value, charCodes;
      buffer = new P.StringBuffer("");
      buffer._contents = "";
      t1 = J.getInterceptor$as(bytes);
      t2 = this._subsetMask;
      t3 = J.getInterceptor$i(t2);
      i = 0;
      while (true) {
        t4 = t1.get$length(bytes);
        if (typeof t4 !== "number")
          return H.iae(t4);
        if (!(i < t4))
          break;
        value = t1.$index(bytes, i);
        if (J.$and$n(value, t3.$not(t2)) !== 0)
          value = 65533;
        charCodes = P.List_List$filled(1, value, J.JSInt);
        t4 = H.Primitives_stringFromCharCodes(charCodes);
        buffer._contents = buffer._contents + t4;
        ++i;
      }
      return buffer._contents;
    }, "call$1" /* tearOffInfo */, "get$_convertInvalid", 2, 0, 298, 1700, "_convertInvalid"],
    startChunkedConversion$1: [function(sink) {
      var t1, stringSink;
      t1 = J.getInterceptor(sink);
      stringSink = typeof sink === "object" && sink !== null && !!t1.$isStringConversionSink ? sink : new P._StringAdapterSink(sink);
      return new P._Latin1DecoderSink(this._allowInvalid, stringSink);
    }, "call$1" /* tearOffInfo */, "get$startChunkedConversion", 2, 0, 1711, 595, "startChunkedConversion"],
    bind$1: [function(stream) {
      return P.Converter.prototype.bind$1.call(this, stream);
    }, "call$1" /* tearOffInfo */, "get$bind", 2, 0, 1712, 553, "bind"],
    $asConverter: function() {
      return [[J.JSArray, J.JSInt], J.JSString];
    },
    "<>": [],
    static: {_UnicodeSubsetDecoder$: [function(_allowInvalid, _subsetMask) {
        return new P._UnicodeSubsetDecoder(_allowInvalid, _subsetMask);
      }, null /* tearOffInfo */, null, 4, 0, 692, 693, 690, "new _UnicodeSubsetDecoder" /* new _UnicodeSubsetDecoder:2:0 */]}
  },
  "+_UnicodeSubsetDecoder": [1713],
  AsciiDecoder: {
    "": "_UnicodeSubsetDecoder;_allowInvalid-1043,_subsetMask-1075",
    startChunkedConversion$1: [function(sink) {
      var t1 = J.getInterceptor(sink);
      return new P._AsciiDecoderSink(this._allowInvalid, (typeof sink === "object" && sink !== null && !!t1.$isStringConversionSink ? sink : new P._StringAdapterSink(sink)).asUtf8Sink$1(false));
    }, "call$1" /* tearOffInfo */, "get$startChunkedConversion", 2, 0, 1711, 595, "startChunkedConversion"],
    static: {AsciiDecoder$: [function(allowInvalid) {
        return new P.AsciiDecoder(allowInvalid, 127);
      }, null /* tearOffInfo */, null, 0, 3, 687, 527, 688, "new AsciiDecoder" /* new AsciiDecoder:0:1:allowInvalid */]}
  },
  "+AsciiDecoder": [1714],
  _AsciiDecoderSink: {
    "": "ByteConversionSinkBase;_allowInvalid<-1043,_utf8Sink@-1708",
    close$0: [function() {
      this._utf8Sink.close$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    add$1: [function(_, source) {
      this.addSlice$4(source, 0, J.get$length$as(source), false);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, 1715, 292, "add"],
    addSlice$4: [function(source, start, end, isLast) {
      var t1, t2, i, t3;
      t1 = J.getInterceptor$n(start);
      if (t1.$lt(start, 0) || t1.$gt(start, J.get$length$as(source)))
        throw H.wrapException(P.RangeError$range(start, 0, J.get$length$as(source)));
      t1 = J.getInterceptor$n(end);
      if (t1.$lt(end, start) || t1.$gt(end, J.get$length$as(source)))
        throw H.wrapException(P.RangeError$range(end, start, J.get$length$as(source)));
      for (t1 = J.getInterceptor$as(source), t2 = this._allowInvalid === true, i = start; t3 = J.getInterceptor$n(i), t3.$lt(i, end); i = t3.$add(i, 1))
        if (J.$and$n(t1.$index(source, i), 4294967168) !== 0)
          if (t2) {
            if (t3.$gt(i, start))
              this._utf8Sink.addSlice$4(source, start, i, false);
            J.add$1$a(this._utf8Sink, C.List_239_191_189);
            start = t3.$add(i, 1);
          } else
            throw H.wrapException(P.FormatException$("Source contains non-ASCII bytes."));
      if (J.$lt$n(start, end))
        this._utf8Sink.addSlice$4(source, start, end, isLast);
      else if (isLast === true)
        this._utf8Sink.close$0();
    }, "call$4" /* tearOffInfo */, "get$addSlice", 8, 0, 1716, 292, 439, 440, 745, "addSlice"],
    static: {_AsciiDecoderSink$: [function(_allowInvalid, _utf8Sink) {
        return new P._AsciiDecoderSink(_allowInvalid, _utf8Sink);
      }, null /* tearOffInfo */, null, 4, 0, 694, 693, 695, "new _AsciiDecoderSink" /* new _AsciiDecoderSink:2:0 */]}
  },
  "+_AsciiDecoderSink": [1717],
  ByteConversionSink: {
    "": "ChunkedConversionSink;",
    $isByteConversionSink: true,
    $asChunkedConversionSink: function() {
      return [[J.JSArray, J.JSInt]];
    },
    "<>": [],
    static: {ByteConversionSink$: [function() {
        return new P.ByteConversionSink();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new ByteConversionSink" /* new ByteConversionSink:0:0 */], ByteConversionSink_ByteConversionSink$withCallback: [function(callback) {
        var t1 = Array(1024);
        t1.fixed$length = init;
        return new P._ByteCallbackSink(callback, H.setRuntimeTypeInfo(t1, [J.JSInt]), 0);
      }, "call$1" /* tearOffInfo */, null, 2, 0, 696, 277, "new ByteConversionSink$withCallback" /* new ByteConversionSink$withCallback:1:0 */], ByteConversionSink_ByteConversionSink$from: [function(sink) {
        return new P._ByteAdapterSink(sink);
      }, "call$1" /* tearOffInfo */, null, 2, 0, 697, 595, "new ByteConversionSink$from" /* new ByteConversionSink$from:1:0 */]}
  },
  "+ByteConversionSink": [1718],
  ByteConversionSinkBase: {
    "": "ByteConversionSink;",
    addSlice$4: [function(chunk, start, end, isLast) {
      this.add$1(0, J.sublist$2$a(chunk, start, end));
      if (isLast === true)
        this.close$0();
    }, "call$4" /* tearOffInfo */, "get$addSlice", 8, 0, 1716, 744, 439, 440, 745, "addSlice"]
  },
  "+ByteConversionSinkBase": [1708],
  _ByteAdapterSink: {
    "": "ByteConversionSinkBase;_convert$_sink<-1718",
    add$1: [function(_, chunk) {
      return J.add$1$a(this._convert$_sink, chunk);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, 1715, 744, "add"],
    close$0: [function() {
      return this._convert$_sink.close$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    static: {_ByteAdapterSink$: [function(_sink) {
        return new P._ByteAdapterSink(_sink);
      }, null /* tearOffInfo */, null, 2, 0, 698, 555, "new _ByteAdapterSink" /* new _ByteAdapterSink:1:0 */]}
  },
  "+_ByteAdapterSink": [1717],
  _ByteCallbackSink: {
    "": "ByteConversionSinkBase;_callback<-1715,_buffer@-1719,_bufferIndex@-1075",
    _callback$1: function(arg0) {
      return this._callback.call$1(arg0);
    },
    add$1: [function(_, chunk) {
      var freeCount, t1, oldLength, v, t2, grown, t3;
      freeCount = J.$sub$n(J.get$length$as(this._buffer), this._bufferIndex);
      t1 = J.getInterceptor$as(chunk);
      if (J.$gt$n(t1.get$length(chunk), freeCount)) {
        oldLength = J.get$length$as(this._buffer);
        v = J.$sub$n(J.$add$ns(t1.get$length(chunk), oldLength), 1);
        t2 = J.getInterceptor$n(v);
        v = t2.$or(v, t2.$shr(v, 1));
        v |= v >>> 2;
        v |= v >>> 4;
        v |= v >>> 8;
        t2 = Array((((v | v >>> 16) >>> 0) + 1) * 2);
        t2.fixed$length = init;
        grown = H.setRuntimeTypeInfo(t2, [J.JSInt]);
        t2 = J.get$length$as(this._buffer);
        t3 = this._buffer;
        H.IterableMixinWorkaround_setRangeList(grown, 0, t2, t3, 0);
        this._buffer = grown;
      }
      t2 = this._buffer;
      t3 = this._bufferIndex;
      J.setRange$3$a(t2, t3, J.$add$ns(t3, t1.get$length(chunk)), chunk);
      this._bufferIndex = J.$add$ns(this._bufferIndex, t1.get$length(chunk));
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, 1720, 744, "add"],
    close$0: [function() {
      this._callback$1(J.sublist$2$a(this._buffer, 0, this._bufferIndex));
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    static: {"": "_ByteCallbackSink__INITIAL_BUFFER_SIZE<-370", _ByteCallbackSink$: [function(callback) {
        var t1 = Array(1024);
        t1.fixed$length = init;
        return new P._ByteCallbackSink(callback, H.setRuntimeTypeInfo(t1, [J.JSInt]), 0);
      }, null /* tearOffInfo */, null, 2, 0, 699, 277, "new _ByteCallbackSink" /* new _ByteCallbackSink:1:0 */], _ByteCallbackSink__roundToPowerOf2: [function(v) {
        var t1;
        v = J.$sub$n(v, 1);
        t1 = J.getInterceptor$n(v);
        v = t1.$or(v, t1.$shr(v, 1));
        v |= v >>> 2;
        v |= v >>> 4;
        v |= v >>> 8;
        return ((v | v >>> 16) >>> 0) + 1;
      }, "call$1" /* tearOffInfo */, "_ByteCallbackSink__roundToPowerOf2$closure", 2, 0, 244, 700, "_roundToPowerOf2"]}
  },
  "+_ByteCallbackSink": [1717],
  ChunkedConversionSink: {
    "": "Object;",
    "<>": [175],
    static: {ChunkedConversionSink$: [function($T) {
        return H.setRuntimeTypeInfo(new P.ChunkedConversionSink(), [$T]);
      }, null /* tearOffInfo */, null, 0, 0, 319, "new ChunkedConversionSink" /* new ChunkedConversionSink:0:0 */], ChunkedConversionSink_ChunkedConversionSink$withCallback: [function(callback, $T) {
        return H.setRuntimeTypeInfo(new P._SimpleCallbackSink(callback, H.setRuntimeTypeInfo([], [null])), [null]);
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "ChunkedConversionSink__void__List", ret: [P.ChunkedConversionSink, T], args: [{func: "void__List0", void: true, args: [[J.JSArray, T]]}]};
        }, this.$receiver, "ChunkedConversionSink");
      }, 277, "new ChunkedConversionSink$withCallback" /* new ChunkedConversionSink$withCallback:1:0 */]}
  },
  "+ChunkedConversionSink": [0],
  _SimpleCallbackSink: {
    "": "ChunkedConversionSink;_callback<-1721,_accumulated<-1722",
    _callback$1: function(arg0) {
      return this._callback.call$1(arg0);
    },
    add$1: [function(_, chunk) {
      J.add$1$a(this._accumulated, chunk);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T24", void: true, args: [T]};
      }, this.$receiver, "_SimpleCallbackSink");
    }, 744, "add"],
    close$0: [function() {
      this._callback$1(this._accumulated);
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    $asChunkedConversionSink: null,
    "<>": [176],
    static: {_SimpleCallbackSink$: [function(_callback, $T) {
        return H.setRuntimeTypeInfo(new P._SimpleCallbackSink(_callback, H.setRuntimeTypeInfo([], [$T])), [$T]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic___ChunkedConversionCallback", args: [{func: "void__List1", void: true, args: [[J.JSArray, T]]}]};
        }, this.$receiver, "_SimpleCallbackSink");
      }, 701, "new _SimpleCallbackSink" /* new _SimpleCallbackSink:1:0 */]}
  },
  "+_SimpleCallbackSink": [1723],
  _EventSinkAdapter: {
    "": "Object;_convert$_sink<-1724",
    add$1: [function(_, data) {
      return J.add$1$a(this._convert$_sink, data);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T25", void: true, args: [T]};
      }, this.$receiver, "_EventSinkAdapter");
    }, 546, "add"],
    close$0: [function() {
      return this._convert$_sink.close$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    "<>": [177],
    static: {_EventSinkAdapter$: [function(_sink, $T) {
        return H.setRuntimeTypeInfo(new P._EventSinkAdapter(_sink), [$T]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic__EventSink0", args: [[P.EventSink, T]]};
        }, this.$receiver, "_EventSinkAdapter");
      }, 555, "new _EventSinkAdapter" /* new _EventSinkAdapter:1:0 */]}
  },
  "+_EventSinkAdapter": [0, 1725],
  _ConverterStreamEventSink: {
    "": "Object;_eventSink<-1726,_chunkedSink@-1727",
    add$1: [function(_, o) {
      return J.add$1$a(this._chunkedSink, o);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "void__S2", void: true, args: [S]};
      }, this.$receiver, "_ConverterStreamEventSink");
    }, 389, "add"],
    addError$2: [function(error, stackTrace) {
      this._eventSink.addError$2(error, stackTrace);
    }, function(error) {
      return this.addError$2(error, null);
    }, "addError$1", "call$2" /* tearOffInfo */, "call$1" /* tearOffInfo */, "get$addError", 2, 2, 1346, 370, 507, 508, "addError"],
    close$0: [function() {
      return this._chunkedSink.close$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    "<>": [178, 179],
    static: {_ConverterStreamEventSink$: [function(converter, sink, $S, $T) {
        return H.setRuntimeTypeInfo(new P._ConverterStreamEventSink(sink, converter.startChunkedConversion$1(H.setRuntimeTypeInfo(new P._EventSinkAdapter(sink), [null]))), [$S, $T]);
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(S, T) {
          return {func: "dynamic__Converter_EventSink", args: [P.Converter, [P.EventSink, T]]};
        }, this.$receiver, "_ConverterStreamEventSink");
      }, 702, 595, "new _ConverterStreamEventSink" /* new _ConverterStreamEventSink:2:0 */]}
  },
  "+_ConverterStreamEventSink": [0, 1728],
  Codec: {
    "": "Object;",
    encode$1: [function(input) {
      return this.get$encoder().convert$1(input);
    }, "call$1" /* tearOffInfo */, "get$encode", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "T__S3", ret: T, args: [S]};
      }, this.$receiver, "Codec");
    }, 531, "encode"],
    decode$1: [function(encoded) {
      return this.get$decoder().convert$1(encoded);
    }, "call$1" /* tearOffInfo */, "get$decode", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "S__T", ret: S, args: [T]};
      }, this.$receiver, "Codec");
    }, 1729, "decode"],
    fuse$1: [function(other) {
      return H.setRuntimeTypeInfo(new P._FusedCodec(this, other), [H.getRuntimeTypeArgument(this, "Codec", 0), H.getRuntimeTypeArgument(this, "Codec", 1), null]);
    }, "call$1" /* tearOffInfo */, "get$fuse", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "Codec__Codec", ret: [P.Codec, S, null], args: [[P.Codec, T, null]]};
      }, this.$receiver, "Codec");
    }, 403, "fuse"],
    get$inverted: [function() {
      return H.setRuntimeTypeInfo(new P._InvertedCodec(this), [H.getRuntimeTypeArgument(this, "Codec", 1), H.getRuntimeTypeArgument(this, "Codec", 0)]);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "Codec_", ret: [P.Codec, T, S]};
      }, this.$receiver, "Codec");
    }, "inverted"],
    "<>": [100, 101],
    static: {Codec$: [function($S, $T) {
        return H.setRuntimeTypeInfo(new P.Codec(), [$S, $T]);
      }, null /* tearOffInfo */, null, 0, 0, 319, "new Codec" /* new Codec:0:0 */]}
  },
  "+Codec": [0],
  _FusedCodec: {
    "": "Codec;_convert$_first<-1730,_second<-1731",
    get$encoder: [function() {
      var t1 = this._convert$_first.get$encoder();
      return H.setRuntimeTypeInfo(new P._FusedConverter(t1, this._second.get$encoder()), [H.getRuntimeTypeArgument(t1, "Converter", 0), H.getRuntimeTypeArgument(t1, "Converter", 1), null]);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(S, M, T) {
        return {func: "Converter_1", ret: [P.Converter, S, T]};
      }, this.$receiver, "_FusedCodec");
    }, "encoder"],
    get$decoder: [function() {
      var t1 = this._second.get$decoder();
      return H.setRuntimeTypeInfo(new P._FusedConverter(t1, this._convert$_first.get$decoder()), [H.getRuntimeTypeArgument(t1, "Converter", 0), H.getRuntimeTypeArgument(t1, "Converter", 1), null]);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(S, M, T) {
        return {func: "Converter_2", ret: [P.Converter, T, S]};
      }, this.$receiver, "_FusedCodec");
    }, "decoder"],
    $asCodec: function($S, $M, $T) {
      return [$S, $T];
    },
    "<>": [180, 181, 182],
    static: {_FusedCodec$: [function(_first, _second, $S, $M, $T) {
        return H.setRuntimeTypeInfo(new P._FusedCodec(_first, _second), [$S, $M, $T]);
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(S, M, T) {
          return {func: "dynamic__Codec_Codec", args: [[P.Codec, S, M], [P.Codec, M, T]]};
        }, this.$receiver, "_FusedCodec");
      }, 703, 704, "new _FusedCodec" /* new _FusedCodec:2:0 */]}
  },
  "+_FusedCodec": [1732],
  _InvertedCodec: {
    "": "Codec;_codec<-1733",
    get$encoder: [function() {
      return this._codec.get$decoder();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T, S) {
        return {func: "Converter_3", ret: [P.Converter, T, S]};
      }, this.$receiver, "_InvertedCodec");
    }, "encoder"],
    get$decoder: [function() {
      return this._codec.get$encoder();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T, S) {
        return {func: "Converter_4", ret: [P.Converter, S, T]};
      }, this.$receiver, "_InvertedCodec");
    }, "decoder"],
    get$inverted: [function() {
      return this._codec;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T, S) {
        return {func: "Codec_0", ret: [P.Codec, S, T]};
      }, this.$receiver, "_InvertedCodec");
    }, "inverted"],
    $asCodec: null,
    "<>": [183, 184],
    static: {_InvertedCodec$: [function(codec, $T, $S) {
        return H.setRuntimeTypeInfo(new P._InvertedCodec(codec), [$T, $S]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(T, S) {
          return {func: "dynamic__Codec", args: [[P.Codec, S, T]]};
        }, this.$receiver, "_InvertedCodec");
      }, 705, "new _InvertedCodec" /* new _InvertedCodec:1:0 */]}
  },
  "+_InvertedCodec": [1734],
  Converter: {
    "": "Object;",
    fuse$1: [function(other) {
      return H.setRuntimeTypeInfo(new P._FusedConverter(this, other), [H.getRuntimeTypeArgument(this, "Converter", 0), H.getRuntimeTypeArgument(this, "Converter", 1), null]);
    }, "call$1" /* tearOffInfo */, "get$fuse", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "Converter__Converter", ret: [P.Converter, S, null], args: [[P.Converter, T, null]]};
      }, this.$receiver, "Converter");
    }, 403, "fuse"],
    startChunkedConversion$1: [function(sink) {
      throw H.wrapException(P.UnsupportedError$("This converter does not support chunked conversions: " + H.S(this)));
    }, "call$1" /* tearOffInfo */, "get$startChunkedConversion", 2, 0, 1735, 595, "startChunkedConversion"],
    bind$1: [function(source) {
      return H.setRuntimeTypeInfo(new P._BoundSinkStream(new P.Converter_bind_closure(this), source), [null, null]);
    }, "call$1" /* tearOffInfo */, "get$bind", 2, 0, 1736, 292, "bind"],
    "<>": [102, 103],
    static: {Converter$: [function($S, $T) {
        return H.setRuntimeTypeInfo(new P.Converter(), [$S, $T]);
      }, null /* tearOffInfo */, null, 0, 0, 319, "new Converter" /* new Converter:0:0 */]}
  },
  "+Converter": [0, 1737],
  Converter_bind_closure: {
    "": "Closure:554;this_0-370",
    call$1: [function(sink) {
      return H.setRuntimeTypeInfo(new P._ConverterStreamEventSink(sink, this.this_0.startChunkedConversion$1(H.setRuntimeTypeInfo(new P._EventSinkAdapter(sink), [null]))), [null, null]);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 554, 595, "call"]
  },
  "+Converter_bind_closure": [1060],
  _FusedConverter: {
    "": "Converter;_convert$_first<-1738,_second<-1738",
    convert$1: [function(input) {
      return this._second.convert$1(this._convert$_first.convert$1(input));
    }, "call$1" /* tearOffInfo */, "get$convert", 2, 0, function() {
      return H.computeSignature(function(S, M, T) {
        return {func: "T__S4", ret: T, args: [S]};
      }, this.$receiver, "_FusedConverter");
    }, 531, "convert"],
    startChunkedConversion$1: [function(sink) {
      return this._convert$_first.startChunkedConversion$1(this._second.startChunkedConversion$1(sink));
    }, "call$1" /* tearOffInfo */, "get$startChunkedConversion", 2, 0, 1735, 595, "startChunkedConversion"],
    $asConverter: function($S, $M, $T) {
      return [$S, $T];
    },
    "<>": [185, 186, 187],
    static: {_FusedConverter$: [function(_first, _second, $S, $M, $T) {
        return H.setRuntimeTypeInfo(new P._FusedConverter(_first, _second), [$S, $M, $T]);
      }, null /* tearOffInfo */, null, 4, 0, 706, 703, 704, "new _FusedConverter" /* new _FusedConverter:2:0 */]}
  },
  "+_FusedConverter": [1739],
  Encoding: {
    "": "Codec;",
    decodeStream$1: [function(byteStream) {
      return byteStream.transform$1(this.get$decoder()).fold$2(0, P.StringBuffer$(""), new P.Encoding_decodeStream_closure()).then$1(new P.Encoding_decodeStream_closure0());
    }, "call$1" /* tearOffInfo */, "get$decodeStream", 2, 0, 1740, 1741, "decodeStream"],
    $isEncoding: true,
    $asCodec: function() {
      return [J.JSString, [J.JSArray, J.JSInt]];
    },
    "<>": [],
    static: {"": "Encoding__nameToEncoding@-1742", Encoding$: [function() {
        return new P.Encoding();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new Encoding" /* new Encoding:0:0 */], Encoding_getByName: [function($name) {
        if ($name == null)
          return;
        $name = J.toLowerCase$0$s($name);
        return J.$index$as($.get$Encoding__nameToEncoding(), $name);
      }, "call$1" /* tearOffInfo */, "Encoding_getByName$closure", 2, 0, 707, 346, "getByName"]}
  },
  "+Encoding": [1743],
  Encoding_decodeStream_closure: {
    "": "Closure:311;",
    call$2: [function(buffer, string) {
      buffer.write$1(string);
      return buffer;
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 1744, 290, "call"]
  },
  "+Encoding_decodeStream_closure": [1060],
  Encoding_decodeStream_closure0: {
    "": "Closure:241;",
    call$1: [function(buffer) {
      return J.toString$0(buffer);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1744, "call"]
  },
  "+Encoding_decodeStream_closure": [1060],
  HtmlEscapeMode: {
    "": "Object;_convert$_name<-1039,escapeLtGt<-1043,escapeQuot<-1043,escapeApos<-1043,escapeSlash<-1043",
    toString$0: [function(_) {
      return this._convert$_name;
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {"": "HtmlEscapeMode_UNKNOWN<-1745,HtmlEscapeMode_ATTRIBUTE<-1745,HtmlEscapeMode_ELEMENT<-1745", HtmlEscapeMode$_: [function(_name, escapeLtGt, escapeQuot, escapeApos, escapeSlash) {
        return new P.HtmlEscapeMode(_name, escapeLtGt, escapeQuot, escapeApos, escapeSlash);
      }, null /* tearOffInfo */, null, 10, 0, 708, 709, 710, 711, 712, 713, "new HtmlEscapeMode$_" /* new HtmlEscapeMode$_:5:0 */]}
  },
  "+HtmlEscapeMode": [0],
  HtmlEscape: {
    "": "Converter;mode<-1745",
    convert$1: [function(text) {
      var val = this._convert$3(text, 0, J.get$length$as(text));
      return val == null ? text : val;
    }, "call$1" /* tearOffInfo */, "get$convert", 2, 0, 407, 873, "convert"],
    _convert$3: [function(text, start, end) {
      var t1, t2, i, result, t3, ch, replace, t4, str;
      for (t1 = J.getInterceptor$as(text), t2 = this.mode, i = start, result = null; t3 = J.getInterceptor$n(i), t3.$lt(i, end); i = t3.$add(i, 1)) {
        ch = t1.$index(text, i);
        switch (ch) {
          case "&":
            replace = "&amp;";
            break;
          case "\u00a0":
            replace = "&nbsp;";
            break;
          case "\"":
            replace = t2.get$escapeQuot() === true ? "&quot;" : null;
            break;
          case "'":
            replace = t2.get$escapeApos() === true ? "&#x27;" : null;
            break;
          case "<":
            replace = t2.get$escapeLtGt() === true ? "&lt;" : null;
            break;
          case ">":
            replace = t2.get$escapeLtGt() === true ? "&gt;" : null;
            break;
          case "/":
            replace = t2.get$escapeSlash() === true ? "&#x2F;" : null;
            break;
          default:
            replace = null;
        }
        if (replace != null) {
          if (result == null) {
            t4 = t1.substring$2(text, start, i);
            result = new P.StringBuffer("");
            result._contents = t4;
          }
          result.toString;
          str = typeof replace === "string" ? replace : replace;
          result._contents = result._contents + str;
        } else if (result != null)
          result.write$1(ch);
      }
      return result != null ? J.toString$0(result) : null;
    }, "call$3" /* tearOffInfo */, "get$_convert", 6, 0, 1746, 873, 439, 440, "_convert"],
    startChunkedConversion$1: [function(sink) {
      var t1 = J.getInterceptor(sink);
      if (typeof sink !== "object" || sink === null || !t1.$isStringConversionSink)
        sink = new P._StringAdapterSink(sink);
      return new P._HtmlEscapeSink(this, sink);
    }, "call$1" /* tearOffInfo */, "get$startChunkedConversion", 2, 0, 748, 595, "startChunkedConversion"],
    $asConverter: function() {
      return [J.JSString, J.JSString];
    },
    "<>": [],
    static: {HtmlEscape$: [function(mode) {
        return new P.HtmlEscape(mode);
      }, null /* tearOffInfo */, null, 0, 2, 714, 715, 716, "new HtmlEscape" /* new HtmlEscape:1:0 */]}
  },
  "+HtmlEscape": [1747],
  _HtmlEscapeSink: {
    "": "StringConversionSinkBase;_escape<-1748,_convert$_sink<-1749",
    addSlice$4: [function(chunk, start, end, isLast) {
      var val, t1;
      val = this._escape._convert$3(chunk, start, end);
      t1 = this._convert$_sink;
      if (val == null)
        t1.addSlice$4(chunk, start, end, isLast);
      else {
        J.add$1$a(t1, val);
        if (isLast === true)
          t1.close$0();
      }
    }, "call$4" /* tearOffInfo */, "get$addSlice", 8, 0, 1709, 744, 439, 440, 745, "addSlice"],
    close$0: [function() {
      return this._convert$_sink.close$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    static: {_HtmlEscapeSink$: [function(_escape, _sink) {
        return new P._HtmlEscapeSink(_escape, _sink);
      }, null /* tearOffInfo */, null, 4, 0, 717, 718, 555, "new _HtmlEscapeSink" /* new _HtmlEscapeSink:2:0 */]}
  },
  "+_HtmlEscapeSink": [1710],
  JsonUnsupportedObjectError: {
    "": "Error;unsupportedObject<-370,cause<-370",
    toString$0: [function(_) {
      if (this.cause != null)
        return "Converting object to an encodable object failed.";
      else
        return "Converting object did not return an encodable object.";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {JsonUnsupportedObjectError$: [function(unsupportedObject, cause) {
        return new P.JsonUnsupportedObjectError(unsupportedObject, cause);
      }, null /* tearOffInfo */, null, 2, 3, 719, 370, 720, 721, "new JsonUnsupportedObjectError" /* new JsonUnsupportedObjectError:1:1:cause */]}
  },
  "+JsonUnsupportedObjectError": [1151],
  JsonCyclicError: {
    "": "JsonUnsupportedObjectError;unsupportedObject-370,cause-370",
    toString$0: [function(_) {
      return "Cyclic error in JSON stringify";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {JsonCyclicError$: [function(object) {
        return new P.JsonCyclicError(object, null);
      }, null /* tearOffInfo */, null, 2, 0, 362, 242, "new JsonCyclicError" /* new JsonCyclicError:1:0 */]}
  },
  "+JsonCyclicError": [1750],
  JsonCodec: {
    "": "Codec;",
    decode$2$reviver: [function(source, reviver) {
      if (reviver == null)
        return P._parseJson(source, this.get$decoder()._reviver);
      return P._parseJson(source, reviver);
    }, function(source) {
      return this.decode$2$reviver(source, null);
    }, "decode$1", "call$2$reviver" /* tearOffInfo */, null /* tearOffInfo */, "get$decode", 2, 3, 1751, 370, 292, 686, "decode"],
    encode$2$toEncodable: [function(value, toEncodable) {
      var output;
      if (toEncodable == null) {
        toEncodable = C.JsonEncoder_null._toEncodableFunction;
        if (toEncodable == null)
          toEncodable = P._defaultToEncodable$closure();
        output = P.StringBuffer$("");
        new P._JsonStringifier(toEncodable, output, P.HashSet_HashSet$identity(null)).stringifyValue$1(value);
        return output._contents;
      }
      if (toEncodable == null)
        toEncodable = P._defaultToEncodable$closure();
      output = P.StringBuffer$("");
      new P._JsonStringifier(toEncodable, output, P.HashSet_HashSet$identity(null)).stringifyValue$1(value);
      return output._contents;
    }, function(value) {
      return this.encode$2$toEncodable(value, null);
    }, "encode$1", "call$2$toEncodable" /* tearOffInfo */, null /* tearOffInfo */, "get$encode", 2, 3, 1752, 370, 280, 726, "encode"],
    get$encoder: [function() {
      return C.JsonEncoder_null;
    }, null /* tearOffInfo */, null, 1, 0, 1753, "encoder"],
    get$decoder: [function() {
      return C.JsonDecoder_null;
    }, null /* tearOffInfo */, null, 1, 0, 1754, "decoder"],
    $asCodec: function() {
      return [P.Object, J.JSString];
    },
    "<>": [],
    static: {JsonCodec$: [function() {
        return new P.JsonCodec();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new JsonCodec" /* new JsonCodec:0:0 */], JsonCodec_JsonCodec$withReviver: [function(reviver) {
        return new P._ReviverJsonCodec(reviver);
      }, "call$1" /* tearOffInfo */, null, 2, 0, 722, 686, "new JsonCodec$withReviver" /* new JsonCodec$withReviver:1:0 */]}
  },
  "+JsonCodec": [1755],
  _ReviverJsonCodec: {
    "": "JsonCodec;_reviver<-311",
    decode$2$reviver: [function(source, reviver) {
      return P._parseJson(source, reviver == null ? this._reviver : reviver);
    }, function(source) {
      return this.decode$2$reviver(source, null);
    }, "decode$1", "call$2$reviver" /* tearOffInfo */, null /* tearOffInfo */, "get$decode", 2, 3, 1751, 370, 292, 686, "decode"],
    get$decoder: [function() {
      return new P.JsonDecoder(this._reviver);
    }, null /* tearOffInfo */, null, 1, 0, 1754, "decoder"],
    static: {_ReviverJsonCodec$: [function(_reviver) {
        return new P._ReviverJsonCodec(_reviver);
      }, null /* tearOffInfo */, null, 2, 0, 723, 724, "new _ReviverJsonCodec" /* new _ReviverJsonCodec:1:0 */]}
  },
  "+_ReviverJsonCodec": [1756],
  JsonEncoder: {
    "": "Converter;_toEncodableFunction<-370",
    convert$1: [function(o) {
      var toEncodable, output;
      toEncodable = this._toEncodableFunction;
      if (toEncodable == null)
        toEncodable = P._defaultToEncodable$closure();
      output = P.StringBuffer$("");
      new P._JsonStringifier(toEncodable, output, P.HashSet_HashSet$identity(null)).stringifyValue$1(o);
      return output._contents;
    }, "call$1" /* tearOffInfo */, "get$convert", 2, 0, 296, 389, "convert"],
    startChunkedConversion$1: [function(sink) {
      var t1 = J.getInterceptor(sink);
      if (typeof sink !== "object" || sink === null || !t1.$isStringConversionSink)
        sink = new P._StringAdapterSink(sink);
      return new P._JsonEncoderSink(this._toEncodableFunction, sink, false);
    }, "call$1" /* tearOffInfo */, "get$startChunkedConversion", 2, 0, 1757, 595, "startChunkedConversion"],
    bind$1: [function(stream) {
      return P.Converter.prototype.bind$1.call(this, stream);
    }, "call$1" /* tearOffInfo */, "get$bind", 2, 0, 1758, 553, "bind"],
    $asConverter: function() {
      return [P.Object, J.JSString];
    },
    "<>": [],
    static: {JsonEncoder$: [function(toEncodable) {
        return new P.JsonEncoder(toEncodable);
      }, null /* tearOffInfo */, null, 0, 2, 725, 370, 726, "new JsonEncoder" /* new JsonEncoder:1:0 */]}
  },
  "+JsonEncoder": [1759],
  _JsonEncoderSink: {
    "": "ChunkedConversionSink;_toEncodableFunction<-1098,_convert$_sink<-1749,_isDone@-1043",
    add$1: [function(_, o) {
      var stringSink;
      if (this._isDone === true)
        throw H.wrapException(new P.StateError("Only one call to add allowed"));
      this._isDone = true;
      stringSink = this._convert$_sink.asStringSink$0();
      new P._JsonStringifier(this._toEncodableFunction, stringSink, P.HashSet_HashSet$identity(null)).stringifyValue$1(o);
      stringSink.close$0();
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, 821, 389, "add"],
    close$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    $asChunkedConversionSink: function() {
      return [P.Object];
    },
    "<>": [],
    static: {_JsonEncoderSink$: [function(_sink, _toEncodableFunction) {
        return new P._JsonEncoderSink(_toEncodableFunction, _sink, false);
      }, null /* tearOffInfo */, null, 4, 0, 727, 555, 728, "new _JsonEncoderSink" /* new _JsonEncoderSink:2:0 */]}
  },
  "+_JsonEncoderSink": [1760],
  JsonDecoder: {
    "": "Converter;_reviver<-311",
    convert$1: [function(input) {
      return P._parseJson(input, this._reviver);
    }, "call$1" /* tearOffInfo */, "get$convert", 2, 0, 289, 531, "convert"],
    startChunkedConversion$1: [function(sink) {
      return new P._JsonDecoderSink(this._reviver, sink, P.StringBuffer$(""));
    }, "call$1" /* tearOffInfo */, "get$startChunkedConversion", 2, 0, 1761, 595, "startChunkedConversion"],
    bind$1: [function(stream) {
      return P.Converter.prototype.bind$1.call(this, stream);
    }, "call$1" /* tearOffInfo */, "get$bind", 2, 0, 1762, 553, "bind"],
    $asConverter: function() {
      return [J.JSString, P.Object];
    },
    "<>": [],
    static: {JsonDecoder$: [function(reviver) {
        return new P.JsonDecoder(reviver);
      }, null /* tearOffInfo */, null, 2, 0, 729, 686, "new JsonDecoder" /* new JsonDecoder:1:0 */]}
  },
  "+JsonDecoder": [1763],
  _JsonDecoderSink: {
    "": "_StringSinkConversionSink;_reviver<-311,_chunkedSink<-1760,_stringSink-1764",
    close$0: [function() {
      var buffer, t1, accumulated;
      P._StringSinkConversionSink.prototype.close$0.call(this);
      buffer = this._stringSink;
      t1 = J.getInterceptor(buffer);
      accumulated = t1.toString$0(buffer);
      t1.clear$0(buffer);
      t1 = this._chunkedSink;
      J.add$1$a(t1, P._parseJson(accumulated, this._reviver));
      t1.close$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    static: {_JsonDecoderSink$: [function(_reviver, _chunkedSink) {
        return new P._JsonDecoderSink(_reviver, _chunkedSink, P.StringBuffer$(""));
      }, null /* tearOffInfo */, null, 4, 0, 730, 724, 731, "new _JsonDecoderSink" /* new _JsonDecoderSink:2:0 */]}
  },
  "+_JsonDecoderSink": [1765],
  _JsonStringifier: {
    "": "Object;toEncodable<-1098,sink<-1764,seen<-1766",
    toEncodable$1: function(arg0) {
      return this.toEncodable.call$1(arg0);
    },
    checkCycle$1: [function(object) {
      var t1, t2;
      t1 = this.seen;
      t2 = J.getInterceptor$as(t1);
      if (t2.contains$1(t1, object) === true)
        throw H.wrapException(P.JsonCyclicError$(object));
      t2.add$1(t1, object);
    }, "call$1" /* tearOffInfo */, "get$checkCycle", 2, 0, 251, 242, "checkCycle"],
    stringifyValue$1: [function(object) {
      var customJson, e, t1, t2, t3, exception;
      if (!this.stringifyJsonValue$1(object)) {
        t1 = object;
        t2 = this.seen;
        t3 = J.getInterceptor$as(t2);
        if (t3.contains$1(t2, t1) === true)
          H.throwExpression(P.JsonCyclicError$(t1));
        t3.add$1(t2, t1);
        try {
          customJson = this.toEncodable$1(object);
          if (!this.stringifyJsonValue$1(customJson)) {
            t1 = P.JsonUnsupportedObjectError$(object, null);
            throw H.wrapException(t1);
          }
          t3.remove$1(t2, object);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          throw H.wrapException(P.JsonUnsupportedObjectError$(object, e));
        }

      }
    }, "call$1" /* tearOffInfo */, "get$stringifyValue", 2, 0, 251, 242, "stringifyValue"],
    stringifyJsonValue$1: [function(object) {
      var t1, t2, i, t3;
      t1 = {};
      if (typeof object === "number") {
        this.sink.write$1(C.JSNumber_methods.toString$0(object));
        return true;
      } else if (object === true) {
        this.sink.write$1("true");
        return true;
      } else if (object === false) {
        this.sink.write$1("false");
        return true;
      } else if (object == null) {
        this.sink.write$1("null");
        return true;
      } else if (typeof object === "string") {
        t1 = this.sink;
        t1.write$1("\"");
        P._JsonStringifier_escape(t1, object);
        t1.write$1("\"");
        return true;
      } else {
        t2 = J.getInterceptor(object);
        if (typeof object === "object" && object !== null && (object.constructor === Array || !!t2.$isList)) {
          this.checkCycle$1(object);
          t1 = this.sink;
          t1.write$1("[");
          if (J.$gt$n(t2.get$length(object), 0)) {
            this.stringifyValue$1(t2.$index(object, 0));
            i = 1;
            while (true) {
              t3 = t2.get$length(object);
              if (typeof t3 !== "number")
                return H.iae(t3);
              if (!(i < t3))
                break;
              t1.write$1(",");
              this.stringifyValue$1(t2.$index(object, i));
              ++i;
            }
          }
          t1.write$1("]");
          J.remove$1$a(this.seen, object);
          return true;
        } else if (typeof object === "object" && object !== null && !!t2.$isMap) {
          this.checkCycle$1(object);
          t3 = this.sink;
          t3.write$1("{");
          t1.first_0 = true;
          t2.forEach$1(object, new P._JsonStringifier_stringifyJsonValue_closure(t1, this));
          t3.write$1("}");
          J.remove$1$a(this.seen, object);
          return true;
        } else
          return false;
      }
    }, "call$1" /* tearOffInfo */, "get$stringifyJsonValue", 2, 0, 273, 242, "stringifyJsonValue"],
    static: {"": "_JsonStringifier_BACKSPACE<-1075,_JsonStringifier_TAB<-1075,_JsonStringifier_NEWLINE<-1075,_JsonStringifier_CARRIAGE_RETURN<-1075,_JsonStringifier_FORM_FEED<-1075,_JsonStringifier_QUOTE<-1075,_JsonStringifier_BACKSLASH<-1075,_JsonStringifier_CHAR_b<-1075,_JsonStringifier_CHAR_f<-1075,_JsonStringifier_CHAR_n<-1075,_JsonStringifier_CHAR_r<-1075,_JsonStringifier_CHAR_t<-1075,_JsonStringifier_CHAR_u<-1075", _JsonStringifier$: [function(sink, toEncodable) {
        return new P._JsonStringifier(toEncodable, sink, P.HashSet_HashSet$identity(null));
      }, null /* tearOffInfo */, null, 4, 0, 734, 595, 726, "new _JsonStringifier" /* new _JsonStringifier:2:0 */], _JsonStringifier_stringify: [function(object, toEncodable) {
        var output;
        if (toEncodable == null)
          toEncodable = P._defaultToEncodable$closure();
        output = P.StringBuffer$("");
        new P._JsonStringifier(toEncodable, output, P.HashSet_HashSet$identity(null)).stringifyValue$1(object);
        return output._contents;
      }, "call$2" /* tearOffInfo */, "_JsonStringifier_stringify$closure", 4, 0, 735, 242, 726, "stringify"], _JsonStringifier_printOn: [function(object, output, toEncodable) {
        new P._JsonStringifier(toEncodable, output, P.HashSet_HashSet$identity(null)).stringifyValue$1(object);
      }, "call$3" /* tearOffInfo */, "_JsonStringifier_printOn$closure", 6, 0, 736, 242, 737, 726, "printOn"], _JsonStringifier_numberToString: [function(x) {
        return J.toString$0(x);
      }, "call$1" /* tearOffInfo */, "_JsonStringifier_numberToString$closure", 2, 0, 738, 274, "numberToString"], _JsonStringifier_hexDigit: [function(x) {
        var t1;
        if (J.$lt$n(x, 10)) {
          if (typeof x !== "number")
            return H.iae(x);
          t1 = 48 + x;
        } else {
          if (typeof x !== "number")
            return H.iae(x);
          t1 = 87 + x;
        }
        return t1;
      }, "call$1" /* tearOffInfo */, "_JsonStringifier_hexDigit$closure", 2, 0, 244, 274, "hexDigit"], _JsonStringifier_escape: [function(sb, s) {
        var t1, $length, charCodes, needsEscape, i, charCode, t2;
        t1 = J.getInterceptor$as(s);
        $length = t1.get$length(s);
        charCodes = H.setRuntimeTypeInfo([], [J.JSInt]);
        if (typeof $length !== "number")
          return H.iae($length);
        needsEscape = false;
        i = 0;
        for (; i < $length; ++i) {
          charCode = t1.codeUnitAt$1(s, i);
          if (charCode < 32) {
            charCodes.push(92);
            switch (charCode) {
              case 8:
                charCodes.push(98);
                break;
              case 9:
                charCodes.push(116);
                break;
              case 10:
                charCodes.push(110);
                break;
              case 12:
                charCodes.push(102);
                break;
              case 13:
                charCodes.push(114);
                break;
              default:
                charCodes.push(117);
                t2 = charCode >>> 12 & 15;
                charCodes.push(t2 < 10 ? 48 + t2 : 87 + t2);
                t2 = charCode >>> 8 & 15;
                charCodes.push(t2 < 10 ? 48 + t2 : 87 + t2);
                t2 = charCode >>> 4 & 15;
                charCodes.push(t2 < 10 ? 48 + t2 : 87 + t2);
                t2 = charCode & 15;
                charCodes.push(t2 < 10 ? 48 + t2 : 87 + t2);
                break;
            }
            needsEscape = true;
          } else if (charCode === 34 || charCode === 92) {
            charCodes.push(92);
            charCodes.push(charCode);
            needsEscape = true;
          } else
            charCodes.push(charCode);
        }
        sb.write$1(needsEscape ? P.String_String$fromCharCodes(charCodes) : s);
      }, "call$2" /* tearOffInfo */, "_JsonStringifier_escape$closure", 4, 0, 739, 740, 383, "escape"]}
  },
  "+_JsonStringifier": [0],
  _JsonStringifier_stringifyJsonValue_closure: {
    "": "Closure:1767;box_0-370,this_1-370",
    call$2: [function(key, value) {
      var t1, t2;
      t1 = this.box_0;
      t2 = this.this_1;
      if (t1.first_0 !== true)
        t2.get$sink().write$1(",\"");
      else
        t2.get$sink().write$1("\"");
      P._JsonStringifier_escape(t2.get$sink(), key);
      t2.get$sink().write$1("\":");
      t2.stringifyValue$1(value);
      t1.first_0 = false;
    }, "call$2" /* tearOffInfo */, null, 4, 0, 1767, 312, 280, "call"]
  },
  "+_JsonStringifier_stringifyJsonValue_closure": [1060],
  Latin1Codec: {
    "": "Encoding;_allowInvalid<-1043",
    get$name: [function() {
      return "iso-8859-1";
    }, null /* tearOffInfo */, null, 1, 0, 253, "name"],
    decode$2$allowInvalid: [function(bytes, allowInvalid) {
      if ((allowInvalid == null ? this._allowInvalid : allowInvalid) === true)
        return C.Latin1Decoder_true_255.convert$1(bytes);
      else
        return C.Latin1Decoder_false_255.convert$1(bytes);
    }, function(bytes) {
      return this.decode$2$allowInvalid(bytes, null);
    }, "decode$1", "call$2$allowInvalid" /* tearOffInfo */, null /* tearOffInfo */, "get$decode", 2, 3, 1699, 370, 1700, 688, "decode"],
    get$encoder: [function() {
      return C.Latin1Encoder_255;
    }, null /* tearOffInfo */, null, 1, 0, 1701, "encoder"],
    get$decoder: [function() {
      return this._allowInvalid === true ? C.Latin1Decoder_true_255 : C.Latin1Decoder_false_255;
    }, null /* tearOffInfo */, null, 1, 0, 1702, "decoder"],
    static: {Latin1Codec$: [function(allowInvalid) {
        return new P.Latin1Codec(allowInvalid);
      }, null /* tearOffInfo */, null, 0, 3, 687, 527, 688, "new Latin1Codec" /* new Latin1Codec:0:1:allowInvalid */]}
  },
  "+Latin1Codec": [1703],
  Latin1Encoder: {
    "": "_UnicodeSubsetEncoder;_subsetMask-1075",
    static: {Latin1Encoder$: [function() {
        return new P.Latin1Encoder(255);
      }, null /* tearOffInfo */, null, 0, 0, 319, "new Latin1Encoder" /* new Latin1Encoder:0:0 */]}
  },
  "+Latin1Encoder": [1707],
  Latin1Decoder: {
    "": "_UnicodeSubsetDecoder;_allowInvalid-1043,_subsetMask-1075",
    startChunkedConversion$1: [function(sink) {
      var t1, stringSink;
      t1 = J.getInterceptor(sink);
      stringSink = typeof sink === "object" && sink !== null && !!t1.$isStringConversionSink ? sink : new P._StringAdapterSink(sink);
      return new P._Latin1DecoderSink(this._allowInvalid, stringSink);
    }, "call$1" /* tearOffInfo */, "get$startChunkedConversion", 2, 0, 1711, 595, "startChunkedConversion"],
    static: {Latin1Decoder$: [function(allowInvalid) {
        return new P.Latin1Decoder(allowInvalid, 255);
      }, null /* tearOffInfo */, null, 0, 3, 687, 527, 688, "new Latin1Decoder" /* new Latin1Decoder:0:1:allowInvalid */]}
  },
  "+Latin1Decoder": [1714],
  _Latin1DecoderSink: {
    "": "ByteConversionSinkBase;_allowInvalid<-1043,_convert$_sink@-1749",
    close$0: [function() {
      this._convert$_sink.close$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    add$1: [function(_, source) {
      this.addSlice$4(source, 0, J.get$length$as(source), false);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, 1715, 292, "add"],
    _addSliceToSink$4: [function(source, start, end, isLast) {
      var t1, charCodes;
      t1 = this._convert$_sink;
      charCodes = J.getRange$2$a(source, start, end);
      J.add$1$a(t1, H.Primitives_stringFromCharCodes(P.List_List$from(charCodes, true, null)));
      if (isLast === true)
        this._convert$_sink.close$0();
    }, "call$4" /* tearOffInfo */, "get$_addSliceToSink", 8, 0, 1716, 292, 439, 440, 745, "_addSliceToSink"],
    addSlice$4: [function(source, start, end, isLast) {
      var t1, t2, i, t3, t4, charCodes;
      t1 = J.getInterceptor$n(start);
      if (t1.$lt(start, 0) || t1.$gt(start, J.get$length$as(source)))
        throw H.wrapException(P.RangeError$range(start, 0, J.get$length$as(source)));
      t1 = J.getInterceptor$n(end);
      if (t1.$lt(end, start) || t1.$gt(end, J.get$length$as(source)))
        throw H.wrapException(P.RangeError$range(end, start, J.get$length$as(source)));
      for (t1 = J.getInterceptor$as(source), t2 = this._allowInvalid === true, i = start; t3 = J.getInterceptor$n(i), t3.$lt(i, end); i = t3.$add(i, 1))
        if (J.$and$n(t1.$index(source, i), 4294967040) !== 0)
          if (t2) {
            if (t3.$gt(i, start)) {
              t4 = this._convert$_sink;
              charCodes = t1.getRange$2(source, start, i);
              J.add$1$a(t4, H.Primitives_stringFromCharCodes(P.List_List$from(charCodes, true, null)));
            }
            t4 = this._convert$_sink;
            charCodes = C.JSArray_methods.getRange$2(C.List_65533, 0, 1);
            J.add$1$a(t4, H.Primitives_stringFromCharCodes(P.List_List$from(charCodes, true, null)));
            start = t3.$add(i, 1);
          } else
            throw H.wrapException(P.FormatException$("Source contains non-Latin-1 characters."));
      if (J.$lt$n(start, end)) {
        J.add$1$a(this._convert$_sink, P.String_String$fromCharCodes(t1.getRange$2(source, start, end)));
        if (isLast === true)
          this._convert$_sink.close$0();
      } else if (isLast === true)
        this._convert$_sink.close$0();
    }, "call$4" /* tearOffInfo */, "get$addSlice", 8, 0, 1716, 292, 439, 440, 745, "addSlice"],
    static: {_Latin1DecoderSink$: [function(_allowInvalid, _sink) {
        return new P._Latin1DecoderSink(_allowInvalid, _sink);
      }, null /* tearOffInfo */, null, 4, 0, 741, 693, 555, "new _Latin1DecoderSink" /* new _Latin1DecoderSink:2:0 */]}
  },
  "+_Latin1DecoderSink": [1717],
  LineSplitter: {
    "": "Converter;",
    convert$1: [function(data) {
      var lines = H.setRuntimeTypeInfo([], [J.JSString]);
      P._LineSplitterSink__addSlice(data, 0, J.get$length$as(data), true, C.JSArray_methods.get$add(lines));
      return lines;
    }, "call$1" /* tearOffInfo */, "get$convert", 2, 0, 1768, 546, "convert"],
    startChunkedConversion$1: [function(sink) {
      var t1 = J.getInterceptor(sink);
      if (typeof sink !== "object" || sink === null || !t1.$isStringConversionSink)
        sink = new P._StringAdapterSink(sink);
      return new P._LineSplitterSink(sink, null);
    }, "call$1" /* tearOffInfo */, "get$startChunkedConversion", 2, 0, 748, 595, "startChunkedConversion"],
    $asConverter: function() {
      return [J.JSString, [J.JSArray, J.JSString]];
    },
    "<>": [],
    static: {LineSplitter$: [function() {
        return new P.LineSplitter();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new LineSplitter" /* new LineSplitter:0:0 */]}
  },
  "+LineSplitter": [1769],
  _LineSplitterSink: {
    "": "StringConversionSinkBase;_convert$_sink<-1749,_carry@-1039",
    addSlice$4: [function(chunk, start, end, isLast) {
      var t1 = this._carry;
      if (t1 != null) {
        chunk = J.$add$ns(t1, J.substring$2$s(chunk, start, end));
        end = J.get$length$as(chunk);
        this._carry = null;
        start = 0;
      }
      t1 = this._convert$_sink;
      this._carry = P._LineSplitterSink__addSlice(chunk, start, end, isLast, J.get$add$a(t1));
      if (isLast === true)
        t1.close$0();
    }, "call$4" /* tearOffInfo */, "get$addSlice", 8, 0, 1709, 744, 439, 440, 745, "addSlice"],
    close$0: [function() {
      this.addSlice$4("", 0, 0, true);
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    static: {"": "_LineSplitterSink__LF<-1075,_LineSplitterSink__CR<-1075", _LineSplitterSink$: [function(_sink) {
        return new P._LineSplitterSink(_sink, null);
      }, null /* tearOffInfo */, null, 2, 0, 742, 555, "new _LineSplitterSink" /* new _LineSplitterSink:1:0 */], _LineSplitterSink__addSlice: [function(chunk, start, end, isLast, adder) {
        var t1, t2, t3, pos, t4, $char, skip, carry;
        for (t1 = J.getInterceptor$s(chunk), t2 = isLast === true, t3 = !t2, pos = start; t4 = J.getInterceptor$n(pos), t4.$lt(pos, end);) {
          $char = t1.codeUnitAt$1(chunk, pos);
          if ($char === 10)
            skip = 1;
          else if ($char === 13)
            if (J.$lt$n(t4.$add(pos, 1), end))
              skip = t1.codeUnitAt$1(chunk, t4.$add(pos, 1)) === 10 ? 2 : 1;
            else {
              if (t3)
                return t1.substring$2(chunk, start, end);
              skip = 1;
            }
          else
            skip = 0;
          if (skip > 0) {
            adder.call$1(t1.substring$2(chunk, start, pos));
            pos = t4.$add(pos, skip);
            start = pos;
          } else
            pos = t4.$add(pos, 1);
        }
        if (!t4.$eq(pos, start)) {
          carry = t1.substring$2(chunk, start, pos);
          if (t2)
            adder.call$1(carry);
          else
            return carry;
        }
        return;
      }, "call$5" /* tearOffInfo */, "_LineSplitterSink__addSlice$closure", 10, 0, 743, 744, 439, 440, 745, 746, "_addSlice"]}
  },
  "+_LineSplitterSink": [1710],
  StringConversionSink: {
    "": "ChunkedConversionSink;",
    $isStringConversionSink: true,
    $asChunkedConversionSink: function() {
      return [J.JSString];
    },
    "<>": [],
    static: {StringConversionSink$: [function() {
        return new P.StringConversionSink();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new StringConversionSink" /* new StringConversionSink:0:0 */], StringConversionSink_StringConversionSink$withCallback: [function(callback) {
        return new P._StringCallbackSink(callback, P.StringBuffer$(""));
      }, "call$1" /* tearOffInfo */, null, 2, 0, 747, 277, "new StringConversionSink$withCallback" /* new StringConversionSink$withCallback:1:0 */], StringConversionSink_StringConversionSink$from: [function(sink) {
        return new P._StringAdapterSink(sink);
      }, "call$1" /* tearOffInfo */, null, 2, 0, 748, 595, "new StringConversionSink$from" /* new StringConversionSink$from:1:0 */], StringConversionSink_StringConversionSink$fromStringSink: [function(sink) {
        return new P._StringSinkConversionSink(sink);
      }, "call$1" /* tearOffInfo */, null, 2, 0, 749, 595, "new StringConversionSink$fromStringSink" /* new StringConversionSink$fromStringSink:1:0 */]}
  },
  "+StringConversionSink": [1770],
  ClosableStringSink: {
    "": "StringSink;",
    static: {ClosableStringSink_ClosableStringSink$fromStringSink: [function(sink, onClose) {
        return new P._ClosableStringSink(onClose, sink);
      }, "call$2" /* tearOffInfo */, null, 4, 0, 750, 595, 751, "new ClosableStringSink$fromStringSink" /* new ClosableStringSink$fromStringSink:2:0 */]}
  },
  "+ClosableStringSink": [1764],
  _ClosableStringSink: {
    "": "Object;_callback<-494,_convert$_sink<-1764",
    _callback$0: function() {
      return this._callback.call$0();
    },
    close$0: [function() {
      return this._callback$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    writeCharCode$1: [function(charCode) {
      return this._convert$_sink.writeCharCode$1(charCode);
    }, "call$1" /* tearOffInfo */, "get$writeCharCode", 2, 0, 1055, 826, "writeCharCode"],
    write$1: [function(o) {
      return this._convert$_sink.write$1(o);
    }, "call$1" /* tearOffInfo */, "get$write", 2, 0, 821, 389, "write"],
    writeln$1: [function(o) {
      return this._convert$_sink.writeln$1(o);
    }, "call$1" /* tearOffInfo */, "get$writeln", 0, 2, 1771, 806, 389, "writeln"],
    writeAll$2: [function(objects, separator) {
      return this._convert$_sink.writeAll$2(objects, separator);
    }, "call$2" /* tearOffInfo */, "get$writeAll", 2, 2, 1772, 806, 1591, 1050, "writeAll"],
    static: {_ClosableStringSink$: [function(_sink, _callback) {
        return new P._ClosableStringSink(_callback, _sink);
      }, null /* tearOffInfo */, null, 4, 0, 752, 555, 701, "new _ClosableStringSink" /* new _ClosableStringSink:2:0 */]}
  },
  "+_ClosableStringSink": [0, 1773],
  _StringConversionSinkAsStringSinkAdapter: {
    "": "Object;_buffer@-1413,_chunkedSink@-1749",
    close$0: [function() {
      if (J.get$isNotEmpty$as(this._buffer))
        this._flush$0();
      this._chunkedSink.close$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    writeCharCode$1: [function(charCode) {
      this._buffer.writeCharCode$1(charCode);
      if (J.$gt$n(J.get$length$as(this._buffer), 16))
        this._flush$0();
    }, "call$1" /* tearOffInfo */, "get$writeCharCode", 2, 0, 1055, 826, "writeCharCode"],
    write$1: [function(o) {
      var accumulated, t1;
      if (J.get$isNotEmpty$as(this._buffer)) {
        accumulated = J.toString$0(this._buffer);
        J.clear$0$a(this._buffer);
        J.add$1$a(this._chunkedSink, accumulated);
      }
      t1 = J.getInterceptor(o);
      t1.toString$0(o);
      J.add$1$a(this._chunkedSink, t1.toString$0(o));
    }, "call$1" /* tearOffInfo */, "get$write", 2, 0, 821, 389, "write"],
    writeln$1: [function(o) {
      this._buffer.writeln$1(o);
      if (J.$gt$n(J.get$length$as(this._buffer), 16))
        this._flush$0();
    }, "call$1" /* tearOffInfo */, "get$writeln", 0, 2, 1771, 806, 389, "writeln"],
    writeAll$2: [function(objects, separator) {
      var iterator, t1, accumulated;
      if (J.get$isNotEmpty$as(this._buffer))
        this._flush$0();
      iterator = J.get$iterator$a(objects);
      if (iterator.moveNext$0() !== true)
        return;
      t1 = J.getInterceptor$as(separator);
      if (t1.get$isEmpty(separator) === true)
        do
          J.add$1$a(this._chunkedSink, J.toString$0(iterator.get$current()));
        while (iterator.moveNext$0() === true);
      else {
        J.add$1$a(this._chunkedSink, J.toString$0(iterator.get$current()));
        for (; iterator.moveNext$0() === true;) {
          if (J.get$isNotEmpty$as(this._buffer)) {
            accumulated = J.toString$0(this._buffer);
            J.clear$0$a(this._buffer);
            J.add$1$a(this._chunkedSink, accumulated);
          }
          t1.toString$0(separator);
          J.add$1$a(this._chunkedSink, t1.toString$0(separator));
          J.add$1$a(this._chunkedSink, J.toString$0(iterator.get$current()));
        }
      }
    }, "call$2" /* tearOffInfo */, "get$writeAll", 2, 2, 1772, 806, 1591, 1050, "writeAll"],
    _flush$0: [function() {
      var accumulated = J.toString$0(this._buffer);
      J.clear$0$a(this._buffer);
      J.add$1$a(this._chunkedSink, accumulated);
    }, "call$0" /* tearOffInfo */, "get$_flush", 0, 0, 494, "_flush"],
    static: {"": "_StringConversionSinkAsStringSinkAdapter__MIN_STRING_SIZE<-370", _StringConversionSinkAsStringSinkAdapter$: [function(_chunkedSink) {
        return new P._StringConversionSinkAsStringSinkAdapter(P.StringBuffer$(""), _chunkedSink);
      }, null /* tearOffInfo */, null, 2, 0, 742, 731, "new _StringConversionSinkAsStringSinkAdapter" /* new _StringConversionSinkAsStringSinkAdapter:1:0 */]}
  },
  "+_StringConversionSinkAsStringSinkAdapter": [0, 1773],
  StringConversionSinkBase: {
    "": "StringConversionSinkMixin;"
  },
  "+StringConversionSinkBase": [1774],
  StringConversionSinkMixin: {
    "": "Object;",
    add$1: [function(_, str) {
      return this.addSlice$4(str, 0, J.get$length$as(str), false);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, 281, 1080, "add"],
    asUtf8Sink$1: [function(allowMalformed) {
      var t1 = P.StringBuffer$("");
      return new P._Utf8ConversionSink(new P._Utf8Decoder(allowMalformed, t1, true, 0, 0, 0), this, t1);
    }, "call$1" /* tearOffInfo */, "get$asUtf8Sink", 2, 0, 1775, 759, "asUtf8Sink"],
    asStringSink$0: [function() {
      return new P._StringConversionSinkAsStringSinkAdapter(P.StringBuffer$(""), this);
    }, "call$0" /* tearOffInfo */, "get$asStringSink", 0, 0, 1776, "asStringSink"],
    $isStringConversionSink: true
  },
  "+StringConversionSinkMixin": [0, 1749],
  _StringSinkConversionSink: {
    "": "StringConversionSinkBase;_stringSink@-1764",
    close$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    addSlice$4: [function(str, start, end, isLast) {
      var t1, i, t2;
      if (!J.$eq(start, 0) || !J.$eq(end, J.get$length$as(str)))
        for (t1 = J.getInterceptor$s(str), i = start; t2 = J.getInterceptor$n(i), t2.$lt(i, end); i = t2.$add(i, 1))
          this._stringSink.writeCharCode$1(t1.codeUnitAt$1(str, i));
      else
        this._stringSink.write$1(str);
      if (isLast === true)
        this.close$0();
    }, "call$4" /* tearOffInfo */, "get$addSlice", 8, 0, 1709, 1080, 439, 440, 745, "addSlice"],
    add$1: [function(_, str) {
      return this._stringSink.write$1(str);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, 281, 1080, "add"],
    asUtf8Sink$1: [function(allowMalformed) {
      return new P._Utf8StringSinkAdapter(new P._Utf8Decoder(allowMalformed, this._stringSink, true, 0, 0, 0), this);
    }, "call$1" /* tearOffInfo */, "get$asUtf8Sink", 2, 0, 1775, 759, "asUtf8Sink"],
    asStringSink$0: [function() {
      var t1 = this._stringSink;
      return new P._ClosableStringSink(this.get$close(), t1);
    }, "call$0" /* tearOffInfo */, "get$asStringSink", 0, 0, 1776, "asStringSink"],
    static: {_StringSinkConversionSink$: [function(_stringSink) {
        return new P._StringSinkConversionSink(_stringSink);
      }, null /* tearOffInfo */, null, 2, 0, 753, 754, "new _StringSinkConversionSink" /* new _StringSinkConversionSink:1:0 */]}
  },
  "+_StringSinkConversionSink": [1710],
  _StringCallbackSink: {
    "": "_StringSinkConversionSink;_callback<-281,_stringSink-1764",
    _callback$1: function(arg0) {
      return this._callback.call$1(arg0);
    },
    close$0: [function() {
      var buffer, t1, accumulated;
      buffer = this._stringSink;
      t1 = J.getInterceptor(buffer);
      accumulated = t1.toString$0(buffer);
      t1.clear$0(buffer);
      this._callback$1(accumulated);
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    asUtf8Sink$1: [function(allowMalformed) {
      return new P._Utf8StringSinkAdapter(new P._Utf8Decoder(allowMalformed, this._stringSink, true, 0, 0, 0), this);
    }, "call$1" /* tearOffInfo */, "get$asUtf8Sink", 2, 0, 1775, 759, "asUtf8Sink"],
    static: {_StringCallbackSink$: [function(_callback) {
        return new P._StringCallbackSink(_callback, P.StringBuffer$(""));
      }, null /* tearOffInfo */, null, 2, 0, 755, 701, "new _StringCallbackSink" /* new _StringCallbackSink:1:0 */]}
  },
  "+_StringCallbackSink": [1765],
  _StringAdapterSink: {
    "": "StringConversionSinkBase;_convert$_sink<-1770",
    add$1: [function(_, str) {
      return J.add$1$a(this._convert$_sink, str);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, 281, 1080, "add"],
    addSlice$4: [function(str, start, end, isLast) {
      var t1, t2;
      t1 = J.$eq(start, 0) && J.$eq(end, J.get$length$as(str));
      t2 = this._convert$_sink;
      if (t1)
        J.add$1$a(t2, str);
      else
        J.add$1$a(t2, J.substring$2$s(str, start, end));
      if (isLast === true)
        t2.close$0();
    }, "call$4" /* tearOffInfo */, "get$addSlice", 8, 0, 1709, 1080, 439, 440, 745, "addSlice"],
    close$0: [function() {
      return this._convert$_sink.close$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    static: {_StringAdapterSink$: [function(_sink) {
        return new P._StringAdapterSink(_sink);
      }, null /* tearOffInfo */, null, 2, 0, 756, 555, "new _StringAdapterSink" /* new _StringAdapterSink:1:0 */]}
  },
  "+_StringAdapterSink": [1710],
  _Utf8StringSinkAdapter: {
    "": "ByteConversionSink;_decoder<-1777,_chunkedSink<-1727",
    close$0: [function() {
      this._decoder.close$0();
      var t1 = this._chunkedSink;
      if (t1 != null)
        t1.close$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    add$1: [function(_, chunk) {
      this._decoder.convert$3(chunk, 0, J.get$length$as(chunk));
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, 1715, 744, "add"],
    addSlice$4: [function(codeUnits, startIndex, endIndex, isLast) {
      this._decoder.convert$3(codeUnits, startIndex, endIndex);
      if (isLast === true)
        this.close$0();
    }, "call$4" /* tearOffInfo */, "get$addSlice", 8, 0, 1716, 1778, 375, 454, 745, "addSlice"],
    static: {_Utf8StringSinkAdapter$: [function(chunkedSink, sink, allowMalformed) {
        return new P._Utf8StringSinkAdapter(new P._Utf8Decoder(allowMalformed, sink, true, 0, 0, 0), chunkedSink);
      }, null /* tearOffInfo */, null, 6, 0, 757, 758, 595, 759, "new _Utf8StringSinkAdapter" /* new _Utf8StringSinkAdapter:3:0 */]}
  },
  "+_Utf8StringSinkAdapter": [1708],
  _Utf8ConversionSink: {
    "": "ByteConversionSink;_decoder<-1777,_chunkedSink<-1749,_buffer<-1413",
    close$0: [function() {
      var t1, t2, t3, accumulated;
      this._decoder.close$0();
      t1 = this._buffer;
      t2 = J.getInterceptor$as(t1);
      t3 = this._chunkedSink;
      if (t2.get$isNotEmpty(t1)) {
        accumulated = t2.toString$0(t1);
        t2.clear$0(t1);
        t3.addSlice$4(accumulated, 0, J.get$length$as(accumulated), true);
      } else
        t3.close$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    add$1: [function(_, chunk) {
      this.addSlice$4(chunk, 0, J.get$length$as(chunk), false);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, 1715, 744, "add"],
    addSlice$4: [function(chunk, startIndex, endIndex, isLast) {
      var t1, t2, accumulated;
      this._decoder.convert$3(chunk, startIndex, endIndex);
      t1 = this._buffer;
      t2 = J.getInterceptor$as(t1);
      if (t2.get$isNotEmpty(t1)) {
        accumulated = t2.toString$0(t1);
        this._chunkedSink.addSlice$4(accumulated, 0, J.get$length$as(accumulated), isLast);
        t2.clear$0(t1);
        return;
      }
      if (isLast === true)
        this.close$0();
    }, "call$4" /* tearOffInfo */, "get$addSlice", 8, 0, 1716, 744, 375, 454, 745, "addSlice"],
    static: {_Utf8ConversionSink$: [function(sink, allowMalformed) {
        var t1 = P.StringBuffer$("");
        return new P._Utf8ConversionSink(new P._Utf8Decoder(allowMalformed, t1, true, 0, 0, 0), sink, t1);
      }, null /* tearOffInfo */, null, 4, 0, 760, 595, 759, "new _Utf8ConversionSink" /* new _Utf8ConversionSink:2:0 */], _Utf8ConversionSink$_: [function(_chunkedSink, stringBuffer, allowMalformed) {
        return new P._Utf8ConversionSink(new P._Utf8Decoder(allowMalformed, stringBuffer, true, 0, 0, 0), _chunkedSink, stringBuffer);
      }, null /* tearOffInfo */, null, 6, 0, 761, 731, 762, 759, "new _Utf8ConversionSink$_" /* new _Utf8ConversionSink$_:3:0 */]}
  },
  "+_Utf8ConversionSink": [1708],
  Utf8Codec: {
    "": "Encoding;_allowMalformed<-1043",
    get$name: [function() {
      return "utf-8";
    }, null /* tearOffInfo */, null, 1, 0, 253, "name"],
    decode$2$allowMalformed: [function(codeUnits, allowMalformed) {
      if (allowMalformed == null)
        allowMalformed = this._allowMalformed;
      return new P.Utf8Decoder(allowMalformed).convert$1(codeUnits);
    }, function(codeUnits) {
      return this.decode$2$allowMalformed(codeUnits, null);
    }, "decode$1", "call$2$allowMalformed" /* tearOffInfo */, null /* tearOffInfo */, "get$decode", 2, 3, 1779, 370, 1778, 759, "decode"],
    get$encoder: [function() {
      return new P.Utf8Encoder();
    }, null /* tearOffInfo */, null, 1, 0, 1701, "encoder"],
    get$decoder: [function() {
      return new P.Utf8Decoder(this._allowMalformed);
    }, null /* tearOffInfo */, null, 1, 0, 1702, "decoder"],
    static: {Utf8Codec$: [function(allowMalformed) {
        return new P.Utf8Codec(allowMalformed);
      }, null /* tearOffInfo */, null, 0, 3, 763, 527, 759, "new Utf8Codec" /* new Utf8Codec:0:1:allowMalformed */]}
  },
  "+Utf8Codec": [1703],
  Utf8Encoder: {
    "": "Converter;",
    convert$1: [function(string) {
      var t1, t2, encoder;
      t1 = J.getInterceptor$as(string);
      t2 = J.$mul$n(t1.get$length(string), 3);
      if (typeof t2 !== "number")
        return H.iae(t2);
      t2 = Array(t2);
      t2.fixed$length = init;
      t2 = H.setRuntimeTypeInfo(t2, [J.JSInt]);
      encoder = new P._Utf8Encoder(0, 0, t2);
      if (!J.$eq(encoder._fillBuffer$3(string, 0, t1.get$length(string)), t1.get$length(string)))
        encoder._writeSurrogate$2(t1.codeUnitAt$1(string, J.$sub$n(t1.get$length(string), 1)), 0);
      return C.JSArray_methods.sublist$2(t2, 0, encoder._bufferIndex);
    }, "call$1" /* tearOffInfo */, "get$convert", 2, 0, 870, 290, "convert"],
    startChunkedConversion$1: [function(sink) {
      var t1 = J.getInterceptor(sink);
      if (typeof sink !== "object" || sink === null || !t1.$isByteConversionSink)
        sink = new P._ByteAdapterSink(sink);
      t1 = Array(1024);
      t1.fixed$length = init;
      return new P._Utf8EncoderSink(sink, 0, 0, H.setRuntimeTypeInfo(t1, [J.JSInt]));
    }, "call$1" /* tearOffInfo */, "get$startChunkedConversion", 2, 0, 1704, 595, "startChunkedConversion"],
    bind$1: [function(stream) {
      return P.Converter.prototype.bind$1.call(this, stream);
    }, "call$1" /* tearOffInfo */, "get$bind", 2, 0, 1705, 553, "bind"],
    $asConverter: function() {
      return [J.JSString, [J.JSArray, J.JSInt]];
    },
    "<>": [],
    static: {Utf8Encoder$: [function() {
        return new P.Utf8Encoder();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new Utf8Encoder" /* new Utf8Encoder:0:0 */]}
  },
  "+Utf8Encoder": [1706],
  _Utf8Encoder: {
    "": "Object;_carry@-1075,_bufferIndex@-1075,_buffer<-1719",
    _writeSurrogate$2: [function(leadingSurrogate, nextCodeUnit) {
      var t1, t2, t3, rune, t4;
      t1 = J.getInterceptor$n(nextCodeUnit);
      t2 = J.getInterceptor$n(leadingSurrogate);
      t3 = this._buffer;
      if (t1.$and(nextCodeUnit, 64512) === 56320) {
        rune = 65536 + (t2.$and(leadingSurrogate, 1023) << 10 >>> 0) | t1.$and(nextCodeUnit, 1023);
        t1 = this._bufferIndex;
        this._bufferIndex = J.$add$ns(t1, 1);
        t2 = J.getInterceptor$a(t3);
        t2.$indexSet(t3, t1, (240 | rune >>> 18) >>> 0);
        t1 = this._bufferIndex;
        this._bufferIndex = J.$add$ns(t1, 1);
        t2.$indexSet(t3, t1, 128 | rune >>> 12 & 63);
        t1 = this._bufferIndex;
        this._bufferIndex = J.$add$ns(t1, 1);
        t2.$indexSet(t3, t1, 128 | rune >>> 6 & 63);
        t1 = this._bufferIndex;
        this._bufferIndex = J.$add$ns(t1, 1);
        t2.$indexSet(t3, t1, 128 | rune & 63);
        return true;
      } else {
        t1 = this._bufferIndex;
        this._bufferIndex = J.$add$ns(t1, 1);
        t4 = J.getInterceptor$a(t3);
        t4.$indexSet(t3, t1, (224 | t2.$shr(leadingSurrogate, 12)) >>> 0);
        t1 = this._bufferIndex;
        this._bufferIndex = J.$add$ns(t1, 1);
        t4.$indexSet(t3, t1, 128 | t2.$shr(leadingSurrogate, 6) & 63);
        t1 = this._bufferIndex;
        this._bufferIndex = J.$add$ns(t1, 1);
        t4.$indexSet(t3, t1, (128 | t2.$and(leadingSurrogate, 63)) >>> 0);
        return false;
      }
    }, "call$2" /* tearOffInfo */, "get$_writeSurrogate", 4, 0, 1780, 1781, 1782, "_writeSurrogate"],
    _fillBuffer$3: [function(str, start, end) {
      var t1, t2, t3, stringIndex, t4, codeUnit;
      if (!J.$eq(start, end) && (J.codeUnitAt$1$s(str, J.$sub$n(end, 1)) & 64512) === 55296)
        end = J.$sub$n(end, 1);
      for (t1 = this._buffer, t2 = J.getInterceptor$as(t1), t3 = J.getInterceptor$s(str), stringIndex = start; t4 = J.getInterceptor$n(stringIndex), t4.$lt(stringIndex, end); stringIndex = J.$add$ns(stringIndex, 1)) {
        codeUnit = t3.codeUnitAt$1(str, stringIndex);
        if (codeUnit <= 127) {
          if (J.$ge$n(this._bufferIndex, t2.get$length(t1)))
            break;
          t4 = this._bufferIndex;
          this._bufferIndex = J.$add$ns(t4, 1);
          t2.$indexSet(t1, t4, codeUnit);
        } else if ((codeUnit & 64512) === 55296) {
          if (J.$ge$n(J.$add$ns(this._bufferIndex, 3), t2.get$length(t1)))
            break;
          if (this._writeSurrogate$2(codeUnit, t3.codeUnitAt$1(str, t4.$add(stringIndex, 1))))
            stringIndex = t4.$add(stringIndex, 1);
        } else if (codeUnit <= 2047) {
          if (J.$ge$n(J.$add$ns(this._bufferIndex, 1), t2.get$length(t1)))
            break;
          t4 = this._bufferIndex;
          this._bufferIndex = J.$add$ns(t4, 1);
          t2.$indexSet(t1, t4, 192 | codeUnit >>> 6);
          t4 = this._bufferIndex;
          this._bufferIndex = J.$add$ns(t4, 1);
          t2.$indexSet(t1, t4, 128 | codeUnit & 63);
        } else {
          if (J.$ge$n(J.$add$ns(this._bufferIndex, 2), t2.get$length(t1)))
            break;
          t4 = this._bufferIndex;
          this._bufferIndex = J.$add$ns(t4, 1);
          t2.$indexSet(t1, t4, 224 | codeUnit >>> 12);
          t4 = this._bufferIndex;
          this._bufferIndex = J.$add$ns(t4, 1);
          t2.$indexSet(t1, t4, 128 | codeUnit >>> 6 & 63);
          t4 = this._bufferIndex;
          this._bufferIndex = J.$add$ns(t4, 1);
          t2.$indexSet(t1, t4, 128 | codeUnit & 63);
        }
      }
      return stringIndex;
    }, "call$3" /* tearOffInfo */, "get$_fillBuffer", 6, 0, 1783, 1080, 439, 440, "_fillBuffer"],
    static: {"": "_Utf8Encoder__DEFAULT_BYTE_BUFFER_SIZE<-370", _Utf8Encoder$: [function() {
        var t1 = Array(1024);
        t1.fixed$length = init;
        return new P._Utf8Encoder(0, 0, H.setRuntimeTypeInfo(t1, [J.JSInt]));
      }, null /* tearOffInfo */, null, 0, 0, 319, "new _Utf8Encoder" /* new _Utf8Encoder:0:0 */], _Utf8Encoder$withBufferSize: [function(bufferSize) {
        var t1;
        if (typeof bufferSize !== "number")
          return H.iae(bufferSize);
        t1 = Array(bufferSize);
        t1.fixed$length = init;
        return new P._Utf8Encoder(0, 0, H.setRuntimeTypeInfo(t1, [J.JSInt]));
      }, null /* tearOffInfo */, null, 2, 0, 689, 764, "new _Utf8Encoder$withBufferSize" /* new _Utf8Encoder$withBufferSize:1:0 */]}
  },
  "+_Utf8Encoder": [0],
  _Utf8EncoderSink: {
    "": "_Utf8Encoder_StringConversionSinkMixin;_convert$_sink<-1708,_carry-1075,_bufferIndex-1075,_buffer-1719",
    close$0: [function() {
      if (!J.$eq(this._carry, 0)) {
        this.addSlice$4("", 0, 0, true);
        return;
      }
      this._convert$_sink.close$0();
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    addSlice$4: [function(str, start, end, isLast) {
      var t1, nextCodeUnit, t2, t3, t4, t5, t6, isLastSlice, t7;
      this._bufferIndex = 0;
      t1 = J.getInterceptor(start);
      if (t1.$eq(start, end) && isLast !== true)
        return;
      if (!J.$eq(this._carry, 0)) {
        nextCodeUnit = !t1.$eq(start, end) ? J.codeUnitAt$1$s(str, start) : 0;
        if (this._writeSurrogate$2(this._carry, nextCodeUnit))
          start = t1.$add(start, 1);
        this._carry = 0;
      }
      t1 = this._convert$_sink;
      t2 = this._buffer;
      t3 = J.getInterceptor$n(end);
      t4 = isLast === true;
      t5 = J.getInterceptor$s(str);
      t6 = J.getInterceptor$as(t2);
      do {
        start = this._fillBuffer$3(str, start, end);
        isLastSlice = t4 && J.$eq(start, end);
        t7 = J.getInterceptor(start);
        if (t7.$eq(start, t3.$sub(end, 1)) && (t5.codeUnitAt$1(str, start) & 64512) === 55296) {
          if (t4 && J.$lt$n(this._bufferIndex, J.$sub$n(t6.get$length(t2), 3)))
            this._writeSurrogate$2(t5.codeUnitAt$1(str, start), 0);
          else
            this._carry = t5.codeUnitAt$1(str, start);
          start = t7.$add(start, 1);
        }
        t1.addSlice$4(t2, 0, this._bufferIndex, isLastSlice);
        this._bufferIndex = 0;
      } while (J.$lt$n(start, end));
      if (t4)
        this.close$0();
    }, "call$4" /* tearOffInfo */, "get$addSlice", 8, 0, 1709, 1080, 439, 440, 745, "addSlice"],
    static: {_Utf8EncoderSink$: [function(_sink) {
        var t1 = Array(1024);
        t1.fixed$length = init;
        return new P._Utf8EncoderSink(_sink, 0, 0, H.setRuntimeTypeInfo(t1, [J.JSInt]));
      }, null /* tearOffInfo */, null, 2, 0, 765, 555, "new _Utf8EncoderSink" /* new _Utf8EncoderSink:1:0 */]}
  },
  "+_Utf8EncoderSink": [1784],
  _Utf8Encoder_StringConversionSinkMixin: {
    "": "_Utf8Encoder+StringConversionSinkMixin;",
    $isStringConversionSink: true
  },
  Utf8Decoder: {
    "": "Converter;_allowMalformed<-1043",
    convert$1: [function(codeUnits) {
      var buffer, t1, decoder;
      buffer = P.StringBuffer$("");
      t1 = this._allowMalformed;
      decoder = new P._Utf8Decoder(t1, buffer, true, 0, 0, 0);
      decoder.convert$3(codeUnits, 0, J.get$length$as(codeUnits));
      if (J.$gt$n(decoder._expectedUnits, 0)) {
        if (t1 !== true)
          H.throwExpression(P.FormatException$("Unfinished UTF-8 octet sequence"));
        buffer.writeCharCode$1(65533);
        decoder._convert$_value = 0;
        decoder._expectedUnits = 0;
        decoder._extraUnits = 0;
      }
      return buffer._contents;
    }, "call$1" /* tearOffInfo */, "get$convert", 2, 0, 298, 1778, "convert"],
    startChunkedConversion$1: [function(sink) {
      var t1, stringSink;
      t1 = J.getInterceptor(sink);
      stringSink = typeof sink === "object" && sink !== null && !!t1.$isStringConversionSink ? sink : new P._StringAdapterSink(sink);
      return stringSink.asUtf8Sink$1(this._allowMalformed);
    }, "call$1" /* tearOffInfo */, "get$startChunkedConversion", 2, 0, 1711, 595, "startChunkedConversion"],
    bind$1: [function(stream) {
      return P.Converter.prototype.bind$1.call(this, stream);
    }, "call$1" /* tearOffInfo */, "get$bind", 2, 0, 1712, 553, "bind"],
    $asConverter: function() {
      return [[J.JSArray, J.JSInt], J.JSString];
    },
    "<>": [],
    static: {Utf8Decoder$: [function(allowMalformed) {
        return new P.Utf8Decoder(allowMalformed);
      }, null /* tearOffInfo */, null, 0, 3, 763, 527, 759, "new Utf8Decoder" /* new Utf8Decoder:0:1:allowMalformed */]}
  },
  "+Utf8Decoder": [1713],
  _Utf8Decoder: {
    "": "Object;_allowMalformed<-1043,_stringSink<-1764,_isFirstCharacter@-1043,_convert$_value@-1075,_expectedUnits@-1075,_extraUnits@-1075",
    get$hasPartialInput: [function() {
      return J.$gt$n(this._expectedUnits, 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "hasPartialInput"],
    close$0: [function() {
      if (J.$gt$n(this._expectedUnits, 0)) {
        if (this._allowMalformed !== true)
          H.throwExpression(P.FormatException$("Unfinished UTF-8 octet sequence"));
        this._stringSink.writeCharCode$1(65533);
        this._convert$_value = 0;
        this._expectedUnits = 0;
        this._extraUnits = 0;
      }
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    flush$0: [function() {
      if (J.$gt$n(this._expectedUnits, 0)) {
        if (this._allowMalformed !== true)
          throw H.wrapException(P.FormatException$("Unfinished UTF-8 octet sequence"));
        this._stringSink.writeCharCode$1(65533);
        this._convert$_value = 0;
        this._expectedUnits = 0;
        this._extraUnits = 0;
      }
    }, "call$0" /* tearOffInfo */, "get$flush", 0, 0, 494, "flush"],
    convert$3: [function(codeUnits, startIndex, endIndex) {
      var value, expectedUnits, extraUnits, t1, t2, t3, i, t4, unit, t5, i0;
      value = this._convert$_value;
      expectedUnits = this._expectedUnits;
      extraUnits = this._extraUnits;
      this._convert$_value = 0;
      this._expectedUnits = 0;
      this._extraUnits = 0;
      $loop$0:
        for (t1 = this._stringSink, t2 = this._allowMalformed !== true, t3 = J.getInterceptor$as(codeUnits), i = startIndex; true; i = i0) {
          $multibyte$2: {
            if (J.$gt$n(expectedUnits, 0)) {
              do {
                t4 = J.getInterceptor(i);
                if (t4.$eq(i, endIndex))
                  break $loop$0;
                unit = t3.$index(codeUnits, i);
                t5 = J.getInterceptor$n(unit);
                if (t5.$and(unit, 192) !== 128) {
                  if (t2)
                    throw H.wrapException(P.FormatException$("Bad UTF-8 encoding 0x" + t5.toRadixString$1(unit, 16)));
                  this._isFirstCharacter = false;
                  t1.writeCharCode$1(65533);
                  expectedUnits = 0;
                  break $multibyte$2;
                } else {
                  value = (J.$shl$n(value, 6) | t5.$and(unit, 63)) >>> 0;
                  expectedUnits = J.$sub$n(expectedUnits, 1);
                  i = t4.$add(i, 1);
                }
              } while (J.$gt$n(expectedUnits, 0));
              t4 = J.$sub$n(extraUnits, 1);
              if (t4 >>> 0 !== t4 || t4 >= 4)
                return H.ioore(C.List_127_2047_65535_1114111, t4);
              if (value <= C.List_127_2047_65535_1114111[t4]) {
                if (t2)
                  throw H.wrapException(P.FormatException$("Overlong encoding of 0x" + C.JSInt_methods.toRadixString$1(value, 16)));
                value = 65533;
                expectedUnits = 0;
                extraUnits = 0;
              }
              if (value > 1114111) {
                if (t2)
                  throw H.wrapException(P.FormatException$("Character outside valid Unicode range: 0x" + C.JSInt_methods.toRadixString$1(value, 16)));
                value = 65533;
              }
              if (this._isFirstCharacter !== true || value !== 65279)
                t1.writeCharCode$1(value);
              this._isFirstCharacter = false;
            }
          }
          for (; t4 = J.getInterceptor$n(i), t4.$lt(i, endIndex); i = i0) {
            i0 = t4.$add(i, 1);
            unit = t3.$index(codeUnits, i);
            t4 = J.getInterceptor$n(unit);
            if (t4.$lt(unit, 0)) {
              if (t2)
                throw H.wrapException(P.FormatException$("Negative UTF-8 code unit: -0x" + C.JSNumber_methods.toRadixString$1(t4.$negate(unit), 16)));
              t1.writeCharCode$1(65533);
            } else if (t4.$le(unit, 127)) {
              this._isFirstCharacter = false;
              t1.writeCharCode$1(unit);
            } else {
              if (t4.$and(unit, 224) === 192) {
                value = t4.$and(unit, 31);
                expectedUnits = 1;
                extraUnits = 1;
                continue $loop$0;
              }
              if (t4.$and(unit, 240) === 224) {
                value = t4.$and(unit, 15);
                expectedUnits = 2;
                extraUnits = 2;
                continue $loop$0;
              }
              if (t4.$and(unit, 248) === 240 && t4.$lt(unit, 245)) {
                value = t4.$and(unit, 7);
                expectedUnits = 3;
                extraUnits = 3;
                continue $loop$0;
              }
              if (t2)
                throw H.wrapException(P.FormatException$("Bad UTF-8 encoding 0x" + t4.toRadixString$1(unit, 16)));
              this._isFirstCharacter = false;
              t1.writeCharCode$1(65533);
              value = 65533;
              expectedUnits = 0;
              extraUnits = 0;
            }
          }
          break $loop$0;
        }
      if (J.$gt$n(expectedUnits, 0)) {
        this._convert$_value = value;
        this._expectedUnits = expectedUnits;
        this._extraUnits = extraUnits;
      }
    }, "call$3" /* tearOffInfo */, "get$convert", 6, 0, 1785, 1778, 375, 454, "convert"],
    static: {"": "_Utf8Decoder__LIMITS<-1719", _Utf8Decoder$: [function(_stringSink, _allowMalformed) {
        return new P._Utf8Decoder(_allowMalformed, _stringSink, true, 0, 0, 0);
      }, null /* tearOffInfo */, null, 4, 0, 769, 754, 770, "new _Utf8Decoder" /* new _Utf8Decoder:2:0 */]}
  },
  "+_Utf8Decoder": [0],
  "": "_TAIL_SURROGATE_MIN<-1075,_LEAD_SURROGATE_MIN<-1075,_SURROGATE_VALUE_MASK<-1075,_SURROGATE_TAG_MASK<-1075,_SURROGATE_MASK<-1075,_FOUR_BYTE_LIMIT<-1075,_THREE_BYTE_LIMIT<-1075,_TWO_BYTE_LIMIT<-1075,_ONE_BYTE_LIMIT<-1075,UTF8<-2046,UNICODE_BOM_CHARACTER_RUNE<-1075,UNICODE_REPLACEMENT_CHARACTER_RUNE<-1075,_LATIN1_MASK<-1075,LATIN1<-2047,JSON<-1756,HTML_ESCAPE<-1748,_ASCII_MASK<-1075,ASCII<-2048"
}],
["dart.core", "dart:core", , P, {
  "": "",
  identical: [function(a, b) {
    return a == null ? b == null : a === b;
  }, "call$2" /* tearOffInfo */, "identical$closure", 4, 0, 808, 452, 649, "identical"],
  identityHashCode: [function(object) {
    return H.objectHashCode(object);
  }, "call$1" /* tearOffInfo */, "identityHashCode$closure", 2, 0, 809, 242, "identityHashCode"],
  print: [function(object) {
    var line, t1;
    line = H.S(object);
    t1 = $.printToZone;
    if (t1 == null)
      H.printString(line);
    else
      t1.call$1(line);
  }, "call$1" /* tearOffInfo */, "print$closure", 2, 0, 821, 242, "print"],
  _isLeadSurrogate0: [function(code) {
    return J.$and$n(code, 64512) === 55296;
  }, "call$1" /* tearOffInfo */, "_isLeadSurrogate0$closure", 2, 0, 246, 481, "_isLeadSurrogate"],
  _isTrailSurrogate: [function(code) {
    return J.$and$n(code, 64512) === 56320;
  }, "call$1" /* tearOffInfo */, "_isTrailSurrogate$closure", 2, 0, 246, 481, "_isTrailSurrogate"],
  _combineSurrogatePair: [function(start, end) {
    return 65536 + (J.$and$n(start, 1023) << 10 >>> 0) + J.$and$n(end, 1023);
  }, "call$2" /* tearOffInfo */, "_combineSurrogatePair$closure", 4, 0, 766, 439, 440, "_combineSurrogatePair"],
  Function__toMangledNames_closure: {
    "": "Closure:311;result_0-1138",
    call$2: [function(symbol, value) {
      J.$indexSet$a(this.result_0, symbol.get$_name(), value);
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 462, 280, "call"]
  },
  "+Function__toMangledNames_closure": [1060],
  _ListConstructorSentinel: {
    "": "JSInt;"
  },
  "+_ListConstructorSentinel": [1075],
  NoSuchMethodError_toString_closure: {
    "": "Closure:1291;box_0-370",
    call$2: [function(key, value) {
      var t1 = this.box_0;
      if (J.$gt$n(t1.i_1, 0))
        t1.sb_0.write$1(", ");
      t1.sb_0.write$1(key.get$_name());
      t1.sb_0.write$1(": ");
      t1.sb_0.write$1(P.Error_safeToString(value));
      t1.i_1 = J.$add$ns(t1.i_1, 1);
    }, "call$2" /* tearOffInfo */, null, 4, 0, 1291, 312, 280, "call"]
  },
  "+NoSuchMethodError_toString_closure": [1060],
  Deprecated: {
    "": "Object;expires<-1039",
    toString$0: [function(_) {
      return "Deprecated feature. Will be removed " + H.S(this.expires);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {Deprecated$: [function(expires) {
        return new P.Deprecated(expires);
      }, null /* tearOffInfo */, null, 2, 0, 289, 772, "new Deprecated" /* new Deprecated:1:0 */]}
  },
  "+Deprecated": [0],
  _Override: {
    "": "Object;",
    static: {_Override$: [function() {
        return new P._Override();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new _Override" /* new _Override:0:0 */]}
  },
  "+_Override": [0],
  _Proxy: {
    "": "Object;",
    static: {_Proxy$: [function() {
        return new P._Proxy();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new _Proxy" /* new _Proxy:0:0 */]}
  },
  "+_Proxy": [0],
  bool: {
    "": "Object;",
    toString$0: [function(_) {
      return this ? "true" : "false";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isbool: true,
    static: {bool_bool$fromEnvironment: [function($name, defaultValue) {
        throw H.wrapException(P.UnsupportedError$("bool.fromEnvironment can only be used as a const constructor"));
      }, "call$2$defaultValue" /* tearOffInfo */, null, 2, 3, 773, 370, 346, 774, "new bool$fromEnvironment" /* new bool$fromEnvironment:1:1:defaultValue */]}
  },
  "+bool": [0],
  Comparable: {
    "": "Object;",
    "<>": [1],
    static: {Comparable_compare: [function(a, b) {
        return J.compareTo$1$ns(a, b);
      }, "call$2" /* tearOffInfo */, "Comparable_compare$closure", 4, 0, 775, 452, 649, "compare"]}
  },
  "+Comparable": [0],
  DateTime: {
    "": "Object;millisecondsSinceEpoch<-1075,isUtc<-1043",
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isDateTime)
        return false;
      return J.$eq(this.millisecondsSinceEpoch, other.millisecondsSinceEpoch) && J.$eq(this.isUtc, other.isUtc);
    }, "call$1" /* tearOffInfo */, "get$==", 2, 0, 273, 403, "=="],
    isBefore$1: [function(other) {
      return J.$lt$n(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
    }, "call$1" /* tearOffInfo */, "get$isBefore", 2, 0, 1786, 403, "isBefore"],
    isAfter$1: [function(other) {
      return J.$gt$n(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
    }, "call$1" /* tearOffInfo */, "get$isAfter", 2, 0, 1786, 403, "isAfter"],
    isAtSameMomentAs$1: [function(other) {
      return J.$eq(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
    }, "call$1" /* tearOffInfo */, "get$isAtSameMomentAs", 2, 0, 1786, 403, "isAtSameMomentAs"],
    compareTo$1: [function(_, other) {
      return J.compareTo$1$ns(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
    }, "call$1" /* tearOffInfo */, "get$compareTo", 2, 0, 1787, 403, "compareTo"],
    get$hashCode: [function(_) {
      return this.millisecondsSinceEpoch;
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    toLocal$0: [function() {
      if (this.isUtc === true)
        return P.DateTime$fromMillisecondsSinceEpoch(this.millisecondsSinceEpoch, false);
      return this;
    }, "call$0" /* tearOffInfo */, "get$toLocal", 0, 0, 784, "toLocal"],
    toUtc$0: [function() {
      if (this.isUtc === true)
        return this;
      return P.DateTime$fromMillisecondsSinceEpoch(this.millisecondsSinceEpoch, true);
    }, "call$0" /* tearOffInfo */, "get$toUtc", 0, 0, 784, "toUtc"],
    toString$0: [function(_) {
      var t1, t2, t3, y, m, d, h, min, sec, ms;
      t1 = new P.DateTime_toString_twoDigits();
      t2 = this.isUtc === true;
      t3 = t2 ? H.Primitives_lazyAsJsDate(this).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(this).getFullYear() + 0;
      y = new P.DateTime_toString_fourDigits().call$1(t3);
      m = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(this).getMonth() + 1);
      d = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(this).getDate() + 0);
      h = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(this).getHours() + 0);
      min = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(this).getMinutes() + 0);
      sec = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(this).getSeconds() + 0);
      t1 = t2 ? H.Primitives_lazyAsJsDate(this).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(this).getMilliseconds() + 0;
      ms = new P.DateTime_toString_threeDigits().call$1(t1);
      if (t2)
        return H.S(y) + "-" + H.S(m) + "-" + H.S(d) + " " + H.S(h) + ":" + H.S(min) + ":" + H.S(sec) + "." + H.S(ms) + "Z";
      else
        return H.S(y) + "-" + H.S(m) + "-" + H.S(d) + " " + H.S(h) + ":" + H.S(min) + ":" + H.S(sec) + "." + H.S(ms);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    add$1: [function(_, duration) {
      return P.DateTime$fromMillisecondsSinceEpoch(J.$add$ns(this.millisecondsSinceEpoch, duration.get$inMilliseconds()), this.isUtc);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, 1788, 525, "add"],
    subtract$1: [function(duration) {
      return P.DateTime$fromMillisecondsSinceEpoch(J.$sub$n(this.millisecondsSinceEpoch, duration.get$inMilliseconds()), this.isUtc);
    }, "call$1" /* tearOffInfo */, "get$subtract", 2, 0, 1788, 525, "subtract"],
    difference$1: [function(other) {
      return P.Duration$(0, 0, 0, J.$sub$n(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch()), 0, 0);
    }, "call$1" /* tearOffInfo */, "get$difference", 2, 0, 1789, 403, "difference"],
    get$timeZoneName: [function() {
      if (this.isUtc === true)
        return "UTC";
      return H.Primitives_getTimeZoneName(this);
    }, null /* tearOffInfo */, null, 1, 0, 253, "timeZoneName"],
    get$timeZoneOffset: [function() {
      if (this.isUtc === true)
        return P.Duration$(0, 0, 0, 0, 0, 0);
      return P.Duration$(0, 0, 0, 0, -H.Primitives_lazyAsJsDate(this).getTimezoneOffset(), 0);
    }, null /* tearOffInfo */, null, 1, 0, 1790, "timeZoneOffset"],
    get$year: [function() {
      return this.isUtc === true ? H.Primitives_lazyAsJsDate(this).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(this).getFullYear() + 0;
    }, null /* tearOffInfo */, null, 1, 0, 823, "year"],
    get$month: [function() {
      return this.isUtc === true ? H.Primitives_lazyAsJsDate(this).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(this).getMonth() + 1;
    }, null /* tearOffInfo */, null, 1, 0, 823, "month"],
    get$day: [function() {
      return this.isUtc === true ? H.Primitives_lazyAsJsDate(this).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(this).getDate() + 0;
    }, null /* tearOffInfo */, null, 1, 0, 823, "day"],
    get$hour: [function() {
      return this.isUtc === true ? H.Primitives_lazyAsJsDate(this).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(this).getHours() + 0;
    }, null /* tearOffInfo */, null, 1, 0, 823, "hour"],
    get$minute: [function() {
      return this.isUtc === true ? H.Primitives_lazyAsJsDate(this).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(this).getMinutes() + 0;
    }, null /* tearOffInfo */, null, 1, 0, 823, "minute"],
    get$second: [function() {
      return this.isUtc === true ? H.Primitives_lazyAsJsDate(this).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(this).getSeconds() + 0;
    }, null /* tearOffInfo */, null, 1, 0, 823, "second"],
    get$millisecond: [function() {
      return this.isUtc === true ? H.Primitives_lazyAsJsDate(this).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(this).getMilliseconds() + 0;
    }, null /* tearOffInfo */, null, 1, 0, 823, "millisecond"],
    get$weekday: [function() {
      return C.JSInt_methods.$mod((this.isUtc === true ? H.Primitives_lazyAsJsDate(this).getUTCDay() + 0 : H.Primitives_lazyAsJsDate(this).getDay() + 0) + 6, 7) + 1;
    }, null /* tearOffInfo */, null, 1, 0, 823, "weekday"],
    DateTime$_internal$8: [function(year, month, day, hour, minute, second, millisecond, isUtc) {
      H.Primitives_lazyAsJsDate(this);
    }, null /* tearOffInfo */, null, 16, 0, 789, 779, 305, 306, 780, 781, 782, 783, 310, "_internal"],
    DateTime$fromMillisecondsSinceEpoch$2$isUtc: [function(millisecondsSinceEpoch, isUtc) {
      if (J.abs$0$n(millisecondsSinceEpoch) > 8640000000000000)
        throw H.wrapException(new P.ArgumentError(millisecondsSinceEpoch));
      if (isUtc == null)
        throw H.wrapException(new P.ArgumentError(isUtc));
    }, null /* tearOffInfo */, null, 2, 3, 787, 527, 788, 310, "fromMillisecondsSinceEpoch"],
    DateTime$_now$0: [function() {
      H.Primitives_lazyAsJsDate(this);
    }, null /* tearOffInfo */, null, 0, 0, 319, "_now"],
    $isDateTime: true,
    static: {"": "DateTime_MONDAY<-1075,DateTime_TUESDAY<-1075,DateTime_WEDNESDAY<-1075,DateTime_THURSDAY<-1075,DateTime_FRIDAY<-1075,DateTime_SATURDAY<-1075,DateTime_SUNDAY<-1075,DateTime_DAYS_PER_WEEK<-1075,DateTime_JANUARY<-1075,DateTime_FEBRUARY<-1075,DateTime_MARCH<-1075,DateTime_APRIL<-1075,DateTime_MAY<-1075,DateTime_JUNE<-1075,DateTime_JULY<-1075,DateTime_AUGUST<-1075,DateTime_SEPTEMBER<-1075,DateTime_OCTOBER<-1075,DateTime_NOVEMBER<-1075,DateTime_DECEMBER<-1075,DateTime_MONTHS_PER_YEAR<-1075,DateTime__MAX_MILLISECONDS_SINCE_EPOCH<-1075", DateTime_DateTime: [function(year, month, day, hour, minute, second, millisecond) {
        return P.DateTime$_internal(year, month, day, hour, minute, second, millisecond, false);
      }, "call$7" /* tearOffInfo */, null, 2, 12, 776, 777, 777, 778, 778, 778, 778, 779, 305, 306, 780, 781, 782, 783, "new DateTime" /* new DateTime:7:0 */], DateTime_DateTime$utc: [function(year, month, day, hour, minute, second, millisecond) {
        return P.DateTime$_internal(year, month, day, hour, minute, second, millisecond, true);
      }, "call$7" /* tearOffInfo */, null, 2, 12, 776, 777, 777, 778, 778, 778, 778, 779, 305, 306, 780, 781, 782, 783, "new DateTime$utc" /* new DateTime$utc:7:0 */], DateTime_DateTime$now: [function() {
        var t1 = new P.DateTime(Date.now(), false);
        t1.DateTime$_now$0();
        return t1;
      }, "call$0" /* tearOffInfo */, null, 0, 0, 784, "new DateTime$now" /* new DateTime$now:0:0 */], DateTime_parse: [function(formattedString) {
        var match, t1, t2, t3, years, month, day, hour, minute, second, millisecond, addOneMillisecond, isUtc, millisecondsSinceEpoch;
        match = new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^([+-]?\\d?\\d\\d\\d\\d)-?(\\d\\d)-?(\\d\\d)(?:[ T](\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(.\\d{1,6})?)?)?( ?[zZ]| ?\\+00(?::?00)?)?)?$", false, true, false), null, null).firstMatch$1(formattedString);
        if (match != null) {
          t1 = new P.DateTime_parse_parseIntOrZero();
          t2 = match._match;
          t3 = J.getInterceptor$as(t2);
          years = H.Primitives_parseInt(t3.$index(t2, 1), null, null);
          month = H.Primitives_parseInt(t3.$index(t2, 2), null, null);
          day = H.Primitives_parseInt(t3.$index(t2, 3), null, null);
          hour = t1.call$1(t3.$index(t2, 4));
          minute = t1.call$1(t3.$index(t2, 5));
          second = t1.call$1(t3.$index(t2, 6));
          millisecond = J.round$0$n(J.$mul$n(new P.DateTime_parse_parseDoubleOrZero().call$1(t3.$index(t2, 7)), 1000));
          if (millisecond === 1000) {
            addOneMillisecond = true;
            millisecond = 999;
          } else
            addOneMillisecond = false;
          isUtc = t3.$index(t2, 8) != null;
          millisecondsSinceEpoch = H.Primitives_valueFromDecomposedDate(years, month, day, hour, minute, second, millisecond, isUtc);
          return P.DateTime$fromMillisecondsSinceEpoch(addOneMillisecond ? millisecondsSinceEpoch + 1 : millisecondsSinceEpoch, isUtc);
        } else
          throw H.wrapException(P.FormatException$(formattedString));
      }, "call$1" /* tearOffInfo */, "DateTime_parse$closure", 2, 0, 785, 786, "parse"], DateTime$fromMillisecondsSinceEpoch: [function(millisecondsSinceEpoch, isUtc) {
        var t1 = new P.DateTime(millisecondsSinceEpoch, isUtc);
        t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
        return t1;
      }, null /* tearOffInfo */, null, 2, 3, 787, 527, 788, 310, "new DateTime$fromMillisecondsSinceEpoch" /* new DateTime$fromMillisecondsSinceEpoch:1:1:isUtc */], DateTime$_internal: [function(year, month, day, hour, minute, second, millisecond, isUtc) {
        var t1;
        if (isUtc == null)
          H.throwExpression(new P.ArgumentError(null));
        t1 = new P.DateTime(H.Primitives_valueFromDecomposedDate(year, month, day, hour, minute, second, millisecond, isUtc), isUtc);
        t1.DateTime$_internal$8(year, month, day, hour, minute, second, millisecond, isUtc);
        return t1;
      }, null /* tearOffInfo */, null, 16, 0, 789, 779, 305, 306, 780, 781, 782, 783, 310, "new DateTime$_internal" /* new DateTime$_internal:8:0 */], DateTime$_now: [function() {
        var t1 = new P.DateTime(Date.now(), false);
        t1.DateTime$_now$0();
        return t1;
      }, null /* tearOffInfo */, null, 0, 0, 319, "new DateTime$_now" /* new DateTime$_now:0:0 */], DateTime__brokenDownDateToMillisecondsSinceEpoch: [function(year, month, day, hour, minute, second, millisecond, isUtc) {
        return H.Primitives_valueFromDecomposedDate(year, month, day, hour, minute, second, millisecond, isUtc);
      }, "call$8" /* tearOffInfo */, "DateTime__brokenDownDateToMillisecondsSinceEpoch$closure", 16, 0, 790, 779, 305, 306, 780, 781, 782, 783, 310, "_brokenDownDateToMillisecondsSinceEpoch"]}
  },
  "+DateTime": [0, 1791],
  DateTime_parse_parseIntOrZero: {
    "": "Closure:859;",
    call$1: [function(matched) {
      if (matched == null)
        return 0;
      return H.Primitives_parseInt(matched, null, null);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 859, 1792, "call"]
  },
  "+DateTime_parse_parseIntOrZero": [1060],
  DateTime_parse_parseDoubleOrZero: {
    "": "Closure:1793;",
    call$1: [function(matched) {
      if (matched == null)
        return 0;
      return H.Primitives_parseDouble(matched, null);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1793, 1792, "call"]
  },
  "+DateTime_parse_parseDoubleOrZero": [1060],
  DateTime_toString_fourDigits: {
    "": "Closure:825;",
    call$1: [function(n) {
      var absN, sign;
      absN = Math.abs(n);
      sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + H.S(absN);
      if (absN >= 10)
        return sign + "00" + H.S(absN);
      return sign + "000" + H.S(absN);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 825, 1051, "call"]
  },
  "+DateTime_toString_fourDigits": [1060],
  DateTime_toString_threeDigits: {
    "": "Closure:825;",
    call$1: [function(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 825, 1051, "call"]
  },
  "+DateTime_toString_threeDigits": [1060],
  DateTime_toString_twoDigits: {
    "": "Closure:825;",
    call$1: [function(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 825, 1051, "call"]
  },
  "+DateTime_toString_twoDigits": [1060],
  $double: {
    "": "num;",
    $isdouble: true,
    static: {"": "double_NAN<-1076,double_INFINITY<-1076,double_NEGATIVE_INFINITY<-1076,double_MIN_POSITIVE<-1076,double_MAX_FINITE<-1076", double_parse: [function(source, onError) {
        return H.Primitives_parseDouble(source, onError);
      }, "call$2" /* tearOffInfo */, "double_parse$closure", 2, 2, 791, 370, 292, 581, "parse"]}
  },
  "+double": [188],
  Duration: {
    "": "Object;_duration<-1075",
    $add: [function(_, other) {
      return P.Duration$(0, 0, J.$add$ns(this._duration, other.get$_duration()), 0, 0, 0);
    }, "call$1" /* tearOffInfo */, "get$+", 2, 0, 1794, 403, "+"],
    $sub: [function(_, other) {
      return P.Duration$(0, 0, J.$sub$n(this._duration, other.get$_duration()), 0, 0, 0);
    }, "call$1" /* tearOffInfo */, "get$-", 2, 0, 1794, 403, "-"],
    $mul: [function(_, factor) {
      return P.Duration$(0, 0, J.round$0$n(J.$mul$n(this._duration, factor)), 0, 0, 0);
    }, "call$1" /* tearOffInfo */, "get$*", 2, 0, 1795, 1796, "*"],
    $tdiv: [function(_, quotient) {
      if (J.$eq(quotient, 0))
        throw H.wrapException(P.IntegerDivisionByZeroException$());
      return P.Duration$(0, 0, J.$tdiv$n(this._duration, quotient), 0, 0, 0);
    }, "call$1" /* tearOffInfo */, "get$~/", 2, 0, 1797, 1798, "~/"],
    $lt: [function(_, other) {
      return J.$lt$n(this._duration, other.get$_duration());
    }, "call$1" /* tearOffInfo */, "get$<", 2, 0, 1799, 403, "<"],
    $gt: [function(_, other) {
      return J.$gt$n(this._duration, other.get$_duration());
    }, "call$1" /* tearOffInfo */, "get$>", 2, 0, 1799, 403, ">"],
    $le: [function(_, other) {
      return J.$le$n(this._duration, other.get$_duration());
    }, "call$1" /* tearOffInfo */, "get$<=", 2, 0, 1799, 403, "<="],
    $ge: [function(_, other) {
      return J.$ge$n(this._duration, other.get$_duration());
    }, "call$1" /* tearOffInfo */, "get$>=", 2, 0, 1799, 403, ">="],
    get$inDays: [function() {
      return J.$tdiv$n(this._duration, 86400000000);
    }, null /* tearOffInfo */, null, 1, 0, 823, "inDays"],
    get$inHours: [function() {
      return J.$tdiv$n(this._duration, 3600000000);
    }, null /* tearOffInfo */, null, 1, 0, 823, "inHours"],
    get$inMinutes: [function() {
      return J.$tdiv$n(this._duration, 60000000);
    }, null /* tearOffInfo */, null, 1, 0, 823, "inMinutes"],
    get$inSeconds: [function() {
      return J.$tdiv$n(this._duration, 1000000);
    }, null /* tearOffInfo */, null, 1, 0, 823, "inSeconds"],
    get$inMilliseconds: [function() {
      return J.$tdiv$n(this._duration, 1000);
    }, null /* tearOffInfo */, null, 1, 0, 823, "inMilliseconds"],
    get$inMicroseconds: [function() {
      return this._duration;
    }, null /* tearOffInfo */, null, 1, 0, 823, "inMicroseconds"],
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isDuration)
        return false;
      return J.$eq(this._duration, other._duration);
    }, "call$1" /* tearOffInfo */, "get$==", 2, 0, 273, 403, "=="],
    get$hashCode: [function(_) {
      return J.get$hashCode$(this._duration);
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    compareTo$1: [function(_, other) {
      return J.compareTo$1$ns(this._duration, other.get$_duration());
    }, "call$1" /* tearOffInfo */, "get$compareTo", 2, 0, 1800, 403, "compareTo"],
    toString$0: [function(_) {
      var t1, t2, t3, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
      t1 = new P.Duration_toString_twoDigits();
      t2 = this._duration;
      t3 = J.getInterceptor$n(t2);
      if (t3.$lt(t2, 0))
        return "-" + H.S(P.Duration$(0, 0, t3.$negate(t2), 0, 0, 0));
      twoDigitMinutes = t1.call$1(J.remainder$1$n(t3.$tdiv(t2, 60000000), 60));
      twoDigitSeconds = t1.call$1(J.remainder$1$n(t3.$tdiv(t2, 1000000), 60));
      sixDigitUs = new P.Duration_toString_sixDigits().call$1(t3.remainder$1(t2, 1000000));
      return H.S(t3.$tdiv(t2, 3600000000)) + ":" + H.S(twoDigitMinutes) + ":" + H.S(twoDigitSeconds) + "." + H.S(sixDigitUs);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isDuration: true,
    static: {"": "Duration_MICROSECONDS_PER_MILLISECOND<-1075,Duration_MILLISECONDS_PER_SECOND<-1075,Duration_SECONDS_PER_MINUTE<-1075,Duration_MINUTES_PER_HOUR<-1075,Duration_HOURS_PER_DAY<-1075,Duration_MICROSECONDS_PER_SECOND<-1075,Duration_MICROSECONDS_PER_MINUTE<-1075,Duration_MICROSECONDS_PER_HOUR<-1075,Duration_MICROSECONDS_PER_DAY<-1075,Duration_MILLISECONDS_PER_MINUTE<-1075,Duration_MILLISECONDS_PER_HOUR<-1075,Duration_MILLISECONDS_PER_DAY<-1075,Duration_SECONDS_PER_HOUR<-1075,Duration_SECONDS_PER_DAY<-1075,Duration_MINUTES_PER_DAY<-1075,Duration_ZERO<-1372", Duration$: [function(days, hours, microseconds, milliseconds, minutes, seconds) {
        return new P.Duration(J.$add$ns(J.$add$ns(J.$add$ns(J.$add$ns(J.$add$ns(J.$mul$n(days, 86400000000), J.$mul$n(hours, 3600000000)), J.$mul$n(minutes, 60000000)), J.$mul$n(seconds, 1000000)), J.$mul$n(milliseconds, 1000)), microseconds));
      }, null /* tearOffInfo */, null, 0, 13, 792, 778, 778, 778, 778, 778, 778, 793, 307, 794, 276, 308, 309, "new Duration" /* new Duration:0:6:days:hours:microseconds:milliseconds:minutes:seconds */]}
  },
  "+Duration": [0, 1801],
  Duration_toString_sixDigits: {
    "": "Closure:825;",
    call$1: [function(n) {
      if (n >= 100000)
        return H.S(n);
      if (n >= 10000)
        return "0" + H.S(n);
      if (n >= 1000)
        return "00" + H.S(n);
      if (n >= 100)
        return "000" + H.S(n);
      if (n > 10)
        return "0000" + H.S(n);
      return "00000" + H.S(n);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 825, 1051, "call"]
  },
  "+Duration_toString_sixDigits": [1060],
  Duration_toString_twoDigits: {
    "": "Closure:825;",
    call$1: [function(n) {
      if (n >= 10)
        return H.S(n);
      return "0" + H.S(n);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 825, 1051, "call"]
  },
  "+Duration_toString_twoDigits": [1060],
  Error: {
    "": "Object;",
    get$stackTrace: [function() {
      return new H._StackTrace(this.$thrownJsError, null);
    }, null /* tearOffInfo */, null, 1, 0, 1802, "stackTrace"],
    $isError: true,
    static: {Error_safeToString: [function(object) {
        var buffer, t1, i, t2, codeUnit, charCodes;
        if (typeof object === "number" || typeof object === "boolean" || null == object)
          return J.toString$0(object);
        if (typeof object === "string") {
          buffer = new P.StringBuffer("");
          buffer._contents = "\"";
          for (t1 = object.length, i = 0, t2 = "\""; i < t1; ++i) {
            codeUnit = C.JSString_methods.codeUnitAt$1(object, i);
            if (codeUnit <= 31)
              if (codeUnit === 10) {
                t2 = buffer._contents + "\\n";
                buffer._contents = t2;
              } else if (codeUnit === 13) {
                t2 = buffer._contents + "\\r";
                buffer._contents = t2;
              } else if (codeUnit === 9) {
                t2 = buffer._contents + "\\t";
                buffer._contents = t2;
              } else {
                t2 = buffer._contents + "\\x";
                buffer._contents = t2;
                if (codeUnit < 16)
                  buffer._contents = t2 + "0";
                else {
                  buffer._contents = t2 + "1";
                  codeUnit -= 16;
                }
                t2 = codeUnit < 10 ? 48 + codeUnit : 87 + codeUnit;
                charCodes = P.List_List$filled(1, t2, J.JSInt);
                t2 = H.Primitives_stringFromCharCodes(charCodes);
                t2 = buffer._contents + t2;
                buffer._contents = t2;
              }
            else if (codeUnit === 92) {
              t2 = buffer._contents + "\\\\";
              buffer._contents = t2;
            } else if (codeUnit === 34) {
              t2 = buffer._contents + "\\\"";
              buffer._contents = t2;
            } else {
              charCodes = P.List_List$filled(1, codeUnit, J.JSInt);
              t2 = H.Primitives_stringFromCharCodes(charCodes);
              t2 = buffer._contents + t2;
              buffer._contents = t2;
            }
          }
          t1 = t2 + "\"";
          buffer._contents = t1;
          return t1;
        }
        return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
      }, "call$1" /* tearOffInfo */, "Error_safeToString$closure", 2, 0, 296, 242, "safeToString"], Error__objectToString: [function(object) {
        return H.Primitives_objectToString(object);
      }, "call$1" /* tearOffInfo */, "Error__objectToString$closure", 2, 0, 296, 242, "_objectToString"]}
  },
  "+Error": [0],
  AssertionError: {
    "": "Error;"
  },
  "+AssertionError": [1151],
  TypeError: {
    "": "AssertionError;"
  },
  "+TypeError": [1803],
  CastError: {
    "": "Error;"
  },
  "+CastError": [1151],
  NullThrownError: {
    "": "Error;",
    toString$0: [function(_) {
      return "Throw of null.";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {NullThrownError$: [function() {
        return new P.NullThrownError();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new NullThrownError" /* new NullThrownError:0:0 */]}
  },
  "+NullThrownError": [1151],
  ArgumentError: {
    "": "Error;message<-370",
    toString$0: [function(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Illegal argument(s): " + H.S(t1);
      return "Illegal argument(s)";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {ArgumentError$: [function(message) {
        return new P.ArgumentError(message);
      }, null /* tearOffInfo */, null, 0, 2, 795, 370, 262, "new ArgumentError" /* new ArgumentError:1:0 */]}
  },
  "+ArgumentError": [1151],
  RangeError: {
    "": "ArgumentError;message-370",
    toString$0: [function(_) {
      return "RangeError: " + H.S(this.message);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {RangeError$: [function(message) {
        return new P.RangeError(message);
      }, null /* tearOffInfo */, null, 2, 0, 241, 262, "new RangeError" /* new RangeError:1:0 */], RangeError$value: [function(value) {
        return new P.RangeError("value " + H.S(value));
      }, null /* tearOffInfo */, null, 2, 0, 796, 280, "new RangeError$value" /* new RangeError$value:1:0 */], RangeError$range: [function(value, start, end) {
        return new P.RangeError("value " + H.S(value) + " not in range " + H.S(start) + ".." + H.S(end));
      }, null /* tearOffInfo */, null, 6, 0, 797, 280, 439, 440, "new RangeError$range" /* new RangeError$range:3:0 */]}
  },
  "+RangeError": [1804],
  FallThroughError: {
    "": "Error;",
    static: {FallThroughError$: [function() {
        return new P.FallThroughError();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new FallThroughError" /* new FallThroughError:0:0 */]}
  },
  "+FallThroughError": [1151],
  AbstractClassInstantiationError: {
    "": "Error;_className<-1039",
    toString$0: [function(_) {
      return "Cannot instantiate abstract class: '" + H.S(this._className) + "'";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {AbstractClassInstantiationError$: [function(_className) {
        return new P.AbstractClassInstantiationError(_className);
      }, null /* tearOffInfo */, null, 2, 0, 289, 798, "new AbstractClassInstantiationError" /* new AbstractClassInstantiationError:1:0 */]}
  },
  "+AbstractClassInstantiationError": [1151],
  NoSuchMethodError: {
    "": "Error;_core$_receiver<-0,_memberName<-1227,_core$_arguments<-1129,_namedArguments<-1311,_existingArgumentNames<-1129",
    toString$0: [function(_) {
      var t1, t2, t3, t4, i, actualParameters, formalParameters;
      t1 = {};
      t1.sb_0 = P.StringBuffer$("");
      t1.i_1 = 0;
      t2 = this._core$_arguments;
      if (t2 != null)
        for (t3 = J.getInterceptor$as(t2), t4 = 0; J.$lt$n(t4, t3.get$length(t2)); i = J.$add$ns(t1.i_1, 1), t1.i_1 = i, t4 = i) {
          if (J.$gt$n(t1.i_1, 0))
            t1.sb_0.write$1(", ");
          t1.sb_0.write$1(P.Error_safeToString(t3.$index(t2, t1.i_1)));
        }
      t2 = this._namedArguments;
      if (t2 != null)
        J.forEach$1$a(t2, new P.NoSuchMethodError_toString_closure(t1));
      t2 = this._existingArgumentNames;
      if (t2 == null)
        return "NoSuchMethodError : method not found: '" + H.S(this._memberName) + "'\nReceiver: " + H.S(P.Error_safeToString(this._core$_receiver)) + "\nArguments: [" + H.S(t1.sb_0) + "]";
      else {
        actualParameters = J.toString$0(t1.sb_0);
        t1.sb_0 = P.StringBuffer$("");
        t3 = J.getInterceptor$as(t2);
        i = 0;
        while (true) {
          t4 = t3.get$length(t2);
          if (typeof t4 !== "number")
            return H.iae(t4);
          if (!(i < t4))
            break;
          if (i > 0)
            t1.sb_0.write$1(", ");
          t1.sb_0.write$1(t3.$index(t2, i));
          ++i;
        }
        formalParameters = J.toString$0(t1.sb_0);
        t1 = this._memberName;
        return "NoSuchMethodError: incorrect number of arguments passed to method named '" + H.S(t1) + "'\nReceiver: " + H.S(P.Error_safeToString(this._core$_receiver)) + "\nTried calling: " + H.S(t1) + "(" + H.S(actualParameters) + ")\nFound: " + H.S(t1) + "(" + H.S(formalParameters) + ")";
      }
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isNoSuchMethodError: true,
    static: {NoSuchMethodError$: [function(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames) {
        return new P.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames);
      }, null /* tearOffInfo */, null, 8, 2, 799, 370, 302, 282, 315, 316, 800, "new NoSuchMethodError" /* new NoSuchMethodError:5:0 */]}
  },
  "+NoSuchMethodError": [1151],
  UnsupportedError: {
    "": "Error;message<-1039",
    toString$0: [function(_) {
      return "Unsupported operation: " + H.S(this.message);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isUnsupportedError: true,
    static: {UnsupportedError$: [function(message) {
        return new P.UnsupportedError(message);
      }, null /* tearOffInfo */, null, 2, 0, 289, 262, "new UnsupportedError" /* new UnsupportedError:1:0 */]}
  },
  "+UnsupportedError": [1151],
  UnimplementedError: {
    "": "Error;message<-1039",
    toString$0: [function(_) {
      var t1 = this.message;
      return t1 != null ? "UnimplementedError: " + H.S(t1) : "UnimplementedError";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isUnsupportedError: true,
    $isError: true,
    static: {UnimplementedError$: [function(message) {
        return new P.UnimplementedError(message);
      }, null /* tearOffInfo */, null, 0, 2, 801, 370, 262, "new UnimplementedError" /* new UnimplementedError:1:0 */]}
  },
  "+UnimplementedError": [1151, 1805],
  StateError: {
    "": "Error;message<-1039",
    toString$0: [function(_) {
      return "Bad state: " + H.S(this.message);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {StateError$: [function(message) {
        return new P.StateError(message);
      }, null /* tearOffInfo */, null, 2, 0, 289, 262, "new StateError" /* new StateError:1:0 */]}
  },
  "+StateError": [1151],
  ConcurrentModificationError: {
    "": "Error;modifiedObject<-0",
    toString$0: [function(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + H.S(P.Error_safeToString(t1)) + ".";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {ConcurrentModificationError$: [function(modifiedObject) {
        return new P.ConcurrentModificationError(modifiedObject);
      }, null /* tearOffInfo */, null, 0, 2, 802, 370, 803, "new ConcurrentModificationError" /* new ConcurrentModificationError:1:0 */]}
  },
  "+ConcurrentModificationError": [1151],
  OutOfMemoryError: {
    "": "Object;",
    toString$0: [function(_) {
      return "Out of Memory";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    get$stackTrace: [function() {
      return;
    }, null /* tearOffInfo */, null, 1, 0, 1802, "stackTrace"],
    $isError: true,
    static: {OutOfMemoryError$: [function() {
        return new P.OutOfMemoryError();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new OutOfMemoryError" /* new OutOfMemoryError:0:0 */]}
  },
  "+OutOfMemoryError": [0, 1151],
  StackOverflowError: {
    "": "Object;",
    toString$0: [function(_) {
      return "Stack Overflow";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    get$stackTrace: [function() {
      return;
    }, null /* tearOffInfo */, null, 1, 0, 1802, "stackTrace"],
    $isError: true,
    static: {StackOverflowError$: [function() {
        return new P.StackOverflowError();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new StackOverflowError" /* new StackOverflowError:0:0 */]}
  },
  "+StackOverflowError": [0, 1151],
  CyclicInitializationError: {
    "": "Error;variableName<-1039",
    toString$0: [function(_) {
      var t1 = this.variableName;
      return t1 == null ? "Reading static variable during its initialization" : "Reading static variable '" + H.S(t1) + "' during its initialization";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {CyclicInitializationError$: [function(variableName) {
        return new P.CyclicInitializationError(variableName);
      }, null /* tearOffInfo */, null, 0, 2, 801, 370, 804, "new CyclicInitializationError" /* new CyclicInitializationError:1:0 */]}
  },
  "+CyclicInitializationError": [1151],
  Exception: {
    "": "Object;",
    static: {Exception_Exception: [function(message) {
        return new P._ExceptionImplementation(message);
      }, "call$1" /* tearOffInfo */, null, 0, 2, 805, 370, 262, "new Exception" /* new Exception:1:0 */]}
  },
  "+Exception": [0],
  _ExceptionImplementation: {
    "": "Object;message<-370",
    toString$0: [function(_) {
      var t1 = this.message;
      if (t1 == null)
        return "Exception";
      return "Exception: " + H.S(t1);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {_ExceptionImplementation$: [function(message) {
        return new P._ExceptionImplementation(message);
      }, null /* tearOffInfo */, null, 0, 2, 795, 370, 262, "new _ExceptionImplementation" /* new _ExceptionImplementation:1:0 */]}
  },
  "+_ExceptionImplementation": [0, 1373],
  FormatException: {
    "": "Object;message<-1039",
    toString$0: [function(_) {
      return "FormatException: " + H.S(this.message);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {FormatException$: [function(message) {
        return new P.FormatException(message);
      }, null /* tearOffInfo */, null, 0, 2, 801, 806, 262, "new FormatException" /* new FormatException:1:0 */]}
  },
  "+FormatException": [0, 1373],
  IntegerDivisionByZeroException: {
    "": "Object;",
    toString$0: [function(_) {
      return "IntegerDivisionByZeroException";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {IntegerDivisionByZeroException$: [function() {
        return new P.IntegerDivisionByZeroException();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new IntegerDivisionByZeroException" /* new IntegerDivisionByZeroException:0:0 */]}
  },
  "+IntegerDivisionByZeroException": [0, 1373],
  Expando: {
    "": "Object;name<-1039",
    toString$0: [function(_) {
      return "Expando:" + H.S(this.name);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $index: [function(_, object) {
      var values = H.Primitives_getProperty(object, "expando$values");
      return values == null ? null : H.Primitives_getProperty(values, this._getKey$0());
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "T__Object", ret: T, args: [P.Object]};
      }, this.$receiver, "Expando");
    }, 242, "[]"],
    $indexSet: [function(_, object, value) {
      var values = H.Primitives_getProperty(object, "expando$values");
      if (values == null) {
        values = new P.Object();
        H.Primitives_setProperty(object, "expando$values", values);
      }
      H.Primitives_setProperty(values, this._getKey$0(), value);
    }, "call$2" /* tearOffInfo */, "get$[]=", 4, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__Object_T", void: true, args: [P.Object, T]};
      }, this.$receiver, "Expando");
    }, 242, 280, "[]="],
    _getKey$0: [function() {
      var key, t1;
      key = H.Primitives_getProperty(this, "expando$key");
      if (key == null) {
        t1 = $.Expando__keyCount;
        $.Expando__keyCount = J.$add$ns(t1, 1);
        key = "expando$key$" + H.S(t1);
        H.Primitives_setProperty(this, "expando$key", key);
      }
      return key;
    }, "call$0" /* tearOffInfo */, "get$_getKey", 0, 0, 253, "_getKey"],
    "<>": [54],
    static: {"": "Expando__KEY_PROPERTY_NAME<-1039,Expando__EXPANDO_PROPERTY_NAME<-1039,Expando__keyCount@-1075", Expando$: [function($name, $T) {
        return H.setRuntimeTypeInfo(new P.Expando($name), [$T]);
      }, null /* tearOffInfo */, null, 0, 2, 801, 370, 346, "new Expando" /* new Expando:1:0 */]}
  },
  "+Expando": [0],
  Function: {
    "": "Object;",
    static: {Function__toMangledNames: [function(namedArguments) {
        var result;
        if (namedArguments == null)
          return;
        result = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
        J.forEach$1$a(namedArguments, new P.Function__toMangledNames_closure(result));
        return result;
      }, "call$1" /* tearOffInfo */, "Function__toMangledNames$closure", 2, 0, 771, 316, "_toMangledNames"], Function_apply: [function($function, positionalArguments, namedArguments) {
        return H.Primitives_applyFunction($function, positionalArguments, P.Function__toMangledNames(namedArguments));
      }, "call$3" /* tearOffInfo */, "Function_apply$closure", 4, 2, 807, 370, 250, 315, 316, "apply"]}
  },
  "+Function": [0],
  $int: {
    "": "num;",
    $isint: true,
    static: {int_int$fromEnvironment: [function($name, defaultValue) {
        throw H.wrapException(P.UnsupportedError$("int.fromEnvironment can only be used as a const constructor"));
      }, "call$2$defaultValue" /* tearOffInfo */, null, 2, 3, 810, 370, 346, 774, "new int$fromEnvironment" /* new int$fromEnvironment:1:1:defaultValue */], int_parse: [function(source, onError, radix) {
        return H.Primitives_parseInt(source, radix, onError);
      }, function(source) {
        return P.int_parse(source, null, null);
      }, null, function(source, onError) {
        return P.int_parse(source, onError, null);
      }, null, "call$3$onError$radix" /* tearOffInfo */, "call$1" /* tearOffInfo */, "call$2$onError" /* tearOffInfo */, "int_parse$closure", 2, 5, 811, 370, 370, 292, 581, 293, "parse"]}
  },
  "+int": [188],
  Invocation: {
    "": "Object;",
    get$isAccessor: [function() {
      this.get$isGetter();
      this.get$isSetter();
      return false;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isAccessor"]
  },
  "+Invocation": [0],
  Iterable: {
    "": "Object;",
    join$1: [function(_, separator) {
      var buffer = P.StringBuffer$("");
      buffer.writeAll$2(this, separator);
      return buffer._contents;
    }, "call$1" /* tearOffInfo */, "get$join", 0, 2, 1049, 806, 1050, "join"],
    $isIterable: true,
    "<>": [5],
    static: {Iterable$: [function($E) {
        return H.setRuntimeTypeInfo(new P.Iterable(), [$E]);
      }, null /* tearOffInfo */, null, 0, 0, 319, "new Iterable" /* new Iterable:0:0 */], Iterable_Iterable$generate: [function(count, generator, $E) {
        return H.setRuntimeTypeInfo(new P._GeneratorIterable(count, generator), [$E]);
      }, "call$2" /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "Iterable__int_E__int", ret: [P.Iterable, E], args: [J.JSInt, {func: "E__int", ret: E, args: [J.JSInt]}]};
        }, this.$receiver, "Iterable");
      }, 450, 812, "new Iterable$generate" /* new Iterable$generate:2:0 */]}
  },
  "+Iterable": [0],
  _GeneratorIterable: {
    "": "IterableBase;_core$_count<-1075,_generator<-1806",
    get$iterator: [function(_) {
      return H.setRuntimeTypeInfo(new P._GeneratorIterator(this._core$_count, this._generator, 0, null), [null]);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterator_19", ret: [P.Iterator, E]};
      }, this.$receiver, "_GeneratorIterable");
    }, "iterator"],
    get$length: [function(_) {
      return this._core$_count;
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    $asIterableBase: null,
    $asIterable: null,
    $isEfficientLength: true,
    "<>": [219],
    static: {_GeneratorIterable$: [function(_count, _generator, $E) {
        return H.setRuntimeTypeInfo(new P._GeneratorIterable(_count, _generator), [$E]);
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "dynamic__int__Generator", args: [J.JSInt, {func: "E__int0", ret: E, args: [J.JSInt]}]};
        }, this.$receiver, "_GeneratorIterable");
      }, 813, 814, "new _GeneratorIterable" /* new _GeneratorIterable:2:0 */]}
  },
  "+_GeneratorIterable": [1807, 1176],
  _GeneratorIterator: {
    "": "Object;_core$_count<-1075,_generator<-1808,_core$_index@-1075,_core$_current@-1809",
    _generator$1: function(arg0) {
      return this._generator.call$1(arg0);
    },
    moveNext$0: [function() {
      if (J.$lt$n(this._core$_index, this._core$_count)) {
        this._core$_current = this._generator$1(this._core$_index);
        this._core$_index = J.$add$ns(this._core$_index, 1);
        return true;
      } else {
        this._core$_current = null;
        return false;
      }
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    get$current: [function() {
      return this._core$_current;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_30", ret: E};
      }, this.$receiver, "_GeneratorIterator");
    }, "current"],
    "<>": [220],
    static: {_GeneratorIterator$: [function(_count, _generator, $E) {
        return H.setRuntimeTypeInfo(new P._GeneratorIterator(_count, _generator, 0, null), [$E]);
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "dynamic__int__Generator0", args: [J.JSInt, {func: "E__int1", ret: E, args: [J.JSInt]}]};
        }, this.$receiver, "_GeneratorIterator");
      }, 813, 814, "new _GeneratorIterator" /* new _GeneratorIterator:2:0 */]}
  },
  "+_GeneratorIterator": [0, 1810],
  BidirectionalIterator: {
    "": "Object;",
    "<>": [221]
  },
  "+BidirectionalIterator": [0, 1811],
  Iterator: {
    "": "Object;",
    "<>": [9]
  },
  "+Iterator": [0],
  List: {
    "": "Object;",
    $isList: true,
    $isEfficientLength: true,
    $isIterable: true,
    "<>": [2],
    static: {List_List: [function($length, $E) {
        var t1;
        if (J.$eq($length, C.C__ListConstructorSentinel)) {
          t1 = [];
          t1.$builtinTypeInfo = [$E];
          return t1;
        }
        if (typeof $length !== "number" || Math.floor($length) !== $length || $length < 0)
          H.throwExpression(new P.ArgumentError("Length must be a non-negative integer: " + H.S($length)));
        t1 = new Array($length);
        t1.$builtinTypeInfo = [$E];
        t1.fixed$length = init;
        return t1;
      }, "call$1" /* tearOffInfo */, null, 0, 2, function() {
        return H.computeSignature(function(E) {
          return {func: "List___int", ret: [J.JSArray, E], opt: [J.JSInt]};
        }, this.$receiver, "List");
      }, 370, 243, "new List" /* new List:1:0 */], List_List$filled: [function($length, fill, $E) {
        var result, t1, i;
        result = J.JSArray_JSArray$fixed($length, $E);
        if (!J.$eq($length, 0) && fill != null)
          for (t1 = result.length, i = 0; i < t1; ++i)
            result[i] = fill;
        return result;
      }, "call$2" /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "List__int_E", ret: [J.JSArray, E], args: [J.JSInt, E]};
        }, this.$receiver, "List");
      }, 243, 815, "new List$filled" /* new List$filled:2:0 */], List_List$from: [function(other, growable, $E) {
        var list, t1, $length, fixedList, t2, i, t3;
        list = H.setRuntimeTypeInfo([], [$E]);
        for (t1 = J.get$iterator$a(other); t1.moveNext$0() === true;)
          list.push(t1.get$current());
        if (growable === true)
          return list;
        $length = list.length;
        t1 = Array($length);
        t1.fixed$length = init;
        fixedList = H.setRuntimeTypeInfo(t1, [$E]);
        for (t1 = list.length, t2 = fixedList.length, i = 0; i < $length; ++i) {
          if (i >= t1)
            return H.ioore(list, i);
          t3 = list[i];
          if (i >= t2)
            return H.ioore(fixedList, i);
          fixedList[i] = t3;
        }
        return fixedList;
      }, "call$2$growable" /* tearOffInfo */, null, 2, 3, function() {
        return H.computeSignature(function(E) {
          return {func: "List__Iterable__bool", ret: [J.JSArray, E], args: [P.Iterable], named: {growable: J.JSBool}};
        }, this.$receiver, "List");
      }, 816, 403, 817, "new List$from" /* new List$from:1:1:growable */], List_List$generate: [function($length, generator, growable, $E) {
        var result, t1, i;
        if (growable === true) {
          result = H.setRuntimeTypeInfo([], [$E]);
          C.JSArray_methods.set$length(result, $length);
        } else {
          if (typeof $length !== "number")
            return H.iae($length);
          t1 = Array($length);
          t1.fixed$length = init;
          result = H.setRuntimeTypeInfo(t1, [$E]);
        }
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          t1 = generator.call$1(i);
          if (i >= result.length)
            return H.ioore(result, i);
          result[i] = t1;
        }
        return result;
      }, "call$3$growable" /* tearOffInfo */, null, 4, 3, function() {
        return H.computeSignature(function(E) {
          return {func: "List__int_E__int__bool", ret: [J.JSArray, E], args: [J.JSInt, {func: "E__int2", ret: E, args: [J.JSInt]}], named: {growable: J.JSBool}};
        }, this.$receiver, "List");
      }, 816, 243, 812, 817, "new List$generate" /* new List$generate:2:1:growable */]}
  },
  "+List": [0, 1176, 1812],
  Map: {
    "": "Object;",
    $isMap: true,
    "<>": [26, 27],
    static: {Map_Map: [function($K, $V) {
        return P.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V);
      }, "call$0" /* tearOffInfo */, null, 0, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "Map_0", ret: [P.Map, K, V]};
        }, this.$receiver, "Map");
      }, "new Map" /* new Map:0:0 */], Map_Map$from: [function(other, $K, $V) {
        var t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V);
        t1.addAll$1(0, other);
        return t1;
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "Map__Map1", ret: [P.Map, K, V], args: [[P.Map, K, V]]};
        }, this.$receiver, "Map");
      }, 403, "new Map$from" /* new Map$from:1:0 */], Map_Map$identity: [function($K, $V) {
        return P.LinkedHashMap_LinkedHashMap$identity($K, $V);
      }, "call$0" /* tearOffInfo */, null, 0, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "Map_0", ret: [P.Map, K, V]};
        }, this.$receiver, "Map");
      }, "new Map$identity" /* new Map$identity:0:0 */], Map_Map$fromIterable: [function(iterable, key, value, $K, $V) {
        var map = P.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V);
        P.Maps__fillMapWithMappedIterable(map, iterable, key, value);
        return map;
      }, "call$3$key$value" /* tearOffInfo */, null, 2, 5, function() {
        return H.computeSignature(function(K, V) {
          return {func: "Map__Iterable__K__dynamic_V__dynamic", ret: [P.Map, K, V], args: [P.Iterable], named: {key: {func: "K__dynamic2", ret: K, args: [null]}, value: {func: "V__dynamic2", ret: V, args: [null]}}};
        }, this.$receiver, "Map");
      }, 370, 370, 417, 312, 280, "new Map$fromIterable" /* new Map$fromIterable:1:2:key:value */], Map_Map$fromIterables: [function(keys, values, $K, $V) {
        var map = P.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V);
        P.Maps__fillMapWithIterables(map, keys, values);
        return map;
      }, "call$2" /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "Map__Iterable_Iterable", ret: [P.Map, K, V], args: [[P.Iterable, K], [P.Iterable, V]]};
        }, this.$receiver, "Map");
      }, 652, 653, "new Map$fromIterables" /* new Map$fromIterables:2:0 */]}
  },
  "+Map": [0],
  Null: {
    "": "Object;",
    toString$0: [function(_) {
      return "null";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {Null_Null$_uninstantiable: [function() {
        throw H.wrapException(P.UnsupportedError$("class Null cannot be instantiated"));
      }, "call$0" /* tearOffInfo */, null, 0, 0, 818, "new Null$_uninstantiable" /* new Null$_uninstantiable:0:0 */]}
  },
  "+Null": [0],
  num: {
    "": "Object;",
    $isnum: true,
    static: {num_parse: [function(input, onError) {
        var source, result;
        source = J.trim$0$s(input);
        result = H.Primitives_parseInt(source, null, P.num__returnNull$closure());
        if (result != null)
          return result;
        result = H.Primitives_parseDouble(source, P.num__returnNull$closure());
        if (result != null)
          return result;
        if (onError == null)
          throw H.wrapException(P.FormatException$(input));
        return onError.call$1(input);
      }, "call$2" /* tearOffInfo */, "num_parse$closure", 2, 2, 819, 370, 531, 581, "parse"], num__returnNull: [function(_) {
        return;
      }, "call$1" /* tearOffInfo */, "num__returnNull$closure", 2, 0, 241, 820, "_returnNull"]}
  },
  "+num": [0, 1813],
  Object: {
    "": ";",
    $eq: [function(_, other) {
      return this === other;
    }, "call$1" /* tearOffInfo */, "get$==", 2, 0, 273, 403, "=="],
    get$hashCode: [function(_) {
      return H.Primitives_objectHashCode(this);
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    toString$0: [function(_) {
      return H.Primitives_objectToString(this);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    noSuchMethod$1: [function(_, invocation) {
      throw H.wrapException(P.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
    }, "call$1" /* tearOffInfo */, "get$noSuchMethod", 2, 0, 1040, 284, "noSuchMethod"],
    get$runtimeType: [function(_) {
      return new H.TypeImpl(H.getRuntimeTypeString(this), null);
    }, null /* tearOffInfo */, null, 1, 0, 1041, "runtimeType"],
    $isObject: true,
    static: {Object$: [function() {
        return new P.Object();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new Object" /* new Object:0:0 */]}
  },
  "+Object": [],
  Pattern: {
    "": "Object;",
    $isPattern: true
  },
  "+Pattern": [0],
  Match: {
    "": "Object;",
    start$0: function() {
      return this.get$start().call$0();
    },
    $isMatch: true
  },
  "+Match": [0],
  RegExp: {
    "": "Object;",
    $isPattern: true,
    static: {RegExp_RegExp: [function(source, caseSensitive, multiLine) {
        return new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative(source, multiLine, caseSensitive, false), null, null);
      }, "call$3$caseSensitive$multiLine" /* tearOffInfo */, null, 2, 5, 822, 370, 370, 292, 396, 395, "new RegExp" /* new RegExp:1:2:caseSensitive:multiLine */]}
  },
  "+RegExp": [0, 1162],
  Set: {
    "": "IterableBase;",
    $isSet: true,
    $asIterableBase: null,
    $asIterable: null,
    $isEfficientLength: true,
    "<>": [14],
    static: {Set_Set: [function($E) {
        return P.LinkedHashSet_LinkedHashSet(null, null, null, $E);
      }, "call$0" /* tearOffInfo */, null, 0, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "Set_", ret: [P.Set, E]};
        }, this.$receiver, "Set");
      }, "new Set" /* new Set:0:0 */], Set_Set$identity: [function($E) {
        return P.LinkedHashSet_LinkedHashSet$identity($E);
      }, "call$0" /* tearOffInfo */, null, 0, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "Set_", ret: [P.Set, E]};
        }, this.$receiver, "Set");
      }, "new Set$identity" /* new Set$identity:0:0 */], Set_Set$from: [function(other, $E) {
        var t1 = P.LinkedHashSet_LinkedHashSet(null, null, null, $E);
        t1.addAll$1(0, other);
        return t1;
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "Set__Iterable", ret: [P.Set, E], args: [[P.Iterable, E]]};
        }, this.$receiver, "Set");
      }, 403, "new Set$from" /* new Set$from:1:0 */]}
  },
  "+Set": [1814, 1176],
  StackTrace: {
    "": "Object;"
  },
  "+StackTrace": [0],
  Stopwatch: {
    "": "Object;_start@-1075,_stop@-1075",
    start$0: [function() {
      var t1, t2;
      t1 = this._start == null;
      if (!t1 && this._stop == null)
        return;
      if (t1)
        this._start = H.Primitives_numMicroseconds();
      else {
        t1 = H.Primitives_numMicroseconds();
        t2 = J.$sub$n(this._stop, this._start);
        if (typeof t2 !== "number")
          return H.iae(t2);
        this._start = t1 - t2;
        this._stop = null;
      }
    }, "call$0" /* tearOffInfo */, "get$start", 0, 0, 494, "start"],
    stop$0: [function() {
      if (!(this._start != null && this._stop == null))
        return;
      this._stop = H.Primitives_numMicroseconds();
    }, "call$0" /* tearOffInfo */, "get$stop", 0, 0, 494, "stop"],
    reset$0: [function() {
      if (this._start == null)
        return;
      var t1 = H.Primitives_numMicroseconds();
      this._start = t1;
      if (this._stop != null)
        this._stop = t1;
    }, "call$0" /* tearOffInfo */, "get$reset", 0, 0, 494, "reset"],
    get$elapsedTicks: [function() {
      var t1, t2;
      t1 = this._start;
      if (t1 == null)
        return 0;
      t2 = this._stop;
      if (t2 == null) {
        t1 = H.Primitives_numMicroseconds();
        t2 = this._start;
        if (typeof t2 !== "number")
          return H.iae(t2);
        t2 = t1 - t2;
        t1 = t2;
      } else
        t1 = J.$sub$n(t2, t1);
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 823, "elapsedTicks"],
    get$elapsed: [function() {
      return P.Duration$(0, 0, J.$tdiv$n(J.$mul$n(this.get$elapsedTicks(), 1000000), 1000000), 0, 0, 0);
    }, null /* tearOffInfo */, null, 1, 0, 1790, "elapsed"],
    get$elapsedMicroseconds: [function() {
      return J.$tdiv$n(J.$mul$n(this.get$elapsedTicks(), 1000000), 1000000);
    }, null /* tearOffInfo */, null, 1, 0, 823, "elapsedMicroseconds"],
    get$elapsedMilliseconds: [function() {
      return J.$tdiv$n(J.$mul$n(this.get$elapsedTicks(), 1000), 1000000);
    }, null /* tearOffInfo */, null, 1, 0, 823, "elapsedMilliseconds"],
    get$frequency: [function() {
      return 1000000;
    }, null /* tearOffInfo */, null, 1, 0, 823, "frequency"],
    get$isRunning: [function() {
      return this._start != null && this._stop == null;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isRunning"],
    static: {Stopwatch$: [function() {
        return new P.Stopwatch(null, null);
      }, null /* tearOffInfo */, null, 0, 0, 319, "new Stopwatch" /* new Stopwatch:0:0 */], Stopwatch__frequency: [function() {
        return 1000000;
      }, "call$0" /* tearOffInfo */, "Stopwatch__frequency$closure", 0, 0, 823, "_frequency"], Stopwatch__now: [function() {
        return H.Primitives_numMicroseconds();
      }, "call$0" /* tearOffInfo */, "Stopwatch__now$closure", 0, 0, 823, "_now"]}
  },
  "+Stopwatch": [0],
  String: {
    "": "Object;",
    $isString: true,
    $isPattern: true,
    static: {String_String$fromCharCodes: [function(charCodes) {
        return H.Primitives_stringFromCharCodes(typeof charCodes !== "object" || charCodes === null || charCodes.constructor !== Array ? P.List_List$from(charCodes, true, null) : charCodes);
      }, "call$1" /* tearOffInfo */, null, 2, 0, 824, 301, "new String$fromCharCodes" /* new String$fromCharCodes:1:0 */], String_String$fromCharCode: [function(charCode) {
        return P.String_String$fromCharCodes(P.List_List$filled(1, charCode, J.JSInt));
      }, "call$1" /* tearOffInfo */, null, 2, 0, 825, 826, "new String$fromCharCode" /* new String$fromCharCode:1:0 */], String_String$fromEnvironment: [function($name, defaultValue) {
        throw H.wrapException(P.UnsupportedError$("String.fromEnvironment can only be used as a const constructor"));
      }, "call$2$defaultValue" /* tearOffInfo */, null, 2, 3, 827, 370, 346, 774, "new String$fromEnvironment" /* new String$fromEnvironment:1:1:defaultValue */]}
  },
  "+String": [0, 1162, 1815],
  Runes: {
    "": "IterableBase;string<-1039",
    get$iterator: [function(_) {
      return new P.RuneIterator(this.string, 0, 0, null);
    }, null /* tearOffInfo */, null, 1, 0, 1816, "iterator"],
    get$last: [function(_) {
      var t1, t2, $length, t3, code, previousCode;
      t1 = this.string;
      t2 = J.getInterceptor$as(t1);
      if (J.$eq(t2.get$length(t1), 0))
        throw H.wrapException(new P.StateError("No elements."));
      $length = t2.get$length(t1);
      t3 = J.getInterceptor$n($length);
      code = t2.codeUnitAt$1(t1, t3.$sub($length, 1));
      if ((code & 64512) === 56320 && J.$gt$n(t2.get$length(t1), 1)) {
        previousCode = t2.codeUnitAt$1(t1, t3.$sub($length, 2));
        if ((previousCode & 64512) === 55296)
          return P._combineSurrogatePair(previousCode, code);
      }
      return code;
    }, null /* tearOffInfo */, null, 1, 0, 823, "last"],
    $asIterableBase: function() {
      return [J.JSInt];
    },
    $asIterable: function() {
      return [J.JSInt];
    },
    "<>": [],
    static: {Runes$: [function(string) {
        return new P.Runes(string);
      }, null /* tearOffInfo */, null, 2, 0, 289, 290, "new Runes" /* new Runes:1:0 */]}
  },
  "+Runes": [1817],
  RuneIterator: {
    "": "Object;string<-1039,_core$_position@-1075,_nextPosition@-1075,_currentCodePoint@-1075",
    _checkSplitSurrogate$1: [function(index) {
      var t1, t2, t3;
      t1 = J.getInterceptor$n(index);
      if (t1.$gt(index, 0)) {
        t2 = this.string;
        t3 = J.getInterceptor$as(t2);
        t1 = t1.$lt(index, t3.get$length(t2)) && (t3.codeUnitAt$1(t2, t1.$sub(index, 1)) & 64512) === 55296 && (t3.codeUnitAt$1(t2, index) & 64512) === 56320;
      } else
        t1 = false;
      if (t1)
        throw H.wrapException(new P.ArgumentError("Index inside surrogate pair: " + H.S(index)));
    }, "call$1" /* tearOffInfo */, "get$_checkSplitSurrogate", 2, 0, 1055, 321, "_checkSplitSurrogate"],
    get$rawIndex: [function() {
      return !J.$eq(this._core$_position, this._nextPosition) ? this._core$_position : null;
    }, null /* tearOffInfo */, null, 1, 0, 823, "rawIndex"],
    set$rawIndex: [function(rawIndex) {
      var t1, t2;
      t1 = this.string;
      t2 = J.getInterceptor$as(t1);
      if (J.$ge$n(rawIndex, t2.get$length(t1)))
        throw H.wrapException(P.RangeError$range(rawIndex, 0, J.$sub$n(t2.get$length(t1), 1)));
      this.reset$1(rawIndex);
      this.moveNext$0();
    }, null /* tearOffInfo */, null, 3, 0, 1055, 1818, "rawIndex"],
    reset$1: [function(rawIndex) {
      var t1 = J.getInterceptor$n(rawIndex);
      if (t1.$lt(rawIndex, 0) || t1.$gt(rawIndex, J.get$length$as(this.string)))
        throw H.wrapException(P.RangeError$range(rawIndex, 0, J.get$length$as(this.string)));
      this._checkSplitSurrogate$1(rawIndex);
      this._nextPosition = rawIndex;
      this._core$_position = rawIndex;
      this._currentCodePoint = null;
    }, function() {
      return this.reset$1(0);
    }, "reset$0", "call$1" /* tearOffInfo */, null /* tearOffInfo */, "get$reset", 0, 2, 1819, 778, 1818, "reset"],
    get$current: [function() {
      return this._currentCodePoint;
    }, null /* tearOffInfo */, null, 1, 0, 823, "current"],
    get$currentSize: [function() {
      return J.$sub$n(this._nextPosition, this._core$_position);
    }, null /* tearOffInfo */, null, 1, 0, 823, "currentSize"],
    get$currentAsString: [function() {
      if (J.$eq(this._core$_position, this._nextPosition))
        return;
      if (J.$eq(J.$add$ns(this._core$_position, 1), this._nextPosition))
        return J.$index$as(this.string, this._core$_position);
      return J.substring$2$s(this.string, this._core$_position, this._nextPosition);
    }, null /* tearOffInfo */, null, 1, 0, 253, "currentAsString"],
    moveNext$0: [function() {
      var t1, t2, t3, codeUnit, nextPosition, nextCodeUnit;
      t1 = this._nextPosition;
      this._core$_position = t1;
      t2 = this.string;
      t3 = J.getInterceptor$as(t2);
      if (J.$eq(t1, t3.get$length(t2))) {
        this._currentCodePoint = null;
        return false;
      }
      codeUnit = t3.codeUnitAt$1(t2, this._core$_position);
      nextPosition = J.$add$ns(this._core$_position, 1);
      if ((codeUnit & 64512) === 55296 && J.$lt$n(nextPosition, t3.get$length(t2))) {
        nextCodeUnit = t3.codeUnitAt$1(t2, nextPosition);
        if ((nextCodeUnit & 64512) === 56320) {
          this._nextPosition = J.$add$ns(nextPosition, 1);
          this._currentCodePoint = P._combineSurrogatePair(codeUnit, nextCodeUnit);
          return true;
        }
      }
      this._nextPosition = nextPosition;
      this._currentCodePoint = codeUnit;
      return true;
    }, "call$0" /* tearOffInfo */, "get$moveNext", 0, 0, 849, "moveNext"],
    movePrevious$0: [function() {
      var t1, position, t2, codeUnit, t3, prevCodeUnit;
      t1 = this._core$_position;
      this._nextPosition = t1;
      if (J.$eq(t1, 0)) {
        this._currentCodePoint = null;
        return false;
      }
      position = J.$sub$n(this._core$_position, 1);
      t1 = this.string;
      t2 = J.getInterceptor$s(t1);
      codeUnit = t2.codeUnitAt$1(t1, position);
      if ((codeUnit & 64512) === 56320 && J.$gt$n(position, 0)) {
        t3 = J.getInterceptor$n(position);
        prevCodeUnit = t2.codeUnitAt$1(t1, t3.$sub(position, 1));
        if ((prevCodeUnit & 64512) === 55296) {
          this._core$_position = t3.$sub(position, 1);
          this._currentCodePoint = P._combineSurrogatePair(prevCodeUnit, codeUnit);
          return true;
        }
      }
      this._core$_position = position;
      this._currentCodePoint = codeUnit;
      return true;
    }, "call$0" /* tearOffInfo */, "get$movePrevious", 0, 0, 849, "movePrevious"],
    RuneIterator$at$2: [function(string, index) {
      var t1 = J.getInterceptor$n(index);
      if (t1.$lt(index, 0) || t1.$gt(index, J.get$length$as(string)))
        throw H.wrapException(P.RangeError$range(index, 0, J.get$length$as(string)));
      this._checkSplitSurrogate$1(index);
    }, null /* tearOffInfo */, null, 4, 0, 828, 290, 321, "at"],
    static: {RuneIterator$: [function(string) {
        return new P.RuneIterator(string, 0, 0, null);
      }, null /* tearOffInfo */, null, 2, 0, 289, 290, "new RuneIterator" /* new RuneIterator:1:0 */], RuneIterator$at: [function(string, index) {
        var t1 = new P.RuneIterator(string, index, index, null);
        t1.RuneIterator$at$2(string, index);
        return t1;
      }, null /* tearOffInfo */, null, 4, 0, 828, 290, 321, "new RuneIterator$at" /* new RuneIterator$at:2:0 */]}
  },
  "+RuneIterator": [0, 1820],
  StringBuffer: {
    "": "Object;_contents@-1039",
    get$length: [function(_) {
      return J.get$length$as(this._contents);
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$isEmpty: [function(_) {
      return J.$eq(J.get$length$as(this._contents), 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$isNotEmpty: [function(_) {
      return !J.$eq(J.get$length$as(this._contents), 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty"],
    write$1: [function(obj) {
      var str = typeof obj === "string" ? obj : H.S(obj);
      this._contents = this._contents + str;
    }, "call$1" /* tearOffInfo */, "get$write", 2, 0, 821, 995, "write"],
    writeCharCode$1: [function(charCode) {
      this.write$1(P.String_String$fromCharCode(charCode));
    }, "call$1" /* tearOffInfo */, "get$writeCharCode", 2, 0, 1055, 826, "writeCharCode"],
    writeAll$2: [function(objects, separator) {
      var iterator, str, t1;
      iterator = J.get$iterator$a(objects);
      if (iterator.moveNext$0() !== true)
        return;
      if (J.get$isEmpty$as(separator) === true)
        do {
          str = iterator.get$current();
          str = typeof str === "string" ? str : H.S(str);
          this._contents = this._contents + str;
        } while (iterator.moveNext$0() === true);
      else {
        this.write$1(iterator.get$current());
        for (t1 = typeof separator === "string"; iterator.moveNext$0() === true;) {
          str = t1 ? separator : H.S(separator);
          this._contents = this._contents + str;
          str = iterator.get$current();
          str = typeof str === "string" ? str : H.S(str);
          this._contents = this._contents + str;
        }
      }
    }, "call$2" /* tearOffInfo */, "get$writeAll", 2, 2, 1772, 806, 1591, 1050, "writeAll"],
    writeln$1: [function(obj) {
      this.write$1(obj);
      this.write$1("\n");
    }, "call$1" /* tearOffInfo */, "get$writeln", 0, 2, 1771, 806, 995, "writeln"],
    clear$0: [function(_) {
      this._contents = "";
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    toString$0: [function(_) {
      return this._contents;
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    StringBuffer$1: [function($content) {
      if (typeof $content === "string")
        this._contents = $content;
      else
        this.write$1($content);
    }, null /* tearOffInfo */, null, 0, 2, 802, 370, 829, ""],
    static: {StringBuffer$: [function($content) {
        var t1 = new P.StringBuffer("");
        t1.StringBuffer$1($content);
        return t1;
      }, null /* tearOffInfo */, null, 0, 2, 802, 370, 829, "new StringBuffer" /* new StringBuffer:1:0 */]}
  },
  "+StringBuffer": [0, 1764],
  StringSink: {
    "": "Object;"
  },
  "+StringSink": [0],
  Symbol0: {
    "": "Object;",
    $isSymbol0: true,
    static: {Symbol_Symbol: [function($name) {
        return new H.Symbol($name);
      }, "call$1" /* tearOffInfo */, null, 2, 0, 463, 346, "new Symbol" /* new Symbol:1:0 */]}
  },
  "+Symbol": [0],
  Type: {
    "": "Object;",
    $isType: true
  },
  "+Type": [0],
  Uri: {
    "": "Object;_host<-1039,_port@-1075,_path@-1039,scheme<-1039,userInfo<-1039,query<-1039,fragment<-1039,_pathSegments@-1109,_queryParameters@-1821",
    get$authority: [function() {
      if (J.$eq(this.get$host(), ""))
        return "";
      var sb = P.StringBuffer$("");
      this._writeAuthority$1(sb);
      return sb._contents;
    }, null /* tearOffInfo */, null, 1, 0, 253, "authority"],
    get$host: [function() {
      var t1, t2;
      t1 = this._host;
      if (t1 != null && J.startsWith$1$s(t1, "[")) {
        t2 = J.getInterceptor$as(t1);
        return t2.substring$2(t1, 1, J.$sub$n(t2.get$length(t1), 1));
      }
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 253, "host"],
    get$port: [function() {
      var t1, t2;
      if (J.$eq(this._port, 0)) {
        t1 = this.scheme;
        t2 = J.getInterceptor(t1);
        if (t2.$eq(t1, "http"))
          return 80;
        if (t2.$eq(t1, "https"))
          return 443;
      }
      return this._port;
    }, null /* tearOffInfo */, null, 1, 0, 823, "port"],
    get$path: [function() {
      return this._path;
    }, null /* tearOffInfo */, null, 1, 0, 253, "path"],
    get$pathSegments: [function() {
      var t1, pathToSplit;
      t1 = this._pathSegments;
      if (t1 == null) {
        t1 = J.get$isEmpty$as(this._path) !== true && J.codeUnitAt$1$s(this._path, 0) === 47;
        pathToSplit = this._path;
        if (t1)
          pathToSplit = J.substring$1$s(pathToSplit, 1);
        t1 = J.getInterceptor(pathToSplit);
        t1 = t1.$eq(pathToSplit, "") ? C.List_empty3 : H.setRuntimeTypeInfo(new H.MappedListIterable(t1.split$1(pathToSplit, "/"), P.Uri_decodeComponent$closure()), [null, null]).toList$1$growable(0, false);
        t1 = H.setRuntimeTypeInfo(new P.UnmodifiableListView(t1), [null]);
        this._pathSegments = t1;
      }
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1822, "pathSegments"],
    get$queryParameters: [function() {
      var t1 = this._queryParameters;
      if (t1 == null) {
        t1 = H.setRuntimeTypeInfo(new P._UnmodifiableMap(P.Uri_splitQueryString(this.query, C.Utf8Codec_false)), [null, null]);
        this._queryParameters = t1;
      }
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, 1823, "queryParameters"],
    _makePath$2: [function(path, pathSegments) {
      var t1, result;
      t1 = path == null;
      if (t1 && pathSegments == null)
        return "";
      t1 = !t1;
      if (t1 && pathSegments != null)
        throw H.wrapException(P.ArgumentError$("Both path and pathSegments specified"));
      result = t1 ? P.Uri__normalize(path) : J.map$1$a(pathSegments, new P.Uri__makePath_closure()).join$1(0, "/");
      if (!J.$eq(this.get$host(), "") || J.$eq(this.scheme, "file")) {
        t1 = J.getInterceptor$as(result);
        t1 = t1.get$isNotEmpty(result) && !t1.startsWith$1(result, "/");
      } else
        t1 = false;
      if (t1)
        return "/" + H.S(result);
      return result;
    }, "call$2" /* tearOffInfo */, "get$_makePath", 4, 0, 1824, 835, 836, "_makePath"],
    get$isAbsolute: [function() {
      return !J.$eq(this.scheme, "") && J.$eq(this.fragment, "");
    }, null /* tearOffInfo */, null, 1, 0, 849, "isAbsolute"],
    _merge$2: [function(base, reference) {
      var t1 = J.getInterceptor(base);
      if (t1.$eq(base, ""))
        return "/" + H.S(reference);
      return t1.substring$2(base, 0, J.$add$ns(t1.lastIndexOf$1(base, "/"), 1)) + H.S(reference);
    }, "call$2" /* tearOffInfo */, "get$_merge", 4, 0, 860, 1825, 1826, "_merge"],
    _hasDotSegments$1: [function(path) {
      var t1 = J.getInterceptor$as(path);
      if (J.$gt$n(t1.get$length(path), 0) && t1.codeUnitAt$1(path, 0) === 58)
        return true;
      return !J.$eq(t1.indexOf$1(path, "/."), -1);
    }, "call$1" /* tearOffInfo */, "get$_hasDotSegments", 2, 0, 493, 835, "_hasDotSegments"],
    _removeDotSegments$1: [function(path) {
      var output, t1, appendSlash, segment, t2;
      if (!this._hasDotSegments$1(path))
        return path;
      output = [];
      for (t1 = J.split$1$s(path, "/"), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]), appendSlash = false; t1.moveNext$0();) {
        segment = t1._current;
        if (J.$eq(segment, "..")) {
          t2 = output.length;
          if (t2 !== 0)
            if (t2 === 1) {
              if (0 >= t2)
                return H.ioore(output, 0);
              t2 = !J.$eq(output[0], "");
            } else
              t2 = true;
          else
            t2 = false;
          if (t2) {
            if (0 >= output.length)
              return H.ioore(output, 0);
            output.pop();
          }
          appendSlash = true;
        } else if ("." === segment)
          appendSlash = true;
        else {
          output.push(segment);
          appendSlash = false;
        }
      }
      if (appendSlash)
        output.push("");
      return C.JSArray_methods.join$1(output, "/");
    }, "call$1" /* tearOffInfo */, "get$_removeDotSegments", 2, 0, 407, 835, "_removeDotSegments"],
    resolve$1: [function(reference) {
      var t1, targetScheme, targetUserInfo, targetHost, targetPort, targetPath, targetQuery, t2, t3;
      t1 = P.Uri$_fromMatch($.get$Uri__splitRe().firstMatch$1(reference));
      targetScheme = t1.scheme;
      if (!J.$eq(targetScheme, "")) {
        targetUserInfo = t1.userInfo;
        targetHost = t1.get$host();
        targetPort = t1.get$port();
        targetPath = this._removeDotSegments$1(t1.get$path());
        targetQuery = t1.query;
      } else {
        if (t1.get$hasAuthority()) {
          targetUserInfo = t1.userInfo;
          targetHost = t1.get$host();
          targetPort = t1.get$port();
          targetPath = this._removeDotSegments$1(t1.get$path());
          targetQuery = t1.query;
        } else {
          if (J.$eq(t1.get$path(), "")) {
            targetPath = this._path;
            targetQuery = t1.query;
            targetQuery = !J.$eq(targetQuery, "") ? targetQuery : this.query;
          } else {
            t2 = J.startsWith$1$s(t1.get$path(), "/");
            t3 = t1.get$path();
            targetPath = t2 ? this._removeDotSegments$1(t3) : this._removeDotSegments$1(this._merge$2(this._path, t3));
            targetQuery = t1.query;
          }
          targetUserInfo = this.userInfo;
          targetHost = this.get$host();
          targetPort = this.get$port();
        }
        targetScheme = this.scheme;
      }
      return P.Uri$(t1.fragment, targetHost, targetPath, null, targetPort, targetQuery, null, targetScheme, targetUserInfo);
    }, "call$1" /* tearOffInfo */, "get$resolve", 2, 0, 830, 1826, "resolve"],
    resolveUri$1: [function(reference) {
      var targetScheme, targetUserInfo, targetHost, targetPort, targetPath, targetQuery;
      if (!J.$eq(reference.get$scheme(), "")) {
        targetScheme = reference.get$scheme();
        targetUserInfo = reference.get$userInfo();
        targetHost = reference.get$host();
        targetPort = reference.get$port();
        targetPath = this._removeDotSegments$1(reference.get$path());
        targetQuery = reference.get$query();
      } else {
        if (reference.get$hasAuthority()) {
          targetUserInfo = reference.get$userInfo();
          targetHost = reference.get$host();
          targetPort = reference.get$port();
          targetPath = this._removeDotSegments$1(reference.get$path());
          targetQuery = reference.get$query();
        } else {
          if (J.$eq(reference.get$path(), "")) {
            targetPath = this._path;
            targetQuery = !J.$eq(reference.get$query(), "") ? reference.get$query() : this.query;
          } else {
            targetPath = J.startsWith$1$s(reference.get$path(), "/") ? this._removeDotSegments$1(reference.get$path()) : this._removeDotSegments$1(this._merge$2(this._path, reference.get$path()));
            targetQuery = reference.get$query();
          }
          targetUserInfo = this.userInfo;
          targetHost = this.get$host();
          targetPort = this.get$port();
        }
        targetScheme = this.scheme;
      }
      return P.Uri$(reference.get$fragment(), targetHost, targetPath, null, targetPort, targetQuery, null, targetScheme, targetUserInfo);
    }, "call$1" /* tearOffInfo */, "get$resolveUri", 2, 0, 1827, 1826, "resolveUri"],
    get$hasAuthority: [function() {
      return !J.$eq(this.get$host(), "");
    }, null /* tearOffInfo */, null, 1, 0, 849, "hasAuthority"],
    get$origin: [function() {
      var t1, t2, t3;
      t1 = this.scheme;
      t2 = J.getInterceptor(t1);
      if (!t2.$eq(t1, "")) {
        t3 = this._host;
        t3 = t3 == null || J.$eq(t3, "");
      } else
        t3 = true;
      if (t3)
        throw H.wrapException(new P.StateError("Cannot use origin without a scheme: " + H.S(this)));
      if (!t2.$eq(t1, "http") && !t2.$eq(t1, "https"))
        throw H.wrapException(new P.StateError("Origin is only applicable schemes http and https: " + H.S(this)));
      if (J.$eq(this._port, 0))
        return H.S(t1) + "://" + H.S(this._host);
      return H.S(t1) + "://" + H.S(this._host) + ":" + H.S(this._port);
    }, null /* tearOffInfo */, null, 1, 0, 253, "origin"],
    toFilePath$1$windows: [function(windows) {
      var t1, t2, segments, hasDriveLetter, result;
      t1 = this.scheme;
      t2 = J.getInterceptor(t1);
      if (!t2.$eq(t1, "") && !t2.$eq(t1, "file"))
        throw H.wrapException(P.UnsupportedError$("Cannot extract a file path from a " + H.S(t1) + " URI"));
      if (!t2.$eq(t1, "") && !t2.$eq(t1, "file"))
        throw H.wrapException(P.UnsupportedError$("Cannot extract a file path from a " + H.S(t1) + " URI"));
      if (!J.$eq(this.query, ""))
        throw H.wrapException(P.UnsupportedError$("Cannot extract a file path from a URI with a query component"));
      if (!J.$eq(this.fragment, ""))
        throw H.wrapException(P.UnsupportedError$("Cannot extract a file path from a URI with a fragment component"));
      if ((windows == null ? false : windows) === true) {
        segments = this.get$pathSegments();
        t1 = J.getInterceptor$as(segments);
        if (J.$gt$n(t1.get$length(segments), 0) && J.$eq(J.get$length$as(t1.$index(segments, 0)), 2) && J.codeUnitAt$1$s(t1.$index(segments, 0), 1) === 58) {
          P.Uri__checkWindowsDriveLetter(J.codeUnitAt$1$s(t1.$index(segments, 0), 0), false);
          P.Uri__checkWindowsPathReservedCharacters(segments, false, 1);
          hasDriveLetter = true;
        } else {
          P.Uri__checkWindowsPathReservedCharacters(segments, false, 0);
          hasDriveLetter = false;
        }
        result = P.StringBuffer$("");
        if (this.get$_isPathAbsolute() && !hasDriveLetter)
          result.write$1("\\");
        if (!J.$eq(this.get$host(), "")) {
          result.write$1("\\");
          result.write$1(this.get$host());
          result.write$1("\\");
        }
        result.writeAll$2(segments, "\\");
        if (hasDriveLetter && J.$eq(t1.get$length(segments), 1))
          result.write$1("\\");
        t1 = result._contents;
      } else {
        if (!J.$eq(this.get$host(), ""))
          H.throwExpression(P.UnsupportedError$("Cannot extract a non-Windows file path from a file URI with an authority"));
        P.Uri__checkNonWindowsPathReservedCharacters(this.get$pathSegments(), false);
        result = P.StringBuffer$("");
        if (this.get$_isPathAbsolute())
          result.write$1("/");
        result.writeAll$2(this.get$pathSegments(), "/");
        t1 = result._contents;
      }
      return t1;
    }, "call$1$windows" /* tearOffInfo */, "get$toFilePath", 0, 3, 1828, 370, 847, "toFilePath"],
    _toFilePath$0: [function() {
      if (!J.$eq(this.get$host(), ""))
        throw H.wrapException(P.UnsupportedError$("Cannot extract a non-Windows file path from a file URI with an authority"));
      P.Uri__checkNonWindowsPathReservedCharacters(this.get$pathSegments(), false);
      var result = P.StringBuffer$("");
      if (this.get$_isPathAbsolute())
        result.write$1("/");
      result.writeAll$2(this.get$pathSegments(), "/");
      return result._contents;
    }, "call$0" /* tearOffInfo */, "get$_toFilePath", 0, 0, 253, "_toFilePath"],
    _toWindowsFilePath$0: [function() {
      var segments, t1, hasDriveLetter, result;
      segments = this.get$pathSegments();
      t1 = J.getInterceptor$as(segments);
      if (J.$gt$n(t1.get$length(segments), 0) && J.$eq(J.get$length$as(t1.$index(segments, 0)), 2) && J.codeUnitAt$1$s(t1.$index(segments, 0), 1) === 58) {
        P.Uri__checkWindowsDriveLetter(J.codeUnitAt$1$s(t1.$index(segments, 0), 0), false);
        P.Uri__checkWindowsPathReservedCharacters(segments, false, 1);
        hasDriveLetter = true;
      } else {
        P.Uri__checkWindowsPathReservedCharacters(segments, false, 0);
        hasDriveLetter = false;
      }
      result = P.StringBuffer$("");
      if (this.get$_isPathAbsolute() && !hasDriveLetter)
        result.write$1("\\");
      if (!J.$eq(this.get$host(), "")) {
        result.write$1("\\");
        result.write$1(this.get$host());
        result.write$1("\\");
      }
      result.writeAll$2(segments, "\\");
      if (hasDriveLetter && J.$eq(t1.get$length(segments), 1))
        result.write$1("\\");
      return result._contents;
    }, "call$0" /* tearOffInfo */, "get$_toWindowsFilePath", 0, 0, 253, "_toWindowsFilePath"],
    get$_isPathAbsolute: [function() {
      var t1 = this._path;
      if (t1 == null || J.get$isEmpty$as(t1) === true)
        return false;
      return J.startsWith$1$s(this._path, "/");
    }, null /* tearOffInfo */, null, 1, 0, 849, "_isPathAbsolute"],
    _writeAuthority$1: [function(ss) {
      var t1 = this.userInfo;
      if ("" !== t1) {
        ss.write$1(t1);
        ss.write$1("@");
      }
      t1 = this._host;
      ss.write$1(t1 == null ? "null" : t1);
      if (!J.$eq(this._port, 0)) {
        ss.write$1(":");
        ss.write$1(J.toString$0(this._port));
      }
    }, "call$1" /* tearOffInfo */, "get$_writeAuthority", 2, 0, 1829, 1830, "_writeAuthority"],
    toString$0: [function(_) {
      var sb, t1;
      sb = P.StringBuffer$("");
      t1 = this.scheme;
      if ("" !== t1) {
        sb.write$1(t1);
        sb.write$1(":");
      }
      if (!J.$eq(this.get$host(), "") || J.$eq(t1, "file")) {
        sb.write$1("//");
        this._writeAuthority$1(sb);
      }
      sb.write$1(this._path);
      t1 = this.query;
      if ("" !== t1) {
        sb.write$1("?");
        sb.write$1(t1);
      }
      t1 = this.fragment;
      if ("" !== t1) {
        sb.write$1("#");
        sb.write$1(t1);
      }
      return sb._contents;
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isUri)
        return false;
      return J.$eq(this.scheme, other.scheme) && J.$eq(this.userInfo, other.userInfo) && J.$eq(this.get$host(), other.get$host()) && J.$eq(this.get$port(), other.get$port()) && J.$eq(this._path, other._path) && J.$eq(this.query, other.query) && J.$eq(this.fragment, other.fragment);
    }, "call$1" /* tearOffInfo */, "get$==", 2, 0, 273, 403, "=="],
    get$hashCode: [function(_) {
      var t1 = new P.Uri_hashCode_combine();
      return t1.call$2(this.scheme, t1.call$2(this.userInfo, t1.call$2(this.get$host(), t1.call$2(this.get$port(), t1.call$2(this._path, t1.call$2(this.query, t1.call$2(this.fragment, 1)))))));
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    Uri$9$fragment$host$path$pathSegments$port$query$queryParameters$scheme$userInfo: [function(fragment, host, path, pathSegments, port, query, queryParameters, scheme, userInfo) {
      var t1 = J.getInterceptor(scheme);
      if (t1.$eq(scheme, "http") && J.$eq(port, 80))
        this._port = 0;
      else if (t1.$eq(scheme, "https") && J.$eq(port, 443))
        this._port = 0;
      else
        this._port = port;
      this._path = this._makePath$2(path, pathSegments);
    }, null /* tearOffInfo */, null, 0, 19, 832, 806, 806, 370, 370, 778, 370, 370, 370, 806, 833, 834, 835, 836, 837, 838, 839, 840, 841, ""],
    $isUri: true,
    static: {"": "Uri__splitRe<-1161,Uri__COMPONENT_SCHEME<-370,Uri__COMPONENT_USER_INFO<-370,Uri__COMPONENT_HOST<-370,Uri__COMPONENT_HOST_IPV6<-370,Uri__COMPONENT_PORT<-370,Uri__COMPONENT_PATH<-370,Uri__COMPONENT_QUERY_DATA<-370,Uri__COMPONENT_FRAGMENT<-370,Uri__SPACE<-1075,Uri__DOUBLE_QUOTE<-1075,Uri__PERCENT<-1075,Uri__ASTERISK<-1075,Uri__PLUS<-1075,Uri__SLASH<-1075,Uri__ZERO<-1075,Uri__NINE<-1075,Uri__COLON<-1075,Uri__LESS<-1075,Uri__GREATER<-1075,Uri__QUESTION<-1075,Uri__AT_SIGN<-1075,Uri__UPPER_CASE_A<-1075,Uri__UPPER_CASE_F<-1075,Uri__UPPER_CASE_Z<-1075,Uri__LEFT_BRACKET<-1075,Uri__BACKSLASH<-1075,Uri__RIGHT_BRACKET<-1075,Uri__LOWER_CASE_A<-1075,Uri__LOWER_CASE_F<-1075,Uri__LOWER_CASE_Z<-1075,Uri__BAR<-1075,Uri__unreservedTable<-370,Uri__unreserved2396Table<-370,Uri__encodeFullTable<-370,Uri__schemeTable<-370,Uri__schemeLowerTable<-370,Uri__subDelimitersTable<-370,Uri__pathCharTable<-370,Uri__queryCharTable<-370", Uri_parse: [function(uri) {
        return P.Uri$_fromMatch($.get$Uri__splitRe().firstMatch$1(uri));
      }, "call$1" /* tearOffInfo */, "Uri_parse$closure", 2, 0, 830, 260, "parse"], Uri$_fromMatch: [function(m) {
        var t1, t2, t3, t4, t5, t6, t7, t8;
        t1 = J.getInterceptor$as(m);
        t2 = t1.$index(m, 1);
        t2 = P.Uri__makeScheme(t2 != null ? t2 : "");
        t3 = t1.$index(m, 2);
        t3 = t3 != null ? t3 : "";
        t4 = P.Uri__eitherOf(t1.$index(m, 3), t1.$index(m, 4));
        t5 = P.Uri__parseIntOrZero(t1.$index(m, 5));
        t6 = t1.$index(m, 6);
        t6 = t6 != null ? t6 : "";
        t7 = t1.$index(m, 7);
        t7 = t7 != null ? t7 : "";
        t1 = t1.$index(m, 8);
        t1 = t1 != null ? t1 : "";
        t8 = P.Uri__makeScheme(t2);
        t8 = new P.Uri(P.Uri__makeHost(t4), null, null, t8, t3, P.Uri__makeQuery(t7, null), P.Uri__makeFragment(t1), null, null);
        t8.Uri$9$fragment$host$path$pathSegments$port$query$queryParameters$scheme$userInfo(t1, t4, t6, null, t5, t7, null, t2, t3);
        return t8;
      }, null /* tearOffInfo */, null, 2, 0, 831, 670, "new Uri$_fromMatch" /* new Uri$_fromMatch:1:0 */], Uri$: [function(fragment, host, path, pathSegments, port, query, queryParameters, scheme, userInfo) {
        var t1 = P.Uri__makeScheme(scheme);
        t1 = new P.Uri(P.Uri__makeHost(host), null, null, t1, userInfo, P.Uri__makeQuery(query, queryParameters), P.Uri__makeFragment(fragment), null, null);
        t1.Uri$9$fragment$host$path$pathSegments$port$query$queryParameters$scheme$userInfo(fragment, host, path, pathSegments, port, query, queryParameters, scheme, userInfo);
        return t1;
      }, null /* tearOffInfo */, null, 0, 19, 832, 806, 806, 370, 370, 778, 370, 370, 370, 806, 833, 834, 835, 836, 837, 838, 839, 840, 841, "new Uri" /* new Uri:0:9:fragment:host:path:pathSegments:port:query:queryParameters:scheme:userInfo */], Uri_Uri$http: [function(authority, unencodedPath, queryParameters) {
        return P.Uri__makeHttpUri("http", authority, unencodedPath, queryParameters);
      }, "call$3" /* tearOffInfo */, null, 4, 2, 842, 370, 843, 844, 839, "new Uri$http" /* new Uri$http:3:0 */], Uri_Uri$https: [function(authority, unencodedPath, queryParameters) {
        return P.Uri__makeHttpUri("https", authority, unencodedPath, queryParameters);
      }, "call$3" /* tearOffInfo */, null, 4, 2, 842, 370, 843, 844, 839, "new Uri$https" /* new Uri$https:3:0 */], Uri__makeHttpUri: [function(scheme, authority, unencodedPath, queryParameters) {
        var t1, i, t2, userInfo, hostStart, hostEnd, port, portString;
        t1 = J.getInterceptor$as(authority);
        i = 0;
        while (true) {
          t2 = t1.get$length(authority);
          if (typeof t2 !== "number")
            return H.iae(t2);
          userInfo = "";
          hostStart = 0;
          if (!(i < t2))
            break;
          if (t1.codeUnitAt$1(authority, i) === 64) {
            userInfo = t1.substring$2(authority, 0, i);
            hostStart = i + 1;
            break;
          }
          ++i;
        }
        t2 = t1.get$length(authority);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (hostStart < t2 && t1.codeUnitAt$1(authority, hostStart) === 91) {
          hostEnd = hostStart;
          while (true) {
            t2 = t1.get$length(authority);
            if (typeof t2 !== "number")
              return H.iae(t2);
            if (!(hostEnd < t2))
              break;
            if (t1.codeUnitAt$1(authority, hostEnd) === 93)
              break;
            ++hostEnd;
          }
          if (hostEnd === t1.get$length(authority))
            throw H.wrapException(P.FormatException$("Invalid IPv6 host entry."));
          P.Uri_parseIPv6Address(t1.substring$2(authority, hostStart + 1, hostEnd));
          ++hostEnd;
          if (hostEnd !== t1.get$length(authority) && t1.codeUnitAt$1(authority, hostEnd) !== 58)
            throw H.wrapException(P.FormatException$("Invalid end of authority"));
        } else
          hostEnd = hostStart;
        while (true) {
          t2 = t1.get$length(authority);
          if (typeof t2 !== "number")
            return H.iae(t2);
          port = 0;
          if (!(hostEnd < t2))
            break;
          if (t1.codeUnitAt$1(authority, hostEnd) === 58) {
            portString = t1.substring$1(authority, hostEnd + 1);
            port = portString.length !== 0 ? H.Primitives_parseInt(portString, null, null) : 0;
            break;
          }
          ++hostEnd;
        }
        return P.Uri$("", t1.substring$2(authority, hostStart, hostEnd), null, J.split$1$s(unencodedPath, "/"), port, null, queryParameters, scheme, userInfo);
      }, "call$4" /* tearOffInfo */, "Uri__makeHttpUri$closure", 8, 0, 845, 840, 843, 844, 839, "_makeHttpUri"], Uri_Uri$file: [function(path, windows) {
        return (windows == null ? false : windows) === true ? P.Uri__makeWindowsFileUrl(path) : P.Uri__makeFileUri(path);
      }, "call$2$windows" /* tearOffInfo */, null, 2, 3, 846, 370, 835, 847, "new Uri$file" /* new Uri$file:1:1:windows */], Uri_base: [function() {
        var uri = H.Primitives_currentUri();
        if (uri != null)
          return P.Uri$_fromMatch($.get$Uri__splitRe().firstMatch$1(uri));
        throw H.wrapException(P.UnsupportedError$("'Uri.base' is not supported"));
      }, null /* tearOffInfo */, null, 1, 0, 848, "base"], Uri__isWindows: [function() {
        return false;
      }, null /* tearOffInfo */, null, 1, 0, 849, "_isWindows"], Uri__checkNonWindowsPathReservedCharacters: [function(segments, argumentError) {
        J.forEach$1$a(segments, new P.Uri__checkNonWindowsPathReservedCharacters_closure(argumentError));
      }, "call$2" /* tearOffInfo */, "Uri__checkNonWindowsPathReservedCharacters$closure", 4, 0, 850, 851, 852, "_checkNonWindowsPathReservedCharacters"], Uri__checkWindowsPathReservedCharacters: [function(segments, argumentError, firstSegment) {
        J.skip$1$a(segments, firstSegment).forEach$1(0, new P.Uri__checkWindowsPathReservedCharacters_closure(argumentError));
      }, "call$3" /* tearOffInfo */, "Uri__checkWindowsPathReservedCharacters$closure", 4, 2, 853, 778, 851, 852, 854, "_checkWindowsPathReservedCharacters"], Uri__checkWindowsDriveLetter: [function(charCode, argumentError) {
        var t1;
        if (typeof charCode !== "number")
          return H.iae(charCode);
        if (!(65 <= charCode && charCode <= 90))
          t1 = 97 <= charCode && charCode <= 122;
        else
          t1 = true;
        if (t1)
          return;
        if (argumentError === true)
          throw H.wrapException(new P.ArgumentError("Illegal drive letter " + P.String_String$fromCharCode(charCode)));
        else
          throw H.wrapException(P.UnsupportedError$("Illegal drive letter " + P.String_String$fromCharCode(charCode)));
      }, "call$2" /* tearOffInfo */, "Uri__checkWindowsDriveLetter$closure", 4, 0, 855, 826, 852, "_checkWindowsDriveLetter"], Uri__makeFileUri: [function(path) {
        var t1 = J.getInterceptor$as(path);
        if (J.$gt$n(t1.get$length(path), 0) && J.$eq(t1.$index(path, 0), "/"))
          return P.Uri$("", "", null, t1.split$1(path, "/"), 0, null, null, "file", "");
        else
          return P.Uri$("", "", null, t1.split$1(path, "/"), 0, null, null, null, "");
      }, "call$1" /* tearOffInfo */, "Uri__makeFileUri$closure", 2, 0, 289, 835, "_makeFileUri"], Uri__makeWindowsFileUrl: [function(path) {
        var t1, pathSegments, pathStart, t2, hostPart;
        t1 = J.getInterceptor$s(path);
        if (t1.startsWith$1(path, "\\\\?\\"))
          if (t1.startsWith$1(path, "\\\\?\\UNC\\"))
            path = "\\" + t1.substring$1(path, 7);
          else {
            path = t1.substring$1(path, 4);
            if (path.length < 3 || C.JSString_methods.codeUnitAt$1(path, 1) !== 58 || C.JSString_methods.codeUnitAt$1(path, 2) !== 92)
              throw H.wrapException(new P.ArgumentError("Windows paths with \\\\?\\ prefix must be absolute"));
          }
        else
          path = t1.replaceAll$2(path, "/", "\\");
        t1 = J.getInterceptor$as(path);
        if (J.$gt$n(t1.get$length(path), 1) && J.$eq(t1.$index(path, 1), ":")) {
          P.Uri__checkWindowsDriveLetter(t1.codeUnitAt$1(path, 0), true);
          if (J.$eq(t1.get$length(path), 2) || t1.codeUnitAt$1(path, 2) !== 92)
            throw H.wrapException(new P.ArgumentError("Windows paths with drive letter must be absolute"));
          pathSegments = t1.split$1(path, "\\");
          P.Uri__checkWindowsPathReservedCharacters(pathSegments, true, 1);
          return P.Uri$("", "", null, pathSegments, 0, null, null, "file", "");
        }
        if (J.$gt$n(t1.get$length(path), 0) && J.$eq(t1.$index(path, 0), "\\"))
          if (J.$gt$n(t1.get$length(path), 1) && J.$eq(t1.$index(path, 1), "\\")) {
            pathStart = t1.indexOf$2(path, "\\", 2);
            t2 = J.getInterceptor(pathStart);
            hostPart = t2.$eq(pathStart, -1) ? t1.substring$1(path, 2) : t1.substring$2(path, 2, pathStart);
            pathSegments = (t2.$eq(pathStart, -1) ? "" : t1.substring$1(path, t2.$add(pathStart, 1))).split("\\");
            P.Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);
            return P.Uri$("", hostPart, null, pathSegments, 0, null, null, "file", "");
          } else {
            pathSegments = t1.split$1(path, "\\");
            P.Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);
            return P.Uri$("", "", null, pathSegments, 0, null, null, "file", "");
          }
        else {
          pathSegments = t1.split$1(path, "\\");
          P.Uri__checkWindowsPathReservedCharacters(pathSegments, true, 0);
          return P.Uri$("", "", null, pathSegments, 0, null, null, null, "");
        }
      }, "call$1" /* tearOffInfo */, "Uri__makeWindowsFileUrl$closure", 2, 0, 289, 835, "_makeWindowsFileUrl"], Uri__makeHost: [function(host) {
        var t1, i, t2;
        if (host == null || J.get$isEmpty$as(host) === true)
          return host;
        t1 = J.getInterceptor$s(host);
        if (t1.codeUnitAt$1(host, 0) === 91) {
          if (t1.codeUnitAt$1(host, J.$sub$n(t1.get$length(host), 1)) !== 93)
            throw H.wrapException(P.FormatException$("Missing end `]` to match `[` in host"));
          P.Uri_parseIPv6Address(t1.substring$2(host, 1, J.$sub$n(t1.get$length(host), 1)));
          return host;
        }
        i = 0;
        while (true) {
          t2 = t1.get$length(host);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (!(i < t2))
            break;
          if (t1.codeUnitAt$1(host, i) === 58) {
            P.Uri_parseIPv6Address(host);
            return "[" + H.S(host) + "]";
          }
          ++i;
        }
        return host;
      }, "call$1" /* tearOffInfo */, "Uri__makeHost$closure", 2, 0, 407, 834, "_makeHost"], Uri__makeScheme: [function(scheme) {
        var t1, t2, t3, $length, allLowercase, i, codeUnit, t4;
        t1 = new P.Uri__makeScheme_isSchemeLowerCharacter();
        t2 = new P.Uri__makeScheme_isSchemeCharacter();
        if (scheme == null)
          return "";
        t3 = J.getInterceptor$as(scheme);
        $length = t3.get$length(scheme);
        if (typeof $length !== "number")
          return H.iae($length);
        allLowercase = true;
        i = 0;
        for (; i < $length; ++i) {
          codeUnit = t3.codeUnitAt$1(scheme, i);
          if (i === 0) {
            if (!(codeUnit >= 97 && codeUnit <= 122))
              t4 = codeUnit >= 65 && codeUnit <= 90;
            else
              t4 = true;
            t4 = !t4;
          } else
            t4 = false;
          if (t4)
            throw H.wrapException(new P.ArgumentError("Illegal scheme: " + H.S(scheme)));
          if (t1.call$1(codeUnit) !== true) {
            if (t2.call$1(codeUnit) === true)
              ;
            else
              throw H.wrapException(new P.ArgumentError("Illegal scheme: " + H.S(scheme)));
            allLowercase = false;
          }
        }
        return allLowercase ? scheme : t3.toLowerCase$0(scheme);
      }, "call$1" /* tearOffInfo */, "Uri__makeScheme$closure", 2, 0, 407, 840, "_makeScheme"], Uri__makeQuery: [function(query, queryParameters) {
        var t1, t2, result;
        t1 = {};
        t2 = query == null;
        if (t2 && queryParameters == null)
          return "";
        t2 = !t2;
        if (t2 && queryParameters != null)
          throw H.wrapException(P.ArgumentError$("Both query and queryParameters specified"));
        if (t2)
          return P.Uri__normalize(query);
        result = P.StringBuffer$("");
        t1.first_0 = true;
        J.forEach$1$a(queryParameters, new P.Uri__makeQuery_closure(t1, result));
        return result._contents;
      }, "call$2" /* tearOffInfo */, "Uri__makeQuery$closure", 4, 0, 856, 838, 839, "_makeQuery"], Uri__makeFragment: [function(fragment) {
        if (fragment == null)
          return "";
        return P.Uri__normalize(fragment);
      }, "call$1" /* tearOffInfo */, "Uri__makeFragment$closure", 2, 0, 407, 833, "_makeFragment"], Uri__normalize: [function(component) {
        var t1, t2, t3, t4, t5, t6, $length, t7, t8, t9, codeUnit1, codeUnit2, decodedCodeUnit, index, t10;
        t1 = {};
        t2 = new P.Uri__normalize_isNormalizedHexDigit();
        t3 = new P.Uri__normalize_isUnreserved();
        t4 = new P.Uri__normalize_normalizeHexDigit(component, t2, new P.Uri__normalize_isLowerCaseHexDigit());
        t5 = new P.Uri__normalize_decodeHexDigitPair(component);
        t1.result_0 = null;
        t6 = J.getInterceptor$as(component);
        $length = t6.get$length(component);
        t1.index_1 = 0;
        t1.prevIndex_2 = 0;
        t7 = new P.Uri__normalize_fillResult(t1, component);
        for (t8 = J.getInterceptor$n($length), t9 = 0; J.$lt$n(t9, $length);)
          if (t6.codeUnitAt$1(component, t1.index_1) === 37) {
            if (t8.$lt($length, J.$add$ns(t1.index_1, 2)))
              throw H.wrapException(P.ArgumentError$("Invalid percent-encoding in URI component: " + H.S(component)));
            codeUnit1 = t6.codeUnitAt$1(component, J.$add$ns(t1.index_1, 1));
            codeUnit2 = t6.codeUnitAt$1(component, J.$add$ns(t1.index_1, 2));
            decodedCodeUnit = t5.call$1(J.$add$ns(t1.index_1, 1));
            if (t2.call$1(codeUnit1) === true && t2.call$1(codeUnit2) === true && t3.call$1(decodedCodeUnit) !== true) {
              index = J.$add$ns(t1.index_1, 3);
              t1.index_1 = index;
              t9 = index;
            } else {
              t7.call$0();
              t9 = t3.call$1(decodedCodeUnit);
              t10 = t1.result_0;
              if (t9 === true)
                t10.writeCharCode$1(decodedCodeUnit);
              else {
                t10.write$1("%");
                t1.result_0.writeCharCode$1(t4.call$1(J.$add$ns(t1.index_1, 1)));
                t1.result_0.writeCharCode$1(t4.call$1(J.$add$ns(t1.index_1, 2)));
              }
              index = J.$add$ns(t1.index_1, 3);
              t1.index_1 = index;
              t1.prevIndex_2 = index;
              t9 = index;
            }
          } else {
            index = J.$add$ns(t1.index_1, 1);
            t1.index_1 = index;
            t9 = index;
          }
        if (t1.result_0 != null && !J.$eq(t1.prevIndex_2, t1.index_1))
          t7.call$0();
        t1 = t1.result_0;
        if (t1 == null)
          return component;
        return J.toString$0(t1);
      }, "call$1" /* tearOffInfo */, "Uri__normalize$closure", 2, 0, 407, 857, "_normalize"], Uri__emptyIfNull: [function(val) {
        return val != null ? val : "";
      }, "call$1" /* tearOffInfo */, "Uri__emptyIfNull$closure", 2, 0, 407, 858, "_emptyIfNull"], Uri__parseIntOrZero: [function(val) {
        if (val != null && !J.$eq(val, ""))
          return H.Primitives_parseInt(val, null, null);
        else
          return 0;
      }, "call$1" /* tearOffInfo */, "Uri__parseIntOrZero$closure", 2, 0, 859, 858, "_parseIntOrZero"], Uri__eitherOf: [function(val1, val2) {
        if (val1 != null)
          return val1;
        if (val2 != null)
          return val2;
        return "";
      }, "call$2" /* tearOffInfo */, "Uri__eitherOf$closure", 4, 0, 860, 861, 862, "_eitherOf"], Uri__addIfNonEmpty: [function(sb, test, first, second) {
        if ("" !== test) {
          sb.write$1(first);
          sb.write$1(second);
        }
      }, "call$4" /* tearOffInfo */, "Uri__addIfNonEmpty$closure", 8, 0, 863, 740, 428, 864, 782, "_addIfNonEmpty"], Uri_encodeComponent: [function(component) {
        return P.Uri__uriEncode(C.List_KIf, component, C.Utf8Codec_false, false);
      }, "call$1" /* tearOffInfo */, "Uri_encodeComponent$closure", 2, 0, 407, 857, "encodeComponent"], Uri_encodeQueryComponent: [function(component, encoding) {
        return P.Uri__uriEncode(C.List_nxB, component, encoding, true);
      }, "call$2$encoding" /* tearOffInfo */, "Uri_encodeQueryComponent$closure", 2, 3, 865, 866, 857, 867, "encodeQueryComponent"], Uri_decodeComponent: [function(encodedComponent) {
        return P.Uri__uriDecode(encodedComponent, C.Utf8Codec_false, false);
      }, "call$1" /* tearOffInfo */, "Uri_decodeComponent$closure", 2, 0, 407, 868, "decodeComponent"], Uri_decodeQueryComponent: [function(encodedComponent, encoding) {
        return P.Uri__uriDecode(encodedComponent, encoding, true);
      }, "call$2$encoding" /* tearOffInfo */, "Uri_decodeQueryComponent$closure", 2, 3, 865, 866, 868, 867, "decodeQueryComponent"], Uri_encodeFull: [function(uri) {
        return P.Uri__uriEncode(C.List_CVk, uri, C.Utf8Codec_false, false);
      }, "call$1" /* tearOffInfo */, "Uri_encodeFull$closure", 2, 0, 407, 260, "encodeFull"], Uri_decodeFull: [function(uri) {
        return P.Uri__uriDecode(uri, C.Utf8Codec_false, false);
      }, "call$1" /* tearOffInfo */, "Uri_decodeFull$closure", 2, 0, 407, 260, "decodeFull"], Uri_splitQueryString: [function(query, encoding) {
        return H.IterableMixinWorkaround_fold(J.split$1$s(query, "&"), H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), new P.Uri_splitQueryString_closure(encoding));
      }, "call$2$encoding" /* tearOffInfo */, "Uri_splitQueryString$closure", 2, 3, 869, 866, 838, 867, "splitQueryString"], Uri_parseIPv4Address: [function(host) {
        var t1, bytes;
        t1 = new P.Uri_parseIPv4Address_error();
        bytes = J.split$1$s(host, ".");
        if (bytes.length !== 4)
          t1.call$1("IPv4 address should contain exactly 4 parts");
        return H.setRuntimeTypeInfo(new H.MappedListIterable(bytes, new P.Uri_parseIPv4Address_closure(t1)), [null, null]).toList$0(0);
      }, "call$1" /* tearOffInfo */, "Uri_parseIPv4Address$closure", 2, 0, 870, 834, "parseIPv4Address"], Uri_parseIPv6Address: [function(host) {
        var error, parseHex, parts, partStart, last, wildcardSeen, i, t1, atEnd, isLastWildcard, exception, t2;
        error = new P.Uri_parseIPv6Address_error();
        parseHex = new P.Uri_parseIPv6Address_parseHex(host, error);
        if (J.$lt$n(J.get$length$as(host), 2))
          error.call$1("address is too short");
        parts = [];
        partStart = 0;
        wildcardSeen = false;
        i = 0;
        while (true) {
          t1 = J.get$length$as(host);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          if (J.codeUnitAt$1$s(host, i) === 58) {
            if (i === 0) {
              ++i;
              if (J.codeUnitAt$1$s(host, i) !== 58)
                error.call$1("invalid start colon.");
              partStart = i;
            }
            if (i === partStart) {
              if (wildcardSeen)
                error.call$1("only one wildcard `::` is allowed");
              J.add$1$a(parts, -1);
              wildcardSeen = true;
            } else
              J.add$1$a(parts, parseHex.call$2(partStart, i));
            partStart = i + 1;
          }
          ++i;
        }
        if (J.get$length$as(parts) === 0)
          error.call$1("too few parts");
        atEnd = J.$eq(partStart, J.get$length$as(host));
        isLastWildcard = J.$eq(J.get$last$a(parts), -1);
        if (atEnd && !isLastWildcard)
          error.call$1("expected a part after last `:`");
        if (!atEnd)
          try {
            J.add$1$a(parts, parseHex.call$2(partStart, J.get$length$as(host)));
          } catch (exception) {
            H.unwrapException(exception);
            try {
              last = P.Uri_parseIPv4Address(J.substring$1$s(host, partStart));
              t1 = J.$shl$n(J.$index$as(last, 0), 8);
              t2 = J.$index$as(last, 1);
              if (typeof t2 !== "number")
                return H.iae(t2);
              J.add$1$a(parts, (t1 | t2) >>> 0);
              t2 = J.$shl$n(J.$index$as(last, 2), 8);
              t1 = J.$index$as(last, 3);
              if (typeof t1 !== "number")
                return H.iae(t1);
              J.add$1$a(parts, (t2 | t1) >>> 0);
            } catch (exception) {
              H.unwrapException(exception);
              error.call$1("invalid end of IPv6 address.");
            }

          }

        if (wildcardSeen) {
          if (J.get$length$as(parts) > 7)
            error.call$1("an address with a wildcard must have less than 7 parts");
        } else if (J.get$length$as(parts) !== 8)
          error.call$1("an address without a wildcard must contain exactly 8 parts");
        t1 = new H.ExpandIterable(parts, new P.Uri_parseIPv6Address_closure(parts));
        t1.$builtinTypeInfo = [null, null];
        return P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "IterableBase", 0));
      }, "call$1" /* tearOffInfo */, "Uri_parseIPv6Address$closure", 2, 0, 870, 834, "parseIPv6Address"], Uri__uriEncode: [function(canonicalTable, text, encoding, spaceToPlus) {
        var t1, result, bytes, t2, t3, t4, i, t5, $byte, charCodes;
        t1 = new P.Uri__uriEncode_byteToHex();
        result = P.StringBuffer$("");
        bytes = encoding.encode$1(text);
        t2 = J.getInterceptor$as(bytes);
        t3 = spaceToPlus === true;
        t4 = J.getInterceptor$as(canonicalTable);
        i = 0;
        while (true) {
          t5 = t2.get$length(bytes);
          if (typeof t5 !== "number")
            return H.iae(t5);
          if (!(i < t5))
            break;
          $byte = t2.$index(bytes, i);
          t5 = J.getInterceptor$n($byte);
          if (t5.$lt($byte, 128) && J.$and$n(t4.$index(canonicalTable, t5.$shr($byte, 4)), C.JSInt_methods._shlPositive$1(1, t5.$and($byte, 15))) !== 0) {
            charCodes = P.List_List$filled(1, $byte, J.JSInt);
            t5 = H.Primitives_stringFromCharCodes(charCodes);
            result._contents = result._contents + t5;
          } else if (t3 && t5.$eq($byte, 32)) {
            charCodes = P.List_List$filled(1, 43, J.JSInt);
            t5 = H.Primitives_stringFromCharCodes(charCodes);
            result._contents = result._contents + t5;
          } else {
            charCodes = P.List_List$filled(1, 37, J.JSInt);
            t5 = H.Primitives_stringFromCharCodes(charCodes);
            result._contents = result._contents + t5;
            t1.call$2($byte, result);
          }
          ++i;
        }
        return result._contents;
      }, "call$4$encoding$spaceToPlus" /* tearOffInfo */, "Uri__uriEncode$closure", 4, 5, 871, 866, 527, 872, 873, 867, 874, "_uriEncode"], Uri__hexCharPairToByte: [function(s, pos) {
        var t1, t2, $byte, i, charCode;
        for (t1 = J.getInterceptor$ns(pos), t2 = J.getInterceptor$s(s), $byte = 0, i = 0; i < 2; ++i) {
          charCode = t2.codeUnitAt$1(s, t1.$add(pos, i));
          if (48 <= charCode && charCode <= 57)
            $byte = $byte * 16 + charCode - 48;
          else {
            charCode |= 32;
            if (97 <= charCode && charCode <= 102)
              $byte = $byte * 16 + charCode - 87;
            else
              throw H.wrapException(new P.ArgumentError("Invalid URL encoding"));
          }
        }
        return $byte;
      }, "call$2" /* tearOffInfo */, "Uri__hexCharPairToByte$closure", 4, 0, 875, 383, 876, "_hexCharPairToByte"], Uri__uriDecode: [function(text, encoding, plusToSpace) {
        var t1, simple, i, t2, codeUnit, bytes, t3;
        t1 = J.getInterceptor$as(text);
        simple = true;
        i = 0;
        while (true) {
          t2 = t1.get$length(text);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (!(i < t2 && simple))
            break;
          codeUnit = t1.codeUnitAt$1(text, i);
          simple = codeUnit !== 37 && codeUnit !== 43;
          ++i;
        }
        if (simple) {
          t2 = J.getInterceptor(encoding);
          if (t2.$eq(encoding, C.Utf8Codec_false) || t2.$eq(encoding, C.Latin1Codec_false))
            return text;
          else
            bytes = t1.get$codeUnits(text);
        } else {
          bytes = [];
          t2 = plusToSpace === true;
          i = 0;
          while (true) {
            t3 = t1.get$length(text);
            if (typeof t3 !== "number")
              return H.iae(t3);
            if (!(i < t3))
              break;
            codeUnit = t1.codeUnitAt$1(text, i);
            if (codeUnit > 127)
              throw H.wrapException(new P.ArgumentError("Illegal percent encoding in URI"));
            if (codeUnit === 37) {
              t3 = t1.get$length(text);
              if (typeof t3 !== "number")
                return H.iae(t3);
              if (i + 3 > t3)
                throw H.wrapException(new P.ArgumentError("Truncated URI"));
              bytes.push(P.Uri__hexCharPairToByte(text, i + 1));
              i += 2;
            } else if (t2 && codeUnit === 43)
              bytes.push(32);
            else
              bytes.push(codeUnit);
            ++i;
          }
        }
        return encoding.decode$1(bytes);
      }, "call$3$encoding$plusToSpace" /* tearOffInfo */, "Uri__uriDecode$closure", 2, 5, 877, 866, 527, 873, 867, 878, "_uriDecode"], Uri__isAlphabeticCharacter: [function(codeUnit) {
        var t1 = J.getInterceptor$n(codeUnit);
        if (!(t1.$ge(codeUnit, 97) && t1.$le(codeUnit, 122)))
          t1 = t1.$ge(codeUnit, 65) && t1.$le(codeUnit, 90);
        else
          t1 = true;
        return t1;
      }, "call$1" /* tearOffInfo */, "Uri__isAlphabeticCharacter$closure", 2, 0, 246, 247, "_isAlphabeticCharacter"]}
  },
  "+Uri": [0],
  Uri__checkNonWindowsPathReservedCharacters_closure: {
    "": "Closure:241;argumentError_0-1043",
    call$1: [function(segment) {
      if (J.contains$1$as(segment, "/") === true)
        if (this.argumentError_0 === true)
          throw H.wrapException(new P.ArgumentError("Illegal path character " + H.S(segment)));
        else
          throw H.wrapException(P.UnsupportedError$("Illegal path character " + H.S(segment)));
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1831, "call"]
  },
  "+Uri__checkNonWindowsPathReservedCharacters_closure": [1060],
  Uri__checkWindowsPathReservedCharacters_closure: {
    "": "Closure:241;argumentError_0-1043",
    call$1: [function(segment) {
      if (J.contains$1$as(segment, new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("[\"*/:<>?\\\\|]", false, true, false), null, null)) === true)
        if (this.argumentError_0 === true)
          throw H.wrapException(new P.ArgumentError("Illegal character in path}"));
        else
          throw H.wrapException(P.UnsupportedError$("Illegal character in path}"));
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1831, "call"]
  },
  "+Uri__checkWindowsPathReservedCharacters_closure": [1060],
  Uri__makeScheme_isSchemeLowerCharacter: {
    "": "Closure:246;",
    call$1: [function(ch) {
      var t1;
      if (ch < 128) {
        t1 = ch >>> 4;
        if (t1 >= 8)
          return H.ioore(C.List_6Pr, t1);
        t1 = (C.List_6Pr[t1] & C.JSInt_methods._shlPositive$1(1, ch & 15)) !== 0;
      } else
        t1 = false;
      return t1;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 246, 1832, "call"]
  },
  "+Uri__makeScheme_isSchemeLowerCharacter": [1060],
  Uri__makeScheme_isSchemeCharacter: {
    "": "Closure:246;",
    call$1: [function(ch) {
      var t1;
      if (ch < 128) {
        t1 = ch >>> 4;
        if (t1 >= 8)
          return H.ioore(C.List_JYB, t1);
        t1 = (C.List_JYB[t1] & C.JSInt_methods._shlPositive$1(1, ch & 15)) !== 0;
      } else
        t1 = false;
      return t1;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 246, 1832, "call"]
  },
  "+Uri__makeScheme_isSchemeCharacter": [1060],
  Uri__makePath_closure: {
    "": "Closure:241;",
    call$1: [function(s) {
      return P.Uri__uriEncode(C.List_qg4, s, C.Utf8Codec_false, false);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 383, "call"]
  },
  "+Uri__makePath_closure": [1060],
  Uri__makeQuery_closure: {
    "": "Closure:311;box_0-370,result_1-370",
    call$2: [function(key, value) {
      var t1 = this.box_0;
      if (t1.first_0 !== true)
        this.result_1.write$1("&");
      t1.first_0 = false;
      t1 = this.result_1;
      t1.write$1(P.Uri__uriEncode(C.List_nxB, key, C.Utf8Codec_false, true));
      if (value != null && J.get$isEmpty$as(value) !== true) {
        t1.write$1("=");
        t1.write$1(P.Uri__uriEncode(C.List_nxB, value, C.Utf8Codec_false, true));
      }
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 312, 280, "call"]
  },
  "+Uri__makeQuery_closure": [1060],
  Uri__normalize_isNormalizedHexDigit: {
    "": "Closure:246;",
    call$1: [function(digit) {
      var t1;
      if (typeof digit !== "number")
        return H.iae(digit);
      if (!(48 <= digit && digit <= 57))
        t1 = 65 <= digit && digit <= 70;
      else
        t1 = true;
      return t1;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 246, 1833, "call"]
  },
  "+Uri__normalize_isNormalizedHexDigit": [1060],
  Uri__normalize_isLowerCaseHexDigit: {
    "": "Closure:246;",
    call$1: [function(digit) {
      if (typeof digit !== "number")
        return H.iae(digit);
      return 97 <= digit && digit <= 102;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 246, 1833, "call"]
  },
  "+Uri__normalize_isLowerCaseHexDigit": [1060],
  Uri__normalize_isUnreserved: {
    "": "Closure:246;",
    call$1: [function(ch) {
      var t1;
      if (ch < 128) {
        t1 = C.JSInt_methods._shrOtherPositive$1(ch, 4);
        if (t1 >= 8)
          return H.ioore(C.List_nxB, t1);
        t1 = (C.List_nxB[t1] & C.JSInt_methods._shlPositive$1(1, ch & 15)) !== 0;
      } else
        t1 = false;
      return t1;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 246, 1832, "call"]
  },
  "+Uri__normalize_isUnreserved": [1060],
  Uri__normalize_normalizeHexDigit: {
    "": "Closure:244;component_1-1039,isNormalizedHexDigit_2-246,isLowerCaseHexDigit_3-246",
    call$1: [function(index) {
      var t1, codeUnit;
      t1 = this.component_1;
      codeUnit = J.codeUnitAt$1$s(t1, index);
      if (this.isLowerCaseHexDigit_3.call$1(codeUnit) === true)
        return codeUnit - 32;
      else if (this.isNormalizedHexDigit_2.call$1(codeUnit) !== true)
        throw H.wrapException(P.ArgumentError$("Invalid URI component: " + H.S(t1)));
      else
        return codeUnit;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 244, 321, "call"]
  },
  "+Uri__normalize_normalizeHexDigit": [1060],
  Uri__normalize_decodeHexDigitPair: {
    "": "Closure:244;component_4-1039",
    call$1: [function(index) {
      var t1, t2, t3, $byte, i, codeUnit;
      for (t1 = this.component_4, t2 = J.getInterceptor$ns(index), t3 = J.getInterceptor$s(t1), $byte = 0, i = 0; i < 2; ++i) {
        codeUnit = t3.codeUnitAt$1(t1, t2.$add(index, i));
        if (48 <= codeUnit && codeUnit <= 57)
          $byte = $byte * 16 + codeUnit - 48;
        else {
          codeUnit |= 32;
          if (97 <= codeUnit && codeUnit <= 102)
            $byte = $byte * 16 + codeUnit - 97 + 10;
          else
            throw H.wrapException(P.ArgumentError$("Invalid percent-encoding in URI component: " + H.S(t1)));
        }
      }
      return $byte;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 244, 321, "call"]
  },
  "+Uri__normalize_decodeHexDigitPair": [1060],
  Uri__normalize_fillResult: {
    "": "Closure:494;box_0-370,component_5-1039",
    call$0: [function() {
      var t1, t2, t3, t4, t5;
      t1 = this.box_0;
      t2 = t1.result_0;
      t3 = t1.prevIndex_2;
      t4 = this.component_5;
      t5 = t1.index_1;
      if (t2 == null)
        t1.result_0 = P.StringBuffer$(J.substring$2$s(t4, t3, t5));
      else
        t2.write$1(J.substring$2$s(t4, t3, t5));
    }, "call$0" /* tearOffInfo */, null, 0, 0, 494, "call"]
  },
  "+Uri__normalize_fillResult": [1060],
  Uri_hashCode_combine: {
    "": "Closure:893;",
    call$2: [function(part, current) {
      var t1 = J.get$hashCode$(part);
      if (typeof t1 !== "number")
        return H.iae(t1);
      return current * 31 + t1 & 1073741823;
    }, "call$2" /* tearOffInfo */, null, 4, 0, 893, 1834, 1004, "call"]
  },
  "+Uri_hashCode_combine": [1060],
  Uri_splitQueryString_closure: {
    "": "Closure:311;encoding_0-1703",
    call$2: [function(map, element) {
      var t1, index, t2, key, value;
      t1 = J.getInterceptor$as(element);
      index = t1.indexOf$1(element, "=");
      t2 = J.getInterceptor(index);
      if (t2.$eq(index, -1)) {
        if (!t1.$eq(element, ""))
          J.$indexSet$a(map, P.Uri__uriDecode(element, this.encoding_0, true), "");
      } else if (!t2.$eq(index, 0)) {
        key = t1.substring$2(element, 0, index);
        value = t1.substring$1(element, t2.$add(index, 1));
        t1 = this.encoding_0;
        J.$indexSet$a(map, P.Uri__uriDecode(key, t1, true), P.Uri__uriDecode(value, t1, true));
      }
      return map;
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 499, 453, "call"]
  },
  "+Uri_splitQueryString_closure": [1060],
  Uri_parseIPv4Address_error: {
    "": "Closure:281;",
    call$1: [function(msg) {
      throw H.wrapException(P.FormatException$("Illegal IPv4 address, " + H.S(msg)));
    }, "call$1" /* tearOffInfo */, null, 2, 0, 281, 257, "call"]
  },
  "+Uri_parseIPv4Address_error": [1060],
  Uri_parseIPv4Address_closure: {
    "": "Closure:241;error_0-281",
    call$1: [function(byteString) {
      var $byte, t1;
      $byte = H.Primitives_parseInt(byteString, null, null);
      t1 = J.getInterceptor$n($byte);
      if (t1.$lt($byte, 0) || t1.$gt($byte, 255))
        this.error_0.call$1("each part must be in the range of `0..255`");
      return $byte;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1835, "call"]
  },
  "+Uri_parseIPv4Address_closure": [1060],
  Uri_parseIPv6Address_error: {
    "": "Closure:281;",
    call$1: [function(msg) {
      throw H.wrapException(P.FormatException$("Illegal IPv6 address, " + H.S(msg)));
    }, "call$1" /* tearOffInfo */, null, 2, 0, 281, 257, "call"]
  },
  "+Uri_parseIPv6Address_error": [1060],
  Uri_parseIPv6Address_parseHex: {
    "": "Closure:766;host_0-1039,error_1-281",
    call$2: [function(start, end) {
      var value, t1;
      if (J.$gt$n(J.$sub$n(end, start), 4))
        this.error_1.call$1("an IPv6 part can only contain a maximum of 4 hex digits");
      value = H.Primitives_parseInt(J.substring$2$s(this.host_0, start, end), 16, null);
      t1 = J.getInterceptor$n(value);
      if (t1.$lt(value, 0) || t1.$gt(value, 65535))
        this.error_1.call$1("each part must be in the range of `0x0..0xFFFF`");
      return value;
    }, "call$2" /* tearOffInfo */, null, 4, 0, 766, 439, 440, "call"]
  },
  "+Uri_parseIPv6Address_parseHex": [1060],
  Uri_parseIPv6Address_closure: {
    "": "Closure:241;parts_2-1719",
    call$1: [function(value) {
      var t1 = J.getInterceptor(value);
      if (t1.$eq(value, -1))
        return P.List_List$filled((9 - J.get$length$as(this.parts_2)) * 2, 0, null);
      else
        return [t1.$shr(value, 8) & 255, t1.$and(value, 255)];
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 280, "call"]
  },
  "+Uri_parseIPv6Address_closure": [1060],
  Uri__uriEncode_byteToHex: {
    "": "Closure:311;",
    call$2: [function($byte, buffer) {
      var t1 = J.getInterceptor$n($byte);
      buffer.write$1(P.String_String$fromCharCode(C.JSString_methods.codeUnitAt$1("0123456789ABCDEF", t1.$shr($byte, 4))));
      buffer.write$1(P.String_String$fromCharCode(C.JSString_methods.codeUnitAt$1("0123456789ABCDEF", t1.$and($byte, 15))));
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 1836, 1744, "call"]
  },
  "+Uri__uriEncode_byteToHex": [1060],
  _UnmodifiableMap: {
    "": "Object;_core$_map<-1643",
    containsValue$1: [function(value) {
      return this._core$_map.containsValue$1(value);
    }, "call$1" /* tearOffInfo */, "get$containsValue", 2, 0, 1047, 280, "containsValue"],
    containsKey$1: [function(key) {
      return this._core$_map.containsKey$1(key);
    }, "call$1" /* tearOffInfo */, "get$containsKey", 2, 0, 1047, 312, "containsKey"],
    $index: [function(_, key) {
      return J.$index$as(this._core$_map, key);
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__Object4", ret: V, args: [P.Object]};
      }, this.$receiver, "_UnmodifiableMap");
    }, 312, "[]"],
    $indexSet: [function(_, key, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable map"));
    }, "call$2" /* tearOffInfo */, "get$[]=", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__K_V3", void: true, args: [K, V]};
      }, this.$receiver, "_UnmodifiableMap");
    }, 312, 280, "[]="],
    putIfAbsent$2: [function(key, ifAbsent) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable map"));
    }, "call$2" /* tearOffInfo */, "get$putIfAbsent", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__K_V_3", ret: V, args: [K, {func: "V_3", ret: V}]};
      }, this.$receiver, "_UnmodifiableMap");
    }, 312, 663, "putIfAbsent"],
    addAll$1: [function(_, other) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable map"));
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, 664, 403, "addAll"],
    remove$1: [function(_, key) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable map"));
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__Object4", ret: V, args: [P.Object]};
      }, this.$receiver, "_UnmodifiableMap");
    }, 312, "remove"],
    clear$0: [function(_) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable map"));
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    forEach$1: [function(_, f) {
      return J.forEach$1$a(this._core$_map, f);
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__void__K_V3", void: true, args: [{func: "void__K_V3", void: true, args: [K, V]}]};
      }, this.$receiver, "_UnmodifiableMap");
    }, 412, "forEach"],
    get$keys: [function() {
      return this._core$_map.get$keys();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "Iterable_11", ret: [P.Iterable, K]};
      }, this.$receiver, "_UnmodifiableMap");
    }, "keys"],
    get$values: [function() {
      return this._core$_map.get$values();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "Iterable_12", ret: [P.Iterable, V]};
      }, this.$receiver, "_UnmodifiableMap");
    }, "values"],
    get$length: [function(_) {
      return J.get$length$as(this._core$_map);
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$isEmpty: [function(_) {
      return J.get$isEmpty$as(this._core$_map);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$isNotEmpty: [function(_) {
      return J.get$isNotEmpty$as(this._core$_map);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty"],
    $isMap: true,
    "<>": [130, 131],
    static: {_UnmodifiableMap$: [function(_map, $K, $V) {
        return H.setRuntimeTypeInfo(new P._UnmodifiableMap(_map), [$K, $V]);
      }, null /* tearOffInfo */, null, 2, 0, 664, 622, "new _UnmodifiableMap" /* new _UnmodifiableMap:1:0 */]}
  },
  "+_UnmodifiableMap": [0, 1837],
  "": "proxy<-0,override<-0,deprecated<-2049"
}],
["dart.isolate", "dart:isolate", , P, {
  "": "",
  Isolate_spawn_closure: {
    "": "Closure:241;",
    call$1: [function(controlPort) {
      return new P.Isolate(controlPort);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 881, "call"]
  },
  "+Isolate_spawn_closure": [1060],
  Isolate_spawnUri_closure: {
    "": "Closure:241;",
    call$1: [function(controlPort) {
      return new P.Isolate(controlPort);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 881, "call"]
  },
  "+Isolate_spawnUri_closure": [1060],
  IsolateSpawnException: {
    "": "Object;_s<-1039",
    toString$0: [function(_) {
      return "IsolateSpawnException: '" + H.S(this._s) + "'";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {IsolateSpawnException$: [function(_s) {
        return new P.IsolateSpawnException(_s);
      }, null /* tearOffInfo */, null, 2, 0, 289, 879, "new IsolateSpawnException" /* new IsolateSpawnException:1:0 */]}
  },
  "+IsolateSpawnException": [0, 1373],
  Isolate: {
    "": "Object;_controlPort<-1110",
    $isIsolate: true,
    static: {Isolate$_fromControlPort: [function(controlPort) {
        return new P.Isolate(controlPort);
      }, null /* tearOffInfo */, null, 2, 0, 880, 881, "new Isolate$_fromControlPort" /* new Isolate$_fromControlPort:1:0 */], Isolate_spawn: [function(entryPoint, message) {
        var e, st, t1, t2, $name, exception;
        try {
          t1 = entryPoint;
          t2 = J.getInterceptor(t1);
          $name = typeof t1 === "object" && t1 !== null && !!t2.$isClosure ? t1.$name : null;
          if ($name == null)
            H.throwExpression(P.UnsupportedError$("only top-level functions can be spawned."));
          t1 = H.IsolateNatives_spawn($name, null, null, message, false, false).then$1(new P.Isolate_spawn_closure());
          return t1;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          st = new H._StackTrace(exception, null);
          return P._Future$immediateError(e, st, P.Isolate);
        }

      }, "call$2" /* tearOffInfo */, "Isolate_spawn$closure", 4, 0, 882, 883, 262, "spawn"], Isolate_spawnUri: [function(uri, args, message) {
        var i, e, st, t1, t2, exception;
        try {
          t1 = args;
          t2 = H.checkSubtype(t1, "$isList", [J.JSString], "$asList");
          if (t2)
            for (i = 0; J.$lt$n(i, J.get$length$as(args)); i = J.$add$ns(i, 1)) {
              t1 = J.$index$as(args, i);
              if (typeof t1 !== "string") {
                t1 = "Args must be a list of Strings " + H.S(args);
                throw H.wrapException(new P.ArgumentError(t1));
              }
            }
          else if (args != null) {
            t1 = "Args must be a list of Strings " + H.S(args);
            throw H.wrapException(new P.ArgumentError(t1));
          }
          t1 = H.IsolateNatives_spawn(null, J.toString$0(uri), args, message, false, true).then$1(new P.Isolate_spawnUri_closure());
          return t1;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          st = new H._StackTrace(exception, null);
          return P._Future$immediateError(e, st, P.Isolate);
        }

      }, "call$3" /* tearOffInfo */, "Isolate_spawnUri$closure", 6, 0, 884, 260, 261, 262, "spawnUri"]}
  },
  "+Isolate": [0],
  SendPort: {
    "": "Object;",
    $isSendPort: true
  },
  "+SendPort": [0],
  ReceivePort: {
    "": "Object;",
    static: {ReceivePort_ReceivePort: [function() {
        var t1, t2;
        t1 = $.RawReceivePortImpl__nextFreeId;
        $.RawReceivePortImpl__nextFreeId = J.$add$ns(t1, 1);
        t2 = new H.RawReceivePortImpl(t1, null, false);
        init.globalState.currentContext.register$2(t1, t2);
        t1 = new H.ReceivePortImpl(t2, null);
        t1.ReceivePortImpl$fromRawReceivePort$1(t2);
        return t1;
      }, "call$0" /* tearOffInfo */, null, 0, 0, 885, "new ReceivePort" /* new ReceivePort:0:0 */], ReceivePort_ReceivePort$fromRawReceivePort: [function(rawPort) {
        return H.ReceivePortImpl$fromRawReceivePort(rawPort);
      }, "call$1" /* tearOffInfo */, null, 2, 0, 886, 887, "new ReceivePort$fromRawReceivePort" /* new ReceivePort$fromRawReceivePort:1:0 */]}
  },
  "+ReceivePort": [0, 1122],
  RawReceivePort: {
    "": "Object;",
    static: {RawReceivePort_RawReceivePort: [function(handler) {
        var t1, t2;
        t1 = $.RawReceivePortImpl__nextFreeId;
        $.RawReceivePortImpl__nextFreeId = J.$add$ns(t1, 1);
        t2 = new H.RawReceivePortImpl(t1, handler, false);
        init.globalState.currentContext.register$2(t1, t2);
        return t2;
      }, "call$1" /* tearOffInfo */, null, 0, 2, 888, 370, 889, "new RawReceivePort" /* new RawReceivePort:1:0 */]}
  },
  "+RawReceivePort": [0],
  _IsolateUnhandledException: {
    "": "Object;message<-370,source<-370,stackTrace<-1153",
    toString$0: [function(_) {
      return "IsolateUnhandledException: exception while handling message: " + H.S(this.message) + " \n  " + H.S(J.replaceAll$2$s(J.toString$0(this.source), "\n", "\n  ")) + "\noriginal stack trace:\n  " + H.S(J.replaceAll$2$s(J.toString$0(this.stackTrace), "\n", "\n  "));
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {_IsolateUnhandledException$: [function(message, source, stackTrace) {
        return new P._IsolateUnhandledException(message, source, stackTrace);
      }, null /* tearOffInfo */, null, 6, 0, 890, 262, 292, 508, "new _IsolateUnhandledException" /* new _IsolateUnhandledException:3:0 */]}
  },
  "+_IsolateUnhandledException": [0, 1373]
}],
["dart.math", "dart:math", , P, {
  "": "",
  min: [function(a, b) {
    if (typeof a !== "number")
      throw H.wrapException(new P.ArgumentError(a));
    if (typeof b !== "number")
      throw H.wrapException(new P.ArgumentError(b));
    if (a > b)
      return b;
    if (a < b)
      return a;
    if (typeof b === "number") {
      if (typeof a === "number")
        if (a === 0)
          return (a + b) * a * b;
      if (a === 0 && C.JSDouble_methods.get$isNegative(b) || C.JSDouble_methods.get$isNaN(b))
        return b;
      return a;
    }
    return a;
  }, "call$2" /* tearOffInfo */, "min$closure", 4, 0, 897, 452, 649, "min"],
  max: [function(a, b) {
    if (typeof a !== "number")
      throw H.wrapException(new P.ArgumentError(a));
    if (typeof b !== "number")
      throw H.wrapException(new P.ArgumentError(b));
    if (a > b)
      return a;
    if (a < b)
      return b;
    if (typeof b === "number") {
      if (typeof a === "number")
        if (a === 0)
          return a + b;
      if (C.JSDouble_methods.get$isNaN(b))
        return b;
      return a;
    }
    if (b === 0 && C.JSNumber_methods.get$isNegative(a))
      return b;
    return a;
  }, "call$2" /* tearOffInfo */, "max$closure", 4, 0, 897, 452, 649, "max"],
  atan2: [function(a, b) {
    if (typeof a !== "number")
      H.throwExpression(new P.ArgumentError(a));
    if (typeof b !== "number")
      H.throwExpression(new P.ArgumentError(b));
    return Math.atan2(a, b);
  }, "call$2" /* tearOffInfo */, "atan2$closure", 4, 0, 898, 452, 649, "atan2"],
  pow: [function(x, exponent) {
    if (typeof x !== "number")
      H.throwExpression(new P.ArgumentError(x));
    if (typeof exponent !== "number")
      H.throwExpression(new P.ArgumentError(exponent));
    return Math.pow(x, exponent);
  }, "call$2" /* tearOffInfo */, "pow$closure", 4, 0, 897, 274, 899, "pow"],
  sin: [function(x) {
    if (typeof x !== "number")
      H.throwExpression(new P.ArgumentError(x));
    return Math.sin(x);
  }, "call$1" /* tearOffInfo */, "sin$closure", 2, 0, 900, 274, "sin"],
  cos: [function(x) {
    if (typeof x !== "number")
      H.throwExpression(new P.ArgumentError(x));
    return Math.cos(x);
  }, "call$1" /* tearOffInfo */, "cos$closure", 2, 0, 900, 274, "cos"],
  tan: [function(x) {
    if (typeof x !== "number")
      H.throwExpression(new P.ArgumentError(x));
    return Math.tan(x);
  }, "call$1" /* tearOffInfo */, "tan$closure", 2, 0, 900, 274, "tan"],
  acos: [function(x) {
    if (typeof x !== "number")
      H.throwExpression(new P.ArgumentError(x));
    return Math.acos(x);
  }, "call$1" /* tearOffInfo */, "acos$closure", 2, 0, 900, 274, "acos"],
  asin: [function(x) {
    if (typeof x !== "number")
      H.throwExpression(new P.ArgumentError(x));
    return Math.asin(x);
  }, "call$1" /* tearOffInfo */, "asin$closure", 2, 0, 900, 274, "asin"],
  atan: [function(x) {
    if (typeof x !== "number")
      H.throwExpression(new P.ArgumentError(x));
    return Math.atan(x);
  }, "call$1" /* tearOffInfo */, "atan$closure", 2, 0, 900, 274, "atan"],
  sqrt: [function(x) {
    if (typeof x !== "number")
      H.throwExpression(new P.ArgumentError(x));
    return Math.sqrt(x);
  }, "call$1" /* tearOffInfo */, "sqrt$closure", 2, 0, 900, 274, "sqrt"],
  exp: [function(x) {
    if (typeof x !== "number")
      H.throwExpression(new P.ArgumentError(x));
    return Math.exp(x);
  }, "call$1" /* tearOffInfo */, "exp$closure", 2, 0, 900, 274, "exp"],
  log: [function(x) {
    if (typeof x !== "number")
      H.throwExpression(new P.ArgumentError(x));
    return Math.log(x);
  }, "call$1" /* tearOffInfo */, "log$closure", 2, 0, 900, 274, "log"],
  _JSRandom: {
    "": "Object;",
    nextInt$1: [function(max) {
      var t1 = J.getInterceptor$n(max);
      if (t1.$le(max, 0) || t1.$gt(max, 4294967296))
        throw H.wrapException(P.RangeError$("max must be in range 0 < max \u2264 2^32, was " + H.S(max)));
      return Math.random() * max >>> 0;
    }, "call$1" /* tearOffInfo */, "get$nextInt", 2, 0, 244, 1838, "nextInt"],
    nextDouble$0: [function() {
      return Math.random();
    }, "call$0" /* tearOffInfo */, "get$nextDouble", 0, 0, 1067, "nextDouble"],
    nextBool$0: [function() {
      return Math.random() < 0.5;
    }, "call$0" /* tearOffInfo */, "get$nextBool", 0, 0, 849, "nextBool"]
  },
  "+_JSRandom": [0, 1839],
  _Random: {
    "": "Object;_lo@-1075,_hi@-1075",
    _nextState$0: [function() {
      var t1, tmpHi, tmpHiLo, tmpLo, tmpLoLo, newLo;
      t1 = this._lo;
      if (typeof t1 !== "number")
        return H.iae(t1);
      tmpHi = 4294901760 * t1;
      tmpHiLo = (tmpHi & 4294967295) >>> 0;
      tmpLo = 55905 * t1;
      tmpLoLo = (tmpLo & 4294967295) >>> 0;
      t1 = this._hi;
      if (typeof t1 !== "number")
        return H.iae(t1);
      newLo = tmpLoLo + tmpHiLo + t1;
      t1 = (newLo & 4294967295) >>> 0;
      this._lo = t1;
      this._hi = (C.JSNumber_methods._tdivFast$1(tmpLo - tmpLoLo + (tmpHi - tmpHiLo) + (newLo - t1), 4294967296) & 4294967295) >>> 0;
    }, "call$0" /* tearOffInfo */, "get$_nextState", 0, 0, 494, "_nextState"],
    nextInt$1: [function(max) {
      var t1, rnd32, result;
      t1 = J.getInterceptor$n(max);
      if (t1.$le(max, 0) || t1.$gt(max, 4294967296))
        throw H.wrapException(P.RangeError$("max must be in range 0 < max \u2264 2^32, was " + H.S(max)));
      if (t1.$and(max, t1.$sub(max, 1)) === 0) {
        this._nextState$0();
        return J.$and$n(this._lo, t1.$sub(max, 1));
      }
      do {
        this._nextState$0();
        rnd32 = this._lo;
        t1 = J.getInterceptor$n(rnd32);
        result = t1.remainder$1(rnd32, max);
      } while (J.$ge$n(J.$add$ns(t1.$sub(rnd32, result), max), 4294967296));
      return result;
    }, "call$1" /* tearOffInfo */, "get$nextInt", 2, 0, 244, 1838, "nextInt"],
    nextDouble$0: [function() {
      this._nextState$0();
      var bits26 = J.$and$n(this._lo, 67108863);
      this._nextState$0();
      return (bits26 * 134217728 + J.$and$n(this._lo, 134217727)) / 9007199254740992;
    }, "call$0" /* tearOffInfo */, "get$nextDouble", 0, 0, 1067, "nextDouble"],
    nextBool$0: [function() {
      this._nextState$0();
      return J.$and$n(this._lo, 1) === 0;
    }, "call$0" /* tearOffInfo */, "get$nextBool", 0, 0, 849, "nextBool"],
    _Random$1: [function(seed) {
      var t1, t2;
      seed = J.$add$ns(seed, 23063);
      t1 = J.getInterceptor$n(seed);
      t2 = t1.$and(seed, 4294967295);
      this._lo = t2;
      t2 = J.$tdiv$n(t1.$sub(seed, t2), 4294967296);
      this._hi = t2;
      if (J.$eq(t2, 0) && J.$eq(this._lo, 0))
        this._lo = 23063;
      this._nextState$0();
      this._nextState$0();
      this._nextState$0();
      this._nextState$0();
    }, null /* tearOffInfo */, null, 2, 0, 689, 891, ""],
    static: {"": "_Random__POW2_53_D<-1076,_Random__POW2_27_D<-1076,_Random__MASK32<-1075", _Random$: [function(seed) {
        var t1 = new P._Random(null, null);
        t1._Random$1(seed);
        return t1;
      }, null /* tearOffInfo */, null, 2, 0, 689, 891, "new _Random" /* new _Random:1:0 */]}
  },
  "+_Random": [0, 1839],
  _JenkinsSmiHash: {
    "": "Object;",
    static: {_JenkinsSmiHash_combine: [function(hash, value) {
        var t1 = J.$add$ns(hash, value);
        if (typeof t1 !== "number")
          return H.iae(t1);
        hash = 536870911 & t1;
        hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
        return hash ^ hash >>> 6;
      }, "call$2" /* tearOffInfo */, "_JenkinsSmiHash_combine$closure", 4, 0, 766, 892, 280, "combine"], _JenkinsSmiHash_finish: [function(hash) {
        if (typeof hash !== "number")
          return H.iae(hash);
        hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
        hash = (hash ^ hash >>> 11) >>> 0;
        return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
      }, "call$1" /* tearOffInfo */, "_JenkinsSmiHash_finish$closure", 2, 0, 244, 892, "finish"], _JenkinsSmiHash_hash2: [function(a, b) {
        return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine(P._JenkinsSmiHash_combine(0, a), b));
      }, "call$2" /* tearOffInfo */, "_JenkinsSmiHash_hash2$closure", 4, 0, 893, 452, 649, "hash2"], _JenkinsSmiHash_hash4: [function(a, b, c, d) {
        return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine(P._JenkinsSmiHash_combine(P._JenkinsSmiHash_combine(P._JenkinsSmiHash_combine(0, a), b), c), d));
      }, "call$4" /* tearOffInfo */, "_JenkinsSmiHash_hash4$closure", 8, 0, 894, 452, 649, 895, 896, "hash4"]}
  },
  "+_JenkinsSmiHash": [0],
  Point: {
    "": "Object;x<-1840,y<-1840",
    toString$0: [function(_) {
      return "Point(" + H.S(this.x) + ", " + H.S(this.y) + ")";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isPoint)
        return false;
      return J.$eq(this.x, other.x) && J.$eq(this.y, other.y);
    }, "call$1" /* tearOffInfo */, "get$==", 2, 0, 273, 403, "=="],
    get$hashCode: [function(_) {
      var t1, t2;
      t1 = J.get$hashCode$(this.x);
      t2 = J.get$hashCode$(this.y);
      return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine(P._JenkinsSmiHash_combine(0, t1), t2));
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    $add: [function(_, other) {
      var t1 = new P.Point(J.$add$ns(this.x, other.get$x()), J.$add$ns(this.y, other.get$y()));
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, "call$1" /* tearOffInfo */, "get$+", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Point__Point", ret: [P.Point, T], args: [[P.Point, T]]};
      }, this.$receiver, "Point");
    }, 403, "+"],
    $sub: [function(_, other) {
      var t1 = new P.Point(J.$sub$n(this.x, other.get$x()), J.$sub$n(this.y, other.get$y()));
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, "call$1" /* tearOffInfo */, "get$-", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Point__Point", ret: [P.Point, T], args: [[P.Point, T]]};
      }, this.$receiver, "Point");
    }, 403, "-"],
    $mul: [function(_, factor) {
      var t1 = new P.Point(J.$mul$n(this.x, factor), J.$mul$n(this.y, factor));
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, "call$1" /* tearOffInfo */, "get$*", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Point__num", ret: [P.Point, T], args: [J.JSNumber]};
      }, this.$receiver, "Point");
    }, 1796, "*"],
    get$magnitude: [function() {
      var t1, t2;
      t1 = this.x;
      t2 = this.y;
      t2 = J.$add$ns(J.$mul$n(t1, t1), J.$mul$n(t2, t2));
      if (typeof t2 !== "number")
        H.throwExpression(new P.ArgumentError(t2));
      return Math.sqrt(t2);
    }, null /* tearOffInfo */, null, 1, 0, 1067, "magnitude"],
    distanceTo$1: [function(other) {
      var dx, dy, t1;
      dx = J.$sub$n(this.x, other.get$x());
      dy = J.$sub$n(this.y, other.get$y());
      t1 = J.$add$ns(J.$mul$n(dx, dx), J.$mul$n(dy, dy));
      if (typeof t1 !== "number")
        H.throwExpression(new P.ArgumentError(t1));
      return Math.sqrt(t1);
    }, "call$1" /* tearOffInfo */, "get$distanceTo", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "double__Point", ret: J.JSDouble, args: [[P.Point, T]]};
      }, this.$receiver, "Point");
    }, 403, "distanceTo"],
    squaredDistanceTo$1: [function(other) {
      var dx, dy;
      dx = J.$sub$n(this.x, other.get$x());
      dy = J.$sub$n(this.y, other.get$y());
      return J.$add$ns(J.$mul$n(dx, dx), J.$mul$n(dy, dy));
    }, "call$1" /* tearOffInfo */, "get$squaredDistanceTo", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "T__Point", ret: T, args: [[P.Point, T]]};
      }, this.$receiver, "Point");
    }, 403, "squaredDistanceTo"],
    $isPoint: true,
    "<>": [189],
    static: {Point$: [function(x, y, $T) {
        return H.setRuntimeTypeInfo(new P.Point(x, y), [$T]);
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic__T_T", args: [T, T]};
        }, this.$receiver, "Point");
      }, 274, 901, "new Point" /* new Point:2:0 */]}
  },
  "+Point": [0],
  Random: {
    "": "Object;",
    static: {Random_Random: [function(seed) {
        return seed == null ? C.C__JSRandom : P._Random$(seed);
      }, "call$1" /* tearOffInfo */, null, 0, 2, 902, 370, 891, "new Random" /* new Random:1:0 */]}
  },
  "+Random": [0],
  _RectangleBase: {
    "": "Object;",
    get$right: [function() {
      return J.$add$ns(this.get$left(), this.get$width());
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "T_8", ret: T};
      }, this.$receiver, "_RectangleBase");
    }, "right"],
    get$bottom: [function() {
      return J.$add$ns(this.get$top(), this.get$height());
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "T_8", ret: T};
      }, this.$receiver, "_RectangleBase");
    }, "bottom"],
    toString$0: [function(_) {
      return "Rectangle (" + H.S(this.get$left()) + ", " + H.S(this.get$top()) + ") " + H.S(this.get$width()) + " x " + H.S(this.get$height());
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isRectangle)
        return false;
      return J.$eq(this.get$left(), other.get$left()) && J.$eq(this.get$top(), other.get$top()) && J.$eq(this.get$width(), other.get$width()) && J.$eq(this.get$height(), other.get$height());
    }, "call$1" /* tearOffInfo */, "get$==", 2, 0, 273, 403, "=="],
    get$hashCode: [function(_) {
      var t1, t2, t3, t4;
      t1 = J.get$hashCode$(this.get$left());
      t2 = J.get$hashCode$(this.get$top());
      t3 = J.get$hashCode$(this.get$width());
      t4 = J.get$hashCode$(this.get$height());
      return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine(P._JenkinsSmiHash_combine(P._JenkinsSmiHash_combine(P._JenkinsSmiHash_combine(0, t1), t2), t3), t4));
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    intersection$1: [function(other) {
      var x0, x1, y0, y1, t1;
      x0 = P.max(this.get$left(), other.get$left());
      x1 = P.min(J.$add$ns(this.get$left(), this.get$width()), J.$add$ns(other.get$left(), other.get$width()));
      if (x0 <= x1) {
        y0 = P.max(this.get$top(), other.get$top());
        y1 = P.min(J.$add$ns(this.get$top(), this.get$height()), J.$add$ns(other.get$top(), other.get$height()));
        if (y0 <= y1) {
          t1 = new P.Rectangle(x0, y0, x1 - x0, y1 - y0);
          t1.$builtinTypeInfo = this.$builtinTypeInfo;
          return t1;
        }
      }
      return;
    }, "call$1" /* tearOffInfo */, "get$intersection", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Rectangle__Rectangle", ret: [P.Rectangle, T], args: [[P.Rectangle, T]]};
      }, this.$receiver, "_RectangleBase");
    }, 403, "intersection"],
    intersects$1: [function(other) {
      return J.$le$n(this.get$left(), J.$add$ns(other.get$left(), other.get$width())) && J.$le$n(other.get$left(), J.$add$ns(this.get$left(), this.get$width())) && J.$le$n(this.get$top(), J.$add$ns(other.get$top(), other.get$height())) && J.$le$n(other.get$top(), J.$add$ns(this.get$top(), this.get$height()));
    }, "call$1" /* tearOffInfo */, "get$intersects", 2, 0, 1841, 403, "intersects"],
    boundingBox$1: [function(other) {
      var right, bottom, left, $top, t1;
      right = P.max(J.$add$ns(this.get$left(), this.get$width()), J.$add$ns(other.get$left(), other.get$width()));
      bottom = P.max(J.$add$ns(this.get$top(), this.get$height()), J.$add$ns(other.get$top(), other.get$height()));
      left = P.min(this.get$left(), other.get$left());
      $top = P.min(this.get$top(), other.get$top());
      t1 = new P.Rectangle(left, $top, right - left, bottom - $top);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, "call$1" /* tearOffInfo */, "get$boundingBox", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Rectangle__Rectangle", ret: [P.Rectangle, T], args: [[P.Rectangle, T]]};
      }, this.$receiver, "_RectangleBase");
    }, 403, "boundingBox"],
    containsRectangle$1: [function(another) {
      return J.$le$n(this.get$left(), another.get$left()) && J.$ge$n(J.$add$ns(this.get$left(), this.get$width()), J.$add$ns(another.get$left(), another.get$width())) && J.$le$n(this.get$top(), another.get$top()) && J.$ge$n(J.$add$ns(this.get$top(), this.get$height()), J.$add$ns(another.get$top(), another.get$height()));
    }, "call$1" /* tearOffInfo */, "get$containsRectangle", 2, 0, 1841, 1842, "containsRectangle"],
    containsPoint$1: [function(another) {
      return J.$ge$n(another.get$x(), this.get$left()) && J.$le$n(another.get$x(), J.$add$ns(this.get$left(), this.get$width())) && J.$ge$n(another.get$y(), this.get$top()) && J.$le$n(another.get$y(), J.$add$ns(this.get$top(), this.get$height()));
    }, "call$1" /* tearOffInfo */, "get$containsPoint", 2, 0, 1843, 1842, "containsPoint"],
    get$topLeft: [function() {
      var t1 = new P.Point(this.get$left(), this.get$top());
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Point_", ret: [P.Point, T]};
      }, this.$receiver, "_RectangleBase");
    }, "topLeft"],
    get$topRight: [function() {
      var t1 = new P.Point(J.$add$ns(this.get$left(), this.get$width()), this.get$top());
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Point_", ret: [P.Point, T]};
      }, this.$receiver, "_RectangleBase");
    }, "topRight"],
    get$bottomRight: [function() {
      var t1 = new P.Point(J.$add$ns(this.get$left(), this.get$width()), J.$add$ns(this.get$top(), this.get$height()));
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Point_", ret: [P.Point, T]};
      }, this.$receiver, "_RectangleBase");
    }, "bottomRight"],
    get$bottomLeft: [function() {
      var t1 = new P.Point(this.get$left(), J.$add$ns(this.get$top(), this.get$height()));
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Point_", ret: [P.Point, T]};
      }, this.$receiver, "_RectangleBase");
    }, "bottomLeft"],
    "<>": [190],
    static: {_RectangleBase$: [function($T) {
        return H.setRuntimeTypeInfo(new P._RectangleBase(), [$T]);
      }, null /* tearOffInfo */, null, 0, 0, 319, "new _RectangleBase" /* new _RectangleBase:0:0 */]}
  },
  "+_RectangleBase": [0],
  Rectangle: {
    "": "_RectangleBase;left<-1844,top<-1844,width<-1844,height<-1844",
    $isRectangle: true,
    $as_RectangleBase: null,
    "<>": [191],
    static: {Rectangle$: [function(left, $top, width, height, $T) {
        return H.setRuntimeTypeInfo(new P.Rectangle(left, $top, width, height), [$T]);
      }, null /* tearOffInfo */, null, 8, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic__T_T_T_T", args: [T, T, T, T]};
        }, this.$receiver, "Rectangle");
      }, 457, 903, 904, 905, "new Rectangle" /* new Rectangle:4:0 */], Rectangle_Rectangle$fromPoints: [function(a, b, $T) {
        var left, t1, $top;
        left = P.min(a.get$x(), b.get$x());
        t1 = P.max(a.get$x(), b.get$x());
        $top = P.min(a.get$y(), b.get$y());
        return H.setRuntimeTypeInfo(new P.Rectangle(left, $top, t1 - left, P.max(a.get$y(), b.get$y()) - $top), [$T]);
      }, "call$2" /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "Rectangle__Point_Point", ret: [P.Rectangle, T], args: [[P.Point, T], [P.Point, T]]};
        }, this.$receiver, "Rectangle");
      }, 452, 649, "new Rectangle$fromPoints" /* new Rectangle$fromPoints:2:0 */]}
  },
  "+Rectangle": [1845],
  MutableRectangle: {
    "": "_RectangleBase;left@-1846,top@-1846,width@-1846,height@-1846",
    $as_RectangleBase: null,
    $asRectangle: null,
    $isRectangle: true,
    "<>": [192],
    static: {MutableRectangle$: [function(left, $top, width, height, $T) {
        return H.setRuntimeTypeInfo(new P.MutableRectangle(left, $top, width, height), [$T]);
      }, null /* tearOffInfo */, null, 8, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic__T_T_T_T0", args: [T, T, T, T]};
        }, this.$receiver, "MutableRectangle");
      }, 457, 903, 904, 905, "new MutableRectangle" /* new MutableRectangle:4:0 */], MutableRectangle_MutableRectangle$fromPoints: [function(a, b, $T) {
        var left, t1, $top;
        left = P.min(a.get$x(), b.get$x());
        t1 = P.max(a.get$x(), b.get$x());
        $top = P.min(a.get$y(), b.get$y());
        return H.setRuntimeTypeInfo(new P.MutableRectangle(left, $top, t1 - left, P.max(a.get$y(), b.get$y()) - $top), [$T]);
      }, "call$2" /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "MutableRectangle__Point_Point", ret: [P.MutableRectangle, T], args: [[P.Point, T], [P.Point, T]]};
        }, this.$receiver, "MutableRectangle");
      }, 452, 649, "new MutableRectangle$fromPoints" /* new MutableRectangle$fromPoints:2:0 */]}
  },
  "+MutableRectangle": [1847, 1848],
  "": "SQRT2<-1076,SQRT1_2<-1076,PI<-1076,LOG10E<-1076,LOG2E<-1076,LN2<-1076,LN10<-1076,E<-1076,_POW2_32<-1075"
}],
["dart.mirrors", "dart:mirrors", , P, {
  "": "",
  currentMirrorSystem: [function() {
    return $.get$currentJsMirrorSystem();
  }, "call$0" /* tearOffInfo */, "currentMirrorSystem$closure", 0, 0, 908, "currentMirrorSystem"],
  reflect0: [function(reflectee) {
    return H.reflect(reflectee);
  }, "call$1" /* tearOffInfo */, "reflect0$closure", 2, 0, 465, 466, "reflect"],
  reflectClass: [function(key) {
    var t1, tm;
    t1 = J.getInterceptor(key);
    if (typeof key !== "object" || key === null || !t1.$isType || t1.$eq(key, C.Type_e5Z))
      throw H.wrapException(P.ArgumentError$(H.S(key) + " does not denote a class"));
    tm = P.reflectType(key);
    t1 = J.getInterceptor(tm);
    if (typeof tm !== "object" || tm === null || !t1.$isClassMirror)
      throw H.wrapException(P.ArgumentError$(H.S(key) + " does not denote a class"));
    return tm.get$originalDeclaration();
  }, "call$1" /* tearOffInfo */, "reflectClass$closure", 2, 0, 909, 312, "reflectClass"],
  reflectType: [function(key) {
    if (J.$eq(key, C.Type_e5Z)) {
      $.get$currentJsMirrorSystem().toString;
      return $.get$JsMirrorSystem__dynamicType();
    }
    return H.reflectClassByMangledName(key.get$_typeName());
  }, "call$1" /* tearOffInfo */, "reflectType$closure", 2, 0, 910, 312, "reflectType"],
  MirrorSystem: {
    "": "Object;",
    findLibrary$1: [function(libraryName) {
      return this.get$libraries().get$values().singleWhere$1(0, new P.MirrorSystem_findLibrary_closure(libraryName));
    }, "call$1" /* tearOffInfo */, "get$findLibrary", 2, 0, 1232, 501, "findLibrary"],
    static: {MirrorSystem_getName: [function(symbol) {
        return symbol.get$_name();
      }, "call$1" /* tearOffInfo */, "MirrorSystem_getName$closure", 2, 0, 461, 462, "getName"], MirrorSystem_getSymbol: [function($name, library) {
        throw H.wrapException(P.UnimplementedError$("MirrorSystem.getSymbol not implemented"));
      }, "call$2" /* tearOffInfo */, "MirrorSystem_getSymbol$closure", 2, 2, 906, 370, 346, 907, "getSymbol"]}
  },
  "+MirrorSystem": [0],
  MirrorSystem_findLibrary_closure: {
    "": "Closure:241;libraryName_0-1227",
    call$1: [function(library) {
      library.get$simpleName();
      return false;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 907, "call"]
  },
  "+MirrorSystem_findLibrary_closure": [1060],
  Mirror: {
    "": "Object;",
    $isMirror: true
  },
  "+Mirror": [0],
  IsolateMirror: {
    "": "Object;",
    $isMirror: true
  },
  "+IsolateMirror": [0, 1239],
  DeclarationMirror: {
    "": "Object;",
    $isDeclarationMirror: true,
    $isMirror: true
  },
  "+DeclarationMirror": [0, 1239],
  ObjectMirror: {
    "": "Object;",
    $isMirror: true
  },
  "+ObjectMirror": [0, 1239],
  InstanceMirror: {
    "": "Object;",
    $isInstanceMirror: true,
    $isMirror: true
  },
  "+InstanceMirror": [0, 1286],
  ClosureMirror: {
    "": "Object;",
    $isInstanceMirror: true,
    $isMirror: true
  },
  "+ClosureMirror": [0, 1290],
  LibraryMirror: {
    "": "Object;",
    $isLibraryMirror: true,
    $isMirror: true,
    $isDeclarationMirror: true
  },
  "+LibraryMirror": [0, 1286, 1246],
  TypeMirror: {
    "": "Object;",
    $isTypeMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true
  },
  "+TypeMirror": [0, 1246],
  ClassMirror: {
    "": "Object;",
    $isClassMirror: true,
    $isMirror: true,
    $isTypeMirror: true,
    $isDeclarationMirror: true
  },
  "+ClassMirror": [0, 1286, 1248],
  FunctionTypeMirror: {
    "": "Object;",
    $isClassMirror: true,
    $isMirror: true,
    $isTypeMirror: true,
    $isDeclarationMirror: true
  },
  "+FunctionTypeMirror": [0, 1281],
  TypeVariableMirror: {
    "": "TypeMirror;",
    $isTypeVariableMirror: true
  },
  "+TypeVariableMirror": [1248],
  TypedefMirror: {
    "": "Object;",
    $isTypedefMirror: true,
    $isTypeMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true
  },
  "+TypedefMirror": [0, 1248],
  MethodMirror: {
    "": "Object;",
    $isMethodMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true
  },
  "+MethodMirror": [0, 1246],
  VariableMirror: {
    "": "Object;",
    $isVariableMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true
  },
  "+VariableMirror": [0, 1246],
  ParameterMirror: {
    "": "Object;",
    defaultValue$1: function(arg0) {
      return this.get$defaultValue().call$1(arg0);
    },
    $isParameterMirror: true,
    $isVariableMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true
  },
  "+ParameterMirror": [0, 1313],
  SourceLocation: {
    "": "Object;"
  },
  "+SourceLocation": [0],
  Comment: {
    "": "Object;text<-1039,trimmedText<-1039,isDocComment<-1043",
    static: {Comment$: [function(text, trimmedText, isDocComment) {
        return new P.Comment(text, trimmedText, isDocComment);
      }, null /* tearOffInfo */, null, 6, 0, 911, 873, 912, 913, "new Comment" /* new Comment:3:0 */]}
  },
  "+Comment": [0],
  MirrorsUsed: {
    "": "Object;symbols<-370,targets<-370,metaTargets<-370,override<-370",
    static: {MirrorsUsed$: [function(metaTargets, override, symbols, targets) {
        return new P.MirrorsUsed(symbols, targets, metaTargets, override);
      }, null /* tearOffInfo */, null, 0, 9, 914, 370, 370, 370, 370, 915, 916, 917, 918, "new MirrorsUsed" /* new MirrorsUsed:0:4:metaTargets:override:symbols:targets */]}
  },
  "+MirrorsUsed": [0]
}],
["dart2js._js_primitives", "dart:_js_primitives", , H, {
  "": "",
  printString: [function(string) {
    if (typeof dartPrint == "function") {
      dartPrint(string);
      return;
    }
    if (typeof console == "object" && typeof console.log == "function") {
      console.log(string);
      return;
    }
    if (typeof window == "object")
      return;
    if (typeof print == "function") {
      print(string);
      return;
    }
    throw "Unable to print message: " + String(string);
  }, "call$1" /* tearOffInfo */, "printString$closure", 2, 0, 281, 290, "printString"]
}],
["dorm", "package:dorm/dorm.dart", , O, {
  "": "",
  SerializerBase: {
    "": "Object+SerializerMixin;_convertors:dorm$SerializerMixin$_convertors@-1849",
    static: {SerializerBase$: [function() {
        return new O.SerializerBase(H.setRuntimeTypeInfo([], [O._InternalConvertor]));
      }, null /* tearOffInfo */, null, 0, 0, 319, "new SerializerBase" /* new SerializerBase:0:0 */]}
  },
  "+SerializerBase": [0, 1850],
  ConflictManager: {
    "": "Object;type<-1075",
    static: {"": "ConflictManager_ACCEPT_SERVER<-1851,ConflictManager_ACCEPT_CLIENT<-1851", ConflictManager$: [function(type) {
        return new O.ConflictManager(type);
      }, null /* tearOffInfo */, null, 2, 0, 689, 371, "new ConflictManager" /* new ConflictManager:1:0 */]}
  },
  "+ConflictManager": [0],
  DormError: {
    "": "Error;message<-1039",
    toString$0: [function(_) {
      return this.message;
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {DormError$: [function(message) {
        return new O.DormError(message);
      }, null /* tearOffInfo */, null, 2, 0, 289, 262, "new DormError" /* new DormError:1:0 */]}
  },
  "+DormError": [1151],
  DormManager: {
    "": "Observable;_observeList@-1852,_dorm$_queue@-1852,_deleteQueue@-1852,_forcedDirtyStatus@-1043,id@-1039,_isCommitRequired@-1043,_changes-1118,_mirror-1290,_values-1853,_records-1854",
    get$isCommitRequired: [function() {
      return this._isCommitRequired;
    }, null /* tearOffInfo */, null, 1, 0, 849, "isCommitRequired"],
    _updateIsCommitRequired$0: [function() {
      var $status, t1;
      $status = this._forcedDirtyStatus === true || J.$gt$n(J.$add$ns(J.get$length$as(this._dorm$_queue), J.get$length$as(this._deleteQueue)), 0);
      if ($status !== this._isCommitRequired) {
        this._isCommitRequired = $status;
        t1 = $status ? C.Symbol_UBz : C.Symbol_M2b;
        this.notifyChange$1(H.setRuntimeTypeInfo(new T.PropertyChangeRecord(this, t1, false, true), [null]));
      }
    }, "call$0" /* tearOffInfo */, "get$_updateIsCommitRequired", 0, 0, 494, "_updateIsCommitRequired"],
    forceDirtyStatus$1: [function(value) {
      this._forcedDirtyStatus = value;
      this._updateIsCommitRequired$0();
    }, "call$1" /* tearOffInfo */, "get$forceDirtyStatus", 2, 0, 1454, 280, "forceDirtyStatus"],
    isQueued$2$forDelete: [function(entity, forDelete) {
      if (forDelete === true)
        return J.contains$1$as(this._deleteQueue, entity);
      return J.contains$1$as(this._dorm$_queue, entity);
    }, "call$2$forDelete" /* tearOffInfo */, "get$isQueued", 2, 3, 1855, 527, 956, 1856, "isQueued"],
    queueAsDeleted$1: [function(entity) {
      if (entity.get$_scan().get$isMutableEntity() === true && J.contains$1$as(this._deleteQueue, entity) !== true) {
        J.remove$1$a(this._dorm$_queue, entity);
        J.add$1$a(this._deleteQueue, entity);
        this._updateIsCommitRequired$0();
      }
    }, "call$1" /* tearOffInfo */, "get$queueAsDeleted", 2, 0, 1857, 956, "queueAsDeleted"],
    queue$1: [function(entity) {
      if (entity.get$_scan().get$isMutableEntity() === true && J.contains$1$as(this._dorm$_queue, entity) !== true && entity.isDirty$0()) {
        J.remove$1$a(this._deleteQueue, entity);
        J.add$1$a(this._dorm$_queue, entity);
        this._updateIsCommitRequired$0();
      }
    }, "call$1" /* tearOffInfo */, "get$queue", 2, 0, 1857, 956, "queue"],
    unqueue$1: [function(entity) {
      if (entity.get$_scan().get$isMutableEntity() === true) {
        if (J.contains$1$as(this._dorm$_queue, entity) === true)
          J.remove$1$a(this._dorm$_queue, entity);
        if (J.contains$1$as(this._deleteQueue, entity) === true)
          J.remove$1$a(this._deleteQueue, entity);
        this._updateIsCommitRequired$0();
      }
    }, "call$1" /* tearOffInfo */, "get$unqueue", 2, 0, 1857, 956, "unqueue"],
    queueAll$2$asDeleted: [function(entities, asDeleted) {
      J.forEach$1$a(entities, new O.DormManager_queueAll_closure(this, asDeleted));
    }, "call$2$asDeleted" /* tearOffInfo */, "get$queueAll", 2, 3, 1858, 527, 1859, 1860, "queueAll"],
    unqueueAll$1: [function(entities) {
      J.forEach$1$a(entities, new O.DormManager_unqueueAll_closure(this));
    }, "call$1" /* tearOffInfo */, "get$unqueueAll", 2, 0, 1861, 1859, "unqueueAll"],
    clear$0: [function(_) {
      this._forcedDirtyStatus = false;
      this._isCommitRequired = false;
      this._flushInternal$0();
      this._updateIsCommitRequired$0();
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    drain$0: [function() {
      var rollbackCommit, rollbackDelete, queueRecursive, deleteQueueRecursive;
      rollbackCommit = P.List_List$from(this._dorm$_queue, true, O.Entity);
      rollbackDelete = P.List_List$from(this._deleteQueue, true, O.Entity);
      queueRecursive = H.setRuntimeTypeInfo([], [O.Entity]);
      deleteQueueRecursive = H.setRuntimeTypeInfo([], [O.Entity]);
      C.JSArray_methods.addAll$1(queueRecursive, this._dorm$_queue);
      C.JSArray_methods.addAll$1(deleteQueueRecursive, this._deleteQueue);
      J.forEach$1$a(this._dorm$_queue, new O.DormManager_drain_closure(this, queueRecursive));
      J.forEach$1$a(this._deleteQueue, new O.DormManager_drain_closure0(this, deleteQueueRecursive));
      this._dorm$_queue = queueRecursive;
      this._deleteQueue = deleteQueueRecursive;
      this._flushInternal$0();
      J.forEach$1$a(this._dorm$_queue, new O.DormManager_drain_closure1());
      J.forEach$1$a(this._deleteQueue, new O.DormManager_drain_closure2());
      return new O.DormManagerCommitStructure(this, queueRecursive, deleteQueueRecursive, rollbackCommit, rollbackDelete);
    }, "call$0" /* tearOffInfo */, "get$drain", 0, 0, 1862, "drain"],
    _scanRecursively$2: [function(entity, list) {
      J.forEach$1$a(entity.get$_scan().get$_proxies(), new O.DormManager__scanRecursively_closure(this, list));
    }, "call$2" /* tearOffInfo */, "get$_scanRecursively", 4, 0, 1863, 956, 352, "_scanRecursively"],
    _flushInternal$0: [function() {
      this._dorm$_queue = H.setRuntimeTypeInfo([], [O.Entity]);
      this._deleteQueue = H.setRuntimeTypeInfo([], [O.Entity]);
    }, "call$0" /* tearOffInfo */, "get$_flushInternal", 0, 0, 494, "_flushInternal"],
    static: {"": "DormManager_IS_COMMIT_REQUIRED<-1227,DormManager_IS_COMMIT_NOT_REQUIRED<-1227", DormManager$: [function(id) {
        var t1 = new O.DormManager(H.setRuntimeTypeInfo([], [O.Entity]), H.setRuntimeTypeInfo([], [O.Entity]), H.setRuntimeTypeInfo([], [O.Entity]), false, null, false, null, null, null, null);
        t1.id = id;
        return t1;
      }, null /* tearOffInfo */, null, 0, 3, 919, 370, 920, "new DormManager" /* new DormManager:0:1:id */]}
  },
  "+DormManager": [1864],
  DormManager_queueAll_closure: {
    "": "Closure:1865;this_0-370,asDeleted_1-1043",
    call$1: [function(entity) {
      var t1 = this.this_0;
      if (this.asDeleted_1 === true) {
        if (entity.get$_scan().get$isMutableEntity() === true && J.contains$1$as(t1.get$_deleteQueue(), entity) !== true) {
          J.remove$1$a(t1.get$_dorm$_queue(), entity);
          J.add$1$a(t1.get$_deleteQueue(), entity);
          t1._updateIsCommitRequired$0();
        }
      } else if (entity.get$_scan().get$isMutableEntity() === true && J.contains$1$as(t1.get$_dorm$_queue(), entity) !== true && entity.isDirty$0()) {
        J.remove$1$a(t1.get$_deleteQueue(), entity);
        J.add$1$a(t1.get$_dorm$_queue(), entity);
        t1._updateIsCommitRequired$0();
      }
      return;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1865, 956, "call"]
  },
  "+DormManager_queueAll_closure": [1060],
  DormManager_unqueueAll_closure: {
    "": "Closure:1865;this_0-370",
    call$1: [function(entity) {
      var t1 = this.this_0;
      if (entity.get$_scan().get$isMutableEntity() === true) {
        if (J.contains$1$as(t1.get$_dorm$_queue(), entity) === true)
          J.remove$1$a(t1.get$_dorm$_queue(), entity);
        if (J.contains$1$as(t1.get$_deleteQueue(), entity) === true)
          J.remove$1$a(t1.get$_deleteQueue(), entity);
        t1._updateIsCommitRequired$0();
      }
      return;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1865, 956, "call"]
  },
  "+DormManager_unqueueAll_closure": [1060],
  DormManager_drain_closure: {
    "": "Closure:1865;this_0-370,queueRecursive_1-1852",
    call$1: [function(entity) {
      return this.this_0._scanRecursively$2(entity, this.queueRecursive_1);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1865, 956, "call"]
  },
  "+DormManager_drain_closure": [1060],
  DormManager_drain_closure0: {
    "": "Closure:1865;this_2-370,deleteQueueRecursive_3-1852",
    call$1: [function(entity) {
      return this.this_2._scanRecursively$2(entity, this.deleteQueueRecursive_3);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1865, 956, "call"]
  },
  "+DormManager_drain_closure": [1060],
  DormManager_drain_closure1: {
    "": "Closure:1865;",
    call$1: [function(entity) {
      return entity.validate$0();
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1865, 956, "call"]
  },
  "+DormManager_drain_closure": [1060],
  DormManager_drain_closure2: {
    "": "Closure:1865;",
    call$1: [function(entity) {
      return entity.validate$0();
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1865, 956, "call"]
  },
  "+DormManager_drain_closure": [1060],
  DormManager__scanRecursively_closure: {
    "": "Closure:1866;this_0-370,list_1-1852",
    call$1: [function(entry) {
      var t1, t2;
      t1 = entry.get$proxy().get$value();
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isEntity) {
        if (entry.get$proxy().get$value().get$_scan().get$isMutableEntity() === true && J.contains$1$as(this.list_1, entry.get$proxy().get$value()) !== true && entry.get$proxy().get$value().isDirty$0())
          J.add$1$a(this.list_1, entry.get$proxy().get$value());
      } else {
        t1 = entry.get$proxy().get$value();
        t2 = J.getInterceptor(t1);
        if (typeof t1 === "object" && t1 !== null && (t1.constructor === Array || !!t2.$isList))
          J.forEach$1$a(entry.get$proxy().get$value(), new O.DormManager__scanRecursively__closure(this.this_0, this.list_1));
      }
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+DormManager__scanRecursively_closure": [1060],
  DormManager__scanRecursively__closure: {
    "": "Closure:1865;this_2-370,list_3-1852",
    call$1: [function(listEntity) {
      return this.this_2._scanRecursively$2(listEntity, this.list_3);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1865, 1867, "call"]
  },
  "+DormManager__scanRecursively__closure": [1060],
  DormManagerCommitStructure: {
    "": "Object;manager<-1868,dataToCommit<-1852,dataToDelete<-1852,rollbackCommit<-1852,rollbackDelete<-1852",
    rollback$0: [function() {
      var t1 = this.manager;
      t1.queueAll$2$asDeleted(this.rollbackCommit, false);
      t1.queueAll$2$asDeleted(this.rollbackDelete, true);
    }, "call$0" /* tearOffInfo */, "get$rollback", 0, 0, 494, "rollback"],
    static: {DormManagerCommitStructure$: [function(manager, dataToCommit, dataToDelete, rollbackCommit, rollbackDelete) {
        return new O.DormManagerCommitStructure(manager, dataToCommit, dataToDelete, rollbackCommit, rollbackDelete);
      }, null /* tearOffInfo */, null, 10, 0, 921, 922, 923, 924, 925, 926, "new DormManagerCommitStructure" /* new DormManagerCommitStructure:5:0 */]}
  },
  "+DormManagerCommitStructure": [0],
  DormProxy: {
    "": "Object;_insertValue@-1869,_defaultValue@-1869,_dorm$_value@-1869,_lazyFuture@-1870,_property<-1039,_propertySymbol<-1227,owner@-1871,hasDelta@-1043,isId@-1043,isTransient@-1043,isMutable@-1043,isNullable@-1043,isLabelField@-1043,isLazy@-1043,dataType@-1075",
    get$value: [function() {
      return this._dorm$_value;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "T_9", ret: T};
      }, this.$receiver, "DormProxy");
    }, "value"],
    set$value: [function(newValue) {
      this._dorm$_value = newValue;
      return newValue;
    }, null /* tearOffInfo */, null, 3, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T2", args: [T]};
      }, this.$receiver, "DormProxy");
    }, 991, "value"],
    get$lazyFuture: [function() {
      return this._lazyFuture;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "Future_5", ret: [P.Future, T]};
      }, this.$receiver, "DormProxy");
    }, "lazyFuture"],
    set$lazyFuture: [function(newValue) {
      this._lazyFuture = newValue;
      return newValue;
    }, null /* tearOffInfo */, null, 3, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__Future", args: [[P.Future, T]]};
      }, this.$receiver, "DormProxy");
    }, 991, "lazyFuture"],
    $not: [function(_) {
      return this._dorm$_value;
    }, "call$0" /* tearOffInfo */, "get$~", 0, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "T_9", ret: T};
      }, this.$receiver, "DormProxy");
    }, "~"],
    validate$1: [function(entity) {
      if (entity.get$isMutable() !== true)
        return new O.MetadataValidationResult(entity, "entityNotMutable", this._property, this._propertySymbol);
      if (this.isMutable !== true)
        return new O.MetadataValidationResult(entity, "propertyNotMutable", this._property, this._propertySymbol);
      if (this.isNullable !== true && this._dorm$_value == null)
        return new O.MetadataValidationResult(entity, "propertyNotNullable", this._property, this._propertySymbol);
      return;
    }, "call$1" /* tearOffInfo */, "get$validate", 2, 0, 1872, 956, "validate"],
    setInsertValue$1: [function(value) {
      this._insertValue = value;
    }, "call$1" /* tearOffInfo */, "get$setInsertValue", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T26", void: true, args: [T]};
      }, this.$receiver, "DormProxy");
    }, 280, "setInsertValue"],
    setInitialValue$1: [function(value) {
      this._defaultValue = value;
      this._dorm$_value = value;
    }, "call$1" /* tearOffInfo */, "get$setInitialValue", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T26", void: true, args: [T]};
      }, this.$receiver, "DormProxy");
    }, 280, "setInitialValue"],
    $isDormProxy: true,
    "<>": [99],
    static: {DormProxy$: [function(_property, _propertySymbol, $T) {
        return H.setRuntimeTypeInfo(new O.DormProxy(null, null, null, null, _property, _propertySymbol, null, false, false, false, true, true, false, false, 0), [$T]);
      }, null /* tearOffInfo */, null, 4, 0, 927, 928, 929, "new DormProxy" /* new DormProxy:2:0 */]}
  },
  "+DormProxy": [0],
  EntityAssembler: {
    "": "Object;_entityScans<-1873,_collections<-1874,_pendingProxies<-1875,_keyChain<-1876",
    _handleConflictAcceptClient$2: [function(serverEntity, clientEntity) {
      return C.ConflictManager_2;
    }, "call$2" /* tearOffInfo */, "get$_handleConflictAcceptClient", 4, 0, 974, 975, 976, "_handleConflictAcceptClient"],
    scan$3: [function(forType, refClassName, constructorMethod) {
      var t1, scan, classMirror;
      t1 = {};
      scan = this._existingFromScanRegistry$1(refClassName);
      t1.scan_0 = scan;
      if (scan != null)
        return scan;
      t1.scan_0 = new O.EntityScan(null, constructorMethod, null, null, null, H.setRuntimeTypeInfo([], [O._DormProxyListEntry]), H.setRuntimeTypeInfo([], [O._DormProxyListEntry]), null, refClassName, true);
      classMirror = P.reflectClass(forType);
      for (; !J.$eq(classMirror.get$qualifiedName(), C.Symbol_4SI);) {
        if (t1.scan_0.get$isMutableEntity() === true)
          t1.scan_0.detectIfMutable$1(classMirror);
        J.forEach$1$a(classMirror.get$declarations(), new O.EntityAssembler_scan_closure(t1));
        classMirror = classMirror.get$superclass();
      }
      J.add$1$a(this._entityScans, t1.scan_0);
      return t1.scan_0;
    }, "call$3" /* tearOffInfo */, "get$scan", 6, 0, 1877, 970, 933, 1878, "scan"],
    registerProxies$2: [function(entity, proxies) {
      var t1, scan, t2, i, t3, scanProxy;
      t1 = {};
      if (entity.get$_scan() == null)
        entity.set$_scan(this._createEntityScan$1(entity));
      scan = entity.get$_scan();
      t1.proxy_0 = null;
      t2 = J.getInterceptor$as(proxies);
      i = t2.get$length(proxies);
      for (; t3 = J.getInterceptor$n(i), t3.$gt(i, 0);) {
        i = t3.$sub(i, 1);
        t1.proxy_0 = t2.$index(proxies, i);
        scanProxy = J.firstWhere$2$orElse$a(scan.get$_proxies(), new O.EntityAssembler_registerProxies_closure(t1), new O.EntityAssembler_registerProxies_closure0());
        scanProxy.set$proxy(t1.proxy_0);
        scan.get$_metadataCache()._updateProxyWithMetadata$2(scanProxy, scan);
      }
    }, "call$2" /* tearOffInfo */, "get$registerProxies", 4, 0, 1879, 956, 1880, "registerProxies"],
    _createEntityScan$1: [function(entity) {
      var scan = this._existingFromScanRegistry$1(entity.get$refClassName());
      if (scan != null)
        return O.EntityScan_EntityScan$fromScan(scan, entity);
      throw H.wrapException(O.DormError$("Scan for entity not found"));
    }, "call$1" /* tearOffInfo */, "get$_createEntityScan", 2, 0, 1881, 956, "_createEntityScan"],
    _assemble$4: [function(rawData, owningProxy, serializer, onConflict) {
      var refClassName, entityScan, spawnee, localNonPointerEntity;
      refClassName = J.$index$as(rawData, "?t");
      if (onConflict == null)
        onConflict = this.get$_handleConflictAcceptClient();
      entityScan = this._existingFromScanRegistry$1(refClassName);
      if (entityScan == null)
        throw H.wrapException(O.DormError$("Scan for entity not found"));
      if (entityScan.get$_unusedInstance() != null) {
        spawnee = entityScan.get$_unusedInstance();
        entityScan.set$_unusedInstance(null);
      } else
        spawnee = entityScan._entityCtor$0();
      spawnee.readExternal$3(rawData, serializer, onConflict);
      if (spawnee.isUnsaved$0())
        if (spawnee.get$_isPointer() === true)
          throw H.wrapException(O.DormError$("Ambiguous reference, entity is unsaved and is also a pointer"));
        else
          return spawnee;
      spawnee.get$_scan().buildKey$0();
      localNonPointerEntity = this._keyChain.getFirstSibling$2$allowPointers(spawnee, false);
      if (spawnee.get$_isPointer() !== true && localNonPointerEntity != null)
        this._solveConflictsIfAny$3(spawnee, localNonPointerEntity, onConflict);
      if (localNonPointerEntity != null) {
        entityScan.set$_unusedInstance(spawnee);
        return localNonPointerEntity;
      }
      if (spawnee.get$_isPointer() === true) {
        if (owningProxy != null)
          J.add$1$a(this._pendingProxies, owningProxy);
      } else {
        J.add$1$a(spawnee.get$_scan().get$_keyCollection(), spawnee.get$_scan());
        J.forEach$1$a(spawnee.get$_scan().get$_proxies(), new O.EntityAssembler__assemble_closure(this));
        this._updateCollectionsWith$1(spawnee);
      }
      return spawnee;
    }, "call$4" /* tearOffInfo */, "get$_assemble", 8, 0, 1882, 1883, 1884, 1885, 1886, "_assemble"],
    _solveConflictsIfAny$3: [function(spawnee, existingEntity, onConflict) {
      if (onConflict == null)
        throw H.wrapException(O.DormError$("Conflict was detected, but no onConflict method is available"));
      if (J.$eq(onConflict.call$2(spawnee, existingEntity), C.ConflictManager_1))
        J.forEach$1$a(existingEntity.get$_scan().get$_proxies(), new O.EntityAssembler__solveConflictsIfAny_closure(spawnee, existingEntity));
    }, "call$3" /* tearOffInfo */, "get$_solveConflictsIfAny", 6, 0, 1887, 1888, 1889, 1886, "_solveConflictsIfAny"],
    _updateCollectionsWith$1: [function(actualEntity) {
      var t1, t2, t3, i, t4, t5, proxy, collectionEntry;
      t1 = {};
      t1.collectionEntry_0 = null;
      t1.collectionEntryHasPointers_1 = null;
      t2 = this._pendingProxies;
      t3 = J.getInterceptor$as(t2);
      i = t3.get$length(t2);
      for (t4 = this._keyChain; t5 = J.getInterceptor$n(i), t5.$gt(i, 0);) {
        i = t5.$sub(i, 1);
        proxy = t3.$index(t2, i);
        if (t4.areSameKeySignature$2(proxy.get$_dorm$_value(), actualEntity) === true) {
          proxy.setInitialValue$1(actualEntity);
          t3.remove$1(t2, proxy);
        }
      }
      t2 = this._collections;
      t3 = J.getInterceptor$as(t2);
      i = t3.get$length(t2);
      for (; t4 = J.getInterceptor$n(i), t4.$gt(i, 0);) {
        i = t4.$sub(i, 1);
        collectionEntry = t3.$index(t2, i);
        t1.collectionEntry_0 = collectionEntry;
        t1.collectionEntryHasPointers_1 = false;
        J.forEach$1$a(collectionEntry, new O.EntityAssembler__updateCollectionsWith_closure(t1, this, actualEntity));
        if (t1.collectionEntryHasPointers_1 !== true)
          t3.remove$1(t2, t1.collectionEntry_0);
      }
    }, "call$1" /* tearOffInfo */, "get$_updateCollectionsWith", 2, 0, 1857, 1890, "_updateCollectionsWith"],
    _existingFromScanRegistry$1: [function(refClassName) {
      return J.firstWhere$2$orElse$a(this._entityScans, new O.EntityAssembler__existingFromScanRegistry_closure(refClassName), new O.EntityAssembler__existingFromScanRegistry_closure0());
    }, "call$1" /* tearOffInfo */, "get$_existingFromScanRegistry", 2, 0, 1891, 933, "_existingFromScanRegistry"],
    static: {"": "EntityAssembler_ENTITY_SYMBOL<-1227,EntityAssembler__instance@-1892", EntityAssembler$_construct: [function() {
        return new O.EntityAssembler(H.setRuntimeTypeInfo([], [O.EntityScan]), H.setRuntimeTypeInfo([], [J.JSArray]), H.setRuntimeTypeInfo([], [O.DormProxy]), new O.EntityKey(P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, [P.Map, null, O.EntityKey]), H.setRuntimeTypeInfo([], [O.EntityScan])));
      }, null /* tearOffInfo */, null, 0, 0, 319, "new EntityAssembler$_construct" /* new EntityAssembler$_construct:0:0 */], EntityAssembler_EntityAssembler: [function() {
        var t1 = $.EntityAssembler__instance;
        if (t1 == null) {
          t1 = new O.EntityAssembler(H.setRuntimeTypeInfo([], [O.EntityScan]), H.setRuntimeTypeInfo([], [J.JSArray]), H.setRuntimeTypeInfo([], [O.DormProxy]), new O.EntityKey(P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, [P.Map, null, O.EntityKey]), H.setRuntimeTypeInfo([], [O.EntityScan])));
          $.EntityAssembler__instance = t1;
        }
        return t1;
      }, "call$0" /* tearOffInfo */, null, 0, 0, 930, "new EntityAssembler" /* new EntityAssembler:0:0 */]}
  },
  "+EntityAssembler": [0],
  EntityAssembler_scan_closure: {
    "": "Closure:1893;box_0-370",
    call$2: [function(_, mirror) {
      var t1 = J.getInterceptor(mirror);
      if (typeof mirror === "object" && mirror !== null && !!t1.$isVariableMirror && mirror.get$isStatic() !== true && mirror.get$isPrivate())
        this.box_0.scan_0.registerMetadataUsing$1(mirror);
    }, "call$2" /* tearOffInfo */, null, 4, 0, 1893, 820, 1894, "call"]
  },
  "+EntityAssembler_scan_closure": [1060],
  EntityAssembler_registerProxies_closure: {
    "": "Closure:1866;box_0-370",
    call$1: [function(entry) {
      return J.$eq(entry.get$property(), this.box_0.proxy_0.get$_property());
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+EntityAssembler_registerProxies_closure": [1060],
  EntityAssembler_registerProxies_closure0: {
    "": "Closure:319;",
    call$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+EntityAssembler_registerProxies_closure": [1060],
  EntityAssembler__assemble_closure: {
    "": "Closure:1866;this_0-370",
    call$1: [function(entry) {
      if (entry.get$proxy().get$owner() != null)
        J.add$1$a(this.this_0.get$_collections(), entry.get$proxy().get$owner());
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+EntityAssembler__assemble_closure": [1060],
  EntityAssembler__solveConflictsIfAny_closure: {
    "": "Closure:1866;spawnee_0-10,existingEntity_1-10",
    call$1: [function(entryA) {
      var entryMatch = J.firstWhere$2$orElse$a(this.spawnee_0.get$_scan().get$_proxies(), new O.EntityAssembler__solveConflictsIfAny__closure(entryA), new O.EntityAssembler__solveConflictsIfAny__closure0());
      if (entryMatch != null && entryMatch.get$proxy().get$hasDelta() === true)
        entryA.get$proxy().setInitialValue$1(this.existingEntity_1.notifyPropertyChange$3(entryA.get$proxy().get$_propertySymbol(), entryA.get$proxy().get$_dorm$_value(), entryMatch.get$proxy().get$_dorm$_value()));
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 1895, "call"]
  },
  "+EntityAssembler__solveConflictsIfAny_closure": [1060],
  EntityAssembler__solveConflictsIfAny__closure: {
    "": "Closure:1866;entryA_2-109",
    call$1: [function(entryB) {
      return J.$eq(this.entryA_2.get$property(), entryB.get$property());
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 1896, "call"]
  },
  "+EntityAssembler__solveConflictsIfAny__closure": [1060],
  EntityAssembler__solveConflictsIfAny__closure0: {
    "": "Closure:319;",
    call$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+EntityAssembler__solveConflictsIfAny__closure": [1060],
  EntityAssembler__updateCollectionsWith_closure: {
    "": "Closure:241;box_0-370,this_1-370,actualEntity_2-10",
    call$1: [function(entry) {
      var t1, t2, t3;
      t1 = J.getInterceptor(entry);
      if (typeof entry === "object" && entry !== null && !!t1.$isEntity) {
        t1 = this.actualEntity_2;
        if (this.this_1.get$_keyChain().areSameKeySignature$2(entry, t1) === true) {
          t2 = this.box_0.collectionEntry_0;
          t3 = J.getInterceptor$as(t2);
          t3.$indexSet(t2, t3.indexOf$1(t2, entry), t1);
        } else if (entry._isPointer === true)
          this.box_0.collectionEntryHasPointers_1 = true;
      }
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 252, "call"]
  },
  "+EntityAssembler__updateCollectionsWith_closure": [1060],
  EntityAssembler__existingFromScanRegistry_closure: {
    "": "Closure:1897;refClassName_0-1039",
    call$1: [function(scan) {
      return J.$eq(J.compareTo$1$ns(scan.get$refClassName(), this.refClassName_0), 0);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1897, 1898, "call"]
  },
  "+EntityAssembler__existingFromScanRegistry_closure": [1060],
  EntityAssembler__existingFromScanRegistry_closure0: {
    "": "Closure:319;",
    call$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+EntityAssembler__existingFromScanRegistry_closure": [1060],
  EntityFactory: {
    "": "Object;_assembler<-1892,_postProcessors<-1899",
    addPostProcessor$1: [function(postProcessor) {
      return J.add$1$a(this._postProcessors, postProcessor);
    }, "call$1" /* tearOffInfo */, "get$addPostProcessor", 2, 0, 1900, 1901, "addPostProcessor"],
    removePostProcessor$1: [function(postProcessor) {
      return J.removeWhere$1$a(this._postProcessors, new O.EntityFactory_removePostProcessor_closure(postProcessor));
    }, "call$1" /* tearOffInfo */, "get$removePostProcessor", 2, 0, 1900, 1901, "removePostProcessor"],
    spawn$4$proxy: [function(rawData, serializer, onConflict, proxy) {
      var results = Q.ObservableList$(null, H.getTypeArgumentByIndex(this, 0));
      J.forEach$1$a(rawData, new O.EntityFactory_spawn_closure(this, serializer, onConflict, proxy, results));
      return results;
    }, function(rawData, serializer, onConflict) {
      return this.spawn$4$proxy(rawData, serializer, onConflict, null);
    }, "spawn$3", "call$4$proxy" /* tearOffInfo */, null /* tearOffInfo */, "get$spawn", 6, 3, function() {
      return H.computeSignature(function(T) {
        return {func: "ObservableList__Iterable_Serializer_OnConflictFunction__DormProxy", ret: [Q.ObservableList, T], args: [[P.Iterable, [P.Map, J.JSString, null]], O.Serializer, {func: "ConflictManager__Entity_Entity", ret: O.ConflictManager, args: [O.Entity, O.Entity]}], named: {proxy: O.DormProxy}};
      }, this.$receiver, "EntityFactory");
    }, 370, 1883, 1885, 1886, 1902, "spawn"],
    spawnSingle$4$proxy: [function(rawData, serializer, onConflict, proxy) {
      var entity = this._assembler._assemble$4(rawData, proxy, serializer, onConflict);
      J.forEach$1$a(this._postProcessors, new O.EntityFactory_spawnSingle_closure(entity));
      return entity;
    }, "call$4$proxy" /* tearOffInfo */, "get$spawnSingle", 6, 3, function() {
      return H.computeSignature(function(T) {
        return {func: "T__Map_Serializer_OnConflictFunction__DormProxy", ret: T, args: [[P.Map, J.JSString, null], O.Serializer, {func: "ConflictManager__Entity_Entity", ret: O.ConflictManager, args: [O.Entity, O.Entity]}], named: {proxy: O.DormProxy}};
      }, this.$receiver, "EntityFactory");
    }, 370, 1883, 1885, 1886, 1902, "spawnSingle"],
    "<>": [11],
    static: {"": "EntityFactory__instance@-1903", EntityFactory$_construct: [function($T) {
        var t1 = $.EntityAssembler__instance;
        if (t1 == null) {
          t1 = new O.EntityAssembler(H.setRuntimeTypeInfo([], [O.EntityScan]), H.setRuntimeTypeInfo([], [J.JSArray]), H.setRuntimeTypeInfo([], [O.DormProxy]), new O.EntityKey(P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, [P.Map, null, O.EntityKey]), H.setRuntimeTypeInfo([], [O.EntityScan])));
          $.EntityAssembler__instance = t1;
        }
        return H.setRuntimeTypeInfo(new O.EntityFactory(t1, H.setRuntimeTypeInfo([], [O.EntityPostProcessor])), [$T]);
      }, null /* tearOffInfo */, null, 0, 0, 319, "new EntityFactory$_construct" /* new EntityFactory$_construct:0:0 */], EntityFactory_EntityFactory: [function($T) {
        var t1 = $.EntityFactory__instance;
        if (t1 == null) {
          t1 = $.EntityAssembler__instance;
          if (t1 == null) {
            t1 = new O.EntityAssembler(H.setRuntimeTypeInfo([], [O.EntityScan]), H.setRuntimeTypeInfo([], [J.JSArray]), H.setRuntimeTypeInfo([], [O.DormProxy]), new O.EntityKey(P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, [P.Map, null, O.EntityKey]), H.setRuntimeTypeInfo([], [O.EntityScan])));
            $.EntityAssembler__instance = t1;
          }
          t1 = H.setRuntimeTypeInfo(new O.EntityFactory(t1, H.setRuntimeTypeInfo([], [O.EntityPostProcessor])), [null]);
          $.EntityFactory__instance = t1;
        }
        return t1;
      }, "call$0" /* tearOffInfo */, null, 0, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "EntityFactory_", ret: [O.EntityFactory, T]};
        }, this.$receiver, "EntityFactory");
      }, "new EntityFactory" /* new EntityFactory:0:0 */]}
  },
  "+EntityFactory": [0],
  EntityFactory_removePostProcessor_closure: {
    "": "Closure:1905;postProcessor_0-1904",
    call$1: [function(tmpPostProcessor) {
      return J.$eq(tmpPostProcessor, this.postProcessor_0);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1905, 1906, "call"]
  },
  "+EntityFactory_removePostProcessor_closure": [1060],
  EntityFactory_spawn_closure: {
    "": "Closure:1910;this_0-370,serializer_1-1907,onConflict_2-974,proxy_3-1908,results_4-1909",
    call$1: [function(rawDataEntry) {
      var t1, entity;
      t1 = this.this_0;
      entity = t1.get$_assembler()._assemble$4(rawDataEntry, this.proxy_3, this.serializer_1, this.onConflict_2);
      J.forEach$1$a(t1.get$_postProcessors(), new O.EntityFactory_spawn__closure(entity));
      J.add$1$a(this.results_4, entity);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1910, 1911, "call"]
  },
  "+EntityFactory_spawn_closure": [1060],
  EntityFactory_spawn__closure: {
    "": "Closure:1905;entity_5-10",
    call$1: [function(postProcessor) {
      return postProcessor.handler$1(this.entity_5);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1905, 1901, "call"]
  },
  "+EntityFactory_spawn__closure": [1060],
  EntityFactory_spawnSingle_closure: {
    "": "Closure:1905;entity_0-10",
    call$1: [function(postProcessor) {
      return postProcessor.handler$1(this.entity_0);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1905, 1901, "call"]
  },
  "+EntityFactory_spawnSingle_closure": [1060],
  EntityPostProcessor: {
    "": "Object;handler<-1857",
    handler$1: function(arg0) {
      return this.handler.call$1(arg0);
    },
    $isEntityPostProcessor: true,
    static: {EntityPostProcessor$: [function(handler) {
        return new O.EntityPostProcessor(handler);
      }, null /* tearOffInfo */, null, 2, 0, 931, 889, "new EntityPostProcessor" /* new EntityPostProcessor:1:0 */]}
  },
  "+EntityPostProcessor": [0],
  EntityKey: {
    "": "Object;_map<-1912,entityScans<-1873",
    $indexSet: [function(_, key, value) {
      var t1, t2, mainKey, t3, t4;
      t1 = this._map;
      t2 = J.getInterceptor$as(t1);
      mainKey = t2.$index(t1, key);
      if (mainKey == null) {
        t3 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, [P.Map, null, O.EntityKey]);
        t4 = [];
        t4.$builtinTypeInfo = [O.EntityScan];
        mainKey = H.fillLiteralMap([value, new O.EntityKey(t3, t4)], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
        if (mainKey != null)
          mainKey.$builtinTypeInfo = [null, O.EntityKey];
        t2.$indexSet(t1, key, mainKey);
      } else {
        t1 = J.getInterceptor$as(mainKey);
        if (t1.$index(mainKey, value) == null) {
          t2 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, [P.Map, null, O.EntityKey]);
          t3 = [];
          t3.$builtinTypeInfo = [O.EntityScan];
          t1.$indexSet(mainKey, value, new O.EntityKey(t2, t3));
        }
      }
      return;
    }, "call$2" /* tearOffInfo */, "get$[]=", 4, 0, 1913, 312, 280, "[]="],
    $index: [function(_, otherKey) {
      var t1 = J.getInterceptor$as(otherKey);
      return J.$index$as(J.$index$as(this._map, t1.$index(otherKey, 0)), t1.$index(otherKey, 1));
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, 1914, 1915, "[]"],
    getFirstSibling$2$allowPointers: [function(forEntity, allowPointers) {
      var result = J.firstWhere$2$orElse$a(forEntity.get$_scan().get$_keyCollection(), new O.EntityKey_getFirstSibling_closure(forEntity, allowPointers), new O.EntityKey_getFirstSibling_closure0());
      return result != null ? result.get$entity() : null;
    }, "call$2$allowPointers" /* tearOffInfo */, "get$getFirstSibling", 2, 3, 1916, 816, 937, 1917, "getFirstSibling"],
    areSameKeySignature$2: [function(entity, compareEntity) {
      return J.contains$1$as(entity.get$_scan().get$_keyCollection(), compareEntity.get$_scan());
    }, "call$2" /* tearOffInfo */, "get$areSameKeySignature", 4, 0, 1918, 956, 1919, "areSameKeySignature"],
    remove$1: [function(_, entity) {
      return J.remove$1$a(entity.get$_scan().get$_keyCollection(), entity.get$_scan());
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, 1920, 956, "remove"],
    getSiblings$1: [function(forEntity) {
      return J.where$1$a(forEntity.get$_scan().get$_keyCollection(), new O.EntityKey_getSiblings_closure(forEntity));
    }, "call$1" /* tearOffInfo */, "get$getSiblings", 2, 0, 1921, 937, "getSiblings"],
    getExistingEntityScans$1: [function(forEntity) {
      return forEntity.get$_scan().get$_keyCollection();
    }, "call$1" /* tearOffInfo */, "get$getExistingEntityScans", 2, 0, 1922, 937, "getExistingEntityScans"],
    _setKeyValue$2: [function(key, value) {
      var t1, t2, mainKey, $returnValue;
      t1 = this._map;
      t2 = J.getInterceptor$as(t1);
      mainKey = t2.$index(t1, key);
      if (mainKey == null) {
        $returnValue = new O.EntityKey(P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, [P.Map, null, O.EntityKey]), H.setRuntimeTypeInfo([], [O.EntityScan]));
        t2.$indexSet(t1, key, H.setRuntimeTypeInfo(H.fillLiteralMap([value, $returnValue], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [null, O.EntityKey]));
        return $returnValue;
      } else {
        t1 = J.getInterceptor$as(mainKey);
        if (t1.$index(mainKey, value) == null) {
          $returnValue = new O.EntityKey(P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, [P.Map, null, O.EntityKey]), H.setRuntimeTypeInfo([], [O.EntityScan]));
          t1.$indexSet(mainKey, value, $returnValue);
          return $returnValue;
        }
      }
      return t1.$index(mainKey, value);
    }, "call$2" /* tearOffInfo */, "get$_setKeyValue", 4, 0, 1923, 312, 280, "_setKeyValue"],
    _setKeyValueNoReturn$2: [function(key, value) {
      var t1, t2, mainKey;
      t1 = this._map;
      t2 = J.getInterceptor$as(t1);
      mainKey = t2.$index(t1, key);
      if (mainKey == null)
        t2.$indexSet(t1, key, H.setRuntimeTypeInfo(H.fillLiteralMap([value, new O.EntityKey(P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, [P.Map, null, O.EntityKey]), H.setRuntimeTypeInfo([], [O.EntityScan]))], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [null, O.EntityKey]));
      else {
        t1 = J.getInterceptor$as(mainKey);
        if (t1.$index(mainKey, value) == null)
          t1.$indexSet(mainKey, value, new O.EntityKey(P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, [P.Map, null, O.EntityKey]), H.setRuntimeTypeInfo([], [O.EntityScan])));
      }
    }, "call$2" /* tearOffInfo */, "get$_setKeyValueNoReturn", 4, 0, 1913, 312, 280, "_setKeyValueNoReturn"],
    $isEntityKey: true,
    static: {EntityKey$: [function() {
        return new O.EntityKey(P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, [P.Map, null, O.EntityKey]), H.setRuntimeTypeInfo([], [O.EntityScan]));
      }, null /* tearOffInfo */, null, 0, 0, 319, "new EntityKey" /* new EntityKey:0:0 */]}
  },
  "+EntityKey": [0],
  EntityKey_getFirstSibling_closure: {
    "": "Closure:1897;forEntity_0-10,allowPointers_1-1043",
    call$1: [function(scan) {
      var t1;
      if (!J.$eq(scan.get$entity(), this.forEntity_0))
        t1 = this.allowPointers_1 === true || scan.get$entity().get$_isPointer() !== true;
      else
        t1 = false;
      return t1;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1897, 1898, "call"]
  },
  "+EntityKey_getFirstSibling_closure": [1060],
  EntityKey_getFirstSibling_closure0: {
    "": "Closure:319;",
    call$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+EntityKey_getFirstSibling_closure": [1060],
  EntityKey_getSiblings_closure: {
    "": "Closure:1897;forEntity_0-10",
    call$1: [function(scan) {
      return !J.$eq(scan.get$entity(), this.forEntity_0);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1897, 1898, "call"]
  },
  "+EntityKey_getSiblings_closure": [1060],
  EntityScan: {
    "": "Object;_original@-1924,_entityCtor@-959,_unusedInstance@-10,_keyCollection@-1873,_metadataCache@-1925,_identityProxies<-1926,_proxies<-1926,entity@-10,refClassName@-1039,isMutableEntity@-1043",
    _entityCtor$0: function() {
      return this._entityCtor.call$0();
    },
    buildKey$0: [function() {
      var t1, t2;
      t1 = {};
      t1.nextKey_0 = $.EntityAssembler__instance.get$_keyChain();
      J.forEach$1$a(this._identityProxies, new O.EntityScan_buildKey_closure(t1));
      if (!J.$eq(this._keyCollection, t1.nextKey_0.get$entityScans())) {
        t2 = this._keyCollection;
        if (t2 != null)
          J.remove$1$a(t2, this);
        this._keyCollection = t1.nextKey_0.get$entityScans();
      }
    }, "call$0" /* tearOffInfo */, "get$buildKey", 0, 0, 494, "buildKey"],
    detectIfMutable$1: [function(classMirror) {
      if (this.isMutableEntity === true && J.firstWhere$2$orElse$a(classMirror.get$metadata(), new O.EntityScan_detectIfMutable_closure(), new O.EntityScan_detectIfMutable_closure0()) != null)
        this.isMutableEntity = false;
    }, "call$1" /* tearOffInfo */, "get$detectIfMutable", 2, 0, 1927, 1928, "detectIfMutable"],
    registerMetadataUsing$1: [function(mirror) {
      var i, t1, t2, t3, t4, entry, property, j, isIdentity, metatag, t5, t6, instanceMirror;
      i = J.get$length$as(mirror.get$metadata());
      this._metadataCache = new O.MetadataCache();
      for (t1 = this._proxies, t2 = J.getInterceptor$a(t1), t3 = this._identityProxies, t4 = J.getInterceptor$a(t3), entry = null, property = null, j = null, isIdentity = null, metatag = null; t5 = J.getInterceptor$n(i), t5.$gt(i, 0);) {
        t6 = mirror.get$metadata();
        i = t5.$sub(i, 1);
        instanceMirror = J.$index$as(t6, i);
        t5 = instanceMirror.get$reflectee();
        t6 = J.getInterceptor(t5);
        if (typeof t5 === "object" && t5 !== null && !!t6.$isProperty) {
          property = H.interceptedTypeCast(instanceMirror.get$reflectee(), "$isProperty");
          t5 = property.property;
          entry = new O._DormProxyListEntry(t5, property.propertySymbol, property.type, new O._PropertyMetadataCache(t5, false, false, true, false, true, false, null, null), null);
          entry.$builtinTypeInfo = [null];
          j = J.get$length$as(mirror.get$metadata());
          for (isIdentity = false; t5 = J.getInterceptor$n(j), t5.$gt(j, 0);) {
            t6 = mirror.get$metadata();
            j = t5.$sub(j, 1);
            metatag = J.$index$as(t6, j).get$reflectee();
            this._metadataCache.registerTagForProperty$2(entry, metatag);
            t5 = J.getInterceptor(metatag);
            if (typeof metatag === "object" && metatag !== null && !!t5.$isId)
              isIdentity = true;
          }
          t2.add$1(t1, entry);
          if (isIdentity)
            t4.add$1(t3, entry);
        }
      }
    }, "call$1" /* tearOffInfo */, "get$registerMetadataUsing", 2, 0, 1929, 1894, "registerMetadataUsing"],
    $isEntityScan: true,
    static: {EntityScan$: [function(refClassName, _entityCtor) {
        return new O.EntityScan(null, _entityCtor, null, null, null, H.setRuntimeTypeInfo([], [O._DormProxyListEntry]), H.setRuntimeTypeInfo([], [O._DormProxyListEntry]), null, refClassName, true);
      }, null /* tearOffInfo */, null, 4, 0, 932, 933, 934, "new EntityScan" /* new EntityScan:2:0 */], EntityScan_EntityScan$fromScan: [function(originalScan, forEntity) {
        var t1, t2, newScan;
        t1 = {};
        t2 = originalScan.get$refClassName();
        newScan = new O.EntityScan(null, originalScan.get$_entityCtor(), null, null, null, H.setRuntimeTypeInfo([], [O._DormProxyListEntry]), H.setRuntimeTypeInfo([], [O._DormProxyListEntry]), null, t2, true);
        newScan._original = originalScan;
        newScan._metadataCache = originalScan.get$_metadataCache();
        newScan.entity = forEntity;
        newScan.isMutableEntity = originalScan.get$isMutableEntity();
        t1.useChangeListener_0 = false;
        J.forEach$1$a(originalScan.get$_proxies(), new O.EntityScan_EntityScan$fromScan_closure(t1, newScan));
        if (t1.useChangeListener_0 === true)
          forEntity.get$changes().listen$1(O.EntityScan__entity_changeHandler$closure());
        return newScan;
      }, "call$2" /* tearOffInfo */, null, 4, 0, 935, 936, 937, "new EntityScan$fromScan" /* new EntityScan$fromScan:2:0 */], EntityScan__entity_changeHandler: [function(changes) {
        var matchingChange = J.firstWhere$2$orElse$a(changes, new O.EntityScan__entity_changeHandler_closure(), new O.EntityScan__entity_changeHandler_closure0());
        if (matchingChange != null && !H.interceptedTypeCast(matchingChange.get$object(), "$isEntity").isUnsaved$0())
          H.interceptedTypeCast(matchingChange.get$object(), "$isEntity")._scan.buildKey$0();
      }, "call$1" /* tearOffInfo */, "EntityScan__entity_changeHandler$closure", 2, 0, 938, 939, "_entity_changeHandler"]}
  },
  "+EntityScan": [0],
  EntityScan_buildKey_closure: {
    "": "Closure:1866;box_0-370",
    call$1: [function(entry) {
      var t1, nextKey;
      t1 = this.box_0;
      nextKey = t1.nextKey_0._setKeyValue$2(entry.get$propertySymbol(), entry.get$proxy().get$_dorm$_value());
      t1.nextKey_0 = nextKey;
      return nextKey;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+EntityScan_buildKey_closure": [1060],
  EntityScan_EntityScan$fromScan_closure: {
    "": "Closure:1866;box_0-370,newScan_1-1924",
    call$1: [function(entry) {
      var clonedEntry, t1, t2;
      clonedEntry = H.setRuntimeTypeInfo(new O._DormProxyListEntry(entry.get$property(), entry.get$propertySymbol(), entry.get$type(), entry.get$metadataCache(), null), [null]);
      t1 = this.newScan_1;
      J.add$1$a(t1.get$_proxies(), clonedEntry);
      t2 = clonedEntry.metadataCache;
      if (t2.get$isId() === true)
        J.add$1$a(t1.get$_identityProxies(), clonedEntry);
      if (t2.get$isId() === true && t2.get$isMutable() === true)
        this.box_0.useChangeListener_0 = true;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+EntityScan_EntityScan$fromScan_closure": [1060],
  EntityScan_detectIfMutable_closure: {
    "": "Closure:1930;",
    call$1: [function(classMetaData) {
      var t1, t2;
      t1 = classMetaData.get$reflectee();
      t2 = J.getInterceptor(t1);
      return typeof t1 === "object" && t1 !== null && !!t2.$isImmutable;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1930, 1931, "call"]
  },
  "+EntityScan_detectIfMutable_closure": [1060],
  EntityScan_detectIfMutable_closure0: {
    "": "Closure:319;",
    call$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+EntityScan_detectIfMutable_closure": [1060],
  EntityScan__entity_changeHandler_closure: {
    "": "Closure:1932;",
    call$1: [function(change) {
      var t1 = J.getInterceptor(change);
      return typeof change === "object" && change !== null && !!t1.$isPropertyChangeRecord && C.JSArray_methods.contains$1(H.interceptedTypeCast(change.object, "$isEntity").getIdentityFields$0(), change.name);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1932, 1933, "call"]
  },
  "+EntityScan__entity_changeHandler_closure": [1060],
  EntityScan__entity_changeHandler_closure0: {
    "": "Closure:319;",
    call$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+EntityScan__entity_changeHandler_closure": [1060],
  _DormProxyListEntry: {
    "": "Comparable;property<-1039,propertySymbol<-1227,type<-1158,metadataCache<-1934,proxy@-1908",
    compareTo$1: [function(_, other) {
      if (other == null)
        return 1;
      return J.compareTo$1$ns(this.property, other.get$property());
    }, "call$1" /* tearOffInfo */, "get$compareTo", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "int__T", ret: J.JSInt, args: [T]};
      }, this.$receiver, "_DormProxyListEntry");
    }, 403, "compareTo", 1935],
    $is_DormProxyListEntry: true,
    $asComparable: function($T) {
      return [null];
    },
    "<>": [110],
    static: {_DormProxyListEntry$: [function(property, propertySymbol, type, metadataCache, $T) {
        return H.setRuntimeTypeInfo(new O._DormProxyListEntry(property, propertySymbol, type, metadataCache, null), [$T]);
      }, null /* tearOffInfo */, null, 8, 0, 940, 347, 941, 371, 942, "new _DormProxyListEntry" /* new _DormProxyListEntry:4:0 */], _DormProxyListEntry__DormProxyListEntry$from: [function(value, $T) {
        return H.setRuntimeTypeInfo(new O._DormProxyListEntry(value.get$property(), value.get$propertySymbol(), value.get$type(), value.get$metadataCache(), null), [null]);
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "_DormProxyListEntry___DormProxyListEntry", ret: [O._DormProxyListEntry, T], args: [O._DormProxyListEntry]};
        }, this.$receiver, "_DormProxyListEntry");
      }, 280, "new _DormProxyListEntry$from" /* new _DormProxyListEntry$from:1:0 */]}
  },
  "+_DormProxyListEntry": [1791],
  LazyLoader: {
    "": "Object;_handlers@-1936",
    addHandler$2: [function(symbol, method) {
      return J.add$1$a(this._handlers, new O._InternalLazyLoaderHandler(symbol, method));
    }, "call$2" /* tearOffInfo */, "get$addHandler", 4, 0, 1937, 462, 946, "addHandler"],
    removeHandler$1: [function(forSymbol) {
      return J.removeWhere$1$a(this._handlers, new O.LazyLoader_removeHandler_closure(forSymbol));
    }, "call$1" /* tearOffInfo */, "get$removeHandler", 2, 0, 1938, 945, "removeHandler"],
    load$2: [function(entity, forSymbol) {
      var handler = J.firstWhere$2$orElse$a(this._handlers, new O.LazyLoader_load_closure(forSymbol), new O.LazyLoader_load_closure0());
      return handler == null ? null : handler.method$2(entity, forSymbol);
    }, "call$2" /* tearOffInfo */, "get$load", 4, 0, 1939, 956, 945, "load"],
    static: {LazyLoader$: [function() {
        return new O.LazyLoader(H.setRuntimeTypeInfo([], [O._InternalLazyLoaderHandler]));
      }, null /* tearOffInfo */, null, 0, 0, 943, "new LazyLoader" /* new LazyLoader:0:0 */]}
  },
  "+LazyLoader": [0],
  LazyLoader_removeHandler_closure: {
    "": "Closure:1940;forSymbol_0-1227",
    call$1: [function(handler) {
      return J.$eq(handler.get$forSymbol(), this.forSymbol_0);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1940, 889, "call"]
  },
  "+LazyLoader_removeHandler_closure": [1060],
  LazyLoader_load_closure: {
    "": "Closure:1940;forSymbol_0-1227",
    call$1: [function(tmpHandler) {
      return J.$eq(tmpHandler.get$forSymbol(), this.forSymbol_0);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1940, 1941, "call"]
  },
  "+LazyLoader_load_closure": [1060],
  LazyLoader_load_closure0: {
    "": "Closure:319;",
    call$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+LazyLoader_load_closure": [1060],
  _InternalLazyLoaderHandler: {
    "": "Object;forSymbol<-1227,method<-1939",
    method$2: function(arg0, arg1) {
      return this.method.call$2(arg0, arg1);
    },
    $is_InternalLazyLoaderHandler: true,
    static: {_InternalLazyLoaderHandler$: [function(forSymbol, method) {
        return new O._InternalLazyLoaderHandler(forSymbol, method);
      }, null /* tearOffInfo */, null, 4, 0, 944, 945, 946, "new _InternalLazyLoaderHandler" /* new _InternalLazyLoaderHandler:2:0 */]}
  },
  "+_InternalLazyLoaderHandler": [0],
  MetadataCache: {
    "": "Object;",
    registerTagForProperty$2: [function(entry, reflectee) {
      var type = J.get$runtimeType$(reflectee);
      if (type.$eq(0, C.Type_gMT)) {
        entry.get$metadataCache().set$isId(true);
        entry.get$metadataCache().set$insertValue(H.interceptedTypeCast(reflectee, "$isId").insertValue);
      } else if (type.$eq(0, C.Type_wwi))
        entry.get$metadataCache().set$isTransient(true);
      else if (type.$eq(0, C.Type_Wzb))
        entry.get$metadataCache().set$isNullable(false);
      else if (type.$eq(0, C.Type_qp8))
        entry.get$metadataCache().set$initialValue(H.interceptedTypeCast(reflectee, "$isDefaultValue").value);
      else if (type.$eq(0, C.Type_ium))
        entry.get$metadataCache().set$isLabelField(true);
      else if (type.$eq(0, C.Type_Opm))
        entry.get$metadataCache().set$isMutable(false);
      else if (type.$eq(0, C.Type_M6L))
        entry.get$metadataCache().set$isLazy(true);
    }, "call$2" /* tearOffInfo */, "get$registerTagForProperty", 4, 0, 1942, 252, 466, "registerTagForProperty"],
    _updateProxyWithMetadata$2: [function(entry, scan) {
      var t1;
      entry.get$proxy().set$isId(entry.get$metadataCache().get$isId());
      entry.get$proxy().set$isTransient(entry.get$metadataCache().get$isTransient());
      entry.get$proxy().set$isNullable(entry.get$metadataCache().get$isNullable());
      entry.get$proxy().set$isLabelField(entry.get$metadataCache().get$isLabelField());
      t1 = entry.get$proxy();
      t1.set$isMutable(scan.get$isMutableEntity() === true && entry.get$metadataCache().get$isMutable() === true);
      entry.get$proxy().set$isLazy(entry.get$metadataCache().get$isLazy());
      entry.get$proxy().setInsertValue$1(entry.get$metadataCache().get$insertValue());
      entry.get$proxy().setInitialValue$1(entry.get$metadataCache().get$initialValue());
    }, "call$2" /* tearOffInfo */, "get$_updateProxyWithMetadata", 4, 0, 1943, 252, 1898, "_updateProxyWithMetadata"],
    static: {MetadataCache$: [function() {
        return new O.MetadataCache();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new MetadataCache" /* new MetadataCache:0:0 */]}
  },
  "+MetadataCache": [0],
  _PropertyMetadataCache: {
    "": "Object;property<-1039,isId@-1043,isTransient@-1043,isNullable@-1043,isLabelField@-1043,isMutable@-1043,isLazy@-1043,insertValue@-370,initialValue@-370",
    _getMetadataExternal$0: [function() {
      return new O.MetadataExternalized(this.isId, this.isTransient, this.isNullable, this.isLabelField, this.isMutable, this.isLazy);
    }, "call$0" /* tearOffInfo */, "get$_getMetadataExternal", 0, 0, 1944, "_getMetadataExternal"],
    static: {_PropertyMetadataCache$: [function(property) {
        return new O._PropertyMetadataCache(property, false, false, true, false, true, false, null, null);
      }, null /* tearOffInfo */, null, 2, 0, 289, 347, "new _PropertyMetadataCache" /* new _PropertyMetadataCache:1:0 */]}
  },
  "+_PropertyMetadataCache": [0],
  MetadataExternalized: {
    "": "Object;isId<-1043,isTransient<-1043,isNullable<-1043,isLabelField<-1043,isMutable<-1043,isLazy<-1043",
    static: {MetadataExternalized$: [function(isId, isTransient, isNullable, isLabelField, isMutable, isLazy) {
        return new O.MetadataExternalized(isId, isTransient, isNullable, isLabelField, isMutable, isLazy);
      }, null /* tearOffInfo */, null, 12, 0, 947, 948, 949, 950, 951, 952, 953, "new MetadataExternalized" /* new MetadataExternalized:6:0 */]}
  },
  "+MetadataExternalized": [0],
  MetadataValidationReason: {
    "": "Object;",
    static: {"": "MetadataValidationReason_ENTITY_NOT_MUTABLE<-1039,MetadataValidationReason_PROPERTY_NOT_MUTABLE<-1039,MetadataValidationReason_PROPERTY_NOT_NULLABLE<-1039", MetadataValidationReason$: [function() {
        return new O.MetadataValidationReason();
      }, null /* tearOffInfo */, null, 0, 0, 954, "new MetadataValidationReason" /* new MetadataValidationReason:0:0 */]}
  },
  "+MetadataValidationReason": [0],
  MetadataValidationResult: {
    "": "Object;entity<-10,reasonFailed<-1039,property<-1039,propertyField<-1227",
    $isMetadataValidationResult: true,
    static: {MetadataValidationResult$: [function(entity, property, propertyField, reasonFailed) {
        return new O.MetadataValidationResult(entity, reasonFailed, property, propertyField);
      }, null /* tearOffInfo */, null, 8, 0, 955, 956, 347, 957, 958, "new MetadataValidationResult" /* new MetadataValidationResult:4:0 */]}
  },
  "+MetadataValidationResult": [0],
  Entity: {
    "": "Observable;_scan@-1924,_isPointer@-1043,_changes-1118,_mirror-1290,_values-1853,_records-1854",
    get$isMutable: [function() {
      return this._scan.get$isMutableEntity();
    }, null /* tearOffInfo */, null, 1, 0, 849, "isMutable"],
    get$refClassName: [function() {
      return;
    }, null /* tearOffInfo */, null, 1, 0, 253, "refClassName"],
    $index: [function(_, propertyField) {
      var result = J.firstWhere$2$orElse$a(this._scan.get$_proxies(), new O.Entity_operator$index_closure(propertyField), new O.Entity_operator$index_closure0());
      return result != null ? result.get$proxy().get$_dorm$_value() : null;
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, 1550, 957, "[]"],
    $indexSet: [function(_, propertyField, propertyValue) {
      var result = J.firstWhere$2$orElse$a(this._scan.get$_proxies(), new O.Entity_operator$indexSet_closure(propertyField), new O.Entity_operator$indexSet_closure0());
      if (result != null)
        result.get$proxy().set$_dorm$_value(this._scheduleDirtyCheck$1(F.Observable.prototype.notifyPropertyChange$3.call(this, result.get$proxy().get$_propertySymbol(), result.get$proxy().get$_dorm$_value(), propertyValue)));
    }, "call$2" /* tearOffInfo */, "get$[]=", 4, 0, 1913, 957, 1945, "[]="],
    notifyPropertyChange$3: [function(field, oldValue, newValue) {
      return this._scheduleDirtyCheck$1(F.Observable.prototype.notifyPropertyChange$3.call(this, field, oldValue, newValue));
    }, "call$3" /* tearOffInfo */, "get$notifyPropertyChange", 6, 0, 1946, 1030, 990, 991, "notifyPropertyChange", 1935],
    setDefaultPropertyValue$2: [function(propertyField, propertyValue) {
      var result = J.firstWhere$2$orElse$a(this._scan.get$_proxies(), new O.Entity_setDefaultPropertyValue_closure(propertyField), new O.Entity_setDefaultPropertyValue_closure0());
      if (result != null) {
        result.get$proxy().set$_defaultValue(propertyValue);
        result.get$proxy().set$_dorm$_value(propertyValue);
        return true;
      }
      return false;
    }, "call$2" /* tearOffInfo */, "get$setDefaultPropertyValue", 4, 0, 1947, 957, 1945, "setDefaultPropertyValue"],
    setCurrentStatusIsDefaultStatus$0: [function() {
      J.forEach$1$a(this._scan.get$_proxies(), new O.Entity_setCurrentStatusIsDefaultStatus_closure());
    }, "call$0" /* tearOffInfo */, "get$setCurrentStatusIsDefaultStatus", 0, 0, 494, "setCurrentStatusIsDefaultStatus"],
    revertChanges$0: [function() {
      J.forEach$1$a(this._scan.get$_proxies(), new O.Entity_revertChanges_closure(this));
    }, "call$0" /* tearOffInfo */, "get$revertChanges", 0, 0, 494, "revertChanges"],
    getEntityTree$1$traversedEntities: [function(traversedEntities) {
      var tree = traversedEntities != null ? traversedEntities : H.setRuntimeTypeInfo([], [O.Entity]);
      J.add$1$a(tree, this);
      J.forEach$1$a(this._scan.get$_proxies(), new O.Entity_getEntityTree_closure(tree));
      return tree;
    }, "call$1$traversedEntities" /* tearOffInfo */, "get$getEntityTree", 0, 3, 1948, 370, 1949, "getEntityTree"],
    getIdentityFields$0: [function() {
      var result = H.setRuntimeTypeInfo([], [P.Symbol0]);
      J.forEach$1$a(this._scan.get$_identityProxies(), new O.Entity_getIdentityFields_closure(result));
      return result;
    }, "call$0" /* tearOffInfo */, "get$getIdentityFields", 0, 0, 1950, "getIdentityFields"],
    getInsertValues$0: [function() {
      var result = H.setRuntimeTypeInfo(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [P.Symbol0, null]);
      J.forEach$1$a(this._scan.get$_identityProxies(), new O.Entity_getInsertValues_closure(result));
      return result;
    }, "call$0" /* tearOffInfo */, "get$getInsertValues", 0, 0, 1141, "getInsertValues"],
    isUnsaved$0: [function() {
      return J.firstWhere$2$orElse$a(this._scan.get$_identityProxies(), new O.Entity_isUnsaved_closure(), new O.Entity_isUnsaved_closure0()) == null;
    }, "call$0" /* tearOffInfo */, "get$isUnsaved", 0, 0, 849, "isUnsaved"],
    setUnsaved$0: [function() {
      J.forEach$1$a(this._scan.get$_identityProxies(), new O.Entity_setUnsaved_closure(this));
    }, "call$0" /* tearOffInfo */, "get$setUnsaved", 0, 0, 494, "setUnsaved"],
    getPropertyList$0: [function() {
      var result = H.setRuntimeTypeInfo([], [P.Symbol0]);
      J.forEach$1$a(this._scan.get$_proxies(), new O.Entity_getPropertyList_closure(result));
      return result;
    }, "call$0" /* tearOffInfo */, "get$getPropertyList", 0, 0, 1950, "getPropertyList"],
    getMetadata$1: [function(propertyField) {
      var result = J.firstWhere$2$orElse$a(this._scan.get$_proxies(), new O.Entity_getMetadata_closure(propertyField), new O.Entity_getMetadata_closure0());
      return result != null ? result.get$metadataCache()._getMetadataExternal$0() : null;
    }, "call$1" /* tearOffInfo */, "get$getMetadata", 2, 0, 1951, 957, "getMetadata"],
    duplicate$0: [function() {
      return this._duplicateImpl$1(H.setRuntimeTypeInfo([], [O._ClonedEntityEntry]));
    }, "call$0" /* tearOffInfo */, "get$duplicate", 0, 0, 959, "duplicate"],
    validate$0: [function() {
      var t1, validationResultList;
      t1 = {};
      t1.validationResult_0 = null;
      validationResultList = H.setRuntimeTypeInfo([], [O.MetadataValidationResult]);
      J.forEach$1$a(this._scan.get$_proxies(), new O.Entity_validate_closure(t1, this, validationResultList));
      return validationResultList;
    }, "call$0" /* tearOffInfo */, "get$validate", 0, 0, 1952, "validate"],
    isDirty$0: [function() {
      return this._scan.get$isMutableEntity() === true && J.firstWhere$2$orElse$a(this._scan.get$_proxies(), new O.Entity_isDirty_closure(), new O.Entity_isDirty_closure0()) != null;
    }, "call$0" /* tearOffInfo */, "get$isDirty", 0, 0, 849, "isDirty"],
    readExternal$3: [function(data, serializer, onConflict) {
      var t1, t2, proxies;
      t1 = J.$index$as(data, "?p") != null;
      this._isPointer = t1;
      t2 = this._scan;
      proxies = t1 ? t2.get$_identityProxies() : t2.get$_proxies();
      J.forEach$1$a(proxies, new O.Entity_readExternal_closure(data, serializer, onConflict));
    }, "call$3" /* tearOffInfo */, "get$readExternal", 6, 0, 1953, 546, 1885, 1886, "readExternal"],
    writeExternal$2: [function(data, serializer) {
      return this._writeExternalImpl$3(data, null, serializer);
    }, "call$2" /* tearOffInfo */, "get$writeExternal", 4, 0, 1954, 546, 1885, "writeExternal"],
    toJson$1$convertedEntities: [function(convertedEntities) {
      var jsonMap = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, null);
      this._writeExternalImpl$3(jsonMap, null, $.Entity__serializerWorkaround);
      return C.C_JsonCodec.encode$1(jsonMap);
    }, function() {
      return this.toJson$1$convertedEntities(null);
    }, "toJson$0", "call$1$convertedEntities" /* tearOffInfo */, null /* tearOffInfo */, "get$toJson", 0, 3, 1955, 370, 1956, "toJson"],
    toString$0: [function(_) {
      var result = H.setRuntimeTypeInfo([], [J.JSString]);
      J.forEach$1$a(this._scan.get$_proxies(), new O.Entity_toString_closure(result));
      return C.JSArray_methods.join$1(result, ", ");
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    _scheduleDirtyCheck$1: [function(newValue) {
      if ($.Entity__observableDirtyCheckTimeout == null)
        $.Entity__observableDirtyCheckTimeout = P.Timer_Timer(P.Duration$(0, 0, 0, 30, 0, 0), new O.Entity__scheduleDirtyCheck_closure());
      return newValue;
    }, "call$1" /* tearOffInfo */, "get$_scheduleDirtyCheck", 2, 0, 241, 991, "_scheduleDirtyCheck"],
    _duplicateImpl$1: [function(clonedEntities) {
      var t1, clonedEntity, clone;
      if (this._scan.get$isMutableEntity() === true) {
        t1 = J.getInterceptor$a(clonedEntities);
        clonedEntity = t1.firstWhere$2$orElse(clonedEntities, new O.Entity__duplicateImpl_closure(this), new O.Entity__duplicateImpl_closure0());
        if (clonedEntity != null)
          return clonedEntity.get$clone();
        clone = this._scan._entityCtor$0();
        t1.add$1(clonedEntities, new O._ClonedEntityEntry(this, clone));
        J.forEach$1$a(clone.get$_scan().get$_proxies(), new O.Entity__duplicateImpl_closure1(this, clonedEntities));
        return clone;
      }
      return this;
    }, "call$1" /* tearOffInfo */, "get$_duplicateImpl", 2, 0, 1957, 1958, "_duplicateImpl"],
    compare$1: [function(otherEntity) {
      var len, i, entryA, entryB;
      if (this === otherEntity)
        return 0;
      len = J.get$length$as(this._scan.get$_identityProxies());
      if (typeof len !== "number")
        return H.iae(len);
      i = 0;
      for (; i < len; ++i) {
        entryA = J.$index$as(this._scan.get$_identityProxies(), i);
        entryB = J.$index$as(otherEntity.get$_scan().get$_identityProxies(), i);
        if (J.$lt$n(entryA.get$proxy().get$value(), entryB.get$proxy().get$value()))
          return -1;
        else if (J.$gt$n(entryA.get$proxy().get$value(), entryB.get$proxy().get$value()))
          return 1;
      }
      return 0;
    }, "call$1" /* tearOffInfo */, "get$compare", 2, 0, 1959, 1960, "compare"],
    _writeExternalImpl$3: [function(data, convertedEntities, serializer) {
      var t1, uid, t2;
      t1 = {};
      t1.convertedEntities_0 = convertedEntities;
      uid = H.Primitives_objectHashCode(this);
      t2 = J.getInterceptor$a(data);
      t2.$indexSet(data, "?t", this._scan.get$refClassName());
      t2.$indexSet(data, "?=", uid);
      t2 = t1.convertedEntities_0;
      if (t2 == null) {
        convertedEntities = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, [P.Map, J.JSString, null]);
        t1.convertedEntities_0 = convertedEntities;
        t2 = convertedEntities;
      }
      J.$indexSet$a(t2, uid, data);
      J.forEach$1$a(this._scan.get$_proxies(), new O.Entity__writeExternalImpl_closure(t1, data, serializer));
    }, "call$3" /* tearOffInfo */, "get$_writeExternalImpl", 6, 0, 1961, 546, 1956, 1885, "_writeExternalImpl"],
    $isEntity: true,
    static: {"": "Entity_ASSEMBLER<-1892,Entity_FACTORY<-1903,Entity__serializerWorkaround@-1907,Entity__observableDirtyCheckTimeout@-1136", Entity$: [function() {
        return new O.Entity(null, null, null, null, null, null);
      }, null /* tearOffInfo */, null, 0, 0, 959, "new Entity" /* new Entity:0:0 */]}
  },
  "+Entity": [1864, 1962],
  Entity_operator$index_closure: {
    "": "Closure:1866;propertyField_0-1227",
    call$1: [function(entry) {
      return J.$eq(entry.get$propertySymbol(), this.propertyField_0);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity_operator$index_closure": [1060],
  Entity_operator$index_closure0: {
    "": "Closure:319;",
    call$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Entity_operator$index_closure": [1060],
  Entity_operator$indexSet_closure: {
    "": "Closure:1866;propertyField_0-1227",
    call$1: [function(entry) {
      return J.$eq(entry.get$propertySymbol(), this.propertyField_0);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity_operator$indexSet_closure": [1060],
  Entity_operator$indexSet_closure0: {
    "": "Closure:319;",
    call$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Entity_operator$indexSet_closure": [1060],
  Entity_setDefaultPropertyValue_closure: {
    "": "Closure:1866;propertyField_0-1227",
    call$1: [function(entry) {
      return J.$eq(entry.get$propertySymbol(), this.propertyField_0);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity_setDefaultPropertyValue_closure": [1060],
  Entity_setDefaultPropertyValue_closure0: {
    "": "Closure:319;",
    call$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Entity_setDefaultPropertyValue_closure": [1060],
  Entity_setCurrentStatusIsDefaultStatus_closure: {
    "": "Closure:1866;",
    call$1: [function(entry) {
      var t1, t2;
      t1 = entry.get$proxy();
      t2 = entry.get$proxy().get$_dorm$_value();
      t1.set$_defaultValue(t2);
      return t2;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity_setCurrentStatusIsDefaultStatus_closure": [1060],
  Entity_revertChanges_closure: {
    "": "Closure:1866;this_0-370",
    call$1: [function(entry) {
      var t1, t2;
      t1 = entry.get$proxy().get$_propertySymbol();
      t2 = entry.get$proxy().get$_defaultValue();
      J.$indexSet$a(this.this_0, t1, t2);
      return t2;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity_revertChanges_closure": [1060],
  Entity_getEntityTree_closure: {
    "": "Closure:1866;tree_0-1852",
    call$1: [function(entry) {
      var t1, t2, entity;
      t1 = entry.get$proxy().get$_dorm$_value();
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isEntity) {
        entity = H.interceptedTypeCast(entry.get$proxy().get$_dorm$_value(), "$isEntity");
        t1 = this.tree_0;
        if (J.contains$1$as(t1, entity) !== true)
          entity.getEntityTree$1$traversedEntities(t1);
      } else {
        t1 = entry.get$proxy().get$_dorm$_value();
        t2 = J.getInterceptor(t1);
        if (typeof t1 === "object" && t1 !== null && !!t2.$isObservableList)
          H.interceptedTypeCast(entry.get$proxy().get$_dorm$_value(), "$isObservableList").forEach$1(0, new O.Entity_getEntityTree__closure(this.tree_0));
      }
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity_getEntityTree_closure": [1060],
  Entity_getEntityTree__closure: {
    "": "Closure:241;tree_1-1852",
    call$1: [function(subListEntry) {
      var t1 = J.getInterceptor(subListEntry);
      if (typeof subListEntry === "object" && subListEntry !== null && !!t1.$isEntity) {
        t1 = this.tree_1;
        if (J.contains$1$as(t1, subListEntry) !== true)
          subListEntry.getEntityTree$1$traversedEntities(t1);
      }
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1963, "call"]
  },
  "+Entity_getEntityTree__closure": [1060],
  Entity_getIdentityFields_closure: {
    "": "Closure:1866;result_0-1964",
    call$1: [function(entry) {
      return J.add$1$a(this.result_0, entry.get$propertySymbol());
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity_getIdentityFields_closure": [1060],
  Entity_getInsertValues_closure: {
    "": "Closure:1866;result_0-1311",
    call$1: [function(entry) {
      var t1, t2;
      t1 = entry.get$propertySymbol();
      t2 = entry.get$proxy().get$_insertValue();
      J.$indexSet$a(this.result_0, t1, t2);
      return t2;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity_getInsertValues_closure": [1060],
  Entity_isUnsaved_closure: {
    "": "Closure:1866;",
    call$1: [function(entry) {
      return !J.$eq(entry.get$proxy().get$_dorm$_value(), entry.get$proxy().get$_insertValue());
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity_isUnsaved_closure": [1060],
  Entity_isUnsaved_closure0: {
    "": "Closure:319;",
    call$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Entity_isUnsaved_closure": [1060],
  Entity_setUnsaved_closure: {
    "": "Closure:1866;this_0-370",
    call$1: [function(entry) {
      var t1, t2;
      t1 = entry.get$proxy();
      t2 = this.this_0;
      t2 = t2._scheduleDirtyCheck$1(F.Observable.prototype.notifyPropertyChange$3.call(t2, entry.get$proxy().get$_propertySymbol(), entry.get$proxy().get$_dorm$_value(), entry.get$proxy().get$_insertValue()));
      t1.set$_dorm$_value(t2);
      return t2;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity_setUnsaved_closure": [1060],
  Entity_getPropertyList_closure: {
    "": "Closure:1866;result_0-1964",
    call$1: [function(entry) {
      return J.add$1$a(this.result_0, entry.get$propertySymbol());
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity_getPropertyList_closure": [1060],
  Entity_getMetadata_closure: {
    "": "Closure:1866;propertyField_0-1227",
    call$1: [function(entry) {
      return J.$eq(entry.get$propertySymbol(), this.propertyField_0);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity_getMetadata_closure": [1060],
  Entity_getMetadata_closure0: {
    "": "Closure:319;",
    call$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Entity_getMetadata_closure": [1060],
  Entity_validate_closure: {
    "": "Closure:1866;box_0-370,this_1-370,validationResultList_2-1965",
    call$1: [function(entry) {
      var validationResult = entry.get$proxy().validate$1(this.this_1);
      this.box_0.validationResult_0 = validationResult;
      if (validationResult != null)
        J.add$1$a(this.validationResultList_2, validationResult);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity_validate_closure": [1060],
  Entity_isDirty_closure: {
    "": "Closure:1866;",
    call$1: [function(entry) {
      var t1;
      if (J.$eq(entry.get$proxy().get$_dorm$_value(), entry.get$proxy().get$_defaultValue()))
        t1 = entry.get$metadataCache().get$isId() === true && J.$eq(entry.get$proxy().get$_dorm$_value(), entry.get$proxy().get$_insertValue());
      else
        t1 = true;
      return t1;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity_isDirty_closure": [1060],
  Entity_isDirty_closure0: {
    "": "Closure:319;",
    call$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Entity_isDirty_closure": [1060],
  Entity_readExternal_closure: {
    "": "Closure:1866;data_0-1138,serializer_1-1907,onConflict_2-974",
    call$1: [function(entry) {
      var proxy, value, proxy0, entryValue, t1, exception;
      proxy0 = entry.get$proxy();
      proxy0.set$hasDelta(true);
      proxy = proxy0;
      entryValue = J.$index$as(this.data_0, entry.get$property());
      value = null;
      t1 = J.getInterceptor(entryValue);
      if (typeof entryValue === "object" && entryValue !== null && !!t1.$isMap)
        value = $.get$Entity_FACTORY().spawnSingle$4$proxy(entryValue, this.serializer_1, this.onConflict_2, proxy);
      else if (typeof entryValue === "object" && entryValue !== null && (entryValue.constructor === Array || !!t1.$isIterable)) {
        t1 = this.serializer_1;
        proxy.set$owner(t1.convertIn$2(entry.get$type(), $.get$Entity_FACTORY().spawn$3(entryValue, t1, this.onConflict_2)));
        value = proxy.get$owner();
      } else if (entryValue != null)
        value = this.serializer_1.convertIn$2(entry.get$type(), entryValue);
      try {
        proxy.setInitialValue$1(value);
      } catch (exception) {
        H.unwrapException(exception);
        throw H.wrapException(O.DormError$("Could not set the value of " + H.S(proxy.get$_propertySymbol()) + " using the value " + H.S(value) + ", perhaps you need to add a rule to the serializer?"));
      }

    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity_readExternal_closure": [1060],
  Entity_toString_closure: {
    "": "Closure:1866;result_0-1109",
    call$1: [function(entry) {
      if (entry.get$proxy().get$isLabelField() === true)
        J.add$1$a(this.result_0, J.toString$0(entry.get$proxy().get$_dorm$_value()));
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity_toString_closure": [1060],
  Entity__scheduleDirtyCheck_closure: {
    "": "Closure:319;",
    call$0: [function() {
      $.Entity__observableDirtyCheckTimeout = null;
      O.dirtyCheckObservables();
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Entity__scheduleDirtyCheck_closure": [1060],
  Entity__duplicateImpl_closure: {
    "": "Closure:1966;this_0-370",
    call$1: [function(cloneEntry) {
      return J.$eq(cloneEntry.get$original(), this.this_0);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1966, 1967, "call"]
  },
  "+Entity__duplicateImpl_closure": [1060],
  Entity__duplicateImpl_closure0: {
    "": "Closure:319;",
    call$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Entity__duplicateImpl_closure": [1060],
  Entity__duplicateImpl_closure1: {
    "": "Closure:1866;this_1-370,clonedEntities_2-1968",
    call$1: [function(entry) {
      var value, t1, listClone;
      if (entry.get$metadataCache().get$isId() === true)
        entry.get$proxy().setInitialValue$1(entry.get$proxy().get$_insertValue());
      else {
        value = J.$index$as(this.this_1, entry.get$proxy().get$_propertySymbol());
        t1 = J.getInterceptor$a(value);
        if (typeof value === "object" && value !== null && !!t1.$isObservableList) {
          listClone = Q.ObservableList$(null, null);
          t1.forEach$1(value, new O.Entity__duplicateImpl__closure(this.clonedEntities_2, listClone));
          entry.get$proxy().setInitialValue$1(listClone);
        } else if (typeof value === "object" && value !== null && !!t1.$isEntity)
          entry.get$proxy().setInitialValue$1(value._duplicateImpl$1(this.clonedEntities_2));
        else
          entry.get$proxy().setInitialValue$1(value);
      }
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity__duplicateImpl_closure": [1060],
  Entity__duplicateImpl__closure: {
    "": "Closure:241;clonedEntities_3-1968,listClone_4-1871",
    call$1: [function(listEntry) {
      var t1, t2;
      t1 = J.getInterceptor(listEntry);
      t2 = this.listClone_4;
      if (typeof listEntry === "object" && listEntry !== null && !!t1.$isEntity)
        J.add$1$a(t2, listEntry._duplicateImpl$1(this.clonedEntities_3));
      else
        J.add$1$a(t2, listEntry);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1969, "call"]
  },
  "+Entity__duplicateImpl__closure": [1060],
  Entity__writeExternalImpl_closure: {
    "": "Closure:1866;box_0-370,data_1-1138,serializer_2-1907",
    call$1: [function(entry) {
      var t1, t2, subEntity, t3, pointerMap, t4, dataList;
      t1 = entry.get$proxy().get$_dorm$_value();
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isEntity) {
        subEntity = entry.get$proxy().get$_dorm$_value();
        t1 = this.box_0;
        t2 = J.getInterceptor(subEntity);
        t3 = this.data_1;
        if (J.$index$as(t1.convertedEntities_0, t2.get$hashCode(subEntity)) != null) {
          pointerMap = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, null);
          pointerMap.$indexSet(0, "?p", t2.get$hashCode(subEntity));
          pointerMap.$indexSet(0, "?t", subEntity.get$_scan().get$refClassName());
          J.forEach$1$a(subEntity.get$_scan().get$_proxies(), new O.Entity__writeExternalImpl__closure(pointerMap));
          J.$indexSet$a(t3, entry.get$property(), pointerMap);
        } else {
          t2 = J.getInterceptor$a(t3);
          t2.$indexSet(t3, entry.get$property(), P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, null));
          subEntity._writeExternalImpl$3(t2.$index(t3, entry.get$property()), t1.convertedEntities_0, this.serializer_2);
        }
      } else {
        t1 = entry.get$proxy().get$_dorm$_value();
        t2 = J.getInterceptor(t1);
        t3 = this.data_1;
        t4 = this.serializer_2;
        if (typeof t1 === "object" && t1 !== null && (t1.constructor === Array || !!t2.$isList)) {
          dataList = [];
          J.forEach$1$a(t4.convertOut$2(entry.get$type(), entry.get$proxy().get$_dorm$_value()), new O.Entity__writeExternalImpl__closure0(this.box_0, t4, entry, dataList));
          J.$indexSet$a(t3, entry.get$property(), dataList);
        } else
          J.$indexSet$a(t3, entry.get$property(), t4.convertOut$2(entry.get$type(), entry.get$proxy().get$_dorm$_value()));
      }
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 252, "call"]
  },
  "+Entity__writeExternalImpl_closure": [1060],
  Entity__writeExternalImpl__closure: {
    "": "Closure:1866;pointerMap_3-1138",
    call$1: [function(subEntry) {
      if (subEntry.get$proxy().get$isId() === true)
        J.$indexSet$a(this.pointerMap_3, subEntry.get$property(), subEntry.get$proxy().get$_dorm$_value());
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 1970, "call"]
  },
  "+Entity__writeExternalImpl__closure": [1060],
  Entity__writeExternalImpl__closure0: {
    "": "Closure:241;box_0-370,serializer_4-1907,entry_5-109,dataList_6-1129",
    call$1: [function(listEntry) {
      var t1, t2, pointerMap, entryData;
      t1 = J.getInterceptor(listEntry);
      if (typeof listEntry === "object" && listEntry !== null && !!t1.$isEntity) {
        t1 = this.box_0;
        t2 = this.dataList_6;
        if (J.$index$as(t1.convertedEntities_0, H.Primitives_objectHashCode(listEntry)) != null) {
          pointerMap = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, null);
          pointerMap.$indexSet(0, "?p", H.Primitives_objectHashCode(listEntry));
          pointerMap.$indexSet(0, "?t", listEntry._scan.get$refClassName());
          J.forEach$1$a(listEntry._scan.get$_proxies(), new O.Entity__writeExternalImpl___closure(pointerMap));
          J.add$1$a(t2, pointerMap);
        } else {
          entryData = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, null);
          listEntry._writeExternalImpl$3(entryData, t1.convertedEntities_0, this.serializer_4);
          J.add$1$a(t2, entryData);
        }
      } else {
        t1 = this.entry_5;
        J.add$1$a(this.dataList_6, this.serializer_4.convertOut$2(t1.get$type(), t1.get$proxy().get$_dorm$_value()));
      }
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1969, "call"]
  },
  "+Entity__writeExternalImpl__closure": [1060],
  Entity__writeExternalImpl___closure: {
    "": "Closure:1866;pointerMap_7-1138",
    call$1: [function(subEntry) {
      if (subEntry.get$proxy().get$isId() === true)
        J.$indexSet$a(this.pointerMap_7, subEntry.get$property(), subEntry.get$proxy().get$_dorm$_value());
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1866, 1970, "call"]
  },
  "+Entity__writeExternalImpl___closure": [1060],
  _ClonedEntityEntry: {
    "": "Object;original<-10,clone<-10",
    $is_ClonedEntityEntry: true,
    static: {_ClonedEntityEntry$: [function(original, clone) {
        return new O._ClonedEntityEntry(original, clone);
      }, null /* tearOffInfo */, null, 4, 0, 960, 961, 962, "new _ClonedEntityEntry" /* new _ClonedEntityEntry:2:0 */]}
  },
  "+_ClonedEntityEntry": [0],
  Ref: {
    "": "Object;path<-1039",
    toString$0: [function(_) {
      return this.path;
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {Ref$: [function(path) {
        return new O.Ref(path);
      }, null /* tearOffInfo */, null, 2, 0, 289, 835, "new Ref" /* new Ref:1:0 */]}
  },
  "+Ref": [0],
  Property: {
    "": "Object;propertySymbol<-1227,property<-1039,type<-1158",
    toString$0: [function(_) {
      return "property " + H.S(this.property);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isProperty: true,
    static: {Property$: [function(propertySymbol, property, type) {
        return new O.Property(propertySymbol, property, type);
      }, null /* tearOffInfo */, null, 6, 0, 963, 941, 347, 371, "new Property" /* new Property:3:0 */]}
  },
  "+Property": [0],
  NotNullable: {
    "": "Object;",
    toString$0: [function(_) {
      return "not nullable";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {NotNullable$: [function() {
        return new O.NotNullable();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new NotNullable" /* new NotNullable:0:0 */]}
  },
  "+NotNullable": [0],
  DefaultValue: {
    "": "Object;value<-370",
    toString$0: [function(_) {
      return "default " + H.S(this.value);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isDefaultValue: true,
    static: {DefaultValue$: [function(value) {
        return new O.DefaultValue(value);
      }, null /* tearOffInfo */, null, 2, 0, 241, 280, "new DefaultValue" /* new DefaultValue:1:0 */]}
  },
  "+DefaultValue": [0],
  Transient: {
    "": "Object;",
    toString$0: [function(_) {
      return "transient";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {Transient$: [function() {
        return new O.Transient();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new Transient" /* new Transient:0:0 */]}
  },
  "+Transient": [0],
  Id: {
    "": "Object;insertValue<-370",
    toString$0: [function(_) {
      return "id " + H.S(this.insertValue);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isId: true,
    static: {Id$: [function(insertValue) {
        return new O.Id(insertValue);
      }, null /* tearOffInfo */, null, 2, 0, 241, 964, "new Id" /* new Id:1:0 */]}
  },
  "+Id": [0],
  Immutable: {
    "": "Object;",
    toString$0: [function(_) {
      return "immutable";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isImmutable: true,
    static: {Immutable$: [function() {
        return new O.Immutable();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new Immutable" /* new Immutable:0:0 */]}
  },
  "+Immutable": [0],
  Lazy: {
    "": "Object;",
    toString$0: [function(_) {
      return "lazy";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {Lazy$: [function() {
        return new O.Lazy();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new Lazy" /* new Lazy:0:0 */]}
  },
  "+Lazy": [0],
  LabelField: {
    "": "Object;",
    toString$0: [function(_) {
      return "label field";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {LabelField$: [function() {
        return new O.LabelField();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new LabelField" /* new LabelField:0:0 */]}
  },
  "+LabelField": [0],
  Annotation: {
    "": "Object;maxStringLength<-1075",
    toString$0: [function(_) {
      return "annotation";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    static: {Annotation$: [function(maxStringLength) {
        return new O.Annotation(-1);
      }, null /* tearOffInfo */, null, 0, 3, 965, 370, 966, "new Annotation" /* new Annotation:0:1:maxStringLength */]}
  },
  "+Annotation": [0],
  Externalizable: {
    "": "Object;",
    static: {Externalizable$: [function() {
        return new O.Externalizable();
      }, null /* tearOffInfo */, null, 0, 0, 967, "new Externalizable" /* new Externalizable:0:0 */]}
  },
  "+Externalizable": [0],
  SerializationType: {
    "": "Object;",
    static: {"": "SerializationType_ENTITY_TYPE<-1039,SerializationType_POINTER<-1039,SerializationType_UID<-1039", SerializationType$: [function() {
        return new O.SerializationType();
      }, null /* tearOffInfo */, null, 0, 0, 968, "new SerializationType" /* new SerializationType:0:0 */]}
  },
  "+SerializationType": [0],
  Serializer: {
    "": "Object;",
    "<>": [13],
    static: {Serializer$: [function($T) {
        return H.setRuntimeTypeInfo(new O.Serializer(), [$T]);
      }, null /* tearOffInfo */, null, 0, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "Serializer_", ret: [O.Serializer, T]};
        }, this.$receiver, "Serializer");
      }, "new Serializer" /* new Serializer:0:0 */]}
  },
  "+Serializer": [0],
  SerializerMixin: {
    "": "Object;_convertors:dorm$SerializerMixin$_convertors@-1849",
    addRule$3: [function(forType, incoming, outgoing) {
      return J.add$1$a(this.dorm$SerializerMixin$_convertors, new O._InternalConvertor(forType, incoming, outgoing));
    }, "call$3" /* tearOffInfo */, "get$addRule", 6, 0, 1971, 970, 971, 972, "addRule"],
    removeRule$1: [function(forType) {
      return J.removeWhere$1$a(this.dorm$SerializerMixin$_convertors, new O.SerializerMixin_removeRule_closure(forType));
    }, "call$1" /* tearOffInfo */, "get$removeRule", 2, 0, 1972, 970, "removeRule"],
    convertIn$2: [function(forType, inValue) {
      return inValue;
    }, "call$2" /* tearOffInfo */, "get$convertIn", 4, 0, 1973, 970, 1974, "convertIn"],
    convertOut$2: [function(forType, outValue) {
      return outValue;
    }, "call$2" /* tearOffInfo */, "get$convertOut", 4, 0, 1973, 970, 1975, "convertOut"],
    "<>": [12],
    static: {SerializerMixin$: [function($T) {
        return H.setRuntimeTypeInfo(new O.SerializerMixin(H.setRuntimeTypeInfo([], [O._InternalConvertor])), [$T]);
      }, null /* tearOffInfo */, null, 0, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "SerializerMixin_", ret: [O.SerializerMixin, T]};
        }, this.$receiver, "SerializerMixin");
      }, "new SerializerMixin" /* new SerializerMixin:0:0 */]}
  },
  "+SerializerMixin": [0, 1907],
  SerializerMixin_removeRule_closure: {
    "": "Closure:1976;forType_0-1158",
    call$1: [function(convertor) {
      return J.$eq(convertor.get$forType(), this.forType_0);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1976, 1977, "call"]
  },
  "+SerializerMixin_removeRule_closure": [1060],
  _InternalConvertor: {
    "": "Object;forType<-1158,incoming<-1098,outgoing<-1098",
    incoming$1: function(arg0) {
      return this.incoming.call$1(arg0);
    },
    outgoing$1: function(arg0) {
      return this.outgoing.call$1(arg0);
    },
    $is_InternalConvertor: true,
    static: {_InternalConvertor$: [function(forType, incoming, outgoing) {
        return new O._InternalConvertor(forType, incoming, outgoing);
      }, null /* tearOffInfo */, null, 6, 0, 969, 970, 971, 972, "new _InternalConvertor" /* new _InternalConvertor:3:0 */]}
  },
  "+_InternalConvertor": [0],
  SerializerJson: {
    "": "SerializerBase;dorm$SerializerMixin$_convertors-1849",
    incoming$1: [function(data) {
      return C.C_JsonCodec.decode$1(data);
    }, "call$1" /* tearOffInfo */, "get$incoming", 2, 0, 1978, 546, "incoming"],
    outgoing$1: [function(data) {
      var t1;
      $.Entity__serializerWorkaround = this;
      t1 = J.getInterceptor(data);
      if (typeof data === "object" && data !== null && (data.constructor === Array || !!t1.$isList) || typeof data === "object" && data !== null && !!t1.$isMap)
        return C.C_JsonCodec.encode$1(data);
      return t1.toString$0(data);
    }, "call$1" /* tearOffInfo */, "get$outgoing", 2, 0, 279, 546, "outgoing"],
    convertIn$2: [function(forType, inValue) {
      var convertor = J.firstWhere$2$orElse$a(this.get$_convertors(), new O.SerializerJson_convertIn_closure(forType), new O.SerializerJson_convertIn_closure0());
      return convertor == null ? inValue : convertor.incoming$1(inValue);
    }, "call$2" /* tearOffInfo */, "get$convertIn", 4, 0, 1973, 970, 1974, "convertIn"],
    convertOut$2: [function(forType, outValue) {
      var convertor = J.firstWhere$2$orElse$a(this.get$_convertors(), new O.SerializerJson_convertOut_closure(forType), new O.SerializerJson_convertOut_closure0());
      return convertor == null ? outValue : convertor.outgoing$1(outValue);
    }, "call$2" /* tearOffInfo */, "get$convertOut", 4, 0, 1973, 970, 1975, "convertOut"],
    static: {SerializerJson$_contruct: [function() {
        return new O.SerializerJson(H.setRuntimeTypeInfo([], [O._InternalConvertor]));
      }, null /* tearOffInfo */, null, 0, 0, 319, "new SerializerJson$_contruct" /* new SerializerJson$_contruct:0:0 */], SerializerJson_SerializerJson: [function() {
        return new O.SerializerJson(H.setRuntimeTypeInfo([], [O._InternalConvertor]));
      }, "call$0" /* tearOffInfo */, null, 0, 0, 973, "new SerializerJson" /* new SerializerJson:0:0 */]}
  },
  "+SerializerJson": [1979],
  SerializerJson_convertIn_closure: {
    "": "Closure:1976;forType_0-1158",
    call$1: [function(tmpConvertor) {
      return J.$eq(tmpConvertor.get$forType(), this.forType_0);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1976, 1980, "call"]
  },
  "+SerializerJson_convertIn_closure": [1060],
  SerializerJson_convertIn_closure0: {
    "": "Closure:319;",
    call$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+SerializerJson_convertIn_closure": [1060],
  SerializerJson_convertOut_closure: {
    "": "Closure:1976;forType_0-1158",
    call$1: [function(tmpConvertor) {
      return J.$eq(tmpConvertor.get$forType(), this.forType_0);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1976, 1980, "call"]
  },
  "+SerializerJson_convertOut_closure": [1060],
  SerializerJson_convertOut_closure0: {
    "": "Closure:319;",
    call$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+SerializerJson_convertOut_closure": [1060],
  "": "lazyLoader<-2051"
}],
["dorm_entity_spawn_test", "dorm_benchmark.dart", , M, {
  "": "",
  main: [function() {
    P.print("Template(RunTime): " + H.S(new M.TemplateBenchmark("Template").measure$0()) + " us.");
  }, "call$0" /* tearOffInfo */, "main$closure", 0, 0, 319, "main"],
  _runBenchmark: [function() {
    $.entityFactory.spawn$3($.serializer.incoming$1($.jsonData), $.serializer, M.handleConflictAcceptClient$closure()).forEach$1(0, new M._runBenchmark_closure());
  }, "call$0" /* tearOffInfo */, "_runBenchmark$closure", 0, 0, 494, "_runBenchmark"],
  handleConflictAcceptClient: [function(serverEntity, clientEntity) {
    return C.ConflictManager_2;
  }, "call$2" /* tearOffInfo */, "handleConflictAcceptClient$closure", 4, 0, 974, 975, 976, "handleConflictAcceptClient"],
  handleConflictAcceptServer: [function(serverEntity, clientEntity) {
    return C.ConflictManager_1;
  }, "call$2" /* tearOffInfo */, "handleConflictAcceptServer$closure", 4, 0, 974, 975, 976, "handleConflictAcceptServer"],
  TemplateBenchmark: {
    "": "BenchmarkBase;name-1039",
    run$0: [function() {
      return M._runBenchmark();
    }, "call$0" /* tearOffInfo */, "get$run", 0, 0, 494, "run"],
    setup$0: [function() {
      var jsonRaw, t1, i;
      jsonRaw = H.setRuntimeTypeInfo([], [J.JSString]);
      t1 = $.EntityFactory__instance;
      if (t1 == null) {
        t1 = $.EntityAssembler__instance;
        if (t1 == null) {
          t1 = new O.EntityAssembler(H.setRuntimeTypeInfo([], [O.EntityScan]), H.setRuntimeTypeInfo([], [J.JSArray]), H.setRuntimeTypeInfo([], [O.DormProxy]), new O.EntityKey(P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, [P.Map, null, O.EntityKey]), H.setRuntimeTypeInfo([], [O.EntityScan])));
          $.EntityAssembler__instance = t1;
        }
        t1 = H.setRuntimeTypeInfo(new O.EntityFactory(t1, H.setRuntimeTypeInfo([], [O.EntityPostProcessor])), [null]);
        $.EntityFactory__instance = t1;
      }
      $.entityFactory = t1;
      $.serializer = new O.SerializerJson(H.setRuntimeTypeInfo([], [O._InternalConvertor]));
      $.get$Entity_ASSEMBLER().scan$3(C.Type_qpP, "entities.testEntity", A.TestEntity_construct$closure());
      for (i = 10000; i > 0;) {
        --i;
        jsonRaw.push("{\"id\":" + i + ",\"name\":\"Speed test\",\"type\":\"type_" + i + "\",\"?t\":\"entities.testEntity\"}");
      }
      $.jsonData = "[" + C.JSArray_methods.join$1(jsonRaw, ",") + "]";
    }, "call$0" /* tearOffInfo */, "get$setup", 0, 0, 494, "setup"],
    static: {TemplateBenchmark$: [function() {
        return new M.TemplateBenchmark("Template");
      }, null /* tearOffInfo */, null, 0, 0, 319, "new TemplateBenchmark" /* new TemplateBenchmark:0:0 */], TemplateBenchmark_main: [function() {
        P.print("Template(RunTime): " + H.S(new M.TemplateBenchmark("Template").measure$0()) + " us.");
      }, "call$0" /* tearOffInfo */, "TemplateBenchmark_main$closure", 0, 0, 494, "main"]}
  },
  "+TemplateBenchmark": [1981],
  _runBenchmark_closure: {
    "": "Closure:1982;",
    call$1: [function(testEntity) {
      var t1 = J.getInterceptor$as(testEntity);
      t1.$index(testEntity, C.Symbol_mpK);
      t1.$index(testEntity, C.Symbol_k4X);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 1982, 1983, "call"]
  },
  "+_runBenchmark_closure": [1060],
  "": "jsonData@-1039,serializer@-1907,entityFactory@-1903"
},
1],
["dorm_test", "package:dorm/dorm_test.dart", , A, {
  "": "",
  TestEntitySuperClass: {
    "": ["Entity;_id<-1984,_scan-1924,_isPointer-1043,_changes-1118,_mirror-1290,_values-1853,_records-1854", function() {
      return [C.Property_Snx, C.Id_0, C.C_NotNullable, C.DefaultValue_0, C.C_Immutable];
    }, null, null, null, null, null, null],
    get$refClassName: [function() {
      return "entities.testEntitySuperClass";
    }, null /* tearOffInfo */, null, 1, 0, 253, "refClassName"],
    get$id: [function() {
      return this._id.get$value();
    }, null /* tearOffInfo */, null, 1, 0, 823, "id"],
    set$id: [function(value) {
      var t1, t2;
      t1 = this._id;
      t2 = this._scheduleDirtyCheck$1(F.Observable.prototype.notifyPropertyChange$3.call(this, C.Symbol_mpK, t1.get$value(), value));
      t1.set$value(t2);
      return t2;
    }, null /* tearOffInfo */, null, 3, 0, 689, 280, "id"],
    TestEntitySuperClass$0: [function() {
      $.get$Entity_ASSEMBLER().registerProxies$2(this, H.setRuntimeTypeInfo([this._id], [O.DormProxy]));
    }, null /* tearOffInfo */, null, 0, 0, 319, ""],
    "@": function() {
      return [C.Ref_Grj];
    },
    static: {"": "TestEntitySuperClass_ID<-1039,TestEntitySuperClass_ID_SYMBOL<-1227", TestEntitySuperClass$: [function() {
        var t1 = new A.TestEntitySuperClass(H.setRuntimeTypeInfo(new O.DormProxy(null, null, null, null, "id", C.Symbol_mpK, null, false, false, false, true, true, false, false, 0), [J.JSInt]), null, null, null, null, null, null);
        t1.TestEntitySuperClass$0();
        return t1;
      }, null /* tearOffInfo */, null, 0, 0, 319, "new TestEntitySuperClass" /* new TestEntitySuperClass:0:0 */], TestEntitySuperClass_construct: [function() {
        return A.TestEntitySuperClass$();
      }, "call$0" /* tearOffInfo */, "TestEntitySuperClass_construct$closure", 0, 0, 977, "construct"]}
  },
  "+TestEntitySuperClass": [10],
  TestEntity: {
    "": ["TestEntitySuperClass;_dorm_test$_name<-1985,_date<-1986,_cyclicReference<-1987,_id-1984,_scan-1924,_isPointer-1043,_changes-1118,_mirror-1290,_values-1853,_records-1854", function() {
      return [C.Property_YaG, C.C_LabelField];
    }, function() {
      return [C.Property_iL9];
    }, function() {
      return [C.Property_I6l];
    }, function() {
      return [C.Property_Snx, C.Id_0, C.C_NotNullable, C.DefaultValue_0, C.C_Immutable];
    }, null, null, null, null, null, null],
    get$refClassName: [function() {
      return "entities.testEntity";
    }, null /* tearOffInfo */, null, 1, 0, 253, "refClassName"],
    get$name: [function() {
      return this._dorm_test$_name.get$value();
    }, null /* tearOffInfo */, null, 1, 0, 253, "name"],
    set$name: [function(value) {
      var t1, t2;
      t1 = this._dorm_test$_name;
      t2 = this._scheduleDirtyCheck$1(F.Observable.prototype.notifyPropertyChange$3.call(this, C.Symbol_k4X, t1.get$value(), value));
      t1.set$value(t2);
      return t2;
    }, null /* tearOffInfo */, null, 3, 0, 289, 280, "name"],
    get$date: [function() {
      return this._date.get$value();
    }, null /* tearOffInfo */, null, 1, 0, 784, "date"],
    set$date: [function(value) {
      var t1, t2;
      t1 = this._date;
      t2 = this._scheduleDirtyCheck$1(F.Observable.prototype.notifyPropertyChange$3.call(this, C.Symbol_k4X0, t1.get$value(), value));
      t1.set$value(t2);
      return t2;
    }, null /* tearOffInfo */, null, 3, 0, 1988, 280, "date"],
    get$cyclicReference: [function() {
      return this._cyclicReference.get$value();
    }, null /* tearOffInfo */, null, 1, 0, 978, "cyclicReference"],
    set$cyclicReference: [function(value) {
      var t1, t2;
      t1 = this._cyclicReference;
      t2 = this._scheduleDirtyCheck$1(F.Observable.prototype.notifyPropertyChange$3.call(this, C.Symbol_RvJ, t1.get$value(), value));
      t1.set$value(t2);
      return t2;
    }, null /* tearOffInfo */, null, 3, 0, 1982, 280, "cyclicReference"],
    TestEntity$0: [function() {
      $.get$Entity_ASSEMBLER().registerProxies$2(this, H.setRuntimeTypeInfo([this._dorm_test$_name, this._date, this._cyclicReference], [O.DormProxy]));
    }, null /* tearOffInfo */, null, 0, 0, 319, ""],
    $isTestEntity: true,
    "@": function() {
      return [C.Ref_8I8];
    },
    static: {"": "TestEntity_NAME<-1039,TestEntity_NAME_SYMBOL<-1227,TestEntity_DATE<-1039,TestEntity_DATE_SYMBOL<-1227,TestEntity_CYCLIC_REFERENCE<-1039,TestEntity_CYCLIC_REFERENCE_SYMBOL<-1227", TestEntity$: [function() {
        var t1 = new A.TestEntity(H.setRuntimeTypeInfo(new O.DormProxy(null, null, null, null, "name", C.Symbol_k4X, null, false, false, false, true, true, false, false, 0), [J.JSString]), H.setRuntimeTypeInfo(new O.DormProxy(null, null, null, null, "date", C.Symbol_k4X0, null, false, false, false, true, true, false, false, 0), [P.DateTime]), H.setRuntimeTypeInfo(new O.DormProxy(null, null, null, null, "cyclicReference", C.Symbol_RvJ, null, false, false, false, true, true, false, false, 0), [A.TestEntity]), H.setRuntimeTypeInfo(new O.DormProxy(null, null, null, null, "id", C.Symbol_mpK, null, false, false, false, true, true, false, false, 0), [J.JSInt]), null, null, null, null, null, null);
        t1.TestEntitySuperClass$0();
        t1.TestEntity$0();
        return t1;
      }, null /* tearOffInfo */, null, 0, 0, 319, "new TestEntity" /* new TestEntity:0:0 */], TestEntity_construct: [function() {
        var t1 = new A.TestEntity(H.setRuntimeTypeInfo(new O.DormProxy(null, null, null, null, "name", C.Symbol_k4X, null, false, false, false, true, true, false, false, 0), [J.JSString]), H.setRuntimeTypeInfo(new O.DormProxy(null, null, null, null, "date", C.Symbol_k4X0, null, false, false, false, true, true, false, false, 0), [P.DateTime]), H.setRuntimeTypeInfo(new O.DormProxy(null, null, null, null, "cyclicReference", C.Symbol_RvJ, null, false, false, false, true, true, false, false, 0), [A.TestEntity]), H.setRuntimeTypeInfo(new O.DormProxy(null, null, null, null, "id", C.Symbol_mpK, null, false, false, false, true, true, false, false, 0), [J.JSInt]), null, null, null, null, null, null);
        t1.TestEntitySuperClass$0();
        t1.TestEntity$0();
        return t1;
      }, "call$0" /* tearOffInfo */, "TestEntity_construct$closure", 0, 0, 978, "construct"]}
  },
  "+TestEntity": [1989]
}],
["logging", "package:logging/logging.dart", , N, {
  "": "",
  Logger: {
    "": "Object;name<-1039,parent<-1990,_level@-1991,_children<-1992,children<-1992,_controller@-1993",
    get$fullName: [function() {
      var t1, t2, t3;
      t1 = this.parent;
      t2 = t1 == null || J.$eq(t1.get$name(), "");
      t3 = this.name;
      return t2 ? t3 : H.S(t1.get$fullName()) + "." + H.S(t3);
    }, null /* tearOffInfo */, null, 1, 0, 253, "fullName"],
    get$level: [function() {
      if ($.hierarchicalLoggingEnabled === true) {
        var t1 = this._level;
        if (t1 != null)
          return t1;
        t1 = this.parent;
        if (t1 != null)
          return t1.get$level();
      }
      return $._rootLevel;
    }, null /* tearOffInfo */, null, 1, 0, 1994, "level"],
    set$level: [function(value) {
      if ($.hierarchicalLoggingEnabled === true && this.parent != null)
        this._level = value;
      else {
        if (this.parent != null)
          throw H.wrapException(P.UnsupportedError$("Please set \"hierarchicalLoggingEnabled\" to true if you want to change the level on a non-root logger."));
        $._rootLevel = value;
      }
    }, null /* tearOffInfo */, null, 3, 0, 1995, 280, "level"],
    get$onRecord: [function() {
      return this._getStream$0();
    }, null /* tearOffInfo */, null, 1, 0, 1996, "onRecord"],
    clearListeners$0: [function() {
      if ($.hierarchicalLoggingEnabled === true || this.parent == null) {
        var t1 = this._controller;
        if (t1 != null) {
          t1.close$0();
          this._controller = null;
        }
      } else
        N.Logger_Logger("").clearListeners$0();
    }, "call$0" /* tearOffInfo */, "get$clearListeners", 0, 0, 494, "clearListeners"],
    isLoggable$1: [function(value) {
      return J.$ge$n(value, this.get$level());
    }, "call$1" /* tearOffInfo */, "get$isLoggable", 2, 0, 1997, 280, "isLoggable"],
    log$4: [function(logLevel, message, error, stackTrace) {
      var t1, t2, t3, record, target;
      if (J.$ge$n(logLevel, this.get$level())) {
        t1 = this.get$fullName();
        t2 = new P.DateTime(Date.now(), false);
        t2.DateTime$_now$0();
        t3 = $.LogRecord__nextNumber;
        $.LogRecord__nextNumber = J.$add$ns(t3, 1);
        record = new N.LogRecord(logLevel, message, t1, t2, t3, error, stackTrace);
        if ($.hierarchicalLoggingEnabled === true)
          for (target = this; target != null;) {
            target._publish$1(record);
            target = target.get$parent();
          }
        else
          N.Logger_Logger("")._publish$1(record);
      }
    }, "call$4" /* tearOffInfo */, "get$log", 4, 4, 1998, 370, 370, 1999, 262, 507, 508, "log"],
    finest$3: [function(message, error, stackTrace) {
      return this.log$4(C.Level_FINEST_300, message, error, stackTrace);
    }, "call$3" /* tearOffInfo */, "get$finest", 2, 4, 2000, 370, 370, 262, 507, 508, "finest"],
    finer$3: [function(message, error, stackTrace) {
      return this.log$4(C.Level_FINER_400, message, error, stackTrace);
    }, function(message) {
      return this.finer$3(message, null, null);
    }, "finer$1", "call$3" /* tearOffInfo */, null /* tearOffInfo */, "get$finer", 2, 4, 2000, 370, 370, 262, 507, 508, "finer"],
    fine$3: [function(message, error, stackTrace) {
      return this.log$4(C.Level_FINE_500, message, error, stackTrace);
    }, "call$3" /* tearOffInfo */, "get$fine", 2, 4, 2000, 370, 370, 262, 507, 508, "fine"],
    config$3: [function(message, error, stackTrace) {
      return this.log$4(C.Level_CONFIG_700, message, error, stackTrace);
    }, "call$3" /* tearOffInfo */, "get$config", 2, 4, 2000, 370, 370, 262, 507, 508, "config"],
    info$3: [function(message, error, stackTrace) {
      return this.log$4(C.Level_INFO_800, message, error, stackTrace);
    }, "call$3" /* tearOffInfo */, "get$info", 2, 4, 2000, 370, 370, 262, 507, 508, "info"],
    warning$3: [function(message, error, stackTrace) {
      return this.log$4(C.Level_WARNING_900, message, error, stackTrace);
    }, function(message) {
      return this.warning$3(message, null, null);
    }, "warning$1", "call$3" /* tearOffInfo */, null /* tearOffInfo */, "get$warning", 2, 4, 2000, 370, 370, 262, 507, 508, "warning"],
    severe$3: [function(message, error, stackTrace) {
      return this.log$4(C.Level_SEVERE_1000, message, error, stackTrace);
    }, "call$3" /* tearOffInfo */, "get$severe", 2, 4, 2000, 370, 370, 262, 507, 508, "severe"],
    shout$3: [function(message, error, stackTrace) {
      return this.log$4(C.Level_SHOUT_1200, message, error, stackTrace);
    }, "call$3" /* tearOffInfo */, "get$shout", 2, 4, 2000, 370, 370, 262, 507, 508, "shout"],
    _getStream$0: [function() {
      if ($.hierarchicalLoggingEnabled === true || this.parent == null) {
        var t1 = this._controller;
        if (t1 == null) {
          t1 = P.StreamController_StreamController$broadcast(null, null, true, N.LogRecord);
          this._controller = t1;
        }
        return t1.get$stream();
      } else
        return N.Logger_Logger("")._getStream$0();
    }, "call$0" /* tearOffInfo */, "get$_getStream", 0, 0, 1996, "_getStream"],
    _publish$1: [function(record) {
      var t1 = this._controller;
      if (t1 != null)
        J.add$1$a(t1, record);
    }, "call$1" /* tearOffInfo */, "get$_publish", 2, 0, 2001, 1024, "_publish"],
    Logger$_internal$3: [function($name, $parent, children) {
      var t1 = this.parent;
      if (t1 != null)
        J.$indexSet$a(t1.get$_children(), this.name, this);
    }, null /* tearOffInfo */, null, 6, 0, 980, 346, 620, 981, "_internal"],
    $isLogger: true,
    static: {"": "Logger__loggers<-1992", Logger_Logger: [function($name) {
        return $.get$Logger__loggers().putIfAbsent$2($name, new N.Logger_Logger_closure($name));
      }, "call$1" /* tearOffInfo */, null, 2, 0, 979, 346, "new Logger" /* new Logger:1:0 */], Logger_Logger$_named: [function($name) {
        var t1, dot, t2, $parent, thisName;
        t1 = J.getInterceptor$s($name);
        if (t1.startsWith$1($name, "."))
          throw H.wrapException(new P.ArgumentError("name shouldn't start with a '.'"));
        dot = t1.lastIndexOf$1($name, ".");
        t2 = J.getInterceptor(dot);
        if (t2.$eq(dot, -1)) {
          $parent = !t1.$eq($name, "") ? N.Logger_Logger("") : null;
          thisName = $name;
        } else {
          $parent = N.Logger_Logger(t1.substring$2($name, 0, dot));
          thisName = t1.substring$1($name, t2.$add(dot, 1));
        }
        t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, N.Logger);
        t2 = new N.Logger(thisName, $parent, null, t1, H.setRuntimeTypeInfo(new F.UnmodifiableMapView(t1), [null, null]), null);
        t2.Logger$_internal$3(thisName, $parent, t1);
        return t2;
      }, "call$1" /* tearOffInfo */, null, 2, 0, 979, 346, "new Logger$_named" /* new Logger$_named:1:0 */], Logger$_internal: [function($name, $parent, children) {
        var t1 = new N.Logger($name, $parent, null, children, H.setRuntimeTypeInfo(new F.UnmodifiableMapView(children), [null, null]), null);
        t1.Logger$_internal$3($name, $parent, children);
        return t1;
      }, null /* tearOffInfo */, null, 6, 0, 980, 346, 620, 981, "new Logger$_internal" /* new Logger$_internal:3:0 */], Logger_root: [function() {
        return N.Logger_Logger("");
      }, null /* tearOffInfo */, null, 1, 0, 982, "root"]}
  },
  "+Logger": [0],
  Logger_Logger_closure: {
    "": "Closure:319;name_0-1039",
    call$0: [function() {
      var thisName, t1, dot, t2, $parent;
      thisName = this.name_0;
      t1 = J.getInterceptor$s(thisName);
      if (t1.startsWith$1(thisName, "."))
        H.throwExpression(new P.ArgumentError("name shouldn't start with a '.'"));
      dot = t1.lastIndexOf$1(thisName, ".");
      t2 = J.getInterceptor(dot);
      if (t2.$eq(dot, -1))
        $parent = !t1.$eq(thisName, "") ? N.Logger_Logger("") : null;
      else {
        $parent = N.Logger_Logger(t1.substring$2(thisName, 0, dot));
        thisName = t1.substring$1(thisName, t2.$add(dot, 1));
      }
      t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, N.Logger);
      t2 = new N.Logger(thisName, $parent, null, t1, H.setRuntimeTypeInfo(new F.UnmodifiableMapView(t1), [null, null]), null);
      t2.Logger$_internal$3(thisName, $parent, t1);
      return t2;
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+Logger_Logger_closure": [1060],
  Level: {
    "": "Object;name<-1039,value<-1075",
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$isLevel && J.$eq(this.value, other.value);
    }, "call$1" /* tearOffInfo */, "get$==", 2, 0, 1047, 403, "=="],
    $lt: [function(_, other) {
      return J.$lt$n(this.value, other.get$value());
    }, "call$1" /* tearOffInfo */, "get$<", 2, 0, 1997, 403, "<"],
    $le: [function(_, other) {
      return J.$le$n(this.value, other.get$value());
    }, "call$1" /* tearOffInfo */, "get$<=", 2, 0, 1997, 403, "<="],
    $gt: [function(_, other) {
      return J.$gt$n(this.value, other.get$value());
    }, "call$1" /* tearOffInfo */, "get$>", 2, 0, 1997, 403, ">"],
    $ge: [function(_, other) {
      return J.$ge$n(this.value, other.get$value());
    }, "call$1" /* tearOffInfo */, "get$>=", 2, 0, 1997, 403, ">="],
    compareTo$1: [function(_, other) {
      return J.$sub$n(this.value, other.get$value());
    }, "call$1" /* tearOffInfo */, "get$compareTo", 2, 0, 2002, 403, "compareTo"],
    get$hashCode: [function(_) {
      return this.value;
    }, null /* tearOffInfo */, null, 1, 0, 823, "hashCode"],
    toString$0: [function(_) {
      return this.name;
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isLevel: true,
    static: {"": "Level_ALL<-1991,Level_OFF<-1991,Level_FINEST<-1991,Level_FINER<-1991,Level_FINE<-1991,Level_CONFIG<-1991,Level_INFO<-1991,Level_WARNING<-1991,Level_SEVERE<-1991,Level_SHOUT<-1991", Level$: [function($name, value) {
        return new N.Level($name, value);
      }, null /* tearOffInfo */, null, 4, 0, 828, 346, 280, "new Level" /* new Level:2:0 */]}
  },
  "+Level": [0, 2003],
  LogRecord: {
    "": "Object;level<-1991,message<-1039,loggerName<-1039,time<-2004,sequenceNumber<-1075,error<-0,stackTrace<-1153",
    toString$0: [function(_) {
      return "[" + H.S(this.level.get$name()) + "] " + H.S(this.loggerName) + ": " + H.S(this.message);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isLogRecord: true,
    static: {"": "LogRecord__nextNumber@-1075", LogRecord$: [function(level, message, loggerName, error, stackTrace) {
        var t1, t2;
        t1 = new P.DateTime(Date.now(), false);
        t1.DateTime$_now$0();
        t2 = $.LogRecord__nextNumber;
        $.LogRecord__nextNumber = J.$add$ns(t2, 1);
        return new N.LogRecord(level, message, loggerName, t1, t2, error, stackTrace);
      }, null /* tearOffInfo */, null, 6, 4, 983, 370, 370, 984, 262, 985, 507, 508, "new LogRecord" /* new LogRecord:5:0 */]}
  },
  "+LogRecord": [0],
  "": "_rootLevel@-1991,hierarchicalLoggingEnabled@-1043"
}],
["observe.src.bind_property", "package:observe/src/bind_property.dart", , M, {
  "": "",
  onPropertyChange: [function(source, sourceName, callback) {
    return source.get$changes().listen$1(new M.onPropertyChange_closure(sourceName, callback));
  }, "call$3" /* tearOffInfo */, "onPropertyChange$closure", 6, 0, 986, 292, 987, 277, "onPropertyChange"],
  onPropertyChange_closure: {
    "": "Closure:241;sourceName_0-1227,callback_1-494",
    call$1: [function(records) {
      var t1, t2, record, t3;
      for (t1 = J.get$iterator$a(records), t2 = this.sourceName_0; t1.moveNext$0() === true;) {
        record = t1.get$current();
        t3 = J.getInterceptor(record);
        if (typeof record === "object" && record !== null && !!t3.$isPropertyChangeRecord && J.$eq(record.name, t2)) {
          this.callback_1.call$0();
          break;
        }
      }
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1026, "call"]
  },
  "+onPropertyChange_closure": [1060]
}],
["observe.src.change_notifier", "package:observe/src/change_notifier.dart", , O, {
  "": "",
  ChangeNotifier: {
    "": "Object;_change_notifier$_changes:change_notifier$ChangeNotifier$_change_notifier$_changes@-1118,_change_notifier$_records:change_notifier$ChangeNotifier$_change_notifier$_records@-1854",
    get$changes: [function() {
      var t1 = this.change_notifier$ChangeNotifier$_change_notifier$_changes;
      if (t1 == null) {
        t1 = this.get$observed();
        t1 = P.StreamController_StreamController$broadcast(this.get$unobserved(), t1, true, null);
        this.change_notifier$ChangeNotifier$_change_notifier$_changes = t1;
      }
      return t1.get$stream();
    }, null /* tearOffInfo */, null, 1, 0, 2005, "changes"],
    observed$0: [function() {
      return;
    }, "call$0" /* tearOffInfo */, "get$observed", 0, 0, 494, "observed"],
    unobserved$0: [function() {
      this.change_notifier$ChangeNotifier$_change_notifier$_changes = null;
    }, "call$0" /* tearOffInfo */, "get$unobserved", 0, 0, 494, "unobserved"],
    deliverChanges$0: [function() {
      var records, t1;
      records = this.change_notifier$ChangeNotifier$_change_notifier$_records;
      this.change_notifier$ChangeNotifier$_change_notifier$_records = null;
      t1 = this.change_notifier$ChangeNotifier$_change_notifier$_changes;
      if (t1 != null && t1.get$hasListener() && records != null) {
        J.add$1$a(this.change_notifier$ChangeNotifier$_change_notifier$_changes, H.setRuntimeTypeInfo(new P.UnmodifiableListView(records), [T.ChangeRecord]));
        return true;
      }
      return false;
    }, "call$0" /* tearOffInfo */, "get$deliverChanges", 0, 0, 849, "deliverChanges"],
    get$hasObservers: [function() {
      var t1 = this.change_notifier$ChangeNotifier$_change_notifier$_changes;
      return t1 != null && t1.get$hasListener();
    }, null /* tearOffInfo */, null, 1, 0, 849, "hasObservers"],
    notifyPropertyChange$3: [function(field, oldValue, newValue) {
      return F.notifyPropertyChangeHelper(this, field, oldValue, newValue);
    }, "call$3" /* tearOffInfo */, "get$notifyPropertyChange", 6, 0, 1946, 1030, 990, 991, "notifyPropertyChange"],
    notifyChange$1: [function(record) {
      var t1 = this.change_notifier$ChangeNotifier$_change_notifier$_changes;
      if (!(t1 != null && t1.get$hasListener()))
        return;
      if (this.change_notifier$ChangeNotifier$_change_notifier$_records == null) {
        this.change_notifier$ChangeNotifier$_change_notifier$_records = [];
        P.scheduleMicrotask(this.get$deliverChanges());
      }
      J.add$1$a(this.change_notifier$ChangeNotifier$_change_notifier$_records, record);
    }, "call$1" /* tearOffInfo */, "get$notifyChange", 2, 0, 2006, 1024, "notifyChange"],
    $isObservable: true,
    static: {ChangeNotifier$: [function() {
        return new O.ChangeNotifier(null, null);
      }, null /* tearOffInfo */, null, 0, 0, 988, "new ChangeNotifier" /* new ChangeNotifier:0:0 */]}
  },
  "+ChangeNotifier": [0, 1864]
}],
["observe.src.change_record", "package:observe/src/change_record.dart", , T, {
  "": "",
  ChangeRecord: {
    "": "Object;",
    $isChangeRecord: true,
    static: {ChangeRecord$: [function() {
        return new T.ChangeRecord();
      }, null /* tearOffInfo */, null, 0, 0, 989, "new ChangeRecord" /* new ChangeRecord:0:0 */]}
  },
  "+ChangeRecord": [0],
  PropertyChangeRecord: {
    "": "ChangeRecord;object<-370,name<-1227,oldValue<-2007,newValue<-2007",
    toString$0: [function(_) {
      return "#<PropertyChangeRecord " + H.S(this.name) + " from: " + H.S(this.oldValue) + " to: " + H.S(this.newValue) + ">";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isPropertyChangeRecord: true,
    "<>": [93],
    static: {PropertyChangeRecord$: [function(object, $name, oldValue, newValue, $T) {
        return H.setRuntimeTypeInfo(new T.PropertyChangeRecord(object, $name, oldValue, newValue), [$T]);
      }, null /* tearOffInfo */, null, 8, 0, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic__dynamic_Symbol_T_T", args: [null, P.Symbol0, T, T]};
        }, this.$receiver, "PropertyChangeRecord");
      }, 242, 346, 990, 991, "new PropertyChangeRecord" /* new PropertyChangeRecord:4:0 */]}
  },
  "+PropertyChangeRecord": [2008]
}],
["observe.src.compound_path_observer", "package:observe/src/compound_path_observer.dart", , Y, {
  "": "",
  CompoundPathObserver: {
    "": "ChangeNotifier;_compound_path_observer$_observers@-2009,_compound_path_observer$_subs@-2010,_compound_path_observer$_value@-0,_compound_path_observer$_computeValue<-1098,_started@-1043,_compound_path_observer$_scheduled@-1043,change_notifier$ChangeNotifier$_change_notifier$_changes-1118,change_notifier$ChangeNotifier$_change_notifier$_records-1854",
    _compound_path_observer$_computeValue$1: function(arg0) {
      return this._compound_path_observer$_computeValue.call$1(arg0);
    },
    get$started: [function() {
      return this._started;
    }, null /* tearOffInfo */, null, 1, 0, 849, "started"],
    get$length: [function(_) {
      return J.get$length$as(this._compound_path_observer$_observers);
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$value: [function() {
      return this._compound_path_observer$_value;
    }, null /* tearOffInfo */, null, 1, 0, 319, "value", 2011],
    addPath$2: [function(model, path) {
      if (this._started === true)
        throw H.wrapException(new P.StateError("Cannot add more paths once started."));
      J.add$1$a(this._compound_path_observer$_observers, L.PathObserver$(model, path, null));
    }, "call$2" /* tearOffInfo */, "get$addPath", 4, 0, 2012, 2013, 835, "addPath"],
    start$0: [function() {
      var scheduleResolve, t1, observer, t2, subscription, t3;
      if (this._started === true)
        return;
      this._started = true;
      scheduleResolve = this.get$_scheduleResolve();
      for (t1 = J.get$iterator$a(this._compound_path_observer$_observers); t1.moveNext$0() === true;) {
        observer = t1.get$current();
        t2 = this._compound_path_observer$_subs;
        subscription = observer.get$changes()._createSubscription$1(false);
        t3 = subscription._zone;
        subscription._onData = t3.registerUnaryCallback$1(scheduleResolve);
        subscription._onError = P._registerErrorHandler(P._nullErrorHandler$closure(), t3);
        subscription._onDone = t3.registerCallback$1(P._nullDoneHandler$closure());
        J.add$1$a(t2, subscription);
      }
      this._resolve$0();
    }, "call$0" /* tearOffInfo */, "get$start", 0, 0, 494, "start"],
    _scheduleResolve$1: [function(_) {
      if (this._compound_path_observer$_scheduled === true)
        return;
      this._compound_path_observer$_scheduled = true;
      P.scheduleMicrotask(this.get$_resolve());
    }, "call$1" /* tearOffInfo */, "get$_scheduleResolve", 2, 0, 251, 820, "_scheduleResolve"],
    _resolve$0: [function() {
      this._compound_path_observer$_scheduled = false;
      var newValue = J.map$1$a(this._compound_path_observer$_observers, new Y.CompoundPathObserver__resolve_closure()).toList$0(0);
      if (this._compound_path_observer$_computeValue != null)
        newValue = this._compound_path_observer$_computeValue$1(newValue);
      this._compound_path_observer$_value = F.notifyPropertyChangeHelper(this, C.Symbol_value, this._compound_path_observer$_value, newValue);
    }, "call$0" /* tearOffInfo */, "get$_resolve", 0, 0, 494, "_resolve"],
    close$0: [function() {
      if (J.get$isEmpty$as(this._compound_path_observer$_observers) === true)
        return;
      if (this._started === true)
        for (var t1 = J.get$iterator$a(this._compound_path_observer$_subs); t1.moveNext$0() === true;)
          t1.get$current().cancel$0();
      J.clear$0$a(this._compound_path_observer$_observers);
      J.clear$0$a(this._compound_path_observer$_subs);
      this._compound_path_observer$_value = null;
    }, "call$0" /* tearOffInfo */, "get$close", 0, 0, 494, "close"],
    observed$0: [function() {
      return this.start$0();
    }, "call$0" /* tearOffInfo */, "get$observed", 0, 0, 319, "observed"],
    unobserved$0: [function() {
      return this.close$0();
    }, "call$0" /* tearOffInfo */, "get$unobserved", 0, 0, 319, "unobserved"],
    static: {CompoundPathObserver$: [function(computeValue) {
        return new Y.CompoundPathObserver([], [], null, computeValue, false, false, null, null);
      }, null /* tearOffInfo */, null, 0, 3, 992, 370, 993, "new CompoundPathObserver" /* new CompoundPathObserver:0:1:computeValue */]}
  },
  "+CompoundPathObserver": [2014],
  CompoundPathObserver__resolve_closure: {
    "": "Closure:241;",
    call$1: [function(o) {
      return o.get$value();
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 389, "call"]
  },
  "+CompoundPathObserver__resolve_closure": [1060]
}],
["observe.src.dirty_check", "package:observe/src/dirty_check.dart", , O, {
  "": "",
  allObservablesCount: [function() {
    return $._allObservablesCount;
  }, null /* tearOffInfo */, null, 1, 0, 823, "allObservablesCount"],
  registerObservable: [function(obj) {
    var t1 = $._allObservables;
    if (t1 == null) {
      t1 = H.setRuntimeTypeInfo([], [F.Observable]);
      $._allObservables = t1;
    }
    J.add$1$a(t1, obj);
    $._allObservablesCount = J.$add$ns($._allObservablesCount, 1);
  }, "call$1" /* tearOffInfo */, "registerObservable$closure", 2, 0, 994, 995, "registerObservable"],
  dirtyCheckObservables: [function() {
    var cycles, debugLoop, toCheck, t1, t2, anyChanged, i, t3, observer, info;
    if ($._delivering === true)
      return;
    if ($._allObservables == null)
      return;
    $._delivering = true;
    cycles = 0;
    debugLoop = null;
    do {
      ++cycles;
      if (cycles === 1000)
        debugLoop = [];
      toCheck = $._allObservables;
      t1 = [];
      t1.$builtinTypeInfo = [F.Observable];
      $._allObservables = t1;
      t1 = J.getInterceptor$as(toCheck);
      t2 = debugLoop != null;
      anyChanged = false;
      i = 0;
      while (true) {
        t3 = t1.get$length(toCheck);
        if (typeof t3 !== "number")
          return H.iae(t3);
        if (!(i < t3))
          break;
        observer = t1.$index(toCheck, i);
        if (observer.get$hasObservers()) {
          if (observer.deliverChanges$0()) {
            if (t2)
              debugLoop.push([i, observer]);
            anyChanged = true;
          }
          J.add$1$a($._allObservables, observer);
        }
        ++i;
      }
    } while (cycles < 1000 && anyChanged);
    if (t2 && anyChanged) {
      t1 = $.get$_logger();
      t1.warning$1("Possible loop in Observable.dirtyCheck, stopped checking.");
      for (t2 = H.setRuntimeTypeInfo(new H.ListIterator(debugLoop, debugLoop.length, 0, null), [H.getTypeArgumentByIndex(debugLoop, 0)]); t2.moveNext$0();) {
        info = t2._current;
        t3 = J.getInterceptor$as(info);
        t1.warning$1("In last iteration Observable changed at index " + H.S(t3.$index(info, 0)) + ", object: " + H.S(t3.$index(info, 1)) + ".");
      }
    }
    $._allObservablesCount = J.get$length$as($._allObservables);
    $._delivering = false;
  }, "call$0" /* tearOffInfo */, "dirtyCheckObservables$closure", 0, 0, 494, "dirtyCheckObservables"],
  dirtyCheckZoneSpec: [function() {
    var t1 = {};
    t1.pending_0 = false;
    t1 = new O.dirtyCheckZoneSpec_enqueueDirtyCheck(t1);
    return new P._ZoneSpecification(null, null, null, null, new O.dirtyCheckZoneSpec_wrapCallback(t1), new O.dirtyCheckZoneSpec_wrapUnaryCallback(t1), null, null, null, null, null, null);
  }, "call$0" /* tearOffInfo */, "dirtyCheckZoneSpec$closure", 0, 0, 996, "dirtyCheckZoneSpec"],
  dirtyCheckZone: [function() {
    return $.Zone__current.fork$1$specification(O.dirtyCheckZoneSpec());
  }, "call$0" /* tearOffInfo */, "dirtyCheckZone$closure", 0, 0, 616, "dirtyCheckZone"],
  dirtyCheckZoneSpec_enqueueDirtyCheck: {
    "": "Closure:2015;box_0-370",
    call$2: [function($parent, zone) {
      var t1 = this.box_0;
      if (t1.pending_0 === true)
        return;
      t1.pending_0 = true;
      $parent.scheduleMicrotask$2(zone, new O.dirtyCheckZoneSpec_enqueueDirtyCheck_closure(t1));
    }, "call$2" /* tearOffInfo */, null, 4, 0, 2015, 620, 510, "call"]
  },
  "+dirtyCheckZoneSpec_enqueueDirtyCheck": [1060],
  dirtyCheckZoneSpec_enqueueDirtyCheck_closure: {
    "": "Closure:319;box_0-370",
    call$0: [function() {
      this.box_0.pending_0 = false;
      O.dirtyCheckObservables();
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+dirtyCheckZoneSpec_enqueueDirtyCheck_closure": [1060],
  dirtyCheckZoneSpec_wrapCallback: {
    "": "Closure:625;enqueueDirtyCheck_1-2015",
    call$4: [function($self, $parent, zone, f) {
      if (f == null)
        return f;
      return new O.dirtyCheckZoneSpec_wrapCallback_closure(this.enqueueDirtyCheck_1, $parent, zone, f);
    }, "call$4" /* tearOffInfo */, null, 8, 0, 625, 624, 620, 510, 412, "call"]
  },
  "+dirtyCheckZoneSpec_wrapCallback": [1060],
  dirtyCheckZoneSpec_wrapCallback_closure: {
    "": "Closure:319;enqueueDirtyCheck_2-2015,parent_3-1541,zone_4-1336,f_5-319",
    call$0: [function() {
      this.enqueueDirtyCheck_2.call$2(this.parent_3, this.zone_4);
      return this.f_5.call$0();
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+dirtyCheckZoneSpec_wrapCallback_closure": [1060],
  dirtyCheckZoneSpec_wrapUnaryCallback: {
    "": "Closure:2016;enqueueDirtyCheck_6-2015",
    call$4: [function($self, $parent, zone, f) {
      if (f == null)
        return f;
      return new O.dirtyCheckZoneSpec_wrapUnaryCallback_closure(this.enqueueDirtyCheck_6, $parent, zone, f);
    }, "call$4" /* tearOffInfo */, null, 8, 0, 2016, 624, 620, 510, 412, "call"]
  },
  "+dirtyCheckZoneSpec_wrapUnaryCallback": [1060],
  dirtyCheckZoneSpec_wrapUnaryCallback_closure: {
    "": "Closure:241;enqueueDirtyCheck_7-2015,parent_8-1541,zone_9-1336,f_10-241",
    call$1: [function(x) {
      this.enqueueDirtyCheck_7.call$2(this.parent_8, this.zone_9);
      return this.f_10.call$1(x);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 274, "call"]
  },
  "+dirtyCheckZoneSpec_wrapUnaryCallback_closure": [1060],
  "": "_logger<-1990,MAX_DIRTY_CHECK_CYCLES<-370,_delivering@-1043,_allObservables@-2050,_allObservablesCount@-1075"
}],
["observe.src.list_diff", "package:observe/src/list_diff.dart", , G, {
  "": "",
  _calcEditDistances: [function(current, currentStart, currentEnd, old, oldStart, oldEnd) {
    var rowCount, columnCount, distances, t1, i, t2, j, t3, t4, t5, t6, t7, t8, t9, north, west;
    rowCount = J.$add$ns(J.$sub$n(oldEnd, oldStart), 1);
    columnCount = J.$add$ns(J.$sub$n(currentEnd, currentStart), 1);
    if (typeof rowCount !== "number")
      return H.iae(rowCount);
    distances = Array(rowCount);
    distances.fixed$length = init;
    for (t1 = distances.length, i = 0; i < rowCount; ++i) {
      if (typeof columnCount !== "number")
        return H.iae(columnCount);
      t2 = Array(columnCount);
      t2.fixed$length = init;
      if (i >= t1)
        return H.ioore(distances, i);
      distances[i] = t2;
      if (0 < 0 || 0 >= t2.length)
        return H.ioore(t2, 0);
      t2[0] = i;
    }
    if (typeof columnCount !== "number")
      return H.iae(columnCount);
    j = 0;
    for (; j < columnCount; ++j) {
      if (0 >= t1)
        return H.ioore(distances, 0);
      J.$indexSet$a(distances[0], j, j);
    }
    for (t2 = J.getInterceptor$ns(oldStart), t3 = J.getInterceptor$as(old), t4 = J.getInterceptor$ns(currentStart), t5 = J.getInterceptor$as(current), i = 1; i < rowCount; ++i)
      for (t6 = i - 1, j = 1; j < columnCount; ++j) {
        t7 = J.$eq(t3.$index(old, J.$sub$n(t2.$add(oldStart, i), 1)), t5.$index(current, J.$sub$n(t4.$add(currentStart, j), 1)));
        t8 = j - 1;
        t9 = distances[t6];
        if (t7) {
          if (i >= t1)
            return H.ioore(distances, i);
          t7 = distances[i];
          if (t6 >= t1)
            return H.ioore(distances, t6);
          J.$indexSet$a(t7, j, J.$index$as(t9, t8));
        } else {
          if (t6 >= t1)
            return H.ioore(distances, t6);
          north = J.$add$ns(J.$index$as(t9, j), 1);
          if (i >= t1)
            return H.ioore(distances, i);
          west = J.$add$ns(J.$index$as(distances[i], t8), 1);
          J.$indexSet$a(distances[i], j, P.min(north, west));
        }
      }
    return distances;
  }, "call$6" /* tearOffInfo */, "_calcEditDistances$closure", 12, 0, 1003, 1004, 1005, 1006, 1007, 1008, 1009, "_calcEditDistances"],
  _spliceOperationsFromEditDistances: [function(distances) {
    var t1, i, j, current, edits, t2, t3, northWest, west, north, min;
    t1 = J.getInterceptor$as(distances);
    i = J.$sub$n(t1.get$length(distances), 1);
    j = J.$sub$n(J.get$length$as(t1.$index(distances, 0)), 1);
    current = J.$index$as(t1.$index(distances, i), j);
    edits = [];
    while (true) {
      t2 = J.getInterceptor$n(i);
      if (!(t2.$gt(i, 0) || J.$gt$n(j, 0)))
        break;
      c$0: {
        if (t2.$eq(i, 0)) {
          edits.push(2);
          j = J.$sub$n(j, 1);
          break c$0;
        }
        t3 = J.getInterceptor(j);
        if (t3.$eq(j, 0)) {
          edits.push(3);
          i = t2.$sub(i, 1);
          break c$0;
        }
        northWest = J.$index$as(t1.$index(distances, t2.$sub(i, 1)), t3.$sub(j, 1));
        west = J.$index$as(t1.$index(distances, t2.$sub(i, 1)), j);
        north = J.$index$as(t1.$index(distances, i), t3.$sub(j, 1));
        min = P.min(P.min(west, north), northWest);
        if (min === northWest) {
          if (J.$eq(northWest, current))
            edits.push(0);
          else {
            edits.push(1);
            current = northWest;
          }
          i = t2.$sub(i, 1);
          j = t3.$sub(j, 1);
        } else if (min === west) {
          edits.push(3);
          i = t2.$sub(i, 1);
          current = west;
        } else {
          edits.push(2);
          j = t3.$sub(j, 1);
          current = north;
        }
      }
    }
    return H.setRuntimeTypeInfo(new H.ReversedListIterable(edits), [null]).toList$0(0);
  }, "call$1" /* tearOffInfo */, "_spliceOperationsFromEditDistances$closure", 2, 0, 1010, 1011, "_spliceOperationsFromEditDistances"],
  _sharedPrefix: [function(arr1, arr2, searchLength) {
    var t1, t2, i;
    if (typeof searchLength !== "number")
      return H.iae(searchLength);
    t1 = J.getInterceptor$as(arr1);
    t2 = J.getInterceptor$as(arr2);
    i = 0;
    for (; i < searchLength; ++i)
      if (!J.$eq(t1.$index(arr1, i), t2.$index(arr2, i)))
        return i;
    return searchLength;
  }, "call$3" /* tearOffInfo */, "_sharedPrefix$closure", 6, 0, 1012, 1013, 1014, 1015, "_sharedPrefix"],
  _sharedSuffix: [function(arr1, arr2, searchLength) {
    var t1, index1, t2, index2, count, t3;
    t1 = J.getInterceptor$as(arr1);
    index1 = t1.get$length(arr1);
    t2 = J.getInterceptor$as(arr2);
    index2 = t2.get$length(arr2);
    if (typeof searchLength !== "number")
      return H.iae(searchLength);
    count = 0;
    while (true) {
      if (count < searchLength) {
        index1 = J.$sub$n(index1, 1);
        t3 = t1.$index(arr1, index1);
        index2 = J.$sub$n(index2, 1);
        t3 = J.$eq(t3, t2.$index(arr2, index2));
      } else
        t3 = false;
      if (!t3)
        break;
      ++count;
    }
    return count;
  }, "call$3" /* tearOffInfo */, "_sharedSuffix$closure", 6, 0, 1012, 1013, 1014, 1015, "_sharedSuffix"],
  calcSplices: [function(current, currentStart, currentEnd, old, oldStart, oldEnd) {
    var t1, t2, minLength, t3, prefixCount, suffixCount, removed, splice, oldStart0, ops, splices, oldIndex, index, i;
    t1 = J.getInterceptor$n(currentEnd);
    t2 = J.getInterceptor$n(oldEnd);
    minLength = P.min(t1.$sub(currentEnd, currentStart), t2.$sub(oldEnd, oldStart));
    t3 = J.getInterceptor(currentStart);
    prefixCount = t3.$eq(currentStart, 0) && J.$eq(oldStart, 0) ? G._sharedPrefix(current, old, minLength) : 0;
    if (t1.$eq(currentEnd, J.get$length$as(current)) && t2.$eq(oldEnd, J.get$length$as(old))) {
      if (typeof prefixCount !== "number")
        return H.iae(prefixCount);
      suffixCount = G._sharedSuffix(current, old, minLength - prefixCount);
    } else
      suffixCount = 0;
    currentStart = t3.$add(currentStart, prefixCount);
    oldStart = J.$add$ns(oldStart, prefixCount);
    currentEnd = t1.$sub(currentEnd, suffixCount);
    oldEnd = t2.$sub(oldEnd, suffixCount);
    t1 = J.getInterceptor$n(currentEnd);
    if (J.$eq(t1.$sub(currentEnd, currentStart), 0) && J.$eq(J.$sub$n(oldEnd, oldStart), 0))
      return C.List_empty0;
    if (J.$eq(currentStart, currentEnd)) {
      removed = [];
      t1 = new P.UnmodifiableListView(removed);
      t1.$builtinTypeInfo = [null];
      splice = new G.ListChangeRecord(current, t1, removed, currentStart, 0);
      for (t1 = J.getInterceptor$as(old); t2 = J.getInterceptor$n(oldStart), t2.$lt(oldStart, oldEnd); oldStart = oldStart0) {
        t3 = splice._removed;
        oldStart0 = t2.$add(oldStart, 1);
        J.add$1$a(t3, t1.$index(old, oldStart));
      }
      return [splice];
    } else if (J.$eq(oldStart, oldEnd)) {
      t1 = t1.$sub(currentEnd, currentStart);
      removed = [];
      t2 = new P.UnmodifiableListView(removed);
      t2.$builtinTypeInfo = [null];
      return [new G.ListChangeRecord(current, t2, removed, currentStart, t1)];
    }
    ops = G._spliceOperationsFromEditDistances(G._calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));
    splices = [];
    splices.$builtinTypeInfo = [G.ListChangeRecord];
    for (t1 = J.getInterceptor$as(old), oldIndex = oldStart, index = currentStart, splice = null, i = 0; i < ops.length; ++i)
      switch (ops[i]) {
        case 0:
          if (splice != null) {
            splices.push(splice);
            splice = null;
          }
          index = J.$add$ns(index, 1);
          oldIndex = J.$add$ns(oldIndex, 1);
          break;
        case 1:
          if (splice == null) {
            removed = [];
            t2 = new P.UnmodifiableListView(removed);
            t2.$builtinTypeInfo = [null];
            splice = new G.ListChangeRecord(current, t2, removed, index, 0);
          }
          splice._addedCount = J.$add$ns(splice._addedCount, 1);
          index = J.$add$ns(index, 1);
          J.add$1$a(splice._removed, t1.$index(old, oldIndex));
          oldIndex = J.$add$ns(oldIndex, 1);
          break;
        case 2:
          if (splice == null) {
            removed = [];
            t2 = new P.UnmodifiableListView(removed);
            t2.$builtinTypeInfo = [null];
            splice = new G.ListChangeRecord(current, t2, removed, index, 0);
          }
          splice._addedCount = J.$add$ns(splice._addedCount, 1);
          index = J.$add$ns(index, 1);
          break;
        case 3:
          if (splice == null) {
            removed = [];
            t2 = new P.UnmodifiableListView(removed);
            t2.$builtinTypeInfo = [null];
            splice = new G.ListChangeRecord(current, t2, removed, index, 0);
          }
          J.add$1$a(splice._removed, t1.$index(old, oldIndex));
          oldIndex = J.$add$ns(oldIndex, 1);
          break;
        default:
      }
    if (splice != null)
      splices.push(splice);
    return splices;
  }, "call$6" /* tearOffInfo */, "calcSplices$closure", 12, 0, 1016, 1004, 1005, 1006, 1007, 1008, 1009, "calcSplices"],
  _intersect: [function(start1, end1, start2, end2) {
    return P.min(end1, end2) - P.max(start1, start2);
  }, "call$4" /* tearOffInfo */, "_intersect$closure", 8, 0, 1017, 1018, 1019, 1020, 1021, "_intersect"],
  _mergeSplice: [function(splices, record) {
    var t1, t2, t3, addedCount, t4, splice, inserted, insertionOffset, i, current, intersectCount, deleteCount, removed, offset;
    t1 = record.get$object();
    t2 = record.get$index();
    t3 = J.toList$0$a(record.get$_removed());
    addedCount = record.get$addedCount();
    if (addedCount == null)
      addedCount = 0;
    t4 = new P.UnmodifiableListView(t3);
    t4.$builtinTypeInfo = [null];
    splice = new G.ListChangeRecord(t1, t4, t3, t2, addedCount);
    t1 = J.getInterceptor$as(splices);
    inserted = false;
    insertionOffset = 0;
    i = 0;
    while (true) {
      t2 = t1.get$length(splices);
      if (typeof t2 !== "number")
        return H.iae(t2);
      if (!(i < t2))
        break;
      c$0: {
        current = t1.$index(splices, i);
        current.set$_list_diff$_index(J.$add$ns(current.get$_list_diff$_index(), insertionOffset));
        if (inserted)
          break c$0;
        t2 = splice._list_diff$_index;
        t3 = J.$add$ns(t2, J.get$length$as(splice._unmodifiableRemoved));
        t4 = current.get$index();
        intersectCount = P.min(t3, J.$add$ns(current.get$index(), current.get$addedCount())) - P.max(t2, t4);
        if (intersectCount >= 0) {
          t1.removeAt$1(splices, i);
          --i;
          t2 = J.$sub$n(current.get$addedCount(), J.get$length$as(current.get$removed()));
          if (typeof t2 !== "number")
            return H.iae(t2);
          insertionOffset -= t2;
          splice._addedCount = J.$add$ns(splice._addedCount, J.$sub$n(current.get$addedCount(), intersectCount));
          deleteCount = J.$sub$n(J.$add$ns(J.get$length$as(splice._unmodifiableRemoved), J.get$length$as(current.get$removed())), intersectCount);
          if (J.$eq(splice._addedCount, 0) && J.$eq(deleteCount, 0))
            inserted = true;
          else {
            removed = current.get$_removed();
            if (J.$lt$n(splice._list_diff$_index, current.get$index()))
              J.insertAll$2$a(removed, 0, J.getRange$2$a(splice._unmodifiableRemoved, 0, J.$sub$n(current.get$index(), splice._list_diff$_index)));
            if (J.$gt$n(J.$add$ns(splice._list_diff$_index, J.get$length$as(splice._unmodifiableRemoved)), J.$add$ns(current.get$index(), current.get$addedCount())))
              J.addAll$1$a(removed, J.getRange$2$a(splice._unmodifiableRemoved, J.$sub$n(J.$add$ns(current.get$index(), current.get$addedCount()), splice._list_diff$_index), J.get$length$as(splice._unmodifiableRemoved)));
            splice._removed = removed;
            splice._unmodifiableRemoved = current.get$_unmodifiableRemoved();
            if (J.$lt$n(current.get$index(), splice._list_diff$_index))
              splice._list_diff$_index = current.get$index();
            inserted = false;
          }
        } else if (J.$lt$n(splice._list_diff$_index, current.get$index())) {
          t1.insert$2(splices, i, splice);
          ++i;
          offset = J.$sub$n(splice._addedCount, J.get$length$as(splice._unmodifiableRemoved));
          current.set$_list_diff$_index(J.$add$ns(current.get$_list_diff$_index(), offset));
          if (typeof offset !== "number")
            return H.iae(offset);
          insertionOffset += offset;
          inserted = true;
        } else
          inserted = false;
      }
      ++i;
    }
    if (!inserted)
      t1.add$1(splices, splice);
  }, "call$2" /* tearOffInfo */, "_mergeSplice$closure", 4, 0, 1022, 1023, 1024, "_mergeSplice"],
  _createInitialSplices: [function(list, records) {
    var splices, t1;
    splices = H.setRuntimeTypeInfo([], [G.ListChangeRecord]);
    for (t1 = J.get$iterator$a(records); t1.moveNext$0() === true;)
      G._mergeSplice(splices, t1.get$current());
    return splices;
  }, "call$2" /* tearOffInfo */, "_createInitialSplices$closure", 4, 0, 1025, 352, 1026, "_createInitialSplices"],
  projectListSplices: [function(list, records) {
    var splices, t1, t2, splice;
    if (J.$eq(J.get$length$as(records), 1))
      return records;
    splices = [];
    for (t1 = G._createInitialSplices(list, records), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]), t2 = J.getInterceptor$as(list); t1.moveNext$0();) {
      splice = t1._current;
      if (J.$eq(splice.get$addedCount(), 1) && J.$eq(J.get$length$as(splice.get$removed()), 1)) {
        if (!J.$eq(J.$index$as(splice.get$removed(), 0), t2.$index(list, splice.get$index())))
          splices.push(splice);
        continue;
      }
      C.JSArray_methods.addAll$1(splices, G.calcSplices(list, splice.get$index(), J.$add$ns(splice.get$index(), splice.get$addedCount()), splice.get$_removed(), 0, J.get$length$as(splice.get$removed())));
    }
    return splices;
  }, "call$2" /* tearOffInfo */, "projectListSplices$closure", 4, 0, 1027, 352, 1026, "projectListSplices"],
  ListChangeRecord: {
    "": "Object;object<-1129,_unmodifiableRemoved@-2017,_removed@-1129,_list_diff$_index@-1075,_addedCount@-1075",
    get$index: [function() {
      return this._list_diff$_index;
    }, null /* tearOffInfo */, null, 1, 0, 823, "index"],
    get$removed: [function() {
      return this._unmodifiableRemoved;
    }, null /* tearOffInfo */, null, 1, 0, 1140, "removed"],
    get$addedCount: [function() {
      return this._addedCount;
    }, null /* tearOffInfo */, null, 1, 0, 823, "addedCount"],
    indexChanged$1: [function(key) {
      var t1;
      if (typeof key === "number" && Math.floor(key) === key) {
        t1 = this._list_diff$_index;
        if (typeof t1 !== "number")
          return H.iae(t1);
        t1 = key < t1;
      } else
        t1 = true;
      if (t1)
        return false;
      if (!J.$eq(this._addedCount, J.get$length$as(this._unmodifiableRemoved)))
        return true;
      return J.$lt$n(key, J.$add$ns(this._list_diff$_index, this._addedCount));
    }, "call$1" /* tearOffInfo */, "get$indexChanged", 2, 0, 273, 312, "indexChanged"],
    toString$0: [function(_) {
      return "#<ListChangeRecord index: " + H.S(this._list_diff$_index) + ", removed: " + H.S(this._unmodifiableRemoved) + ", addedCount: " + H.S(this._addedCount) + ">";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isListChangeRecord: true,
    static: {ListChangeRecord$_: [function(object, _index, removed, _addedCount) {
        return new G.ListChangeRecord(object, H.setRuntimeTypeInfo(new P.UnmodifiableListView(removed), [null]), removed, _index, _addedCount);
      }, null /* tearOffInfo */, null, 8, 0, 997, 242, 998, 999, 1000, "new ListChangeRecord$_" /* new ListChangeRecord$_:4:0 */], ListChangeRecord_ListChangeRecord: [function(object, index, addedCount, removed) {
        var t1;
        if (removed == null)
          removed = [];
        if (addedCount == null)
          addedCount = 0;
        t1 = new P.UnmodifiableListView(removed);
        t1.$builtinTypeInfo = [null];
        return new G.ListChangeRecord(object, t1, removed, index, addedCount);
      }, "call$4$addedCount$removed" /* tearOffInfo */, null, 4, 5, 1001, 370, 370, 242, 321, 1002, 999, "new ListChangeRecord" /* new ListChangeRecord:2:2:addedCount:removed */]}
  },
  "+ListChangeRecord": [0],
  "": "_EDIT_DELETE<-370,_EDIT_ADD<-370,_EDIT_UPDATE<-370,_EDIT_LEAVE<-370"
}],
["observe.src.list_path_observer", "package:observe/src/list_path_observer.dart", , T, {
  "": "",
  ListPathObserver: {
    "": "ChangeNotifier;list<-2018,_itemPath<-1039,_observers<-2009,_list_path_observer$_subs<-2010,_sub@-1449,_scheduled@-1043,_list_path_observer$_value@-2019,change_notifier$ChangeNotifier$_change_notifier$_changes-1118,change_notifier$ChangeNotifier$_change_notifier$_records-1854",
    get$value: [function() {
      return this._list_path_observer$_value;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E, P) {
        return {func: "Iterable_13", ret: [P.Iterable, P]};
      }, this.$receiver, "ListPathObserver");
    }, "value", 2011],
    dispose$0: [function() {
      var t1, t2;
      t1 = this._sub;
      if (t1 != null)
        t1.cancel$0();
      t1 = this._list_path_observer$_subs;
      t2 = J.getInterceptor$a(t1);
      t2.forEach$1(t1, new T.ListPathObserver_dispose_closure());
      t2.clear$0(t1);
    }, "call$0" /* tearOffInfo */, "get$dispose", 0, 0, 494, "dispose"],
    _reduce$0: [function() {
      this._scheduled = false;
      var newValue = J.map$1$a(this._observers, new T.ListPathObserver__reduce_closure());
      this._list_path_observer$_value = F.notifyPropertyChangeHelper(this, C.Symbol_value, this._list_path_observer$_value, newValue);
    }, "call$0" /* tearOffInfo */, "get$_reduce", 0, 0, 494, "_reduce"],
    _scheduleReduce$1: [function(_) {
      if (this._scheduled === true)
        return;
      this._scheduled = true;
      P.scheduleMicrotask(this.get$_reduce());
    }, "call$1" /* tearOffInfo */, "get$_scheduleReduce", 2, 0, 251, 820, "_scheduleReduce"],
    _observeItems$1: [function(lengthAdjust) {
      var t1, t2, t3, t4, t5, i, pathObs, t6, t7, subscription, len;
      t1 = J.getInterceptor$n(lengthAdjust);
      if (t1.$gt(lengthAdjust, 0)) {
        if (typeof lengthAdjust !== "number")
          return H.iae(lengthAdjust);
        t1 = this._observers;
        t2 = J.getInterceptor$as(t1);
        t3 = this.list;
        t4 = this._itemPath;
        t5 = this._list_path_observer$_subs;
        i = 0;
        for (; i < lengthAdjust; ++i) {
          pathObs = L.PathObserver$(t3, H.S(t2.get$length(t1)) + "." + H.S(t4), null);
          t6 = pathObs.change_notifier$ChangeNotifier$_change_notifier$_changes;
          if (t6 == null) {
            t6 = pathObs.get$observed();
            t7 = pathObs.get$unobserved();
            t6 = new P._SyncBroadcastStreamController(t6, t7, 0, null, null, null, null);
            t6.$builtinTypeInfo = [null];
            t6._async$_previous = t6;
            t6._async$_next = t6;
            pathObs.change_notifier$ChangeNotifier$_change_notifier$_changes = t6;
          }
          t6 = t6.get$stream();
          t7 = this.get$_scheduleReduce();
          subscription = t6._createSubscription$1(false);
          t6 = subscription._zone;
          subscription._onData = t6.registerUnaryCallback$1(t7);
          subscription._onError = P._registerErrorHandler(P._nullErrorHandler$closure(), t6);
          subscription._onDone = t6.registerCallback$1(P._nullDoneHandler$closure());
          J.add$1$a(t5, subscription);
          t2.add$1(t1, pathObs);
        }
      } else if (t1.$lt(lengthAdjust, 0)) {
        for (t2 = this._list_path_observer$_subs, t3 = J.getInterceptor$a(t2), i = 0; i < t1.$negate(lengthAdjust); ++i)
          t3.removeLast$0(t2).cancel$0();
        t1 = this._observers;
        t2 = J.getInterceptor$as(t1);
        len = t2.get$length(t1);
        t2.removeRange$2(t1, J.$add$ns(len, lengthAdjust), len);
      }
    }, "call$1" /* tearOffInfo */, "get$_observeItems", 2, 0, 1055, 2020, "_observeItems"],
    ListPathObserver$2: [function(list, path, $E, $P) {
      var t1 = this.list;
      this._sub = t1.get$listChanges().listen$1(new T.ListPathObserver_closure(this));
      this._observeItems$1(J.get$length$as(t1));
      this._reduce$0();
    }, null /* tearOffInfo */, null, 4, 0, function() {
      return H.computeSignature(function(E, P) {
        return {func: "dynamic__ObservableList_String", args: [[Q.ObservableList, E], J.JSString]};
      }, this.$receiver, "ListPathObserver");
    }, 352, 835, ""],
    "<>": [137, 138],
    static: {ListPathObserver$: [function(list, path, $E, $P) {
        var t1 = H.setRuntimeTypeInfo(new T.ListPathObserver(list, path, H.setRuntimeTypeInfo([], [L.PathObserver]), H.setRuntimeTypeInfo([], [P.StreamSubscription]), null, false, null, null, null), [$E, $P]);
        t1.ListPathObserver$2(list, path, $E, $P);
        return t1;
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(E, P) {
          return {func: "dynamic__ObservableList_String", args: [[Q.ObservableList, E], J.JSString]};
        }, this.$receiver, "ListPathObserver");
      }, 352, 835, "new ListPathObserver" /* new ListPathObserver:2:0 */]}
  },
  "+ListPathObserver": [2014],
  ListPathObserver_closure: {
    "": "Closure:241;this_0-370",
    call$1: [function(records) {
      var t1, t2, record;
      for (t1 = J.get$iterator$a(records), t2 = this.this_0; t1.moveNext$0() === true;) {
        record = t1.get$current();
        t2._observeItems$1(J.$sub$n(record.get$addedCount(), J.get$length$as(record.get$removed())));
      }
      t2._scheduleReduce$1(null);
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1026, "call"]
  },
  "+ListPathObserver_closure": [1060],
  ListPathObserver_dispose_closure: {
    "": "Closure:241;",
    call$1: [function(s) {
      return s.cancel$0();
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 383, "call"]
  },
  "+ListPathObserver_dispose_closure": [1060],
  ListPathObserver__reduce_closure: {
    "": "Closure:241;",
    call$1: [function(o) {
      return o.get$value();
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 389, "call"]
  },
  "+ListPathObserver__reduce_closure": [1060]
}],
["observe.src.metadata", "package:observe/src/metadata.dart", , K, {
  "": "",
  ObservableProperty: {
    "": "Object;",
    static: {ObservableProperty$: [function() {
        return new K.ObservableProperty();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new ObservableProperty" /* new ObservableProperty:0:0 */]}
  },
  "+ObservableProperty": [0],
  Reflectable: {
    "": "Object;",
    static: {Reflectable$: [function() {
        return new K.Reflectable();
      }, null /* tearOffInfo */, null, 0, 0, 319, "new Reflectable" /* new Reflectable:0:0 */]}
  },
  "+Reflectable": [0],
  "": "reflectable<-2052,observable<-2053"
}],
["observe.src.observable", "package:observe/src/observable.dart", , F, {
  "": "",
  notifyPropertyChangeHelper: [function(obj, field, oldValue, newValue) {
    if (obj.get$hasObservers() && !J.$eq(oldValue, newValue))
      obj.notifyChange$1(H.setRuntimeTypeInfo(new T.PropertyChangeRecord(obj, field, oldValue, newValue), [null]));
    return newValue;
  }, "call$4" /* tearOffInfo */, "notifyPropertyChangeHelper$closure", 8, 0, 1029, 995, 1030, 990, 991, "notifyPropertyChangeHelper"],
  Observable: {
    "": "Object;_changes@-1118,_mirror@-1290,_values@-1853,_records@-1854",
    get$changes: [function() {
      var t1 = this._changes;
      if (t1 == null) {
        t1 = this.get$_observed();
        t1 = P.StreamController_StreamController$broadcast(this.get$_unobserved(), t1, true, null);
        this._changes = t1;
      }
      return t1.get$stream();
    }, null /* tearOffInfo */, null, 1, 0, 2005, "changes"],
    get$hasObservers: [function() {
      var t1 = this._changes;
      return t1 != null && t1.get$hasListener();
    }, null /* tearOffInfo */, null, 1, 0, 849, "hasObservers"],
    _observed$0: [function() {
      var t1, mirror, values, type, field, t2, $name;
      t1 = $._allObservables;
      if (t1 == null) {
        t1 = H.setRuntimeTypeInfo([], [F.Observable]);
        $._allObservables = t1;
      }
      J.add$1$a(t1, this);
      $._allObservablesCount = J.$add$ns($._allObservablesCount, 1);
      mirror = H.reflect(this);
      values = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, P.Object);
      for (type = H.reflectClassByMangledName(J.get$runtimeType$(mirror.reflectee)._typeName); !J.$eq(type, $.get$objectType()); type = type.get$superclass())
        for (t1 = type.get$variables().get$values().get$iterator(0), t1.moveNext$0(); false;) {
          field = t1.get$current();
          field.get$isFinal();
          field.get$isStatic();
          field.get$isPrivate();
          for (t2 = field.get$metadata().get$iterator(0), t2.moveNext$0(); false;) {
            t2.get$current().get$reflectee();
            $name = field.get$simpleName();
            values.$indexSet(0, $name, mirror._invoke$4($name, 1, $name.get$_name(), []).reflectee);
            break;
          }
        }
      this._mirror = mirror;
      this._values = values;
    }, "call$0" /* tearOffInfo */, "get$_observed", 0, 0, 494, "_observed"],
    _unobserved$0: [function() {
      if (this._values != null) {
        this._mirror = null;
        this._values = null;
      }
    }, "call$0" /* tearOffInfo */, "get$_unobserved", 0, 0, 494, "_unobserved"],
    deliverChanges$0: [function() {
      var t1, t2;
      t1 = {};
      if (this._values != null) {
        t2 = this._changes;
        t2 = !(t2 != null && t2.get$hasListener());
      } else
        t2 = true;
      if (t2)
        return false;
      t1.records_0 = this._records;
      this._records = null;
      J.forEach$1$a(this._values, new F.Observable_deliverChanges_closure(t1, this));
      t1 = t1.records_0;
      if (t1 == null)
        return false;
      J.add$1$a(this._changes, H.setRuntimeTypeInfo(new P.UnmodifiableListView(t1), [T.ChangeRecord]));
      return true;
    }, "call$0" /* tearOffInfo */, "get$deliverChanges", 0, 0, 849, "deliverChanges"],
    notifyPropertyChange$3: [function(field, oldValue, newValue) {
      return F.notifyPropertyChangeHelper(this, field, oldValue, newValue);
    }, "call$3" /* tearOffInfo */, "get$notifyPropertyChange", 6, 0, 1946, 1030, 990, 991, "notifyPropertyChange"],
    notifyChange$1: [function(record) {
      var t1 = this._changes;
      if (!(t1 != null && t1.get$hasListener()))
        return;
      t1 = this._records;
      if (t1 == null) {
        t1 = [];
        this._records = t1;
      }
      J.add$1$a(t1, record);
    }, "call$1" /* tearOffInfo */, "get$notifyChange", 2, 0, 2006, 1024, "notifyChange"],
    $isObservable: true,
    static: {Observable$: [function() {
        return new F.Observable(null, null, null, null);
      }, null /* tearOffInfo */, null, 0, 0, 1028, "new Observable" /* new Observable:0:0 */], Observable_dirtyCheck: [function() {
        return O.dirtyCheckObservables();
      }, "call$0" /* tearOffInfo */, "Observable_dirtyCheck$closure", 0, 0, 494, "dirtyCheck"]}
  },
  "+Observable": [0],
  Observable_deliverChanges_closure: {
    "": "Closure:311;box_0-370,this_1-370",
    call$2: [function($name, oldValue) {
      var t1, newValue, t2, t3, records;
      t1 = this.this_1;
      newValue = t1.get$_mirror().getField$1($name).reflectee;
      if (!J.$eq(oldValue, newValue)) {
        t2 = this.box_0;
        t3 = t2.records_0;
        if (t3 == null) {
          records = [];
          t2.records_0 = records;
          t2 = records;
        } else
          t2 = t3;
        J.add$1$a(t2, H.setRuntimeTypeInfo(new T.PropertyChangeRecord(t1, $name, oldValue, newValue), [null]));
        J.$indexSet$a(t1.get$_values(), $name, newValue);
      }
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 346, 990, "call"]
  },
  "+Observable_deliverChanges_closure": [1060],
  "": "objectType<-370"
}],
["observe.src.observable_box", "package:observe/src/observable_box.dart", , A, {
  "": "",
  ObservableBox: {
    "": "ChangeNotifier;_observable_box$_value@-2021,change_notifier$ChangeNotifier$_change_notifier$_changes-1118,change_notifier$ChangeNotifier$_change_notifier$_records-1854",
    get$value: [function() {
      return this._observable_box$_value;
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "T_10", ret: T};
      }, this.$receiver, "ObservableBox");
    }, "value", 2011],
    set$value: [function(newValue) {
      this._observable_box$_value = F.notifyPropertyChangeHelper(this, C.Symbol_value, this._observable_box$_value, newValue);
    }, null /* tearOffInfo */, null, 3, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T27", void: true, args: [T]};
      }, this.$receiver, "ObservableBox");
    }, 991, "value", 2011],
    toString$0: [function(_) {
      return "#<" + H.S(new H.TypeImpl(H.getRuntimeTypeString(this), null)) + " value: " + H.S(this._observable_box$_value) + ">";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    "<>": [136],
    static: {ObservableBox$: [function(initialValue, $T) {
        return H.setRuntimeTypeInfo(new A.ObservableBox(initialValue, null, null), [$T]);
      }, null /* tearOffInfo */, null, 0, 2, function() {
        return H.computeSignature(function(T) {
          return {func: "dynamic___T", opt: [T]};
        }, this.$receiver, "ObservableBox");
      }, 370, 426, "new ObservableBox" /* new ObservableBox:1:0 */]}
  },
  "+ObservableBox": [2014]
}],
["observe.src.observable_list", "package:observe/src/observable_list.dart", , Q, {
  "": "",
  ObservableList: {
    "": "ListBase_ChangeNotifier;_listRecords@-2022,_listChanges@-1118,_list<-2023,change_notifier$ChangeNotifier$_change_notifier$_changes-1118,change_notifier$ChangeNotifier$_change_notifier$_records-1854",
    get$listChanges: [function() {
      var t1 = this._listChanges;
      if (t1 == null) {
        t1 = P.StreamController_StreamController$broadcast(new Q.ObservableList_listChanges_closure(this), null, true, null);
        this._listChanges = t1;
      }
      return t1.get$stream();
    }, null /* tearOffInfo */, null, 1, 0, 2024, "listChanges"],
    get$_hasListObservers: [function() {
      var t1 = this._listChanges;
      return t1 != null && t1.get$hasListener();
    }, null /* tearOffInfo */, null, 1, 0, 849, "_hasListObservers"],
    get$length: [function(_) {
      return J.get$length$as(this._list);
    }, null /* tearOffInfo */, null, 1, 0, 823, "length", 2011],
    set$length: [function(_, value) {
      var t1, t2, len, t3, t4, removed;
      t1 = this._list;
      t2 = J.getInterceptor$as(t1);
      len = t2.get$length(t1);
      if (J.$eq(len, value))
        return;
      this.notifyPropertyChange$3(C.Symbol_length, len, value);
      t3 = this._listChanges;
      if (t3 != null && t3.get$hasListener()) {
        t3 = J.getInterceptor$n(value);
        if (t3.$lt(value, len)) {
          t3 = t2.getRange$2(t1, value, len).toList$0(0);
          t4 = new P.UnmodifiableListView(t3);
          t4.$builtinTypeInfo = [null];
          this._recordChange$1(new G.ListChangeRecord(this, t4, t3, value, 0));
        } else {
          t3 = t3.$sub(value, len);
          removed = [];
          t4 = new P.UnmodifiableListView(removed);
          t4.$builtinTypeInfo = [null];
          this._recordChange$1(new G.ListChangeRecord(this, t4, removed, len, t3));
        }
      }
      t2.set$length(t1, value);
    }, null /* tearOffInfo */, null, 3, 0, 689, 280, "length", 2011],
    $index: [function(_, index) {
      return J.$index$as(this._list, index);
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int13", ret: E, args: [J.JSInt]};
      }, this.$receiver, "ObservableList");
    }, 321, "[]", 2011],
    $indexSet: [function(_, index, value) {
      var t1, t2, oldValue, t3, t4;
      t1 = this._list;
      t2 = J.getInterceptor$as(t1);
      oldValue = t2.$index(t1, index);
      t3 = this._listChanges;
      if (t3 != null && t3.get$hasListener()) {
        t3 = [oldValue];
        t4 = new P.UnmodifiableListView(t3);
        t4.$builtinTypeInfo = [null];
        this._recordChange$1(new G.ListChangeRecord(this, t4, t3, index, 1));
      }
      t2.$indexSet(t1, index, value);
    }, "call$2" /* tearOffInfo */, "get$[]=", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_E3", void: true, args: [J.JSInt, E]};
      }, this.$receiver, "ObservableList");
    }, 321, 280, "[]=", 2011],
    setAll$2: [function(_, index, iterable) {
      var t1, len;
      t1 = J.getInterceptor$a(iterable);
      if ((typeof iterable !== "object" || iterable === null || iterable.constructor !== Array && !t1.$isList) && (typeof iterable !== "object" || iterable === null || !t1.$isSet))
        iterable = t1.toList$0(iterable);
      len = J.get$length$as(iterable);
      t1 = this._listChanges;
      if (t1 != null && t1.get$hasListener() && J.$gt$n(len, 0))
        this._recordChange$1(G.ListChangeRecord_ListChangeRecord(this, index, len, J.getRange$2$a(this._list, index, len).toList$0(0)));
      J.setAll$2$a(this._list, index, iterable);
    }, "call$2" /* tearOffInfo */, "get$setAll", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_Iterable2", void: true, args: [J.JSInt, [P.Iterable, E]]};
      }, this.$receiver, "ObservableList");
    }, 321, 417, "setAll"],
    add$1: [function(_, value) {
      var t1, t2, len, t3;
      t1 = this._list;
      t2 = J.getInterceptor$as(t1);
      len = t2.get$length(t1);
      this.notifyPropertyChange$3(C.Symbol_length, len, J.$add$ns(len, 1));
      t3 = this._listChanges;
      if (t3 != null && t3.get$hasListener())
        this._recordChange$1(G.ListChangeRecord_ListChangeRecord(this, len, 1, null));
      t2.add$1(t1, value);
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__E14", void: true, args: [E]};
      }, this.$receiver, "ObservableList");
    }, 280, "add"],
    addAll$1: [function(_, iterable) {
      var t1, t2, len, added;
      t1 = this._list;
      t2 = J.getInterceptor$as(t1);
      len = t2.get$length(t1);
      t2.addAll$1(t1, iterable);
      this.notifyPropertyChange$3(C.Symbol_length, len, t2.get$length(t1));
      added = J.$sub$n(t2.get$length(t1), len);
      t1 = this._listChanges;
      if (t1 != null && t1.get$hasListener() && J.$gt$n(added, 0))
        this._recordChange$1(G.ListChangeRecord_ListChangeRecord(this, len, added, null));
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__Iterable12", void: true, args: [[P.Iterable, E]]};
      }, this.$receiver, "ObservableList");
    }, 417, "addAll"],
    remove$1: [function(_, element) {
      var t1, t2, i, t3;
      t1 = this._list;
      t2 = J.getInterceptor$as(t1);
      i = 0;
      while (true) {
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return H.iae(t3);
        if (!(i < t3))
          break;
        if (J.$eq(t2.$index(t1, i), element)) {
          this.removeRange$2(0, i, i + 1);
          return true;
        }
        ++i;
      }
      return false;
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, 1047, 453, "remove"],
    removeRange$2: [function(_, start, end) {
      var t1, rangeLength, t2, len, t3, t4;
      t1 = J.getInterceptor$n(start);
      if (t1.$lt(start, 0) || t1.$gt(start, J.get$length$as(this._list)))
        H.throwExpression(P.RangeError$range(start, 0, J.get$length$as(this._list)));
      t1 = J.getInterceptor$n(end);
      if (t1.$lt(end, start) || t1.$gt(end, J.get$length$as(this._list)))
        H.throwExpression(P.RangeError$range(end, start, J.get$length$as(this._list)));
      rangeLength = t1.$sub(end, start);
      t1 = this._list;
      t2 = J.getInterceptor$as(t1);
      len = t2.get$length(t1);
      this.notifyPropertyChange$3(C.Symbol_length, len, J.$sub$n(len, rangeLength));
      t3 = this._listChanges;
      if (t3 != null && t3.get$hasListener() && J.$gt$n(rangeLength, 0)) {
        t3 = t2.getRange$2(t1, start, end).toList$0(0);
        t4 = new P.UnmodifiableListView(t3);
        t4.$builtinTypeInfo = [null];
        this._recordChange$1(new G.ListChangeRecord(this, t4, t3, start, 0));
      }
      t2.removeRange$2(t1, start, end);
    }, "call$2" /* tearOffInfo */, "get$removeRange", 4, 0, 1052, 439, 440, "removeRange"],
    insertAll$2: [function(_, index, iterable) {
      var t1, t2, insertionLength, t3, len;
      t1 = J.getInterceptor$n(index);
      if (t1.$lt(index, 0) || t1.$gt(index, J.get$length$as(this._list)))
        throw H.wrapException(P.RangeError$range(index, 0, J.get$length$as(this._list)));
      t2 = J.getInterceptor$a(iterable);
      if ((typeof iterable !== "object" || iterable === null || iterable.constructor !== Array && !t2.$isList) && (typeof iterable !== "object" || iterable === null || !t2.$isSet))
        iterable = t2.toList$0(iterable);
      insertionLength = J.get$length$as(iterable);
      t2 = this._list;
      t3 = J.getInterceptor$as(t2);
      len = t3.get$length(t2);
      t3.set$length(t2, J.$add$ns(t3.get$length(t2), insertionLength));
      t3.setRange$4(t2, t1.$add(index, insertionLength), t3.get$length(t2), this, index);
      t3.setAll$2(t2, index, iterable);
      this.notifyPropertyChange$3(C.Symbol_length, len, t3.get$length(t2));
      t1 = this._listChanges;
      if (t1 != null && t1.get$hasListener() && J.$gt$n(insertionLength, 0))
        this._recordChange$1(G.ListChangeRecord_ListChangeRecord(this, index, insertionLength, null));
    }, "call$2" /* tearOffInfo */, "get$insertAll", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_Iterable2", void: true, args: [J.JSInt, [P.Iterable, E]]};
      }, this.$receiver, "ObservableList");
    }, 321, 417, "insertAll"],
    insert$2: [function(_, index, element) {
      var t1, t2, t3;
      t1 = J.getInterceptor$n(index);
      if (t1.$lt(index, 0) || t1.$gt(index, J.get$length$as(this._list)))
        throw H.wrapException(P.RangeError$range(index, 0, J.get$length$as(this._list)));
      t2 = this._list;
      t3 = J.getInterceptor$as(t2);
      if (t1.$eq(index, t3.get$length(t2))) {
        this.add$1(0, element);
        return;
      }
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(new P.ArgumentError(index));
      t3.set$length(t2, J.$add$ns(t3.get$length(t2), 1));
      t3.setRange$4(t2, index + 1, t3.get$length(t2), this, index);
      this.notifyPropertyChange$3(C.Symbol_length, J.$sub$n(t3.get$length(t2), 1), t3.get$length(t2));
      t1 = this._listChanges;
      if (t1 != null && t1.get$hasListener())
        this._recordChange$1(G.ListChangeRecord_ListChangeRecord(this, index, 1, null));
      t3.$indexSet(t2, index, element);
    }, "call$2" /* tearOffInfo */, "get$insert", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_E3", void: true, args: [J.JSInt, E]};
      }, this.$receiver, "ObservableList");
    }, 321, 453, "insert"],
    removeAt$1: [function(_, index) {
      var result = J.$index$as(this._list, index);
      this.removeRange$2(0, index, J.$add$ns(index, 1));
      return result;
    }, "call$1" /* tearOffInfo */, "get$removeAt", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int13", ret: E, args: [J.JSInt]};
      }, this.$receiver, "ObservableList");
    }, 321, "removeAt"],
    _observable_list$_rangeCheck$2: [function(start, end) {
      var t1 = J.getInterceptor$n(start);
      if (t1.$lt(start, 0) || t1.$gt(start, J.get$length$as(this._list)))
        throw H.wrapException(P.RangeError$range(start, 0, J.get$length$as(this._list)));
      t1 = J.getInterceptor$n(end);
      if (t1.$lt(end, start) || t1.$gt(end, J.get$length$as(this._list)))
        throw H.wrapException(P.RangeError$range(end, start, J.get$length$as(this._list)));
    }, "call$2" /* tearOffInfo */, "get$_observable_list$_rangeCheck", 4, 0, 1052, 439, 440, "_rangeCheck"],
    _recordChange$1: [function(record) {
      var t1 = this._listChanges;
      if (!(t1 != null && t1.get$hasListener()))
        return;
      if (this._listRecords == null) {
        this._listRecords = [];
        P.scheduleMicrotask(this.get$deliverListChanges());
      }
      J.add$1$a(this._listRecords, record);
    }, "call$1" /* tearOffInfo */, "get$_recordChange", 2, 0, 2025, 1024, "_recordChange"],
    deliverListChanges$0: [function() {
      var t1, records;
      t1 = this._listRecords;
      if (t1 == null)
        return false;
      records = G.projectListSplices(this, t1);
      this._listRecords = null;
      t1 = this._listChanges;
      if (t1 != null && t1.get$hasListener()) {
        J.add$1$a(this._listChanges, H.setRuntimeTypeInfo(new P.UnmodifiableListView(records), [G.ListChangeRecord]));
        return true;
      }
      return false;
    }, "call$0" /* tearOffInfo */, "get$deliverListChanges", 0, 0, 849, "deliverListChanges"],
    $isObservableList: true,
    $asListBase_ChangeNotifier: null,
    $asList: null,
    $asIterable: null,
    "<>": [106],
    static: {ObservableList$: [function($length, $E) {
        var t1;
        if ($length != null) {
          if (typeof $length !== "number")
            return H.iae($length);
          t1 = Array($length);
          t1.fixed$length = init;
          t1 = H.setRuntimeTypeInfo(t1, [$E]);
        } else
          t1 = H.setRuntimeTypeInfo([], [$E]);
        return H.setRuntimeTypeInfo(new Q.ObservableList(null, null, t1, null, null), [$E]);
      }, null /* tearOffInfo */, null, 0, 2, 674, 370, 243, "new ObservableList" /* new ObservableList:1:0 */], ObservableList_ObservableList$from: [function(other, $E) {
        var t1 = Q.ObservableList$(null, $E);
        t1.addAll$1(0, other);
        return t1;
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "ObservableList__Iterable", ret: [Q.ObservableList, E], args: [[P.Iterable, E]]};
        }, this.$receiver, "ObservableList");
      }, 403, "new ObservableList$from" /* new ObservableList$from:1:0 */], ObservableList_calculateChangeRecords: [function(oldValue, newValue) {
        return G.calcSplices(newValue, 0, J.get$length$as(newValue), oldValue, 0, J.get$length$as(oldValue));
      }, "call$2" /* tearOffInfo */, "ObservableList_calculateChangeRecords$closure", 4, 0, 1031, 990, 991, "calculateChangeRecords"]}
  },
  "+ObservableList": [2026],
  ListBase_ChangeNotifier: {
    "": "ListBase+ChangeNotifier;_change_notifier$_changes:change_notifier$ChangeNotifier$_change_notifier$_changes@-1118,_change_notifier$_records:change_notifier$ChangeNotifier$_change_notifier$_records@-1854",
    $asListBase: null,
    $asList: null,
    $asIterable: null,
    $isObservable: true,
    "<>": [107]
  },
  ObservableList_listChanges_closure: {
    "": "Closure:319;this_0-370",
    call$0: [function() {
      this.this_0.set$_listChanges(null);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+ObservableList_listChanges_closure": [1060]
}],
["observe.src.observable_map", "package:observe/src/observable_map.dart", , V, {
  "": "",
  MapChangeRecord: {
    "": "ChangeRecord;key<-2027,oldValue<-2028,newValue<-2028,isInsert<-1043,isRemove<-1043",
    toString$0: [function(_) {
      var kind;
      if (this.isInsert === true)
        kind = "insert";
      else
        kind = this.isRemove === true ? "remove" : "set";
      return "#<MapChangeRecord " + kind + " " + H.S(this.key) + " from: " + H.S(this.oldValue) + " to: " + H.S(this.newValue) + ">";
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $isMapChangeRecord: true,
    "<>": [132, 133],
    static: {MapChangeRecord$: [function(key, oldValue, newValue, $K, $V) {
        return H.setRuntimeTypeInfo(new V.MapChangeRecord(key, oldValue, newValue, false, false), [$K, $V]);
      }, null /* tearOffInfo */, null, 6, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "dynamic__K_V_V", args: [K, V, V]};
        }, this.$receiver, "MapChangeRecord");
      }, 312, 990, 991, "new MapChangeRecord" /* new MapChangeRecord:3:0 */], MapChangeRecord$insert: [function(key, newValue, $K, $V) {
        return H.setRuntimeTypeInfo(new V.MapChangeRecord(key, null, newValue, true, false), [$K, $V]);
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "dynamic__K_V0", args: [K, V]};
        }, this.$receiver, "MapChangeRecord");
      }, 312, 991, "new MapChangeRecord$insert" /* new MapChangeRecord$insert:2:0 */], MapChangeRecord$remove: [function(key, oldValue, $K, $V) {
        return H.setRuntimeTypeInfo(new V.MapChangeRecord(key, oldValue, null, false, true), [$K, $V]);
      }, null /* tearOffInfo */, null, 4, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "dynamic__K_V0", args: [K, V]};
        }, this.$receiver, "MapChangeRecord");
      }, 312, 990, "new MapChangeRecord$remove" /* new MapChangeRecord$remove:2:0 */]}
  },
  "+MapChangeRecord": [2008],
  ObservableMap: {
    "": "ChangeNotifier;_observable_map$_map<-2029,change_notifier$ChangeNotifier$_change_notifier$_changes-1118,change_notifier$ChangeNotifier$_change_notifier$_records-1854",
    get$keys: [function() {
      return this._observable_map$_map.get$keys();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "Iterable_14", ret: [P.Iterable, K]};
      }, this.$receiver, "ObservableMap");
    }, "keys", 2011],
    get$values: [function() {
      return this._observable_map$_map.get$values();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "Iterable_15", ret: [P.Iterable, V]};
      }, this.$receiver, "ObservableMap");
    }, "values", 2011],
    get$length: [function(_) {
      return J.get$length$as(this._observable_map$_map);
    }, null /* tearOffInfo */, null, 1, 0, 823, "length", 2011],
    get$isEmpty: [function(_) {
      return J.$eq(J.get$length$as(this._observable_map$_map), 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty", 2011],
    get$isNotEmpty: [function(_) {
      return !J.$eq(J.get$length$as(this._observable_map$_map), 0);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty", 2011],
    containsValue$1: [function(value) {
      return this._observable_map$_map.containsValue$1(value);
    }, "call$1" /* tearOffInfo */, "get$containsValue", 2, 0, 1047, 280, "containsValue", 2011],
    containsKey$1: [function(key) {
      return this._observable_map$_map.containsKey$1(key);
    }, "call$1" /* tearOffInfo */, "get$containsKey", 2, 0, 1047, 312, "containsKey", 2011],
    $index: [function(_, key) {
      return J.$index$as(this._observable_map$_map, key);
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__Object5", ret: V, args: [P.Object]};
      }, this.$receiver, "ObservableMap");
    }, 312, "[]", 2011],
    $indexSet: [function(_, key, value) {
      var t1, t2, len, oldValue, t3;
      t1 = this._observable_map$_map;
      t2 = J.getInterceptor$as(t1);
      len = t2.get$length(t1);
      oldValue = t2.$index(t1, key);
      t2.$indexSet(t1, key, value);
      t3 = this.change_notifier$ChangeNotifier$_change_notifier$_changes;
      if (t3 != null && t3.get$hasListener()) {
        t3 = J.getInterceptor(len);
        if (!t3.$eq(len, t2.get$length(t1))) {
          t1 = t2.get$length(t1);
          if (this.get$hasObservers() && !t3.$eq(len, t1)) {
            t1 = new T.PropertyChangeRecord(this, C.Symbol_length, len, t1);
            t1.$builtinTypeInfo = [null];
            this.notifyChange$1(t1);
          }
          t1 = new V.MapChangeRecord(key, null, value, true, false);
          t1.$builtinTypeInfo = [null, null];
          this.notifyChange$1(t1);
        } else if (!J.$eq(oldValue, value)) {
          t1 = new V.MapChangeRecord(key, oldValue, value, false, false);
          t1.$builtinTypeInfo = [null, null];
          this.notifyChange$1(t1);
        }
      }
    }, "call$2" /* tearOffInfo */, "get$[]=", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__K_V4", void: true, args: [K, V]};
      }, this.$receiver, "ObservableMap");
    }, 312, 280, "[]=", 2011],
    addAll$1: [function(_, other) {
      J.forEach$1$a(other, new V.ObservableMap_addAll_closure(this));
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__Map4", void: true, args: [[P.Map, K, V]]};
      }, this.$receiver, "ObservableMap");
    }, 403, "addAll"],
    putIfAbsent$2: [function(key, ifAbsent) {
      var t1, t2, len, result, t3;
      t1 = this._observable_map$_map;
      t2 = J.getInterceptor$as(t1);
      len = t2.get$length(t1);
      result = t1.putIfAbsent$2(key, ifAbsent);
      t3 = this.change_notifier$ChangeNotifier$_change_notifier$_changes;
      if (t3 != null && t3.get$hasListener() && !J.$eq(len, t2.get$length(t1))) {
        F.notifyPropertyChangeHelper(this, C.Symbol_length, len, t2.get$length(t1));
        this.notifyChange$1(H.setRuntimeTypeInfo(new V.MapChangeRecord(key, null, result, true, false), [null, null]));
      }
      return result;
    }, "call$2" /* tearOffInfo */, "get$putIfAbsent", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__K_V_4", ret: V, args: [K, {func: "V_4", ret: V}]};
      }, this.$receiver, "ObservableMap");
    }, 312, 663, "putIfAbsent"],
    remove$1: [function(_, key) {
      var t1, t2, len, result, t3;
      t1 = this._observable_map$_map;
      t2 = J.getInterceptor$as(t1);
      len = t2.get$length(t1);
      result = t2.remove$1(t1, key);
      t3 = this.change_notifier$ChangeNotifier$_change_notifier$_changes;
      if (t3 != null && t3.get$hasListener() && !J.$eq(len, t2.get$length(t1))) {
        this.notifyChange$1(H.setRuntimeTypeInfo(new V.MapChangeRecord(key, result, null, false, true), [null, null]));
        F.notifyPropertyChangeHelper(this, C.Symbol_length, len, t2.get$length(t1));
      }
      return result;
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__Object5", ret: V, args: [P.Object]};
      }, this.$receiver, "ObservableMap");
    }, 312, "remove"],
    clear$0: [function(_) {
      var t1, t2, len, t3;
      t1 = this._observable_map$_map;
      t2 = J.getInterceptor$as(t1);
      len = t2.get$length(t1);
      t3 = this.change_notifier$ChangeNotifier$_change_notifier$_changes;
      if (t3 != null && t3.get$hasListener() && J.$gt$n(len, 0)) {
        t2.forEach$1(t1, new V.ObservableMap_clear_closure(this));
        F.notifyPropertyChangeHelper(this, C.Symbol_length, len, 0);
      }
      t2.clear$0(t1);
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    forEach$1: [function(_, f) {
      return J.forEach$1$a(this._observable_map$_map, f);
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__void__K_V4", void: true, args: [{func: "void__K_V4", void: true, args: [K, V]}]};
      }, this.$receiver, "ObservableMap");
    }, 412, "forEach"],
    toString$0: [function(_) {
      return P.Maps_mapToString(this);
    }, "call$0" /* tearOffInfo */, "get$toString", 0, 0, 253, "toString"],
    $asMap: null,
    $isMap: true,
    "<>": [134, 135],
    static: {ObservableMap$: [function($K, $V) {
        return H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, $K, $V), null, null), [$K, $V]);
      }, null /* tearOffInfo */, null, 0, 0, 319, "new ObservableMap" /* new ObservableMap:0:0 */], ObservableMap$linked: [function($K, $V) {
        return H.setRuntimeTypeInfo(new V.ObservableMap(P.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V), null, null), [$K, $V]);
      }, null /* tearOffInfo */, null, 0, 0, 319, "new ObservableMap$linked" /* new ObservableMap$linked:0:0 */], ObservableMap$sorted: [function($K, $V) {
        return H.setRuntimeTypeInfo(new V.ObservableMap(P.SplayTreeMap$(null, null, $K, $V), null, null), [$K, $V]);
      }, null /* tearOffInfo */, null, 0, 0, 319, "new ObservableMap$sorted" /* new ObservableMap$sorted:0:0 */], ObservableMap_ObservableMap$from: [function(other, $K, $V) {
        var t1 = V.ObservableMap_ObservableMap$createFromType(other, $K, $V);
        t1.addAll$1(0, other);
        return t1;
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "ObservableMap__Map", ret: [V.ObservableMap, K, V], args: [[P.Map, K, V]]};
        }, this.$receiver, "ObservableMap");
      }, 403, "new ObservableMap$from" /* new ObservableMap$from:1:0 */], ObservableMap_ObservableMap$createFromType: [function(other, $K, $V) {
        var t1, result;
        t1 = J.getInterceptor(other);
        if (typeof other === "object" && other !== null && !!t1.$isSplayTreeMap)
          result = H.setRuntimeTypeInfo(new V.ObservableMap(P.SplayTreeMap$(null, null, $K, $V), null, null), [$K, $V]);
        else
          result = typeof other === "object" && other !== null && !!t1.$isLinkedHashMap ? H.setRuntimeTypeInfo(new V.ObservableMap(P.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V), null, null), [$K, $V]) : H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, $K, $V), null, null), [$K, $V]);
        return result;
      }, "call$1" /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "ObservableMap__Map", ret: [V.ObservableMap, K, V], args: [[P.Map, K, V]]};
        }, this.$receiver, "ObservableMap");
      }, 403, "new ObservableMap$createFromType" /* new ObservableMap$createFromType:1:0 */]}
  },
  "+ObservableMap": [2014, 2029],
  ObservableMap_addAll_closure: {
    "": "Closure;this_0-370",
    call$2: [function(key, value) {
      J.$indexSet$a(this.this_0, key, value);
    }, "call$2" /* tearOffInfo */, null, 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "dynamic__K_V4", args: [K, V]};
      }, this.$receiver, "ObservableMap");
    }, 312, 280, "call"],
    $signature: function() {
      return H.computeSignature(function(K, V) {
        return {func: "dynamic__K_V4", args: [K, V]};
      }, this.this_0, "ObservableMap");
    }
  },
  "+ObservableMap_addAll_closure": [1060],
  ObservableMap_clear_closure: {
    "": "Closure:311;this_0-370",
    call$2: [function(key, value) {
      this.this_0.notifyChange$1(H.setRuntimeTypeInfo(new V.MapChangeRecord(key, value, null, false, true), [null, null]));
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 312, 280, "call"]
  },
  "+ObservableMap_clear_closure": [1060]
}],
["observe.src.path_observer", "package:observe/src/path_observer.dart", , L, {
  "": "",
  _changeRecordMatches: [function(record, key) {
    var t1 = J.getInterceptor(record);
    if (typeof record === "object" && record !== null && !!t1.$isPropertyChangeRecord)
      return J.$eq(record.name, key);
    if (typeof record === "object" && record !== null && !!t1.$isMapChangeRecord) {
      t1 = J.getInterceptor(key);
      if (typeof key === "object" && key !== null && !!t1.$isSymbol0)
        key = key.get$_name();
      return J.$eq(record.key, key);
    }
    return false;
  }, "call$2" /* tearOffInfo */, "_changeRecordMatches$closure", 4, 0, 382, 1024, 312, "_changeRecordMatches"],
  _getObjectProperty: [function(object, property) {
    var mirror, type, t1, t2, exception;
    if (object == null)
      return;
    t1 = property;
    if (typeof t1 === "number" && Math.floor(t1) === t1) {
      t1 = object;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && (t1.constructor === Array || !!t2.$isList) && J.$ge$n(property, 0) && J.$lt$n(property, J.get$length$as(object)))
        return J.$index$as(object, property);
    } else {
      t1 = property;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isSymbol0) {
        mirror = H.reflect(object);
        type = H.reflectClassByMangledName(J.get$runtimeType$(mirror.get$reflectee())._typeName);
        try {
          if (L._maybeHasGetter(type, property)) {
            t1 = property;
            t1 = mirror._invoke$4(t1, 1, t1.get$_name(), []);
            return t1.reflectee;
          }
          if (L._hasMethod(type, C.Symbol_Qyo)) {
            t1 = J.$index$as(object, property.get$_name());
            return t1;
          }
        } catch (exception) {
          t1 = H.unwrapException(exception);
          t2 = J.getInterceptor(t1);
          if (typeof t1 === "object" && t1 !== null && !!t2.$isNoSuchMethodError) {
            if (!L._hasMethod(type, C.Symbol_noSuchMethod))
              throw exception;
          } else
            throw exception;
        }

      }
    }
    t1 = $.get$_logger0();
    if (t1.isLoggable$1(C.Level_FINER_400))
      t1.finer$1("can't get " + H.S(property) + " in " + H.S(object));
    return;
  }, "call$2" /* tearOffInfo */, "_getObjectProperty$closure", 4, 0, 311, 242, 347, "_getObjectProperty"],
  _setObjectProperty: [function(object, property, value) {
    var mirror, type, t1, t2, exception;
    if (object == null)
      return false;
    t1 = property;
    if (typeof t1 === "number" && Math.floor(t1) === t1) {
      t1 = object;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && (t1.constructor === Array || !!t2.$isList) && J.$ge$n(property, 0) && J.$lt$n(property, J.get$length$as(object))) {
        J.$indexSet$a(object, property, value);
        return true;
      }
    } else {
      t1 = property;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isSymbol0) {
        mirror = H.reflect(object);
        type = H.reflectClassByMangledName(J.get$runtimeType$(mirror.get$reflectee())._typeName);
        try {
          if (L._maybeHasSetter(type, property)) {
            mirror.setField$2(property, value);
            return true;
          }
          if (L._hasMethod(type, C.Symbol_sgp)) {
            J.$indexSet$a(object, property.get$_name(), value);
            return true;
          }
        } catch (exception) {
          t1 = H.unwrapException(exception);
          t2 = J.getInterceptor(t1);
          if (typeof t1 === "object" && t1 !== null && !!t2.$isNoSuchMethodError) {
            if (!L._hasMethod(type, C.Symbol_noSuchMethod))
              throw exception;
          } else
            throw exception;
        }

      }
    }
    t1 = $.get$_logger0();
    if (t1.isLoggable$1(C.Level_FINER_400))
      t1.finer$1("can't set " + H.S(property) + " in " + H.S(object));
    return false;
  }, "call$3" /* tearOffInfo */, "_setObjectProperty$closure", 6, 0, 1033, 242, 347, 280, "_setObjectProperty"],
  _maybeHasGetter: [function(type, $name) {
    var members;
    for (; !J.$eq(type, $.get$objectType());) {
      members = type.get$declarations();
      if (members.containsKey$1($name))
        return true;
      if (members.containsKey$1(C.Symbol_noSuchMethod))
        return true;
      type = L._safeSuperclass(type);
    }
    return false;
  }, "call$2" /* tearOffInfo */, "_maybeHasGetter$closure", 4, 0, 1034, 371, 346, "_maybeHasGetter"],
  _setterName: [function(getter) {
    return new H.Symbol(H.Symbol_validate(H.S(getter.get$_name()) + "="));
  }, "call$1" /* tearOffInfo */, "_setterName$closure", 2, 0, 464, 1035, "_setterName"],
  _maybeHasSetter: [function(type, $name) {
    var setterName, members, t1, t2;
    setterName = new H.Symbol(H.Symbol_validate(H.S($name.get$_name()) + "="));
    for (; !J.$eq(type, $.get$objectType());) {
      members = type.get$declarations();
      t1 = J.$index$as(members, $name);
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isVariableMirror)
        return true;
      if (members.containsKey$1(setterName))
        return true;
      if (members.containsKey$1(C.Symbol_noSuchMethod))
        return true;
      type = L._safeSuperclass(type);
    }
    return false;
  }, "call$2" /* tearOffInfo */, "_maybeHasSetter$closure", 4, 0, 1034, 371, 346, "_maybeHasSetter"],
  _hasMethod: [function(type, $name) {
    var member, t1;
    for (; !J.$eq(type, $.get$objectType());) {
      member = J.$index$as(type.get$declarations(), $name);
      t1 = J.getInterceptor(member);
      if (typeof member === "object" && member !== null && !!t1.$isMethodMirror && member.get$isRegularMethod())
        return true;
      type = L._safeSuperclass(type);
    }
    return false;
  }, "call$2" /* tearOffInfo */, "_hasMethod$closure", 4, 0, 1034, 371, 346, "_hasMethod"],
  _safeSuperclass: [function(type) {
    var t1, exception, t2;
    try {
      t1 = type.get$superclass();
      return t1;
    } catch (exception) {
      t1 = H.unwrapException(exception);
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isUnsupportedError)
        return $.get$objectType();
      else
        throw exception;
    }

  }, "call$1" /* tearOffInfo */, "_safeSuperclass$closure", 2, 0, 1036, 371, "_safeSuperclass"],
  _isPathValid: [function(s) {
    var t1;
    s = J.replaceAll$2$s(s, $.get$_spacesRegExp(), "");
    t1 = J.getInterceptor(s);
    if (t1.$eq(s, ""))
      return true;
    if (J.$eq(t1.$index(s, 0), "."))
      return false;
    return $.get$_pathRegExp().hasMatch$1(s);
  }, "call$1" /* tearOffInfo */, "_isPathValid$closure", 2, 0, 493, 383, "_isPathValid"],
  PathObserver: {
    "": "ChangeNotifier;path<-1039,_isValid<-1043,_segments<-2030,_path_observer$_values@-2030,_subs@-2010,_computeValue<-1098,change_notifier$ChangeNotifier$_change_notifier$_changes-1118,change_notifier$ChangeNotifier$_change_notifier$_records-1854",
    _computeValue$1: function(arg0) {
      return this._computeValue.call$1(arg0);
    },
    get$object: [function() {
      return J.$index$as(this._path_observer$_values, 0);
    }, null /* tearOffInfo */, null, 1, 0, 319, "object"],
    get$value: [function() {
      if (this._isValid !== true)
        return;
      var t1 = this.change_notifier$ChangeNotifier$_change_notifier$_changes;
      if (!(t1 != null && t1.get$hasListener()))
        this._updateValues$0();
      return J.get$last$a(this._path_observer$_values);
    }, null /* tearOffInfo */, null, 1, 0, 319, "value", 2011],
    set$value: [function(newValue) {
      var t1, t2, len, t3, t4;
      t1 = this._segments;
      t2 = J.getInterceptor$as(t1);
      len = t2.get$length(t1);
      t3 = J.getInterceptor(len);
      if (t3.$eq(len, 0))
        return;
      t4 = this.change_notifier$ChangeNotifier$_change_notifier$_changes;
      if (!(t4 != null && t4.get$hasListener()))
        this._updateValues$1$end(t3.$sub(len, 1));
      if (L._setObjectProperty(J.$index$as(this._path_observer$_values, t3.$sub(len, 1)), t2.$index(t1, t3.$sub(len, 1)), newValue))
        J.$indexSet$a(this._path_observer$_values, len, newValue);
    }, null /* tearOffInfo */, null, 3, 0, 821, 991, "value", 2011],
    bindSync$1: [function(callback) {
      var result = this.get$changes().listen$1(new L.PathObserver_bindSync_closure(this, callback));
      callback.call$1(this.get$value());
      return result;
    }, "call$1" /* tearOffInfo */, "get$bindSync", 2, 0, 2031, 277, "bindSync"],
    observed$0: [function() {
      O.ChangeNotifier.prototype.observed$0.call(this);
      this._updateValues$0();
      this._observePath$0();
    }, "call$0" /* tearOffInfo */, "get$observed", 0, 0, 494, "observed"],
    unobserved$0: [function() {
      var i, t1;
      i = 0;
      while (true) {
        t1 = J.get$length$as(this._subs);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        if (J.$index$as(this._subs, i) != null) {
          J.$index$as(this._subs, i).cancel$0();
          J.$indexSet$a(this._subs, i, null);
        }
        ++i;
      }
      O.ChangeNotifier.prototype.unobserved$0.call(this);
    }, "call$0" /* tearOffInfo */, "get$unobserved", 0, 0, 494, "unobserved"],
    _updateValues$1$end: [function(end) {
      var t1, t2, last, t3, i, newValue;
      if (end == null)
        end = J.get$length$as(this._segments);
      t1 = this._segments;
      t2 = J.getInterceptor$as(t1);
      last = J.$sub$n(t2.get$length(t1), 1);
      if (typeof end !== "number")
        return H.iae(end);
      t3 = this._computeValue != null;
      i = 0;
      for (; i < end;) {
        newValue = L._getObjectProperty(J.$index$as(this._path_observer$_values, i), t2.$index(t1, i));
        if (i === last && t3)
          newValue = this._computeValue$1(newValue);
        ++i;
        J.$indexSet$a(this._path_observer$_values, i, newValue);
      }
    }, function() {
      return this._updateValues$1$end(null);
    }, "_updateValues$0", "call$1$end" /* tearOffInfo */, null /* tearOffInfo */, "get$_updateValues", 0, 3, 2032, 370, 440, "_updateValues"],
    _updateObservedValues$1$start: [function(start) {
      var t1, t2, last, t3, i, oldValue, newValue, t4;
      for (t1 = this._segments, t2 = J.getInterceptor$as(t1), last = J.$sub$n(t2.get$length(t1), 1), t3 = this._computeValue != null, i = start, oldValue = null, newValue = null; t4 = J.getInterceptor$n(i), t4.$le(i, last); i = t4.$add(i, 1)) {
        oldValue = J.$index$as(this._path_observer$_values, t4.$add(i, 1));
        newValue = L._getObjectProperty(J.$index$as(this._path_observer$_values, i), t2.$index(t1, i));
        if (t4.$eq(i, last) && t3)
          newValue = this._computeValue$1(newValue);
        if (oldValue == null ? newValue == null : oldValue === newValue) {
          this._observePath$2(start, i);
          return;
        }
        J.$indexSet$a(this._path_observer$_values, t4.$add(i, 1), newValue);
      }
      this._observePath$1(start);
      if (this.get$hasObservers() && !J.$eq(oldValue, newValue)) {
        t1 = new T.PropertyChangeRecord(this, C.Symbol_value, oldValue, newValue);
        t1.$builtinTypeInfo = [null];
        this.notifyChange$1(t1);
      }
    }, "call$1$start" /* tearOffInfo */, "get$_updateObservedValues", 0, 3, 2033, 778, 439, "_updateObservedValues"],
    _observePath$2: [function(start, end) {
      var i, t1;
      if (end == null)
        end = J.get$length$as(this._segments);
      for (i = start; t1 = J.getInterceptor$n(i), t1.$lt(i, end); i = t1.$add(i, 1)) {
        if (J.$index$as(this._subs, i) != null)
          J.$index$as(this._subs, i).cancel$0();
        this._observeIndex$1(i);
      }
    }, function(start) {
      return this._observePath$2(start, null);
    }, "_observePath$1", function() {
      return this._observePath$2(0, null);
    }, "_observePath$0", "call$2" /* tearOffInfo */, null /* tearOffInfo */, null /* tearOffInfo */, "get$_observePath", 0, 4, 2034, 778, 370, 439, 440, "_observePath"],
    _observeIndex$1: [function(i) {
      var object, segment, t1, subscription, t2;
      object = J.$index$as(this._path_observer$_values, i);
      segment = J.$index$as(this._segments, i);
      if (typeof segment === "number" && Math.floor(segment) === segment) {
        t1 = J.getInterceptor(object);
        if (typeof object === "object" && object !== null && !!t1.$isObservableList) {
          t1 = this._subs;
          subscription = object.get$listChanges()._createSubscription$1(false);
          t2 = subscription._zone;
          subscription._onData = t2.registerUnaryCallback$1(new L.PathObserver__observeIndex_closure(this, i, segment));
          subscription._onError = P._registerErrorHandler(P._nullErrorHandler$closure(), t2);
          subscription._onDone = t2.registerCallback$1(P._nullDoneHandler$closure());
          J.$indexSet$a(t1, i, subscription);
        }
      } else {
        t1 = J.getInterceptor(object);
        if (typeof object === "object" && object !== null && !!t1.$isObservable) {
          t1 = this._subs;
          subscription = object.get$changes()._createSubscription$1(false);
          t2 = subscription._zone;
          subscription._onData = t2.registerUnaryCallback$1(new L.PathObserver__observeIndex_closure0(this, i, segment));
          subscription._onError = P._registerErrorHandler(P._nullErrorHandler$closure(), t2);
          subscription._onDone = t2.registerCallback$1(P._nullDoneHandler$closure());
          J.$indexSet$a(t1, i, subscription);
        }
      }
    }, "call$1" /* tearOffInfo */, "get$_observeIndex", 2, 0, 1055, 245, "_observeIndex"],
    PathObserver$3$computeValue: [function(object, path, computeValue) {
      var t1, t2, segment, index, t3;
      if (this._isValid === true)
        for (t1 = J.trim$0$s(path).split("."), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]), t2 = this._segments; t1.moveNext$0();) {
          segment = t1._current;
          if (J.$eq(segment, ""))
            continue;
          index = H.Primitives_parseInt(segment, 10, new L.PathObserver_closure());
          J.add$1$a(t2, index != null ? index : new H.Symbol(H.Symbol_validate(segment)));
        }
      t1 = this._segments;
      t2 = J.getInterceptor$as(t1);
      t3 = J.$add$ns(t2.get$length(t1), 1);
      if (typeof t3 !== "number")
        return H.iae(t3);
      t3 = Array(t3);
      t3.fixed$length = init;
      this._path_observer$_values = H.setRuntimeTypeInfo(t3, [P.Object]);
      if (t2.get$isEmpty(t1) === true && computeValue != null)
        object = computeValue.call$1(object);
      J.$indexSet$a(this._path_observer$_values, 0, object);
      t1 = t2.get$length(t1);
      if (typeof t1 !== "number")
        return H.iae(t1);
      t1 = Array(t1);
      t1.fixed$length = init;
      this._subs = H.setRuntimeTypeInfo(t1, [P.StreamSubscription]);
    }, null /* tearOffInfo */, null, 4, 3, 1032, 370, 242, 835, 993, ""],
    $isPathObserver: true,
    static: {PathObserver$: [function(object, path, computeValue) {
        var t1 = new L.PathObserver(path, L._isPathValid(path), H.setRuntimeTypeInfo([], [P.Object]), null, null, computeValue, null, null);
        t1.PathObserver$3$computeValue(object, path, computeValue);
        return t1;
      }, null /* tearOffInfo */, null, 4, 3, 1032, 370, 242, 835, 993, "new PathObserver" /* new PathObserver:2:1:computeValue */]}
  },
  "+PathObserver": [2014],
  PathObserver_closure: {
    "": "Closure:241;",
    call$1: [function(_) {
      return;
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 820, "call"]
  },
  "+PathObserver_closure": [1060],
  PathObserver_bindSync_closure: {
    "": "Closure:241;this_0-370,callback_1-251",
    call$1: [function(records) {
      this.callback_1.call$1(this.this_0.get$value());
    }, "call$1" /* tearOffInfo */, null, 2, 0, 241, 1026, "call"]
  },
  "+PathObserver_bindSync_closure": [1060],
  PathObserver__observeIndex_closure: {
    "": "Closure:2035;this_0-370,i_1-1075,segment_2-370",
    call$1: [function(records) {
      var t1, t2;
      for (t1 = J.get$iterator$a(records), t2 = this.segment_2; t1.moveNext$0() === true;)
        if (t1.get$current().indexChanged$1(t2)) {
          this.this_0._updateObservedValues$1$start(this.i_1);
          return;
        }
    }, "call$1" /* tearOffInfo */, null, 2, 0, 2035, 1026, "call"]
  },
  "+PathObserver__observeIndex_closure": [1060],
  PathObserver__observeIndex_closure0: {
    "": "Closure:2036;this_3-370,i_4-1075,segment_5-370",
    call$1: [function(records) {
      var t1, t2;
      for (t1 = J.get$iterator$a(records), t2 = this.segment_5; t1.moveNext$0() === true;)
        if (L._changeRecordMatches(t1.get$current(), t2)) {
          this.this_3._updateObservedValues$1$start(this.i_4);
          return;
        }
    }, "call$1" /* tearOffInfo */, null, 2, 0, 2036, 1026, "call"]
  },
  "+PathObserver__observeIndex_closure": [1060],
  closure: {
    "": "Closure:319;",
    call$0: [function() {
      return new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^(?:(?:[$_a-zA-Z]+[$_a-zA-Z0-9]*|(?:[0-9]|[1-9]+[0-9]+)))(?:\\.(?:[$_a-zA-Z]+[$_a-zA-Z0-9]*|(?:[0-9]|[1-9]+[0-9]+)))*$", false, true, false), null, null);
    }, "call$0" /* tearOffInfo */, null, 0, 0, 319, "call"]
  },
  "+closure": [1060],
  "": "_logger0<-1990,_spacesRegExp<-370,_pathRegExp<-370"
}],
["observe.src.to_observable", "package:observe/src/to_observable.dart", , R, {
  "": "",
  toObservable: [function(value, deep) {
    return deep === true ? R._toObservableDeep(value) : R._toObservableShallow(value);
  }, "call$2$deep" /* tearOffInfo */, "toObservable$closure", 2, 3, 1037, 816, 280, 1038, "toObservable"],
  _toObservableShallow: [function(value) {
    var t1 = J.getInterceptor(value);
    if (typeof value === "object" && value !== null && !!t1.$isObservable)
      return value;
    if (typeof value === "object" && value !== null && !!t1.$isMap) {
      t1 = V.ObservableMap_ObservableMap$createFromType(value, null, null);
      t1.addAll$1(0, value);
      return t1;
    }
    if (typeof value === "object" && value !== null && (value.constructor === Array || !!t1.$isIterable)) {
      t1 = Q.ObservableList$(null, null);
      t1.addAll$1(0, value);
      return t1;
    }
    return value;
  }, "call$1" /* tearOffInfo */, "_toObservableShallow$closure", 2, 0, 241, 280, "_toObservableShallow"],
  _toObservableDeep: [function(value) {
    var t1, result, t2;
    t1 = J.getInterceptor(value);
    if (typeof value === "object" && value !== null && !!t1.$isObservable)
      return value;
    if (typeof value === "object" && value !== null && !!t1.$isMap) {
      result = V.ObservableMap_ObservableMap$createFromType(value, null, null);
      t1.forEach$1(value, new R._toObservableDeep_closure(result));
      return result;
    }
    if (typeof value === "object" && value !== null && (value.constructor === Array || !!t1.$isIterable)) {
      t1 = t1.map$1(value, R._toObservableDeep$closure());
      t2 = Q.ObservableList$(null, null);
      t2.addAll$1(0, t1);
      return t2;
    }
    return value;
  }, "call$1" /* tearOffInfo */, "_toObservableDeep$closure", 2, 0, 241, 280, "_toObservableDeep"],
  _toObservableDeep_closure: {
    "": "Closure:311;result_0-370",
    call$2: [function(k, v) {
      J.$indexSet$a(this.result_0, R._toObservableDeep(k), R._toObservableDeep(v));
    }, "call$2" /* tearOffInfo */, null, 4, 0, 311, 1644, 700, "call"]
  },
  "+_toObservableDeep_closure": [1060]
}],
["unmodifiable_collection", "package:unmodifiable_collection/unmodifiable_collection.dart", , F, {
  "": "",
  NonGrowableListView: {
    "": "_IterableView;_unmodifiable_collection$_source@-2037",
    get$length: [function(_) {
      return J.get$length$as(this._unmodifiable_collection$_source);
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    $index: [function(_, index) {
      return J.$index$as(this._unmodifiable_collection$_source, index);
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int14", ret: E, args: [J.JSInt]};
      }, this.$receiver, "NonGrowableListView");
    }, 321, "[]"],
    indexOf$2: [function(_, element, start) {
      return J.indexOf$2$as(this._unmodifiable_collection$_source, element, start);
    }, function($receiver, element) {
      return this.indexOf$2($receiver, element, 0);
    }, "indexOf$1", "call$2" /* tearOffInfo */, null /* tearOffInfo */, "get$indexOf", 2, 2, function() {
      return H.computeSignature(function(E) {
        return {func: "int__E__int", ret: J.JSInt, args: [E], opt: [J.JSInt]};
      }, this.$receiver, "NonGrowableListView");
    }, 778, 453, 439, "indexOf"],
    lastIndexOf$2: [function(_, element, start) {
      return J.lastIndexOf$2$as(this._unmodifiable_collection$_source, element, start);
    }, function($receiver, element) {
      return this.lastIndexOf$2($receiver, element, null);
    }, "lastIndexOf$1", "call$2" /* tearOffInfo */, null /* tearOffInfo */, "get$lastIndexOf", 2, 2, function() {
      return H.computeSignature(function(E) {
        return {func: "int__E__int", ret: J.JSInt, args: [E], opt: [J.JSInt]};
      }, this.$receiver, "NonGrowableListView");
    }, 370, 453, 439, "lastIndexOf"],
    getRange$2: [function(_, start, end) {
      return J.getRange$2$a(this._unmodifiable_collection$_source, start, end);
    }, "call$2" /* tearOffInfo */, "get$getRange", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int_int1", ret: [P.Iterable, E], args: [J.JSInt, J.JSInt]};
      }, this.$receiver, "NonGrowableListView");
    }, 439, 440, "getRange"],
    sublist$2: [function(_, start, end) {
      return J.sublist$2$a(this._unmodifiable_collection$_source, start, end);
    }, function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }, "sublist$1", "call$2" /* tearOffInfo */, null /* tearOffInfo */, "get$sublist", 2, 2, function() {
      return H.computeSignature(function(E) {
        return {func: "List__int__int1", ret: [J.JSArray, E], args: [J.JSInt], opt: [J.JSInt]};
      }, this.$receiver, "NonGrowableListView");
    }, 370, 439, 440, "sublist"],
    get$reversed: [function(_) {
      return J.get$reversed$a(this._unmodifiable_collection$_source);
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable_16", ret: [P.Iterable, E]};
      }, this.$receiver, "NonGrowableListView");
    }, "reversed"],
    asMap$0: [function(_) {
      return J.asMap$0$a(this._unmodifiable_collection$_source);
    }, "call$0" /* tearOffInfo */, "get$asMap", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Map_11", ret: [P.Map, J.JSInt, E]};
      }, this.$receiver, "NonGrowableListView");
    }, "asMap"],
    $indexSet: [function(_, index, value) {
      J.$indexSet$a(this._unmodifiable_collection$_source, index, value);
    }, "call$2" /* tearOffInfo */, "get$[]=", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_E4", void: true, args: [J.JSInt, E]};
      }, this.$receiver, "NonGrowableListView");
    }, 321, 280, "[]="],
    sort$1: [function(_, compare) {
      J.sort$1$a(this._unmodifiable_collection$_source, compare);
    }, "call$1" /* tearOffInfo */, "get$sort", 0, 2, function() {
      return H.computeSignature(function(E) {
        return {func: "void___int__E_E1", void: true, opt: [{func: "int__E_E3", ret: J.JSInt, args: [E, E]}]};
      }, this.$receiver, "NonGrowableListView");
    }, 370, 459, "sort"],
    shuffle$1: [function(_, random) {
      J.shuffle$1$a(this._unmodifiable_collection$_source, random);
    }, "call$1" /* tearOffInfo */, "get$shuffle", 0, 2, 1053, 370, 437, "shuffle"],
    setRange$4: [function(_, start, end, iterable, skipCount) {
      J.setRange$4$a(this._unmodifiable_collection$_source, start, end, iterable, skipCount);
    }, function($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    }, "setRange$3", "call$4" /* tearOffInfo */, null /* tearOffInfo */, "get$setRange", 6, 2, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_int_Iterable__int2", void: true, args: [J.JSInt, J.JSInt, [P.Iterable, E]], opt: [J.JSInt]};
      }, this.$receiver, "NonGrowableListView");
    }, 778, 439, 440, 417, 419, "setRange"],
    fillRange$3: [function(_, start, end, fillValue) {
      J.fillRange$3$a(this._unmodifiable_collection$_source, start, end, fillValue);
    }, "call$3" /* tearOffInfo */, "get$fillRange", 4, 2, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_int__E2", void: true, args: [J.JSInt, J.JSInt], opt: [E]};
      }, this.$receiver, "NonGrowableListView");
    }, 370, 439, 440, 443, "fillRange"],
    setAll$2: [function(_, index, iterable) {
      J.setAll$2$a(this._unmodifiable_collection$_source, index, iterable);
    }, "call$2" /* tearOffInfo */, "get$setAll", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_Iterable3", void: true, args: [J.JSInt, [P.Iterable, E]]};
      }, this.$receiver, "NonGrowableListView");
    }, 321, 417, "setAll"],
    set$length: [function(_, newLength) {
      return F.NonGrowableListView__throw();
    }, null /* tearOffInfo */, null, 3, 0, 1055, 1056, "length"],
    add$1: [function(_, value) {
      F.NonGrowableListView__throw();
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__E11", ret: J.JSBool, args: [E]};
      }, this.$receiver, "NonGrowableListView");
    }, 280, "add"],
    addAll$1: [function(_, iterable) {
      return F.NonGrowableListView__throw();
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__Iterable13", void: true, args: [[P.Iterable, E]]};
      }, this.$receiver, "NonGrowableListView");
    }, 417, "addAll"],
    insert$2: [function(_, index, element) {
      return F.NonGrowableListView__throw();
    }, "call$2" /* tearOffInfo */, "get$insert", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_E4", void: true, args: [J.JSInt, E]};
      }, this.$receiver, "NonGrowableListView");
    }, 321, 453, "insert"],
    insertAll$2: [function(_, index, iterable) {
      return F.NonGrowableListView__throw();
    }, "call$2" /* tearOffInfo */, "get$insertAll", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_Iterable3", void: true, args: [J.JSInt, [P.Iterable, E]]};
      }, this.$receiver, "NonGrowableListView");
    }, 321, 417, "insertAll"],
    remove$1: [function(_, value) {
      F.NonGrowableListView__throw();
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, 1047, 280, "remove"],
    removeAt$1: [function(_, index) {
      F.NonGrowableListView__throw();
    }, "call$1" /* tearOffInfo */, "get$removeAt", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int14", ret: E, args: [J.JSInt]};
      }, this.$receiver, "NonGrowableListView");
    }, 321, "removeAt"],
    removeLast$0: [function(_) {
      F.NonGrowableListView__throw();
    }, "call$0" /* tearOffInfo */, "get$removeLast", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_31", ret: E};
      }, this.$receiver, "NonGrowableListView");
    }, "removeLast"],
    removeWhere$1: [function(_, test) {
      return F.NonGrowableListView__throw();
    }, "call$1" /* tearOffInfo */, "get$removeWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E7", void: true, args: [{func: "bool__E11", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "NonGrowableListView");
    }, 428, "removeWhere"],
    retainWhere$1: [function(_, test) {
      return F.NonGrowableListView__throw();
    }, "call$1" /* tearOffInfo */, "get$retainWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E7", void: true, args: [{func: "bool__E11", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "NonGrowableListView");
    }, 428, "retainWhere"],
    removeRange$2: [function(_, start, end) {
      return F.NonGrowableListView__throw();
    }, "call$2" /* tearOffInfo */, "get$removeRange", 4, 0, 1052, 439, 440, "removeRange"],
    replaceRange$3: [function(_, start, end, iterable) {
      return F.NonGrowableListView__throw();
    }, "call$3" /* tearOffInfo */, "get$replaceRange", 6, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_int_Iterable2", void: true, args: [J.JSInt, J.JSInt, [P.Iterable, E]]};
      }, this.$receiver, "NonGrowableListView");
    }, 439, 440, 417, "replaceRange"],
    clear$0: [function(_) {
      return F.NonGrowableListView__throw();
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    $as_IterableView: null,
    $asList: null,
    $asIterable: null,
    $isList: true,
    $isEfficientLength: true,
    $isIterable: true,
    "<>": [139],
    static: {NonGrowableListView$: [function(source, $E) {
        return H.setRuntimeTypeInfo(new F.NonGrowableListView(source), [$E]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "dynamic__List0", args: [[J.JSArray, E]]};
        }, this.$receiver, "NonGrowableListView");
      }, 292, "new NonGrowableListView" /* new NonGrowableListView:1:0 */], NonGrowableListView__throw: [function() {
        throw H.wrapException(P.UnsupportedError$("Cannot change the length of a fixed-length list"));
      }, "call$0" /* tearOffInfo */, "NonGrowableListView__throw$closure", 0, 0, 494, "_throw"]}
  },
  "+NonGrowableListView": [2038, 2037],
  UnmodifiableSetView: {
    "": "_IterableView;_unmodifiable_collection$_source@-2039",
    _throw$0: [function() {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable Set"));
    }, "call$0" /* tearOffInfo */, "get$_throw", 0, 0, 494, "_throw"],
    containsAll$1: [function(other) {
      return this._unmodifiable_collection$_source.containsAll$1(other);
    }, "call$1" /* tearOffInfo */, "get$containsAll", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__Iterable0", ret: J.JSBool, args: [[P.Iterable, E]]};
      }, this.$receiver, "UnmodifiableSetView");
    }, 403, "containsAll"],
    intersection$1: [function(other) {
      return this._unmodifiable_collection$_source.intersection$1(other);
    }, "call$1" /* tearOffInfo */, "get$intersection", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set__Set2", ret: [P.Set, E], args: [[P.Set, E]]};
      }, this.$receiver, "UnmodifiableSetView");
    }, 403, "intersection"],
    union$1: [function(other) {
      return this._unmodifiable_collection$_source.union$1(other);
    }, "call$1" /* tearOffInfo */, "get$union", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set__Set2", ret: [P.Set, E], args: [[P.Set, E]]};
      }, this.$receiver, "UnmodifiableSetView");
    }, 403, "union"],
    difference$1: [function(other) {
      return this._unmodifiable_collection$_source.difference$1(other);
    }, "call$1" /* tearOffInfo */, "get$difference", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set__Set2", ret: [P.Set, E], args: [[P.Set, E]]};
      }, this.$receiver, "UnmodifiableSetView");
    }, 403, "difference"],
    lookup$1: [function(object) {
      return this._unmodifiable_collection$_source.lookup$1(object);
    }, "call$1" /* tearOffInfo */, "get$lookup", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__Object4", ret: E, args: [P.Object]};
      }, this.$receiver, "UnmodifiableSetView");
    }, 242, "lookup"],
    add$1: [function(_, value) {
      this._throw$0();
    }, "call$1" /* tearOffInfo */, "get$add", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__E12", ret: J.JSBool, args: [E]};
      }, this.$receiver, "UnmodifiableSetView");
    }, 280, "add"],
    addAll$1: [function(_, elements) {
      return this._throw$0();
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__Iterable14", void: true, args: [[P.Iterable, E]]};
      }, this.$receiver, "UnmodifiableSetView");
    }, 1594, "addAll"],
    remove$1: [function(_, value) {
      this._throw$0();
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, 1047, 280, "remove"],
    removeAll$1: [function(elements) {
      return this._throw$0();
    }, "call$1" /* tearOffInfo */, "get$removeAll", 2, 0, 1608, 1594, "removeAll"],
    retainAll$1: [function(elements) {
      return this._throw$0();
    }, "call$1" /* tearOffInfo */, "get$retainAll", 2, 0, 1608, 1594, "retainAll"],
    removeWhere$1: [function(_, test) {
      return this._throw$0();
    }, "call$1" /* tearOffInfo */, "get$removeWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E8", void: true, args: [{func: "bool__E12", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "UnmodifiableSetView");
    }, 428, "removeWhere"],
    retainWhere$1: [function(_, test) {
      return this._throw$0();
    }, "call$1" /* tearOffInfo */, "get$retainWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__bool__E8", void: true, args: [{func: "bool__E12", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "UnmodifiableSetView");
    }, 428, "retainWhere"],
    clear$0: [function(_) {
      return this._throw$0();
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    $as_IterableView: null,
    $asSet: null,
    $asIterable: null,
    $isSet: true,
    $isEfficientLength: true,
    $isIterable: true,
    "<>": [141],
    static: {UnmodifiableSetView$: [function(source, $E) {
        return H.setRuntimeTypeInfo(new F.UnmodifiableSetView(source), [$E]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "dynamic__Set", args: [[P.Set, E]]};
        }, this.$receiver, "UnmodifiableSetView");
      }, 292, "new UnmodifiableSetView" /* new UnmodifiableSetView:1:0 */]}
  },
  "+UnmodifiableSetView": [2040, 2039],
  UnmodifiableMapView: {
    "": "Object;_unmodifiable_collection$_source@-2041",
    get$length: [function(_) {
      return J.get$length$as(this._unmodifiable_collection$_source);
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    get$isEmpty: [function(_) {
      return J.get$isEmpty$as(this._unmodifiable_collection$_source);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$isNotEmpty: [function(_) {
      return J.get$isNotEmpty$as(this._unmodifiable_collection$_source);
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty"],
    $index: [function(_, key) {
      return J.$index$as(this._unmodifiable_collection$_source, key);
    }, "call$1" /* tearOffInfo */, "get$[]", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__K0", ret: V, args: [K]};
      }, this.$receiver, "UnmodifiableMapView");
    }, 312, "[]"],
    containsKey$1: [function(key) {
      return this._unmodifiable_collection$_source.containsKey$1(key);
    }, "call$1" /* tearOffInfo */, "get$containsKey", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "bool__K0", ret: J.JSBool, args: [K]};
      }, this.$receiver, "UnmodifiableMapView");
    }, 312, "containsKey"],
    containsValue$1: [function(value) {
      return this._unmodifiable_collection$_source.containsValue$1(value);
    }, "call$1" /* tearOffInfo */, "get$containsValue", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "bool__V0", ret: J.JSBool, args: [V]};
      }, this.$receiver, "UnmodifiableMapView");
    }, 280, "containsValue"],
    forEach$1: [function(_, f) {
      return J.forEach$1$a(this._unmodifiable_collection$_source, f);
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__void__K_V5", void: true, args: [{func: "void__K_V5", void: true, args: [K, V]}]};
      }, this.$receiver, "UnmodifiableMapView");
    }, 412, "forEach"],
    get$keys: [function() {
      return this._unmodifiable_collection$_source.get$keys();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "Iterable_17", ret: [P.Iterable, K]};
      }, this.$receiver, "UnmodifiableMapView");
    }, "keys"],
    get$values: [function() {
      return this._unmodifiable_collection$_source.get$values();
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "Iterable_18", ret: [P.Iterable, V]};
      }, this.$receiver, "UnmodifiableMapView");
    }, "values"],
    $indexSet: [function(_, key, value) {
      return F.UnmodifiableMapView__throw0();
    }, "call$2" /* tearOffInfo */, "get$[]=", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__K_V5", void: true, args: [K, V]};
      }, this.$receiver, "UnmodifiableMapView");
    }, 312, 280, "[]="],
    putIfAbsent$2: [function(key, ifAbsent) {
      F.UnmodifiableMapView__throw0();
    }, "call$2" /* tearOffInfo */, "get$putIfAbsent", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__K_V_5", ret: V, args: [K, {func: "V_5", ret: V}]};
      }, this.$receiver, "UnmodifiableMapView");
    }, 312, 663, "putIfAbsent"],
    addAll$1: [function(_, other) {
      return F.UnmodifiableMapView__throw0();
    }, "call$1" /* tearOffInfo */, "get$addAll", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__Map5", void: true, args: [[P.Map, K, V]]};
      }, this.$receiver, "UnmodifiableMapView");
    }, 403, "addAll"],
    remove$1: [function(_, key) {
      F.UnmodifiableMapView__throw0();
    }, "call$1" /* tearOffInfo */, "get$remove", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__K0", ret: V, args: [K]};
      }, this.$receiver, "UnmodifiableMapView");
    }, 312, "remove"],
    clear$0: [function(_) {
      return F.UnmodifiableMapView__throw0();
    }, "call$0" /* tearOffInfo */, "get$clear", 0, 0, 494, "clear"],
    $isMap: true,
    "<>": [91, 92],
    static: {UnmodifiableMapView$: [function(source, $K, $V) {
        return H.setRuntimeTypeInfo(new F.UnmodifiableMapView(source), [$K, $V]);
      }, null /* tearOffInfo */, null, 2, 0, function() {
        return H.computeSignature(function(K, V) {
          return {func: "dynamic__Map0", args: [[P.Map, K, V]]};
        }, this.$receiver, "UnmodifiableMapView");
      }, 292, "new UnmodifiableMapView" /* new UnmodifiableMapView:1:0 */], UnmodifiableMapView__throw0: [function() {
        throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable Map"));
      }, "call$0" /* tearOffInfo */, "UnmodifiableMapView__throw0$closure", 0, 0, 494, "_throw"]}
  },
  "+UnmodifiableMapView": [0, 2041],
  _IterableView: {
    "": "Object;",
    any$1: [function(_, test) {
      return J.any$1$a(this.get$_unmodifiable_collection$_source(), test);
    }, "call$1" /* tearOffInfo */, "get$any", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__bool__E4", ret: J.JSBool, args: [{func: "bool__E13", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "_IterableView");
    }, 428, "any"],
    contains$1: [function(_, element) {
      return J.contains$1$as(this.get$_unmodifiable_collection$_source(), element);
    }, "call$1" /* tearOffInfo */, "get$contains", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__E13", ret: J.JSBool, args: [E]};
      }, this.$receiver, "_IterableView");
    }, 453, "contains"],
    elementAt$1: [function(_, index) {
      return J.elementAt$1$a(this.get$_unmodifiable_collection$_source(), index);
    }, "call$1" /* tearOffInfo */, "get$elementAt", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int15", ret: E, args: [J.JSInt]};
      }, this.$receiver, "_IterableView");
    }, 321, "elementAt"],
    every$1: [function(_, test) {
      return J.every$1$a(this.get$_unmodifiable_collection$_source(), test);
    }, "call$1" /* tearOffInfo */, "get$every", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "bool__bool__E4", ret: J.JSBool, args: [{func: "bool__E13", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "_IterableView");
    }, 428, "every"],
    expand$1: [function(_, f) {
      return J.expand$1$a(this.get$_unmodifiable_collection$_source(), f);
    }, "call$1" /* tearOffInfo */, "get$expand", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__Iterable__E3", ret: P.Iterable, args: [{func: "Iterable__E3", ret: P.Iterable, args: [E]}]};
      }, this.$receiver, "_IterableView");
    }, 412, "expand"],
    get$first: [function(_) {
      return J.get$first$a(this.get$_unmodifiable_collection$_source());
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_32", ret: E};
      }, this.$receiver, "_IterableView");
    }, "first"],
    firstWhere$2$orElse: [function(_, test, orElse) {
      return J.firstWhere$2$orElse$a(this.get$_unmodifiable_collection$_source(), test, orElse);
    }, "call$2$orElse" /* tearOffInfo */, "get$firstWhere", 2, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "E__bool__E__E_", ret: E, args: [{func: "bool__E13", ret: J.JSBool, args: [E]}], named: {orElse: {func: "E_32", ret: E}}};
      }, this.$receiver, "_IterableView");
    }, 370, 428, 430, "firstWhere"],
    fold$2: [function(_, initialValue, combine) {
      return J.fold$2$a(this.get$_unmodifiable_collection$_source(), initialValue, combine);
    }, "call$2" /* tearOffInfo */, "get$fold", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "dynamic__dynamic_dynamic__dynamic_E4", args: [null, {func: "dynamic__dynamic_E4", args: [null, E]}]};
      }, this.$receiver, "_IterableView");
    }, 426, 424, "fold"],
    forEach$1: [function(_, f) {
      return J.forEach$1$a(this.get$_unmodifiable_collection$_source(), f);
    }, "call$1" /* tearOffInfo */, "get$forEach", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__void__E9", void: true, args: [{func: "void__E15", void: true, args: [E]}]};
      }, this.$receiver, "_IterableView");
    }, 412, "forEach"],
    get$isEmpty: [function(_) {
      return J.get$isEmpty$as(this.get$_unmodifiable_collection$_source());
    }, null /* tearOffInfo */, null, 1, 0, 849, "isEmpty"],
    get$isNotEmpty: [function(_) {
      return J.get$isNotEmpty$as(this.get$_unmodifiable_collection$_source());
    }, null /* tearOffInfo */, null, 1, 0, 849, "isNotEmpty"],
    get$iterator: [function(_) {
      return J.get$iterator$a(this.get$_unmodifiable_collection$_source());
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterator_20", ret: [P.Iterator, E]};
      }, this.$receiver, "_IterableView");
    }, "iterator"],
    join$1: [function(_, separator) {
      return J.join$1$a(this.get$_unmodifiable_collection$_source(), separator);
    }, "call$1" /* tearOffInfo */, "get$join", 0, 2, 1049, 806, 1050, "join"],
    get$last: [function(_) {
      return J.get$last$a(this.get$_unmodifiable_collection$_source());
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_32", ret: E};
      }, this.$receiver, "_IterableView");
    }, "last"],
    lastWhere$2$orElse: [function(_, test, orElse) {
      return J.lastWhere$2$orElse$a(this.get$_unmodifiable_collection$_source(), test, orElse);
    }, "call$2$orElse" /* tearOffInfo */, "get$lastWhere", 2, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "E__bool__E__E_", ret: E, args: [{func: "bool__E13", ret: J.JSBool, args: [E]}], named: {orElse: {func: "E_32", ret: E}}};
      }, this.$receiver, "_IterableView");
    }, 370, 428, 430, "lastWhere"],
    get$length: [function(_) {
      return J.get$length$as(this.get$_unmodifiable_collection$_source());
    }, null /* tearOffInfo */, null, 1, 0, 823, "length"],
    map$1: [function(_, f) {
      return J.map$1$a(this.get$_unmodifiable_collection$_source(), f);
    }, "call$1" /* tearOffInfo */, "get$map", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__dynamic__E4", ret: P.Iterable, args: [{func: "dynamic__E6", args: [E]}]};
      }, this.$receiver, "_IterableView");
    }, 412, "map"],
    reduce$1: [function(_, combine) {
      return J.reduce$1$a(this.get$_unmodifiable_collection$_source(), combine);
    }, "call$1" /* tearOffInfo */, "get$reduce", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__E__E_E3", ret: E, args: [{func: "E__E_E3", ret: E, args: [E, E]}]};
      }, this.$receiver, "_IterableView");
    }, 424, "reduce"],
    get$single: [function(_) {
      return J.get$single$a(this.get$_unmodifiable_collection$_source());
    }, null /* tearOffInfo */, null, 1, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E_32", ret: E};
      }, this.$receiver, "_IterableView");
    }, "single"],
    singleWhere$1: [function(_, test) {
      return J.singleWhere$1$a(this.get$_unmodifiable_collection$_source(), test);
    }, "call$1" /* tearOffInfo */, "get$singleWhere", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__bool__E4", ret: E, args: [{func: "bool__E13", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "_IterableView");
    }, 428, "singleWhere"],
    skip$1: [function(_, n) {
      return J.skip$1$a(this.get$_unmodifiable_collection$_source(), n);
    }, "call$1" /* tearOffInfo */, "get$skip", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int6", ret: [P.Iterable, E], args: [J.JSInt]};
      }, this.$receiver, "_IterableView");
    }, 1051, "skip"],
    skipWhile$1: [function(_, test) {
      return J.skipWhile$1$a(this.get$_unmodifiable_collection$_source(), test);
    }, "call$1" /* tearOffInfo */, "get$skipWhile", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E4", ret: [P.Iterable, E], args: [{func: "bool__E13", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "_IterableView");
    }, 428, "skipWhile"],
    take$1: [function(_, n) {
      return J.take$1$a(this.get$_unmodifiable_collection$_source(), n);
    }, "call$1" /* tearOffInfo */, "get$take", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__int6", ret: [P.Iterable, E], args: [J.JSInt]};
      }, this.$receiver, "_IterableView");
    }, 1051, "take"],
    takeWhile$1: [function(_, test) {
      return J.takeWhile$1$a(this.get$_unmodifiable_collection$_source(), test);
    }, "call$1" /* tearOffInfo */, "get$takeWhile", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E4", ret: [P.Iterable, E], args: [{func: "bool__E13", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "_IterableView");
    }, 428, "takeWhile"],
    toList$1$growable: [function(_, growable) {
      return J.toList$1$growable$a(this.get$_unmodifiable_collection$_source(), growable);
    }, function($receiver) {
      return this.toList$1$growable($receiver, true);
    }, "toList$0", "call$1$growable" /* tearOffInfo */, null /* tearOffInfo */, "get$toList", 0, 3, function() {
      return H.computeSignature(function(E) {
        return {func: "List___bool6", ret: [J.JSArray, E], named: {growable: J.JSBool}};
      }, this.$receiver, "_IterableView");
    }, 816, 817, "toList"],
    toSet$0: [function(_) {
      return J.toSet$0$a(this.get$_unmodifiable_collection$_source());
    }, "call$0" /* tearOffInfo */, "get$toSet", 0, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Set_12", ret: [P.Set, E]};
      }, this.$receiver, "_IterableView");
    }, "toSet"],
    where$1: [function(_, test) {
      return J.where$1$a(this.get$_unmodifiable_collection$_source(), test);
    }, "call$1" /* tearOffInfo */, "get$where", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "Iterable__bool__E4", ret: [P.Iterable, E], args: [{func: "bool__E13", ret: J.JSBool, args: [E]}]};
      }, this.$receiver, "_IterableView");
    }, 428, "where"],
    "<>": [140],
    static: {_IterableView$: [function($E) {
        return H.setRuntimeTypeInfo(new F._IterableView(), [$E]);
      }, null /* tearOffInfo */, null, 0, 0, function() {
        return H.computeSignature(function(E) {
          return {func: "_IterableView_", ret: [F._IterableView, E]};
        }, this.$receiver, "_IterableView");
      }, "new _IterableView" /* new _IterableView:0:0 */]}
  },
  "+_IterableView": [0]
}],
]);
Isolate.$finishClasses($$, $, null);
$$ = null;

// Runtime type support
J.JSString.$isString = true;
J.JSString.$isPattern = true;
J.JSString.$isComparable = true;
J.JSString.$asComparable = [J.JSString];
J.JSString.$isObject = true;
J.JSNumber.$isComparable = true;
J.JSNumber.$asComparable = [J.JSNumber];
J.JSNumber.$isObject = true;
P.Match.$isMatch = true;
P.Match.$isObject = true;
J.JSArray.$isList = true;
J.JSArray.$isIterable = true;
J.JSArray.$isObject = true;
J.JSInt.$isint = true;
J.JSInt.$isComparable = true;
J.JSInt.$asComparable = [J.JSNumber];
J.JSInt.$isComparable = true;
J.JSInt.$asComparable = [J.JSNumber];
J.JSInt.$isComparable = true;
J.JSInt.$asComparable = [J.JSNumber];
J.JSInt.$isObject = true;
P.Duration.$isDuration = true;
P.Duration.$isComparable = true;
P.Duration.$asComparable = [P.Duration];
P.Duration.$isObject = true;
N.Level.$isComparable = true;
N.Level.$asComparable = [N.Level];
N.Level.$isObject = true;
P.Object.$isObject = true;
P._SplayTreeNode.$isObject = true;
O.EntityScan.$isEntityScan = true;
O.EntityScan.$isObject = true;
O.DormProxy.$isObject = true;
O.EntityPostProcessor.$isEntityPostProcessor = true;
O.EntityPostProcessor.$isObject = true;
O._InternalConvertor.$is_InternalConvertor = true;
O._InternalConvertor.$isObject = true;
P.Symbol0.$isSymbol0 = true;
P.Symbol0.$isObject = true;
P.Map.$isMap = true;
P.Map.$isObject = true;
O.EntityKey.$isEntityKey = true;
O.EntityKey.$isObject = true;
O._DormProxyListEntry.$is_DormProxyListEntry = true;
O._DormProxyListEntry.$isComparable = true;
O._DormProxyListEntry.$asComparable = function($T) {
  return [null];
};
O._DormProxyListEntry.$isObject = true;
P.TypeVariableMirror.$isMirror = true;
P.TypeVariableMirror.$isObject = true;
P.LibraryMirror.$isLibraryMirror = true;
P.LibraryMirror.$isMirror = true;
P.LibraryMirror.$isMirror = true;
P.LibraryMirror.$isObject = true;
P.InstanceMirror.$isInstanceMirror = true;
P.InstanceMirror.$isMirror = true;
P.InstanceMirror.$isObject = true;
P.DeclarationMirror.$isMirror = true;
P.DeclarationMirror.$isObject = true;
P.Mirror.$isMirror = true;
P.Mirror.$isObject = true;
P.VariableMirror.$isMirror = true;
P.VariableMirror.$isObject = true;
H.JsMethodMirror.$isMirror = true;
H.JsMethodMirror.$isMirror = true;
H.JsMethodMirror.$isMirror = true;
H.JsMethodMirror.$isObject = true;
P.ParameterMirror.$isMirror = true;
P.ParameterMirror.$isObject = true;
P.MethodMirror.$isMirror = true;
P.MethodMirror.$isObject = true;
P.ClassMirror.$isClassMirror = true;
P.ClassMirror.$isMirror = true;
P.ClassMirror.$isMirror = true;
P.ClassMirror.$isObject = true;
P.TypeMirror.$isMirror = true;
P.TypeMirror.$isObject = true;
P.DateTime.$isDateTime = true;
P.DateTime.$isComparable = true;
P.DateTime.$asComparable = [null];
P.DateTime.$isObject = true;
A.TestEntity.$isTestEntity = true;
A.TestEntity.$isEntity = true;
A.TestEntity.$isObject = true;
G.ListChangeRecord.$isListChangeRecord = true;
G.ListChangeRecord.$isObject = true;
T.ChangeRecord.$isChangeRecord = true;
T.ChangeRecord.$isObject = true;
F.Observable.$isObject = true;
N.Logger.$isObject = true;
J.JSBool.$isbool = true;
J.JSBool.$isObject = true;
H.RawReceivePortImpl.$isObject = true;
H._IsolateEvent.$isObject = true;
H._IsolateContext.$isObject = true;
P.StreamSubscription.$isStreamSubscription = true;
P.StreamSubscription.$isObject = true;
N.LogRecord.$isObject = true;
P.Uri.$isObject = true;
O._InternalLazyLoaderHandler.$is_InternalLazyLoaderHandler = true;
O._InternalLazyLoaderHandler.$isObject = true;
O.Entity.$isEntity = true;
O.Entity.$isObject = true;
O.MetadataValidationResult.$isObject = true;
O._ClonedEntityEntry.$is_ClonedEntityEntry = true;
O._ClonedEntityEntry.$isObject = true;
P.Isolate.$isObject = true;
P.Future.$isFuture = true;
P.Future.$isObject = true;
P.Encoding.$isObject = true;
P.Set.$isIterable = true;
P.Set.$isObject = true;
L.PathObserver.$isObject = true;
P._BufferingStreamSubscription.$is_BufferingStreamSubscription = true;
P._BufferingStreamSubscription.$is_EventSink = true;
P._BufferingStreamSubscription.$isStreamSubscription = true;
P._BufferingStreamSubscription.$isObject = true;
P._BroadcastSubscription.$is_BroadcastSubscription = true;
P._BroadcastSubscription.$is_BufferingStreamSubscription = true;
P._BroadcastSubscription.$is_EventSink = true;
P._BroadcastSubscription.$isStreamSubscription = true;
P._BroadcastSubscription.$isObject = true;
P.StackTrace.$isStackTrace = true;
P.StackTrace.$isObject = true;
P.ZoneDelegate.$isZoneDelegate = true;
P.ZoneDelegate.$isObject = true;
P.Zone.$isZone = true;
P.Zone.$isObject = true;
H.JsLibraryMirror.$isJsLibraryMirror = true;
H.JsLibraryMirror.$isLibraryMirror = true;
H.JsLibraryMirror.$isMirror = true;
H.JsLibraryMirror.$isMirror = true;
H.JsLibraryMirror.$isMirror = true;
H.JsLibraryMirror.$isMirror = true;
H.JsLibraryMirror.$isMirror = true;
H.JsLibraryMirror.$isObject = true;
P.EventSink.$isEventSink = true;
P.EventSink.$isObject = true;
P.Timer.$isTimer = true;
P.Timer.$isObject = true;
J.JSDouble.$isdouble = true;
J.JSDouble.$isComparable = true;
J.JSDouble.$asComparable = [J.JSNumber];
J.JSDouble.$isComparable = true;
J.JSDouble.$asComparable = [J.JSNumber];
J.JSDouble.$isObject = true;
P._SplayTreeMapNode.$is_SplayTreeMapNode = true;
P._SplayTreeMapNode.$isObject = true;
P.Function.$isFunction = true;
P.Function.$isObject = true;
O.ConflictManager.$isConflictManager = true;
O.ConflictManager.$isObject = true;
P.Comparable.$isComparable = true;
P.Comparable.$isObject = true;
P.Completer.$isCompleter = true;
P.Completer.$isObject = true;
P.ZoneSpecification.$isZoneSpecification = true;
P.ZoneSpecification.$isObject = true;
P._DelayedEvent.$is_DelayedEvent = true;
P._DelayedEvent.$isObject = true;
P._EventSink.$is_EventSink = true;
P._EventSink.$isObject = true;
P.Iterable.$isIterable = true;
P.Iterable.$isObject = true;
P.Pattern.$isPattern = true;
P.Pattern.$isObject = true;
$.$signature_args1 = {func: "args1", args: [null]};
$.$signature_void_ = {func: "void_", void: true};
$.$signature_args2 = {func: "args2", args: [null, null]};
// getInterceptor methods
J.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return J.JSInt.prototype;
    return J.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return J.JSNull.prototype;
  if (typeof receiver == "boolean")
    return J.JSBool.prototype;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$a = function(receiver) {
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$as = function(receiver) {
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$i = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return J.JSInt.prototype;
    return J.JSNumber.prototype;
  }
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return J.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$ns = function(receiver) {
  if (typeof receiver == "number")
    return J.JSNumber.prototype;
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.$add$ns = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver + a0;
  return J.getInterceptor$ns(receiver).$add(receiver, a0);
};
J.$and$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver & a0) >>> 0;
  return J.getInterceptor$n(receiver).$and(receiver, a0);
};
J.$eq = function(receiver, a0) {
  if (receiver == null)
    return a0 == null;
  if (typeof receiver != "object")
    return a0 != null && receiver === a0;
  return J.getInterceptor(receiver).$eq(receiver, a0);
};
J.$ge$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver >= a0;
  return J.getInterceptor$n(receiver).$ge(receiver, a0);
};
J.$gt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver > a0;
  return J.getInterceptor$n(receiver).$gt(receiver, a0);
};
J.$index$as = function(receiver, a0) {
  if (receiver.constructor == Array || typeof receiver == "string")
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return J.getInterceptor$as(receiver).$index(receiver, a0);
};
J.$indexSet$a = function(receiver, a0, a1) {
  if (receiver.constructor == Array && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
    return receiver[a0] = a1;
  return J.getInterceptor$a(receiver).$indexSet(receiver, a0, a1);
};
J.$le$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver <= a0;
  return J.getInterceptor$n(receiver).$le(receiver, a0);
};
J.$lt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver < a0;
  return J.getInterceptor$n(receiver).$lt(receiver, a0);
};
J.$mul$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver * a0;
  return J.getInterceptor$n(receiver).$mul(receiver, a0);
};
J.$or$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver | a0) >>> 0;
  return J.getInterceptor$n(receiver).$or(receiver, a0);
};
J.$shl$n = function(receiver, a0) {
  return J.getInterceptor$n(receiver).$shl(receiver, a0);
};
J.$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return J.getInterceptor$n(receiver).$sub(receiver, a0);
};
J.$tdiv$n = function(receiver, a0) {
  return J.getInterceptor$n(receiver).$tdiv(receiver, a0);
};
J.$xor$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver ^ a0) >>> 0;
  return J.getInterceptor$n(receiver).$xor(receiver, a0);
};
J.abs$0$n = function(receiver) {
  return J.getInterceptor$n(receiver).abs$0(receiver);
};
J.add$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).add$1(receiver, a0);
};
J.addAll$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).addAll$1(receiver, a0);
};
J.any$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).any$1(receiver, a0);
};
J.asMap$0$a = function(receiver) {
  return J.getInterceptor$a(receiver).asMap$0(receiver);
};
J.clear$0$a = function(receiver) {
  return J.getInterceptor$a(receiver).clear$0(receiver);
};
J.codeUnitAt$1$s = function(receiver, a0) {
  return J.getInterceptor$s(receiver).codeUnitAt$1(receiver, a0);
};
J.compareTo$1$ns = function(receiver, a0) {
  return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
};
J.contains$1$as = function(receiver, a0) {
  return J.getInterceptor$as(receiver).contains$1(receiver, a0);
};
J.elementAt$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).elementAt$1(receiver, a0);
};
J.endsWith$1$s = function(receiver, a0) {
  return J.getInterceptor$s(receiver).endsWith$1(receiver, a0);
};
J.every$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).every$1(receiver, a0);
};
J.expand$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).expand$1(receiver, a0);
};
J.fillRange$3$a = function(receiver, a0, a1, a2) {
  return J.getInterceptor$a(receiver).fillRange$3(receiver, a0, a1, a2);
};
J.firstWhere$2$orElse$a = function(receiver, a0, a1) {
  return J.getInterceptor$a(receiver).firstWhere$2$orElse(receiver, a0, a1);
};
J.fold$2$a = function(receiver, a0, a1) {
  return J.getInterceptor$a(receiver).fold$2(receiver, a0, a1);
};
J.forEach$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).forEach$1(receiver, a0);
};
J.get$add$a = function(receiver) {
  return J.getInterceptor$a(receiver).get$add(receiver);
};
J.get$first$a = function(receiver) {
  return J.getInterceptor$a(receiver).get$first(receiver);
};
J.get$hashCode$ = function(receiver) {
  return J.getInterceptor(receiver).get$hashCode(receiver);
};
J.get$isEmpty$as = function(receiver) {
  return J.getInterceptor$as(receiver).get$isEmpty(receiver);
};
J.get$isNotEmpty$as = function(receiver) {
  return J.getInterceptor$as(receiver).get$isNotEmpty(receiver);
};
J.get$iterator$a = function(receiver) {
  return J.getInterceptor$a(receiver).get$iterator(receiver);
};
J.get$last$a = function(receiver) {
  return J.getInterceptor$a(receiver).get$last(receiver);
};
J.get$length$as = function(receiver) {
  return J.getInterceptor$as(receiver).get$length(receiver);
};
J.get$reversed$a = function(receiver) {
  return J.getInterceptor$a(receiver).get$reversed(receiver);
};
J.get$runtimeType$ = function(receiver) {
  return J.getInterceptor(receiver).get$runtimeType(receiver);
};
J.get$single$a = function(receiver) {
  return J.getInterceptor$a(receiver).get$single(receiver);
};
J.getRange$2$a = function(receiver, a0, a1) {
  return J.getInterceptor$a(receiver).getRange$2(receiver, a0, a1);
};
J.indexOf$2$as = function(receiver, a0, a1) {
  return J.getInterceptor$as(receiver).indexOf$2(receiver, a0, a1);
};
J.insertAll$2$a = function(receiver, a0, a1) {
  return J.getInterceptor$a(receiver).insertAll$2(receiver, a0, a1);
};
J.join$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).join$1(receiver, a0);
};
J.lastIndexOf$1$as = function(receiver, a0) {
  return J.getInterceptor$as(receiver).lastIndexOf$1(receiver, a0);
};
J.lastIndexOf$2$as = function(receiver, a0, a1) {
  return J.getInterceptor$as(receiver).lastIndexOf$2(receiver, a0, a1);
};
J.lastWhere$2$orElse$a = function(receiver, a0, a1) {
  return J.getInterceptor$a(receiver).lastWhere$2$orElse(receiver, a0, a1);
};
J.map$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).map$1(receiver, a0);
};
J.matchAsPrefix$2$s = function(receiver, a0, a1) {
  return J.getInterceptor$s(receiver).matchAsPrefix$2(receiver, a0, a1);
};
J.noSuchMethod$1 = function(receiver, a0) {
  return J.getInterceptor(receiver).noSuchMethod$1(receiver, a0);
};
J.reduce$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).reduce$1(receiver, a0);
};
J.remainder$1$n = function(receiver, a0) {
  return J.getInterceptor$n(receiver).remainder$1(receiver, a0);
};
J.remove$0$a = function(receiver) {
  return J.getInterceptor$a(receiver).remove$0(receiver);
};
J.remove$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).remove$1(receiver, a0);
};
J.removeLast$0$a = function(receiver) {
  return J.getInterceptor$a(receiver).removeLast$0(receiver);
};
J.removeWhere$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).removeWhere$1(receiver, a0);
};
J.replaceAll$2$s = function(receiver, a0, a1) {
  return J.getInterceptor$s(receiver).replaceAll$2(receiver, a0, a1);
};
J.round$0$n = function(receiver) {
  return J.getInterceptor$n(receiver).round$0(receiver);
};
J.set$length$as = function(receiver, value) {
  return J.getInterceptor$as(receiver).set$length(receiver, value);
};
J.setAll$2$a = function(receiver, a0, a1) {
  return J.getInterceptor$a(receiver).setAll$2(receiver, a0, a1);
};
J.setRange$3$a = function(receiver, a0, a1, a2) {
  return J.getInterceptor$a(receiver).setRange$3(receiver, a0, a1, a2);
};
J.setRange$4$a = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$a(receiver).setRange$4(receiver, a0, a1, a2, a3);
};
J.shuffle$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).shuffle$1(receiver, a0);
};
J.singleWhere$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).singleWhere$1(receiver, a0);
};
J.skip$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).skip$1(receiver, a0);
};
J.skipWhile$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).skipWhile$1(receiver, a0);
};
J.sort$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).sort$1(receiver, a0);
};
J.split$1$s = function(receiver, a0) {
  return J.getInterceptor$s(receiver).split$1(receiver, a0);
};
J.startsWith$1$s = function(receiver, a0) {
  return J.getInterceptor$s(receiver).startsWith$1(receiver, a0);
};
J.sublist$2$a = function(receiver, a0, a1) {
  return J.getInterceptor$a(receiver).sublist$2(receiver, a0, a1);
};
J.substring$1$s = function(receiver, a0) {
  return J.getInterceptor$s(receiver).substring$1(receiver, a0);
};
J.substring$2$s = function(receiver, a0, a1) {
  return J.getInterceptor$s(receiver).substring$2(receiver, a0, a1);
};
J.take$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).take$1(receiver, a0);
};
J.takeWhile$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).takeWhile$1(receiver, a0);
};
J.toList$0$a = function(receiver) {
  return J.getInterceptor$a(receiver).toList$0(receiver);
};
J.toList$1$growable$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).toList$1$growable(receiver, a0);
};
J.toLowerCase$0$s = function(receiver) {
  return J.getInterceptor$s(receiver).toLowerCase$0(receiver);
};
J.toSet$0$a = function(receiver) {
  return J.getInterceptor$a(receiver).toSet$0(receiver);
};
J.toString$0 = function(receiver) {
  return J.getInterceptor(receiver).toString$0(receiver);
};
J.trim$0$s = function(receiver) {
  return J.getInterceptor$s(receiver).trim$0(receiver);
};
J.where$1$a = function(receiver, a0) {
  return J.getInterceptor$a(receiver).where$1(receiver, a0);
};
C.AsciiCodec_false = new P.AsciiCodec(false);
C.AsciiDecoder_false_127 = new P.AsciiDecoder(false, 127);
C.AsciiDecoder_true_127 = new P.AsciiDecoder(true, 127);
C.AsciiEncoder_127 = new P.AsciiEncoder(127);
C.C_DynamicRuntimeType = new H.DynamicRuntimeType();
C.C_EmptyIterator = new H.EmptyIterator();
C.C_Immutable = new O.Immutable();
C.C_JSArray = new J.JSArray();
C.C_JSBool = new J.JSBool();
C.C_JSDouble = new J.JSDouble();
C.C_JSInt = new J.JSInt();
C.C_JSNumber = new J.JSNumber();
C.C_JSString = new J.JSString();
C.C_JsonCodec = new P.JsonCodec();
C.C_LabelField = new O.LabelField();
C.C_NoInline = new H.NoInline();
C.C_NoSideEffects = new H.NoSideEffects();
C.C_NoThrows = new H.NoThrows();
C.C_NotNullable = new O.NotNullable();
C.C_ObservableProperty = new K.ObservableProperty();
C.C_Reflectable = new K.Reflectable();
C.C__DelayedDone = new P._DelayedDone();
C.C__JSRandom = new P._JSRandom();
C.C__ListConstructorSentinel = new P._ListConstructorSentinel();
C.C__Override = new P._Override();
C.C__Proxy = new P._Proxy();
C.C__RootZone = new P._RootZone();
C.C__RootZoneSpecification = new P._RootZoneSpecification();
C.ConflictManager_1 = new O.ConflictManager(1);
C.ConflictManager_2 = new O.ConflictManager(2);
C.DefaultValue_0 = new O.DefaultValue(0);
C.Deprecated_o8I = new P.Deprecated("next release");
C.Duration_0 = new P.Duration(0);
C.HtmlEscapeMode_0 = new P.HtmlEscapeMode("attribute", false, true, false, false);
C.HtmlEscapeMode_2oY = new P.HtmlEscapeMode("element", true, false, false, true);
C.HtmlEscapeMode_p2v = new P.HtmlEscapeMode("unknown", true, true, true, true);
C.HtmlEscape_gsm = new P.HtmlEscape(C.HtmlEscapeMode_p2v);
C.Id_0 = new O.Id(0);
C.JSArray_methods = J.JSArray.prototype;
C.JSDouble_methods = J.JSDouble.prototype;
C.JSInt_methods = J.JSInt.prototype;
C.JSNumber_methods = J.JSNumber.prototype;
C.JSString_methods = J.JSString.prototype;
C.JS_CONST_IX5 = function getTagFallback(o) {
  var constructor = o.constructor;
  if (typeof constructor == "function") {
    var name = constructor.name;
    if (typeof name == "string"
        && name !== ""
        && name !== "Object"
        && name !== "Function.prototype") {
      return name;
    }
  }
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
C.JsonDecoder_null = new P.JsonDecoder(null);
C.JsonEncoder_null = new P.JsonEncoder(null);
C.Latin1Codec_false = new P.Latin1Codec(false);
C.Latin1Decoder_false_255 = new P.Latin1Decoder(false, 255);
C.Latin1Decoder_true_255 = new P.Latin1Decoder(true, 255);
C.Latin1Encoder_255 = new P.Latin1Encoder(255);
C.Level_ALL_0 = new N.Level("ALL", 0);
C.Level_CONFIG_700 = new N.Level("CONFIG", 700);
C.Level_FINER_400 = new N.Level("FINER", 400);
C.Level_FINEST_300 = new N.Level("FINEST", 300);
C.Level_FINE_500 = new N.Level("FINE", 500);
C.Level_INFO_800 = new N.Level("INFO", 800);
C.Level_OFF_2000 = new N.Level("OFF", 2000);
C.Level_SEVERE_1000 = new N.Level("SEVERE", 1000);
C.Level_SHOUT_1200 = new N.Level("SHOUT", 1200);
C.Level_WARNING_900 = new N.Level("WARNING", 900);
Isolate.makeConstantList = function(list) {
  list.immutable$list = init;
  list.fixed$length = init;
  return list;
};
C.List_127_2047_65535_1114111 = H.setRuntimeTypeInfo(Isolate.makeConstantList([127, 2047, 65535, 1114111]), [J.JSInt]);
C.List_239_191_189 = H.setRuntimeTypeInfo(Isolate.makeConstantList([239, 191, 189]), [J.JSInt]);
C.List_65533 = Isolate.makeConstantList([65533]);
C.List_6Pr = Isolate.makeConstantList([0, 0, 26624, 1023, 0, 0, 65534, 2047]);
C.List_CVk = Isolate.makeConstantList([0, 0, 63450, 45055, 65535, 34815, 65534, 18431]);
C.List_CVk0 = Isolate.makeConstantList([0, 0, 65490, 45055, 65535, 34815, 65534, 18431]);
C.List_JYB = Isolate.makeConstantList([0, 0, 26624, 1023, 65534, 2047, 65534, 2047]);
C.List_KIf = Isolate.makeConstantList([0, 0, 26498, 1023, 65534, 34815, 65534, 18431]);
C.List_axv = Isolate.makeConstantList([0, 0, 32722, 11263, 65534, 34815, 65534, 18431]);
C.List_empty = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [P.TypeVariableMirror]);
C.List_empty0 = Isolate.makeConstantList([]);
C.List_empty1 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [P.TypeMirror]);
C.List_empty2 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [P.ClassMirror]);
C.List_empty3 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [J.JSString]);
C.List_nxB = Isolate.makeConstantList([0, 0, 24576, 1023, 65534, 34815, 65534, 18431]);
C.List_qg4 = Isolate.makeConstantList([0, 0, 32722, 12287, 65535, 34815, 65534, 18431]);
C.Symbol_RvJ = new H.Symbol("orm_domain.TestEntity.cyclicReference");
C.Type_qpP = H.createRuntimeType('TestEntity');
C.Property_I6l = new O.Property(C.Symbol_RvJ, "cyclicReference", C.Type_qpP);
C.Symbol_mpK = new H.Symbol("orm_domain.TestEntitySuperClass.id");
C.Type_SnA = H.createRuntimeType('int');
C.Property_Snx = new O.Property(C.Symbol_mpK, "id", C.Type_SnA);
C.Symbol_k4X = new H.Symbol("orm_domain.TestEntity.name");
C.Type_Ejg = H.createRuntimeType('String');
C.Property_YaG = new O.Property(C.Symbol_k4X, "name", C.Type_Ejg);
C.Symbol_k4X0 = new H.Symbol("orm_domain.TestEntity.date");
C.Type_dVs = H.createRuntimeType('DateTime');
C.Property_iL9 = new O.Property(C.Symbol_k4X0, "date", C.Type_dVs);
C.Ref_8I8 = new O.Ref("entities.testEntity");
C.Ref_Grj = new O.Ref("entities.testEntitySuperClass");
C.Symbol_0c4 = new H.Symbol("");
C.Symbol_4SI = new H.Symbol("dorm.Entity");
C.Symbol_M2b = new H.Symbol("dorm.core.DormManager.isCommitNotRequired");
C.Symbol_Qyo = new H.Symbol("[]");
C.Symbol_UBz = new H.Symbol("dorm.core.DormManager.isCommitRequired");
C.Symbol_call = new H.Symbol("call");
C.Symbol_dynamic = new H.Symbol("dynamic");
C.Symbol_length = new H.Symbol("length");
C.Symbol_noSuchMethod = new H.Symbol("noSuchMethod");
C.Symbol_sgp = new H.Symbol("[]=");
C.Symbol_value = new H.Symbol("value");
C.Symbol_void = new H.Symbol("void");
C.Type_9GF = H.createRuntimeType('_UnmodifiableMap');
C.TypeVariable_0 = new H.TypeVariable(C.Type_9GF, "K", 0);
C.Type_MXl = H.createRuntimeType('HashMapKeyIterator');
C.TypeVariable_0aX = new H.TypeVariable(C.Type_MXl, "E", 0);
C.Type_bCn = H.createRuntimeType('Converter');
C.TypeVariable_0jk = new H.TypeVariable(C.Type_bCn, "T", 0);
C.Type_izW = H.createRuntimeType('DormProxy');
C.TypeVariable_2Fm = new H.TypeVariable(C.Type_izW, "T", 0);
C.Type_fBD = H.createRuntimeType('HasNextIterator');
C.TypeVariable_2Qw = new H.TypeVariable(C.Type_fBD, "E", 0);
C.Type_kjl = H.createRuntimeType('_SimpleCallbackSink');
C.TypeVariable_2Zi = new H.TypeVariable(C.Type_kjl, "T", 0);
C.Type_ndZ = H.createRuntimeType('ListIterator');
C.TypeVariable_2it = new H.TypeVariable(C.Type_ndZ, "E", 0);
C.Type_QEb = H.createRuntimeType('_AsBroadcastStreamController');
C.TypeVariable_33h = new H.TypeVariable(C.Type_QEb, "T", 0);
C.Type_sgE = H.createRuntimeType('TakeWhileIterator');
C.TypeVariable_3Gf = new H.TypeVariable(C.Type_sgE, "E", 0);
C.Type_8nU = H.createRuntimeType('Serializer');
C.TypeVariable_4e8 = new H.TypeVariable(C.Type_8nU, "T", 0);
C.Type_oyU = H.createRuntimeType('_SplayTreeMapNode');
C.TypeVariable_4kp = new H.TypeVariable(C.Type_oyU, "K", 0);
C.Type_Fmx = H.createRuntimeType('SkipWhileIterable');
C.TypeVariable_5vl = new H.TypeVariable(C.Type_Fmx, "E", 0);
C.Type_54c = H.createRuntimeType('_BroadcastSubscription');
C.TypeVariable_5wV = new H.TypeVariable(C.Type_54c, "T", 0);
C.Type_y5m = H.createRuntimeType('TakeWhileIterable');
C.TypeVariable_6FR = new H.TypeVariable(C.Type_y5m, "E", 0);
C.Type_Z2Z = H.createRuntimeType('_LinkedHashMap');
C.TypeVariable_6J9 = new H.TypeVariable(C.Type_Z2Z, "V", 0);
C.Type_QtW = H.createRuntimeType('_ConverterStreamEventSink');
C.TypeVariable_6L0 = new H.TypeVariable(C.Type_QtW, "T", 0);
C.Type_y1m = H.createRuntimeType('JSMutableArray');
C.TypeVariable_6ld = new H.TypeVariable(C.Type_y1m, "E", 0);
C.Type_Jsm = H.createRuntimeType('Iterable');
C.TypeVariable_6pZ = new H.TypeVariable(C.Type_Jsm, "E", 0);
C.Type_6D4 = H.createRuntimeType('_StreamHandlerTransformer');
C.TypeVariable_6pl = new H.TypeVariable(C.Type_6D4, "S", 0);
C.Type_RKY = H.createRuntimeType('StreamController');
C.TypeVariable_6w0 = new H.TypeVariable(C.Type_RKY, "T", 0);
C.Type_iSv = H.createRuntimeType('_FusedCodec');
C.TypeVariable_75k = new H.TypeVariable(C.Type_iSv, "T", 0);
C.Type_0 = H.createRuntimeType('_FusedConverter');
C.TypeVariable_7BT = new H.TypeVariable(C.Type_0, "T", 0);
C.Type_613 = H.createRuntimeType('SkipIterator');
C.TypeVariable_7JZ = new H.TypeVariable(C.Type_613, "E", 0);
C.Type_Q1p = H.createRuntimeType('Set');
C.TypeVariable_80d = new H.TypeVariable(C.Type_Q1p, "E", 0);
C.Type_FmR = H.createRuntimeType('_BroadcastSubscriptionWrapper');
C.TypeVariable_86y = new H.TypeVariable(C.Type_FmR, "T", 0);
C.Type_Gc2 = H.createRuntimeType('_LinkedIdentityHashMap');
C.TypeVariable_8IC = new H.TypeVariable(C.Type_Gc2, "V", 0);
C.Type_xw8 = H.createRuntimeType('_SinkTransformerStreamSubscription');
C.TypeVariable_8Wd = new H.TypeVariable(C.Type_xw8, "S", 0);
C.Type_ww8 = H.createRuntimeType('_SplayTreeValueIterable');
C.TypeVariable_8eb = new H.TypeVariable(C.Type_ww8, "K", 0);
C.Type_U0W = H.createRuntimeType('LinkedListEntry');
C.TypeVariable_8eb0 = new H.TypeVariable(C.Type_U0W, "E", 223);
C.Type_QPD = H.createRuntimeType('_AsyncBroadcastStreamController');
C.TypeVariable_90m = new H.TypeVariable(C.Type_QPD, "T", 0);
C.TypeVariable_96V = new H.TypeVariable(C.Type_ww8, "V", 0);
C.Type_kT7 = H.createRuntimeType('_InvertedCodec');
C.TypeVariable_9Ld = new H.TypeVariable(C.Type_kT7, "T", 0);
C.Type_mhq = H.createRuntimeType('Comparable');
C.TypeVariable_9Yl = new H.TypeVariable(C.Type_mhq, "T", 0);
C.Type_GN8 = H.createRuntimeType('_AddStreamState');
C.TypeVariable_A0R = new H.TypeVariable(C.Type_GN8, "T", 0);
C.Type_ql0 = H.createRuntimeType('HashMapKeyIterable');
C.TypeVariable_A66 = new H.TypeVariable(C.Type_ql0, "E", 0);
C.Type_K5l = H.createRuntimeType('ListIterable');
C.TypeVariable_AKg = new H.TypeVariable(C.Type_K5l, "E", 0);
C.Type_Gdi = H.createRuntimeType('StreamSink');
C.TypeVariable_AaU = new H.TypeVariable(C.Type_Gdi, "S", 0);
C.Type_aBy = H.createRuntimeType('_SyncStreamController');
C.TypeVariable_Aec = new H.TypeVariable(C.Type_aBy, "T", 0);
C.Type_pe4 = H.createRuntimeType('ObservableList');
C.TypeVariable_AuK = new H.TypeVariable(C.Type_pe4, "E", 0);
C.Type_4qb = H.createRuntimeType('MappedIterator');
C.TypeVariable_Azz = new H.TypeVariable(C.Type_4qb, "T", 0);
C.Type_qJs = H.createRuntimeType('_StreamSinkWrapper');
C.TypeVariable_CBX = new H.TypeVariable(C.Type_qJs, "T", 0);
C.TypeVariable_CF9 = new H.TypeVariable(C.Type_0, "S", 0);
C.Type_94i = H.createRuntimeType('HashSetIterator');
C.TypeVariable_Cpf = new H.TypeVariable(C.Type_94i, "E", 0);
C.Type_eRy = H.createRuntimeType('SplayTreeMap');
C.TypeVariable_Db0 = new H.TypeVariable(C.Type_eRy, "K", 0);
C.Type_KLd = H.createRuntimeType('_StreamSinkTransformer');
C.TypeVariable_E6c = new H.TypeVariable(C.Type_KLd, "S", 0);
C.Type_GjJ = H.createRuntimeType('_CustomHashMap');
C.TypeVariable_ECQ = new H.TypeVariable(C.Type_GjJ, "K", 0);
C.Type_yLX = H.createRuntimeType('ExpandIterable');
C.TypeVariable_EKW = new H.TypeVariable(C.Type_yLX, "T", 0);
C.Type_mjP = H.createRuntimeType('ChunkedConversionSink');
C.TypeVariable_EKW0 = new H.TypeVariable(C.Type_mjP, "T", 0);
C.Type_Iem = H.createRuntimeType('_AsyncCompleter');
C.TypeVariable_EKW1 = new H.TypeVariable(C.Type_Iem, "T", 0);
C.Type_wEo = H.createRuntimeType('LinkedHashMap');
C.TypeVariable_ELE = new H.TypeVariable(C.Type_wEo, "V", 0);
C.Type_mtF = H.createRuntimeType('SubListIterable');
C.TypeVariable_ESz = new H.TypeVariable(C.Type_mtF, "E", 0);
C.Type_43h = H.createRuntimeType('ExpandIterator');
C.TypeVariable_EkK = new H.TypeVariable(C.Type_43h, "T", 0);
C.Type_kKc = H.createRuntimeType('StreamView');
C.TypeVariable_Emx = new H.TypeVariable(C.Type_kKc, "T", 0);
C.Type_Yzb = H.createRuntimeType('EmptyIterator');
C.TypeVariable_EsU = new H.TypeVariable(C.Type_Yzb, "E", 0);
C.Type_MQy = H.createRuntimeType('StreamConsumer');
C.TypeVariable_EyI = new H.TypeVariable(C.Type_MQy, "S", 0);
C.Type_4K1 = H.createRuntimeType('_AsyncStreamController');
C.TypeVariable_F8z = new H.TypeVariable(C.Type_4K1, "T", 0);
C.Type_s39 = H.createRuntimeType('ListPathObserver');
C.TypeVariable_FeL = new H.TypeVariable(C.Type_s39, "E", 0);
C.Type_4UX = H.createRuntimeType('_DelayedData');
C.TypeVariable_G5c = new H.TypeVariable(C.Type_4UX, "T", 0);
C.Type_UEW = H.createRuntimeType('MappedListIterable');
C.TypeVariable_GBG = new H.TypeVariable(C.Type_UEW, "T", 0);
C.Type_EK0 = H.createRuntimeType('_StreamSubscriptionTransformer');
C.TypeVariable_GOF = new H.TypeVariable(C.Type_EK0, "T", 0);
C.Type_46y = H.createRuntimeType('Map');
C.TypeVariable_GeI = new H.TypeVariable(C.Type_46y, "V", 0);
C.Type_kjl0 = H.createRuntimeType('MapChangeRecord');
C.TypeVariable_Hme = new H.TypeVariable(C.Type_kjl0, "V", 0);
C.Type_aJW = H.createRuntimeType('Future');
C.TypeVariable_IF2 = new H.TypeVariable(C.Type_aJW, "T", 0);
C.TypeVariable_IMh = new H.TypeVariable(C.Type_Gc2, "K", 0);
C.Type_WZx = H.createRuntimeType('_SkipStream');
C.TypeVariable_IVQ = new H.TypeVariable(C.Type_WZx, "T", 0);
C.Type_skV = H.createRuntimeType('UnmodifiableMapView');
C.TypeVariable_Ieb = new H.TypeVariable(C.Type_skV, "V", 0);
C.Type_Ivb = H.createRuntimeType('IterableBase');
C.TypeVariable_IuH = new H.TypeVariable(C.Type_Ivb, "E", 0);
C.Type_iDZ = H.createRuntimeType('StreamSubscription');
C.TypeVariable_Jeh = new H.TypeVariable(C.Type_iDZ, "T", 0);
C.Type_TDG = H.createRuntimeType('TakeIterator');
C.TypeVariable_KAx = new H.TypeVariable(C.Type_TDG, "E", 0);
C.TypeVariable_KFo = new H.TypeVariable(C.Type_46y, "K", 0);
C.Type_mpC = H.createRuntimeType('_GeneratorIterator');
C.TypeVariable_KYK = new H.TypeVariable(C.Type_mpC, "E", 0);
C.Type_kFJ = H.createRuntimeType('_LinkedCustomHashMap');
C.TypeVariable_M0o = new H.TypeVariable(C.Type_kFJ, "K", 0);
C.Type_skH = H.createRuntimeType('List');
C.TypeVariable_M6L = new H.TypeVariable(C.Type_skH, "E", 0);
C.Type_IUt = H.createRuntimeType('_StreamController__AsyncStreamControllerDispatch');
C.TypeVariable_MQy = new H.TypeVariable(C.Type_IUt, "T", 0);
C.Type_zco = H.createRuntimeType('_ControllerEventSinkWrapper');
C.TypeVariable_MQy0 = new H.TypeVariable(C.Type_zco, "T", 0);
C.TypeVariable_MUU = new H.TypeVariable(C.Type_UEW, "S", 0);
C.Type_HvV = H.createRuntimeType('WhereIterable');
C.TypeVariable_MUw = new H.TypeVariable(C.Type_HvV, "E", 0);
C.Type_OlH = H.createRuntimeType('_StreamController__SyncStreamControllerDispatch');
C.TypeVariable_Me9 = new H.TypeVariable(C.Type_OlH, "T", 0);
C.Type_mXu = H.createRuntimeType('UnmodifiableMapView0');
C.TypeVariable_Mjq = new H.TypeVariable(C.Type_mXu, "V", 0);
C.TypeVariable_N6d = new H.TypeVariable(C.Type_wEo, "K", 0);
C.Type_z7O = H.createRuntimeType('_TypeTest');
C.TypeVariable_NT8 = new H.TypeVariable(C.Type_z7O, "T", 0);
C.Type_Q1M = H.createRuntimeType('_RectangleBase');
C.TypeVariable_O0K = new H.TypeVariable(C.Type_Q1M, "T", 188);
C.Type_KHA = H.createRuntimeType('IterableMixin');
C.TypeVariable_O1t = new H.TypeVariable(C.Type_KHA, "E", 0);
C.Type_qYB = H.createRuntimeType('StreamTransformer');
C.TypeVariable_O2x = new H.TypeVariable(C.Type_qYB, "S", 0);
C.TypeVariable_OPa = new H.TypeVariable(C.Type_iSv, "S", 0);
C.Type_Y3m = H.createRuntimeType('EfficientLengthMappedIterable');
C.TypeVariable_PEo = new H.TypeVariable(C.Type_Y3m, "S", 0);
C.Type_mNq = H.createRuntimeType('_HandleErrorStream');
C.TypeVariable_QDz = new H.TypeVariable(C.Type_mNq, "T", 0);
C.TypeVariable_QW2 = new H.TypeVariable(C.Type_GjJ, "V", 0);
C.Type_L2O = H.createRuntimeType('LinkedList');
C.TypeVariable_Qcj = new H.TypeVariable(C.Type_L2O, "E", 216);
C.TypeVariable_QkP = new H.TypeVariable(C.Type_kjl0, "K", 0);
C.TypeVariable_QoX = new H.TypeVariable(C.Type_QtW, "S", 0);
C.Type_WZ9 = H.createRuntimeType('_SplayTreeKeyIterable');
C.TypeVariable_Qqi = new H.TypeVariable(C.Type_WZ9, "K", 0);
C.Type_WZ90 = H.createRuntimeType('_SplayTreeKeyIterator');
C.TypeVariable_Qqi0 = new H.TypeVariable(C.Type_WZ90, "K", 0);
C.Type_0uF = H.createRuntimeType('JSFixedArray');
C.TypeVariable_R1M = new H.TypeVariable(C.Type_0uF, "E", 0);
C.Type_CCn = H.createRuntimeType('ListQueue');
C.TypeVariable_RG8 = new H.TypeVariable(C.Type_CCn, "E", 0);
C.Type_mbs = H.createRuntimeType('_SplayTreeNodeIterator');
C.TypeVariable_SLI = new H.TypeVariable(C.Type_mbs, "K", 0);
C.TypeVariable_SOD = new H.TypeVariable(C.Type_iSv, "M", 0);
C.Type_UWS = H.createRuntimeType('List');
C.TypeVariable_SSn = new H.TypeVariable(C.Type_UWS, "E", 0);
C.Type_kaS = H.createRuntimeType('_ForwardingStreamSubscription');
C.TypeVariable_SfQ = new H.TypeVariable(C.Type_kaS, "S", 0);
C.Type_cMx = H.createRuntimeType('_ControllerSubscription');
C.TypeVariable_Srw = new H.TypeVariable(C.Type_cMx, "T", 0);
C.TypeVariable_StD = new H.TypeVariable(C.Type_Y3m, "T", 0);
C.Type_A2Y = H.createRuntimeType('_IterableView');
C.TypeVariable_TBq = new H.TypeVariable(C.Type_A2Y, "E", 0);
C.Type_0ks = H.createRuntimeType('UnmodifiableSetView');
C.TypeVariable_TlH = new H.TypeVariable(C.Type_0ks, "E", 0);
C.Type_0vI = H.createRuntimeType('_LinkedListIterator');
C.TypeVariable_Tq4 = new H.TypeVariable(C.Type_0vI, "E", 218);
C.Type_EXC = H.createRuntimeType('_SyncStreamControllerDispatch');
C.TypeVariable_U7Y = new H.TypeVariable(C.Type_EXC, "T", 0);
C.Type_0K4 = H.createRuntimeType('_CustomHashSet');
C.TypeVariable_UAg = new H.TypeVariable(C.Type_0K4, "E", 0);
C.Type_Y25 = H.createRuntimeType('HashMap');
C.TypeVariable_Ucj = new H.TypeVariable(C.Type_Y25, "K", 0);
C.Type_MEK = H.createRuntimeType('Codec');
C.TypeVariable_Ucj0 = new H.TypeVariable(C.Type_MEK, "S", 0);
C.Type_2Rm = H.createRuntimeType('WhereIterator');
C.TypeVariable_UgT = new H.TypeVariable(C.Type_2Rm, "E", 0);
C.Type_izl = H.createRuntimeType('_BroadcastStream');
C.TypeVariable_Vn6 = new H.TypeVariable(C.Type_izl, "T", 0);
C.Type_IQb = H.createRuntimeType('EfficientLengthTakeIterable');
C.TypeVariable_VzM = new H.TypeVariable(C.Type_IQb, "E", 0);
C.Type_iUQ = H.createRuntimeType('_StreamController');
C.TypeVariable_W3x = new H.TypeVariable(C.Type_iUQ, "T", 0);
C.Type_aWd = H.createRuntimeType('SkipIterable');
C.TypeVariable_X5c = new H.TypeVariable(C.Type_aWd, "E", 0);
C.Type_bkm = H.createRuntimeType('UnmodifiableListView');
C.TypeVariable_XRr = new H.TypeVariable(C.Type_bkm, "E", 0);
C.Type_ivT = H.createRuntimeType('_SyncCompleter');
C.TypeVariable_XXT = new H.TypeVariable(C.Type_ivT, "T", 0);
C.Type_xa7 = H.createRuntimeType('ListBase_ChangeNotifier');
C.TypeVariable_YHO = new H.TypeVariable(C.Type_xa7, "E", 0);
C.Type_lGg = H.createRuntimeType('_AsBroadcastStream');
C.TypeVariable_YUO = new H.TypeVariable(C.Type_lGg, "T", 0);
C.TypeVariable_YiW = new H.TypeVariable(C.Type_kFJ, "V", 0);
C.Type_23h = H.createRuntimeType('Expando');
C.TypeVariable_ZAV = new H.TypeVariable(C.Type_23h, "T", 0);
C.Type_23h0 = H.createRuntimeType('_EventSinkWrapper');
C.TypeVariable_ZAV0 = new H.TypeVariable(C.Type_23h0, "T", 0);
C.Type_23h1 = H.createRuntimeType('_EventSinkAdapter');
C.TypeVariable_ZAV1 = new H.TypeVariable(C.Type_23h1, "T", 0);
C.Type_ASw = H.createRuntimeType('_ForwardingStream');
C.TypeVariable_ZK2 = new H.TypeVariable(C.Type_ASw, "S", 0);
C.Type_6N1 = H.createRuntimeType('MappedIterable');
C.TypeVariable_a5W = new H.TypeVariable(C.Type_6N1, "T", 0);
C.Type_Svc = H.createRuntimeType('PropertyChangeRecord');
C.TypeVariable_aZ8 = new H.TypeVariable(C.Type_Svc, "T", 0);
C.TypeVariable_ajX = new H.TypeVariable(C.Type_Y25, "V", 0);
C.Type_aGl = H.createRuntimeType('HashSet');
C.TypeVariable_bRS = new H.TypeVariable(C.Type_aGl, "E", 0);
C.Type_EOF = H.createRuntimeType('SerializerMixin');
C.TypeVariable_bcN = new H.TypeVariable(C.Type_EOF, "T", 0);
C.Type_mOu = H.createRuntimeType('_DormProxyListEntry');
C.TypeVariable_c0T = new H.TypeVariable(C.Type_mOu, "T", 109);
C.Type_Acz = H.createRuntimeType('Rectangle');
C.TypeVariable_cJC = new H.TypeVariable(C.Type_Acz, "T", 188);
C.Type_6Sg = H.createRuntimeType('_LinkedIdentityHashSet');
C.TypeVariable_cMb = new H.TypeVariable(C.Type_6Sg, "E", 0);
C.TypeVariable_cQL = new H.TypeVariable(C.Type_ASw, "T", 0);
C.Type_A5X = H.createRuntimeType('EntityFactory');
C.TypeVariable_ca0 = new H.TypeVariable(C.Type_A5X, "T", 10);
C.TypeVariable_chs = new H.TypeVariable(C.Type_s39, "P", 0);
C.Type_TR5 = H.createRuntimeType('_Completer');
C.TypeVariable_ckP = new H.TypeVariable(C.Type_TR5, "T", 0);
C.Type_4ef = H.createRuntimeType('_WhereStream');
C.TypeVariable_d0h = new H.TypeVariable(C.Type_4ef, "T", 0);
C.Type_e3y = H.createRuntimeType('_SplayTreeNode');
C.TypeVariable_dcb = new H.TypeVariable(C.Type_e3y, "K", 0);
C.Type_U5C = H.createRuntimeType('EfficientLengthSkipIterable');
C.TypeVariable_e78 = new H.TypeVariable(C.Type_U5C, "E", 0);
C.Type_xw80 = H.createRuntimeType('_EventSink');
C.TypeVariable_eFO = new H.TypeVariable(C.Type_xw80, "T", 0);
C.TypeVariable_eFO0 = new H.TypeVariable(C.Type_xw8, "T", 0);
C.Type_BmO = H.createRuntimeType('_TakeStream');
C.TypeVariable_eIp = new H.TypeVariable(C.Type_BmO, "T", 0);
C.Type_fgL = H.createRuntimeType('SplayTreeSet');
C.TypeVariable_eWo = new H.TypeVariable(C.Type_fgL, "E", 0);
C.Type_kmM = H.createRuntimeType('_BoundSinkStream');
C.TypeVariable_ejK = new H.TypeVariable(C.Type_kmM, "S", 0);
C.Type_GIe = H.createRuntimeType('_SkipWhileStream');
C.TypeVariable_fKI = new H.TypeVariable(C.Type_GIe, "T", 0);
C.Type_8gq = H.createRuntimeType('_BufferingStreamSubscription');
C.TypeVariable_fTF = new H.TypeVariable(C.Type_8gq, "T", 0);
C.Type_xcl = H.createRuntimeType('_Future');
C.TypeVariable_g8l = new H.TypeVariable(C.Type_xcl, "T", 0);
C.Type_8TW = H.createRuntimeType('ReversedListIterable');
C.TypeVariable_gNF = new H.TypeVariable(C.Type_8TW, "E", 0);
C.Type_dCF = H.createRuntimeType('_SplayTreeValueIterator');
C.TypeVariable_gOG = new H.TypeVariable(C.Type_dCF, "K", 0);
C.Type_33m = H.createRuntimeType('_BoundSubscriptionStream');
C.TypeVariable_gc6 = new H.TypeVariable(C.Type_33m, "S", 0);
C.Type_M2f = H.createRuntimeType('Point');
C.TypeVariable_geu = new H.TypeVariable(C.Type_M2f, "T", 188);
C.Type_ZCw = H.createRuntimeType('_HashMap');
C.TypeVariable_gg4 = new H.TypeVariable(C.Type_ZCw, "K", 0);
C.Type_Au4 = H.createRuntimeType('MutableRectangle');
C.TypeVariable_gkc = new H.TypeVariable(C.Type_Au4, "T", 188);
C.Type_yHq = H.createRuntimeType('_SplayTree_IterableMixin');
C.TypeVariable_gn0 = new H.TypeVariable(C.Type_yHq, "E", 0);
C.Type_MY7 = H.createRuntimeType('ListBase');
C.TypeVariable_hcA = new H.TypeVariable(C.Type_MY7, "E", 0);
C.Type_nfu = H.createRuntimeType('_MapStream');
C.TypeVariable_i4h = new H.TypeVariable(C.Type_nfu, "S", 0);
C.Type_wEo0 = H.createRuntimeType('_DoubleLinkedQueueIterator');
C.TypeVariable_i7B = new H.TypeVariable(C.Type_wEo0, "E", 0);
C.Type_8eb = H.createRuntimeType('_HashSet');
C.TypeVariable_iDl = new H.TypeVariable(C.Type_8eb, "E", 0);
C.Type_mv3 = H.createRuntimeType('_ControllerStream');
C.TypeVariable_iX7 = new H.TypeVariable(C.Type_mv3, "T", 0);
C.Type_0bo = H.createRuntimeType('NonGrowableListView');
C.TypeVariable_idM = new H.TypeVariable(C.Type_0bo, "E", 0);
C.Type_G7N = H.createRuntimeType('TakeIterable');
C.TypeVariable_iid = new H.TypeVariable(C.Type_G7N, "E", 0);
C.TypeVariable_iil = new H.TypeVariable(C.Type_qYB, "T", 0);
C.TypeVariable_irG = new H.TypeVariable(C.Type_9GF, "V", 0);
C.Type_EyN = H.createRuntimeType('_DistinctStream');
C.TypeVariable_iuP = new H.TypeVariable(C.Type_EyN, "T", 0);
C.Type_75R = H.createRuntimeType('Iterator');
C.TypeVariable_izR = new H.TypeVariable(C.Type_75R, "E", 0);
C.Type_wwd = H.createRuntimeType('SkipWhileIterator');
C.TypeVariable_j4A = new H.TypeVariable(C.Type_wwd, "E", 0);
C.TypeVariable_j8H = new H.TypeVariable(C.Type_mXu, "K", 0);
C.Type_MIo = H.createRuntimeType('_StreamImpl');
C.TypeVariable_jjv = new H.TypeVariable(C.Type_MIo, "T", 0);
C.Type_I1e = H.createRuntimeType('_EventDispatch');
C.TypeVariable_jtt = new H.TypeVariable(C.Type_I1e, "T", 0);
C.Type_s6i = H.createRuntimeType('_AsyncStreamControllerDispatch');
C.TypeVariable_jvJ = new H.TypeVariable(C.Type_s6i, "T", 0);
C.TypeVariable_kYz = new H.TypeVariable(C.Type_dCF, "V", 0);
C.Type_CJl = H.createRuntimeType('_ExpandStream');
C.TypeVariable_kaS = new H.TypeVariable(C.Type_CJl, "S", 0);
C.Type_wrR = H.createRuntimeType('StreamIterator');
C.TypeVariable_lkh = new H.TypeVariable(C.Type_wrR, "T", 0);
C.Type_ejQ = H.createRuntimeType('ObservableBox');
C.TypeVariable_mDP = new H.TypeVariable(C.Type_ejQ, "T", 0);
C.Type_IAG = H.createRuntimeType('_StreamControllerAddStreamState');
C.TypeVariable_mKv = new H.TypeVariable(C.Type_IAG, "T", 0);
C.TypeVariable_mNE = new H.TypeVariable(C.Type_43h, "S", 0);
C.Type_e3J = H.createRuntimeType('_BroadcastStreamController');
C.TypeVariable_mPr = new H.TypeVariable(C.Type_e3J, "T", 0);
C.Type_y72 = H.createRuntimeType('_SplayTreeIterator');
C.TypeVariable_mdN = new H.TypeVariable(C.Type_y72, "T", 0);
C.Type_zvD = H.createRuntimeType('UnmodifiableListBase');
C.TypeVariable_mtb = new H.TypeVariable(C.Type_zvD, "E", 0);
C.TypeVariable_mxN = new H.TypeVariable(C.Type_kaS, "T", 0);
C.Type_iQW = H.createRuntimeType('_DoneSubscription');
C.TypeVariable_nR7 = new H.TypeVariable(C.Type_iQW, "T", 0);
C.TypeVariable_o6I = new H.TypeVariable(C.Type_MEK, "T", 0);
C.TypeVariable_o8K = new H.TypeVariable(C.Type_0, "M", 0);
C.TypeVariable_oa9 = new H.TypeVariable(C.Type_6D4, "T", 0);
C.Type_U8N = H.createRuntimeType('_GeneratedStreamImpl');
C.TypeVariable_ogK = new H.TypeVariable(C.Type_U8N, "T", 0);
C.Type_tWA = H.createRuntimeType('Queue');
C.TypeVariable_oyU = new H.TypeVariable(C.Type_tWA, "E", 0);
C.Type_81T = H.createRuntimeType('Completer');
C.TypeVariable_oyn = new H.TypeVariable(C.Type_81T, "T", 0);
C.Type_caQ = H.createRuntimeType('ObservableMap');
C.TypeVariable_pea = new H.TypeVariable(C.Type_caQ, "V", 0);
C.Type_iYS = H.createRuntimeType('_LinkedCustomHashSet');
C.TypeVariable_peq = new H.TypeVariable(C.Type_iYS, "E", 0);
C.TypeVariable_pxV = new H.TypeVariable(C.Type_KLd, "T", 0);
C.Type_xBh = H.createRuntimeType('_DummyStreamSubscription');
C.TypeVariable_q7p = new H.TypeVariable(C.Type_xBh, "T", 0);
C.Type_C4I = H.createRuntimeType('ListMapView');
C.TypeVariable_q96 = new H.TypeVariable(C.Type_C4I, "E", 0);
C.Type_Vvc = H.createRuntimeType('LinkedHashMapKeyIterator');
C.TypeVariable_qNA = new H.TypeVariable(C.Type_Vvc, "E", 0);
C.Type_g1S = H.createRuntimeType('_HashSetBase');
C.TypeVariable_qXv = new H.TypeVariable(C.Type_g1S, "E", 0);
C.TypeVariable_qjT = new H.TypeVariable(C.Type_EK0, "S", 0);
C.TypeVariable_qy5 = new H.TypeVariable(C.Type_4qb, "S", 0);
C.Type_qtS = H.createRuntimeType('_StreamIteratorImpl');
C.TypeVariable_s2C = new H.TypeVariable(C.Type_qtS, "T", 0);
C.Type_cQL = H.createRuntimeType('_ListQueueIterator');
C.TypeVariable_s4r = new H.TypeVariable(C.Type_cQL, "E", 0);
C.Type_yHF = H.createRuntimeType('_StreamControllerLifecycle');
C.TypeVariable_sMJ = new H.TypeVariable(C.Type_yHF, "T", 0);
C.Type_Ecb = H.createRuntimeType('BidirectionalIterator');
C.TypeVariable_sWu = new H.TypeVariable(C.Type_Ecb, "E", 0);
C.Type_giP = H.createRuntimeType('_HandlerEventSink');
C.TypeVariable_tOG = new H.TypeVariable(C.Type_giP, "S", 0);
C.Type_El7 = H.createRuntimeType('_SyncBroadcastStreamController');
C.TypeVariable_tgN = new H.TypeVariable(C.Type_El7, "T", 0);
C.TypeVariable_udv = new H.TypeVariable(C.Type_CJl, "T", 0);
C.TypeVariable_v5w = new H.TypeVariable(C.Type_Z2Z, "K", 0);
C.Type_Lwp = H.createRuntimeType('_IdentityHashMap');
C.TypeVariable_vUl = new H.TypeVariable(C.Type_Lwp, "K", 0);
C.TypeVariable_vdN = new H.TypeVariable(C.Type_giP, "T", 0);
C.Type_yON = H.createRuntimeType('JSExtendableArray');
C.TypeVariable_w1V = new H.TypeVariable(C.Type_yON, "E", 0);
C.Type_rKV = H.createRuntimeType('_DoubleLinkedQueueEntrySentinel');
C.TypeVariable_wAN = new H.TypeVariable(C.Type_rKV, "E", 0);
C.TypeVariable_wAg = new H.TypeVariable(C.Type_caQ, "K", 0);
C.TypeVariable_wCl = new H.TypeVariable(C.Type_kmM, "T", 0);
C.Type_kaS0 = H.createRuntimeType('_SplayTree');
C.TypeVariable_wDM = new H.TypeVariable(C.Type_kaS0, "K", 0);
C.Type_6v8 = H.createRuntimeType('DoubleLinkedQueue');
C.TypeVariable_wEo = new H.TypeVariable(C.Type_6v8, "E", 0);
C.TypeVariable_wKE = new H.TypeVariable(C.Type_Lwp, "V", 0);
C.TypeVariable_wM5 = new H.TypeVariable(C.Type_yLX, "S", 0);
C.TypeVariable_wYn = new H.TypeVariable(C.Type_eRy, "V", 0);
C.TypeVariable_wiz = new H.TypeVariable(C.Type_skV, "K", 0);
C.TypeVariable_woc = new H.TypeVariable(C.Type_bCn, "S", 0);
C.Type_Ixv = H.createRuntimeType('_IterablePendingEvents');
C.TypeVariable_wsa = new H.TypeVariable(C.Type_Ixv, "T", 0);
C.TypeVariable_wsa0 = new H.TypeVariable(C.Type_kT7, "S", 0);
C.Type_Ktb = H.createRuntimeType('EventSink');
C.TypeVariable_wyB = new H.TypeVariable(C.Type_Ktb, "T", 0);
C.Type_KAC = H.createRuntimeType('LinkedHashSetIterator');
C.TypeVariable_xHa = new H.TypeVariable(C.Type_KAC, "E", 0);
C.Type_pQg = H.createRuntimeType('_TakeWhileStream');
C.TypeVariable_xMs = new H.TypeVariable(C.Type_pQg, "T", 0);
C.TypeVariable_xrx = new H.TypeVariable(C.Type_6N1, "S", 0);
C.Type_gkc = H.createRuntimeType('LinkedHashMapKeyIterable');
C.TypeVariable_xw8 = new H.TypeVariable(C.Type_gkc, "E", 0);
C.TypeVariable_xw80 = new H.TypeVariable(C.Type_33m, "T", 0);
C.Type_AeS = H.createRuntimeType('DoubleLinkedQueueEntry');
C.TypeVariable_yHF = new H.TypeVariable(C.Type_AeS, "E", 0);
C.TypeVariable_yPV = new H.TypeVariable(C.Type_oyU, "V", 0);
C.TypeVariable_ybB = new H.TypeVariable(C.Type_ZCw, "V", 0);
C.Type_sWu = H.createRuntimeType('Stream');
C.TypeVariable_yrt = new H.TypeVariable(C.Type_sWu, "T", 0);
C.Type_slF = H.createRuntimeType('_GeneratorIterable');
C.TypeVariable_yuy = new H.TypeVariable(C.Type_slF, "E", 0);
C.TypeVariable_zDK = new H.TypeVariable(C.Type_nfu, "T", 0);
C.Type_5TN = H.createRuntimeType('ListMixin');
C.TypeVariable_zJB = new H.TypeVariable(C.Type_5TN, "E", 0);
C.Type_RVo = H.createRuntimeType('UnmodifiableListMixin');
C.TypeVariable_zPV = new H.TypeVariable(C.Type_RVo, "E", 0);
C.Type_00 = H.createRuntimeType('_IdentityHashSet');
C.TypeVariable_zms = new H.TypeVariable(C.Type_00, "E", 0);
C.Type_01 = H.createRuntimeType('LinkedHashSet');
C.TypeVariable_zms0 = new H.TypeVariable(C.Type_01, "E", 0);
C.Type_02 = H.createRuntimeType('_LinkedHashSet');
C.TypeVariable_zms1 = new H.TypeVariable(C.Type_02, "E", 0);
C.Type_4CA = H.createRuntimeType('NoInline');
C.Type_AGr = H.createRuntimeType('JsTypeVariableMirror');
C.Type_EjN = H.createRuntimeType('Function');
C.Type_EsU = H.createRuntimeType('bool');
C.Type_HqF = H.createRuntimeType('Object');
C.Type_M6L = H.createRuntimeType('Lazy');
C.Type_Opm = H.createRuntimeType('Immutable');
C.Type_Wzb = H.createRuntimeType('NotNullable');
C.Type_XXD = H.createRuntimeType('JSObject');
C.Type_e5Z = H.createRuntimeType('dynamic');
C.Type_eZO = H.createRuntimeType('Null');
C.Type_gMT = H.createRuntimeType('Id');
C.Type_ium = H.createRuntimeType('LabelField');
C.Type_qp8 = H.createRuntimeType('DefaultValue');
C.Type_qq1 = H.createRuntimeType('double');
C.Type_wwi = H.createRuntimeType('Transient');
C.Utf8Codec_false = new P.Utf8Codec(false);
C._ZoneSpecification_woc = new P._ZoneSpecification(null, null, null, null, null, null, null, null, null, null, null, null);
$.controlPort = null;
$.RawReceivePortImpl__nextFreeId = 1;
$.Primitives_mirrorFunctionCacheName = "$cachedFunction";
$.Primitives_mirrorInvokeCacheName = "$cachedInvocation";
$.RuntimeFunctionType_inAssert = false;
$.printToZone = null;
$.classMirrors = null;
$._callbacksAreEnqueued = false;
$.Zone__current = C.C__RootZone;
$.Expando__keyCount = 0;
$.EntityAssembler__instance = null;
$.EntityFactory__instance = null;
$.Entity__serializerWorkaround = null;
$.Entity__observableDirtyCheckTimeout = null;
$.entityFactory = null;
$.serializer = null;
$.jsonData = null;
$.hierarchicalLoggingEnabled = false;
$._rootLevel = C.Level_INFO_800;
$.LogRecord__nextNumber = 0;
$._allObservablesCount = 0;
$._allObservables = null;
$._delivering = false;
$.interceptedNames = ["$add", "$and", "$div", "$eq", "$ge", "$gt", "$index", "$indexSet", "$le", "$lt", "$mod", "$mul", "$negate", "$not", "$or", "$shl", "$shr", "$sub", "$tdiv", "$xor", "_shlPositive$1", "_shrOtherPositive$1", "_tdivFast$1", "abs$0", "add$1", "addAll$1", "allMatches$1", "any$1", "asMap$0", "ceil$0", "ceilToDouble$0", "clamp$2", "clear$0", "codeUnitAt$1", "compareTo$1", "contains$1", "contains$2", "elementAt$1", "endsWith$1", "every$1", "expand$1", "fillRange$3", "firstWhere$1", "firstWhere$2$defaultValue", "firstWhere$2$orElse", "floor$0", "floorToDouble$0", "fold$2", "forEach$1", "get$bitLength", "get$codeUnits", "get$first", "get$hashCode", "get$isEmpty", "get$isEven", "get$isFinite", "get$isInfinite", "get$isNaN", "get$isNegative", "get$isNotEmpty", "get$isOdd", "get$iterator", "get$last", "get$length", "get$reversed", "get$runes", "get$runtimeType", "get$sign", "get$single", "getRange$2", "indexOf$1", "indexOf$2", "insert$2", "insertAll$2", "join$1", "lastIndexOf$1", "lastIndexOf$2", "lastWhere$2$defaultValue", "lastWhere$2$orElse", "map$1", "matchAsPrefix$2", "noSuchMethod$1", "reduce$1", "remainder$1", "remove$0", "remove$1", "removeAt$1", "removeLast$0", "removeRange$2", "removeWhere$1", "replaceAll$2", "replaceAllMapped$2", "replaceFirst$2", "replaceRange$3", "retainWhere$1", "round$0", "roundToDouble$0", "set$length", "setAll$2", "setRange$3", "setRange$4", "shuffle$1", "singleWhere$1", "skip$1", "skipWhile$1", "sort$1", "split$1", "splitMapJoin$3$onMatch$onNonMatch", "startsWith$1", "startsWith$2", "sublist$1", "sublist$2", "substring$1", "substring$2", "take$1", "takeWhile$1", "toDouble$0", "toInt$0", "toList$0", "toList$1$growable", "toLowerCase$0", "toRadixString$1", "toSet$0", "toSigned$1", "toString$0", "toStringAsExponential$1", "toStringAsFixed$1", "toStringAsPrecision$1", "toUnsigned$1", "toUpperCase$0", "trim$0", "truncate$0", "truncateToDouble$0", "where$1"];
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return function() { return this; }();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== void 0;
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return H.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "workerIds", "IsolateNatives_workerIds", "get$IsolateNatives_workerIds", function() {
  return H.setRuntimeTypeInfo(new P.Expando(null), [J.JSInt]);
});
Isolate.$lazy($, "noSuchMethodPattern", "TypeErrorDecoder_noSuchMethodPattern", "get$TypeErrorDecoder_noSuchMethodPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({ toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "notClosurePattern", "TypeErrorDecoder_notClosurePattern", "get$TypeErrorDecoder_notClosurePattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({ $method$: null, toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "nullCallPattern", "TypeErrorDecoder_nullCallPattern", "get$TypeErrorDecoder_nullCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
});
Isolate.$lazy($, "nullLiteralCallPattern", "TypeErrorDecoder_nullLiteralCallPattern", "get$TypeErrorDecoder_nullLiteralCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    null.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "undefinedCallPattern", "TypeErrorDecoder_undefinedCallPattern", "get$TypeErrorDecoder_undefinedCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralCallPattern", "TypeErrorDecoder_undefinedLiteralCallPattern", "get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    (void 0).$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "nullPropertyPattern", "TypeErrorDecoder_nullPropertyPattern", "get$TypeErrorDecoder_nullPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
});
Isolate.$lazy($, "nullLiteralPropertyPattern", "TypeErrorDecoder_nullLiteralPropertyPattern", "get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  try {
    null.$method$;
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "undefinedPropertyPattern", "TypeErrorDecoder_undefinedPropertyPattern", "get$TypeErrorDecoder_undefinedPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralPropertyPattern", "TypeErrorDecoder_undefinedLiteralPropertyPattern", "get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  try {
    (void 0).$method$;
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "_toStringList", "IterableMixinWorkaround__toStringList", "get$IterableMixinWorkaround__toStringList", function() {
  return [];
});
Isolate.$lazy($, "validationPattern", "Symbol_validationPattern", "get$Symbol_validationPattern", function() {
  return new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^(?:[a-zA-Z$][a-zA-Z$0-9_]*\\.)*(?:[a-zA-Z$][a-zA-Z$0-9_]*=?|-|unary-|\\[\\]=|~|==|\\[\\]|\\*|/|%|~/|\\+|<<|>>|>=|>|<=|<|&|\\^|\\|)$", false, true, false), null, null);
});
Isolate.$lazy($, "_dynamicType", "JsMirrorSystem__dynamicType", "get$JsMirrorSystem__dynamicType", function() {
  return new H.JsTypeMirror(C.Symbol_dynamic);
});
Isolate.$lazy($, "_voidType", "JsMirrorSystem__voidType", "get$JsMirrorSystem__voidType", function() {
  return new H.JsTypeMirror(C.Symbol_void);
});
Isolate.$lazy($, "librariesByName", "JsMirrorSystem_librariesByName", "get$JsMirrorSystem_librariesByName", function() {
  return H.JsMirrorSystem_computeLibrariesByName();
});
Isolate.$lazy($, "currentJsMirrorSystem", "currentJsMirrorSystem", "get$currentJsMirrorSystem", function() {
  return new H.JsMirrorSystem(null, new H.JsIsolateMirror(init.globalState.currentContext));
});
Isolate.$lazy($, "mangledNames", "mangledNames", "get$mangledNames", function() {
  return H.computeMangledNames(init.mangledNames, false);
});
Isolate.$lazy($, "reflectiveNames", "reflectiveNames", "get$reflectiveNames", function() {
  return H.computeReflectiveNames($.get$mangledNames());
});
Isolate.$lazy($, "mangledGlobalNames", "mangledGlobalNames", "get$mangledGlobalNames", function() {
  return H.computeMangledNames(init.mangledGlobalNames, true);
});
Isolate.$lazy($, "_loadedLibraries", "_loadedLibraries", "get$_loadedLibraries", function() {
  return H.setRuntimeTypeInfo(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [J.JSString, [P.Future, J.JSBool]]);
});
Isolate.$lazy($, "_asyncCallbacks", "_asyncCallbacks", "get$_asyncCallbacks", function() {
  return P.ListQueue$(null, {func: "void_", void: true});
});
Isolate.$lazy($, "_SENTINEL", "_DistinctStream__SENTINEL", "get$_DistinctStream__SENTINEL", function() {
  return new P.Object();
});
Isolate.$lazy($, "_toStringVisiting", "_toStringVisiting", "get$_toStringVisiting", function() {
  return P.HashSet_HashSet$identity(null);
});
Isolate.$lazy($, "_toStringList", "Maps__toStringList", "get$Maps__toStringList", function() {
  return [];
});
Isolate.$lazy($, "_nameToEncoding", "Encoding__nameToEncoding", "get$Encoding__nameToEncoding", function() {
  return H.setRuntimeTypeInfo(H.fillLiteralMap(["iso_8859-1:1987", C.Latin1Codec_false, "iso-ir-100", C.Latin1Codec_false, "iso_8859-1", C.Latin1Codec_false, "iso-8859-1", C.Latin1Codec_false, "latin1", C.Latin1Codec_false, "l1", C.Latin1Codec_false, "ibm819", C.Latin1Codec_false, "cp819", C.Latin1Codec_false, "csisolatin1", C.Latin1Codec_false, "iso-ir-6", C.AsciiCodec_false, "ansi_x3.4-1968", C.AsciiCodec_false, "ansi_x3.4-1986", C.AsciiCodec_false, "iso_646.irv:1991", C.AsciiCodec_false, "iso646-us", C.AsciiCodec_false, "us-ascii", C.AsciiCodec_false, "us", C.AsciiCodec_false, "ibm367", C.AsciiCodec_false, "cp367", C.AsciiCodec_false, "csascii", C.AsciiCodec_false, "ascii", C.AsciiCodec_false, "csutf8", C.Utf8Codec_false, "utf-8", C.Utf8Codec_false], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [J.JSString, P.Encoding]);
});
Isolate.$lazy($, "_splitRe", "Uri__splitRe", "get$Uri__splitRe", function() {
  return new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^(?:([^:/?#]+):)?(?://(?:([^/?#]*)@)?(?:([\\w\\d\\-\\u0100-\\uffff.%]*)|\\[([A-Fa-f0-9:.]*)\\])(?::([0-9]+))?)?([^?#[]+)?(?:\\?([^#]*))?(?:#(.*))?$", false, true, false), null, null);
});
Isolate.$lazy($, "lazyLoader", "lazyLoader", "get$lazyLoader", function() {
  return new O.LazyLoader(H.setRuntimeTypeInfo([], [O._InternalLazyLoaderHandler]));
});
Isolate.$lazy($, "ASSEMBLER", "Entity_ASSEMBLER", "get$Entity_ASSEMBLER", function() {
  return $.EntityAssembler__instance;
});
Isolate.$lazy($, "FACTORY", "Entity_FACTORY", "get$Entity_FACTORY", function() {
  return $.EntityFactory__instance;
});
Isolate.$lazy($, "_loggers", "Logger__loggers", "get$Logger__loggers", function() {
  return H.setRuntimeTypeInfo(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [J.JSString, N.Logger]);
});
Isolate.$lazy($, "_logger", "_logger", "get$_logger", function() {
  return N.Logger_Logger("Observable.dirtyCheck");
});
Isolate.$lazy($, "objectType", "objectType", "get$objectType", function() {
  return P.reflectClass(C.Type_HqF);
});
Isolate.$lazy($, "_pathRegExp", "_pathRegExp", "get$_pathRegExp", function() {
  return new L.closure().call$0();
});
Isolate.$lazy($, "_spacesRegExp", "_spacesRegExp", "get$_spacesRegExp", function() {
  return new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("\\s", false, true, false), null, null);
});
Isolate.$lazy($, "_logger", "_logger0", "get$_logger0", function() {
  return N.Logger_Logger("observe.PathObserver");
});

init.functionAliases = {};
;
init.metadata = [P.Object,
C.TypeVariable_9Yl,
C.TypeVariable_SSn,
C.TypeVariable_M6L,
C.TypeVariable_6ld,
C.TypeVariable_6pZ,
C.TypeVariable_R1M,
C.TypeVariable_w1V,
C.TypeVariable_2it,
C.TypeVariable_izR,
O.Entity,
C.TypeVariable_ca0,
C.TypeVariable_bcN,
C.TypeVariable_4e8,
C.TypeVariable_80d,
C.TypeVariable_IuH,
C.TypeVariable_bRS,
C.TypeVariable_zms,
C.TypeVariable_iDl,
C.TypeVariable_qXv,
C.TypeVariable_Cpf,
C.TypeVariable_zms0,
C.TypeVariable_zms1,
C.TypeVariable_cMb,
C.TypeVariable_peq,
C.TypeVariable_xHa,
C.TypeVariable_KFo,
C.TypeVariable_GeI,
C.TypeVariable_N6d,
C.TypeVariable_ELE,
C.TypeVariable_Ucj,
C.TypeVariable_ajX,
C.TypeVariable_v5w,
C.TypeVariable_6J9,
C.TypeVariable_IMh,
C.TypeVariable_8IC,
C.TypeVariable_M0o,
C.TypeVariable_YiW,
C.TypeVariable_gg4,
C.TypeVariable_ybB,
C.TypeVariable_vUl,
C.TypeVariable_wKE,
C.TypeVariable_ECQ,
C.TypeVariable_QW2,
C.TypeVariable_xrx,
C.TypeVariable_a5W,
C.TypeVariable_qy5,
C.TypeVariable_Azz,
C.TypeVariable_PEo,
C.TypeVariable_StD,
C.TypeVariable_xw8,
C.TypeVariable_qNA,
C.TypeVariable_A66,
C.TypeVariable_0aX,
C.TypeVariable_ZAV,
C.TypeVariable_yrt,
C.TypeVariable_g8l,
C.TypeVariable_IF2,
C.TypeVariable_6w0,
C.TypeVariable_AaU,
C.TypeVariable_wyB,
C.TypeVariable_EyI,
C.TypeVariable_W3x,
C.TypeVariable_U7Y,
C.TypeVariable_jtt,
C.TypeVariable_eFO,
C.TypeVariable_sMJ,
C.TypeVariable_jvJ,
C.TypeVariable_Aec,
C.TypeVariable_Me9,
C.TypeVariable_F8z,
C.TypeVariable_MQy,
C.TypeVariable_G5c,
C.TypeVariable_iX7,
C.TypeVariable_jjv,
C.TypeVariable_Srw,
C.TypeVariable_fTF,
C.TypeVariable_Jeh,
C.TypeVariable_oyU,
C.TypeVariable_RG8,
C.TypeVariable_ESz,
C.TypeVariable_AKg,
C.TypeVariable_X5c,
C.TypeVariable_7JZ,
C.TypeVariable_e78,
C.TypeVariable_IVQ,
C.TypeVariable_ZK2,
C.TypeVariable_cQL,
C.TypeVariable_SfQ,
C.TypeVariable_mxN,
C.TypeVariable_s4r,
C.TypeVariable_wiz,
C.TypeVariable_Ieb,
C.TypeVariable_aZ8,
C.TypeVariable_XRr,
C.TypeVariable_mtb,
C.TypeVariable_hcA,
C.TypeVariable_zPV,
C.TypeVariable_zJB,
C.TypeVariable_2Fm,
C.TypeVariable_Ucj0,
C.TypeVariable_o6I,
C.TypeVariable_woc,
C.TypeVariable_0jk,
C.TypeVariable_O2x,
C.TypeVariable_iil,
C.TypeVariable_AuK,
C.TypeVariable_YHO,
C.TypeVariable_gNF,
O._DormProxyListEntry,
C.TypeVariable_c0T,
C.TypeVariable_tgN,
C.TypeVariable_mPr,
C.TypeVariable_90m,
C.TypeVariable_5wV,
C.TypeVariable_Vn6,
C.TypeVariable_MUU,
C.TypeVariable_GBG,
C.TypeVariable_i4h,
C.TypeVariable_zDK,
C.TypeVariable_j8H,
C.TypeVariable_Mjq,
C.TypeVariable_CBX,
C.TypeVariable_wM5,
C.TypeVariable_EKW,
C.TypeVariable_mNE,
C.TypeVariable_EkK,
C.TypeVariable_EsU,
C.TypeVariable_kaS,
C.TypeVariable_udv,
C.TypeVariable_0,
C.TypeVariable_irG,
C.TypeVariable_QkP,
C.TypeVariable_Hme,
C.TypeVariable_wAg,
C.TypeVariable_pea,
C.TypeVariable_mDP,
C.TypeVariable_FeL,
C.TypeVariable_chs,
C.TypeVariable_idM,
C.TypeVariable_TBq,
C.TypeVariable_TlH,
C.TypeVariable_33h,
C.TypeVariable_oyn,
C.TypeVariable_Emx,
C.TypeVariable_lkh,
C.TypeVariable_MQy0,
C.TypeVariable_A0R,
C.TypeVariable_mKv,
C.TypeVariable_ogK,
C.TypeVariable_wsa,
C.TypeVariable_YUO,
C.TypeVariable_86y,
C.TypeVariable_s2C,
C.TypeVariable_d0h,
C.TypeVariable_QDz,
C.TypeVariable_eIp,
C.TypeVariable_xMs,
C.TypeVariable_fKI,
C.TypeVariable_iuP,
C.TypeVariable_ZAV0,
C.TypeVariable_8Wd,
C.TypeVariable_eFO0,
C.TypeVariable_E6c,
C.TypeVariable_pxV,
C.TypeVariable_ejK,
C.TypeVariable_wCl,
C.TypeVariable_tOG,
C.TypeVariable_vdN,
C.TypeVariable_6pl,
C.TypeVariable_oa9,
C.TypeVariable_qjT,
C.TypeVariable_GOF,
C.TypeVariable_gc6,
C.TypeVariable_xw80,
C.TypeVariable_EKW0,
C.TypeVariable_2Zi,
C.TypeVariable_ZAV1,
C.TypeVariable_QoX,
C.TypeVariable_6L0,
C.TypeVariable_OPa,
C.TypeVariable_SOD,
C.TypeVariable_75k,
C.TypeVariable_9Ld,
C.TypeVariable_wsa0,
C.TypeVariable_CF9,
C.TypeVariable_o8K,
C.TypeVariable_7BT,
J.JSNumber,
C.TypeVariable_geu,
C.TypeVariable_O0K,
C.TypeVariable_cJC,
C.TypeVariable_gkc,
C.TypeVariable_2Qw,
C.TypeVariable_yHF,
C.TypeVariable_wAN,
C.TypeVariable_wEo,
C.TypeVariable_i7B,
C.TypeVariable_dcb,
C.TypeVariable_4kp,
C.TypeVariable_yPV,
C.TypeVariable_Db0,
C.TypeVariable_wYn,
C.TypeVariable_wDM,
C.TypeVariable_mdN,
C.TypeVariable_Qqi,
C.TypeVariable_8eb,
C.TypeVariable_96V,
C.TypeVariable_Qqi0,
C.TypeVariable_gOG,
C.TypeVariable_kYz,
C.TypeVariable_SLI,
C.TypeVariable_eWo,
C.TypeVariable_gn0,
C.TypeVariable_O1t,
C.TypeVariable_Qcj,
[P.LinkedListEntry, 215],
C.TypeVariable_Tq4,
[P.LinkedListEntry, 217],
C.TypeVariable_yuy,
C.TypeVariable_KYK,
C.TypeVariable_sWu,
C.TypeVariable_8eb0,
[P.LinkedListEntry, 222],
C.TypeVariable_NT8,
C.TypeVariable_q7p,
C.TypeVariable_XXT,
C.TypeVariable_ckP,
C.TypeVariable_EKW1,
C.TypeVariable_nR7,
C.TypeVariable_5vl,
C.TypeVariable_j4A,
C.TypeVariable_6FR,
C.TypeVariable_3Gf,
C.TypeVariable_iid,
C.TypeVariable_KAx,
C.TypeVariable_VzM,
C.TypeVariable_MUw,
C.TypeVariable_UgT,
C.TypeVariable_q96,
C.TypeVariable_UAg,
{func: "args1", args: [null]},
"object",
"length",
{func: "int__int", ret: J.JSInt, args: [J.JSInt]},
"i",
{func: "bool__int", ret: J.JSBool, args: [J.JSInt]},
"codeUnit",
{func: "dynamic___IsolateContext_Function", args: [H._IsolateContext, P.Function]},
"isolate",
"function",
{func: "void__dynamic", void: true, args: [null]},
"entry",
{func: "String_", ret: J.JSString},
{func: "void__dynamic_dynamic", void: true, args: [null, null]},
"sender",
"e",
"msg",
{func: "Future__String_String_List_dynamic_bool_bool", ret: [P.Future, P.SendPort], args: [J.JSString, J.JSString, [J.JSArray, J.JSString], null, J.JSBool, J.JSBool]},
"functionName",
"uri",
"args",
"message",
"isLight",
"isSpawnUri",
{func: "void__String_String_List_dynamic_bool_SendPort", void: true, args: [J.JSString, J.JSString, [J.JSArray, J.JSString], null, J.JSBool, P.SendPort]},
"replyPort",
{func: "void__Function_List_dynamic_bool_SendPort", void: true, args: [P.Function, [J.JSArray, J.JSString], null, J.JSBool, P.SendPort]},
"topLevel",
"replyTo",
{func: "void__dynamic_String_List_dynamic_bool_SendPort", void: true, args: [null, J.JSString, [J.JSArray, J.JSString], null, J.JSBool, P.SendPort]},
{func: "dynamic__RawReceivePort", args: [P.RawReceivePort]},
"_rawPort",
{func: "bool__dynamic", ret: J.JSBool, args: [null]},
"x",
{func: "dynamic__int_void_", args: [J.JSInt, {func: "void_", void: true}]},
"milliseconds",
"callback",
{func: "dynamic__int_void__Timer", args: [J.JSInt, {func: "void__Timer", void: true, args: [P.Timer]}]},
{func: "String__dynamic", ret: J.JSString, args: [null]},
"value",
{func: "void__String", void: true, args: [J.JSString]},
"memberName",
{func: "dynamic__JSInvocationMirror_Object", args: [H.JSInvocationMirror, P.Object]},
"invocation",
"victim",
{func: "ReflectionInfo__dynamic", ret: H.ReflectionInfo, args: [null]},
"jsFunction",
{func: "int__dynamic", ret: J.JSInt, args: [null]},
{func: "dynamic__String", args: [J.JSString]},
"string",
{func: "int__String_int_int__String", ret: J.JSInt, args: [J.JSString, J.JSInt, {func: "int__String", ret: J.JSInt, args: [J.JSString]}]},
"source",
"radix",
"handleError",
{func: "double__String_double__String", ret: J.JSDouble, args: [J.JSString, {func: "double__String", ret: J.JSDouble, args: [J.JSString]}]},
{func: "String__Object", ret: J.JSString, args: [P.Object]},
{func: "num_", ret: J.JSNumber},
{func: "String__List", ret: J.JSString, args: [[J.JSArray, J.JSInt]]},
"array",
"codePoints",
"charCodes",
"receiver",
{func: "args8", args: [null, null, null, null, null, null, null, null]},
"years",
"month",
"day",
"hours",
"minutes",
"seconds",
"isUtc",
{func: "args2", args: [null, null]},
"key",
{func: "void__dynamic_dynamic_dynamic", void: true, args: [null, null, null]},
{func: "dynamic__dynamic_List_Map", args: [null, J.JSArray, [P.Map, J.JSString, null]]},
"positionalArguments",
"namedArguments",
{func: "dynamic__Function_List_Map", args: [P.Function, J.JSArray, [P.Map, J.JSString, null]]},
"className",
{func: "args0"},
"argument",
"index",
"ex",
"expression",
{func: "dynamic__String_dynamic", args: [J.JSString, null]},
"_message",
"match",
{func: "dynamic__dynamic_Map", args: [null, P.Map]},
"keyValuePairs",
"result",
{func: "dynamic__Function_dynamic_int_dynamic_dynamic_dynamic_dynamic", args: [P.Function, null, J.JSInt, null, null, null, null]},
"closure",
"numberOfArguments",
"arg1",
"arg2",
"arg3",
"arg4",
{func: "dynamic__dynamic_int", args: [null, J.JSInt]},
"arity",
{func: "Closure__dynamic_List_List_bool_dynamic_String", ret: H.Closure, args: [null, J.JSArray, J.JSArray, J.JSBool, null, J.JSString]},
"functions",
"reflectionInfo",
"isStatic",
"jsArguments",
"propertyName",
{func: "Closure__dynamic_dynamic_dynamic_dynamic_dynamic_dynamic", ret: H.Closure, args: [null, null, null, null, null, null]},
"name",
"property",
{func: "dynamic__Object_Object", args: [P.Object, P.Object]},
"actualType",
"expectedType",
"staticName",
"list",
{func: "RuntimeFunctionType__dynamic_dynamic_dynamic", ret: H.RuntimeFunctionType, args: [null, null, null]},
"returnType",
"parameterTypes",
"optionalParameterTypes",
{func: "RuntimeType_", ret: H.RuntimeType},
{func: "Type__String", ret: P.Type, args: [J.JSString]},
{func: "Object__Object_dynamic", ret: P.Object, args: [P.Object, null]},
"target",
"typeInfo",
{func: "dynamic__Object", args: [P.Object]},
"substitutionName",
{func: "dynamic__Object_String_int", args: [P.Object, J.JSString, J.JSInt]},
C.C_NoThrows,
C.C_NoSideEffects,
C.C_NoInline,
{func: "dynamic__Object_int", args: [P.Object, J.JSInt]},
{func: "String__dynamic__String__int", ret: J.JSString, args: [null], named: {onTypeVariable: {func: "String__int", ret: J.JSString, args: [J.JSInt]}}},
,
"type",
"onTypeVariable",
{func: "String__dynamic_int__String__int", ret: J.JSString, args: [null, J.JSInt], named: {onTypeVariable: {func: "String__int", ret: J.JSString, args: [J.JSInt]}}},
"types",
"startIndex",
"substitution",
"arguments",
{func: "bool__Object_String_List_String", ret: J.JSBool, args: [P.Object, J.JSString, J.JSArray, J.JSString]},
"isField",
"checks",
"asField",
{func: "bool__dynamic_dynamic", ret: J.JSBool, args: [null, null]},
"s",
"t",
{func: "args3", args: [null, null, null]},
"signature",
"context",
"contextName",
"o",
{func: "bool__List_List_bool", ret: J.JSBool, args: [J.JSArray, J.JSArray, J.JSBool]},
"allowShorter",
{func: "Object__dynamic_dynamic_dynamic", ret: P.Object, args: [null, null, null]},
{func: "dynamic__String_bool_bool_bool", args: [J.JSString, J.JSBool, J.JSBool, J.JSBool]},
"pattern",
"multiLine",
"caseSensitive",
"global",
{func: "dynamic__Pattern_List", args: [P.Pattern, [J.JSArray, J.JSString]]},
"_match",
{func: "List__String_String", ret: [J.JSArray, P.Match], args: [J.JSString, J.JSString]},
"needle",
"haystack",
"other",
"from",
"to",
{func: "String__Match", ret: J.JSString, args: [P.Match]},
{func: "String__String", ret: J.JSString, args: [J.JSString]},
{func: "args4", args: [null, null, null, null]},
"onMatch",
"onNonMatch",
{func: "double__Function_int", ret: J.JSDouble, args: [P.Function, J.JSInt]},
"f",
"timeMinimum",
"_iterable",
"_start",
"_endOrLength",
"iterable",
"takeCount",
"skipCount",
"_skipCount",
{func: "void__Iterable_void__dynamic", void: true, args: [P.Iterable, {func: "void__dynamic", void: true, args: [null]}]},
{func: "bool__Iterable_bool__dynamic", ret: J.JSBool, args: [P.Iterable, {func: "bool__dynamic", ret: J.JSBool, args: [null]}]},
{func: "dynamic__Iterable_args2", args: [P.Iterable, {func: "args2", args: [null, null]}]},
"combine",
{func: "dynamic__Iterable_dynamic_args2", args: [P.Iterable, null, {func: "args2", args: [null, null]}]},
"initialValue",
{func: "void__List_bool__dynamic", void: true, args: [J.JSArray, {func: "bool__dynamic", ret: J.JSBool, args: [null]}]},
"test",
{func: "dynamic__Iterable_bool__dynamic_args0", args: [P.Iterable, {func: "bool__dynamic", ret: J.JSBool, args: [null]}, {func: "args0"}]},
"orElse",
{func: "dynamic__List_bool__dynamic_args0", args: [J.JSArray, {func: "bool__dynamic", ret: J.JSBool, args: [null]}, {func: "args0"}]},
{func: "dynamic__Iterable_bool__dynamic", args: [P.Iterable, {func: "bool__dynamic", ret: J.JSBool, args: [null]}]},
{func: "String__Iterable_String_String", ret: J.JSString, args: [P.Iterable, J.JSString, J.JSString]},
"leftDelimiter",
"rightDelimiter",
{func: "void__List_Random", void: true, args: [J.JSArray, P.Random]},
"random",
{func: "void__List_int_int", void: true, args: [J.JSArray, J.JSInt, J.JSInt]},
"start",
"end",
{func: "void__List_int_int_Iterable_int", void: true, args: [J.JSArray, J.JSInt, J.JSInt, P.Iterable, J.JSInt]},
{func: "void__List_int_int_dynamic", void: true, args: [J.JSArray, J.JSInt, J.JSInt, null]},
"fillValue",
{func: "void__List_int_Iterable", void: true, args: [J.JSArray, J.JSInt, P.Iterable]},
{func: "void__List_int_List_int_int", void: true, args: [J.JSArray, J.JSInt, J.JSArray, J.JSInt, J.JSInt]},
"src",
"srcStart",
"dst",
"dstStart",
"count",
{func: "int__List_Object_int_int", ret: J.JSInt, args: [J.JSArray, P.Object, J.JSInt, J.JSInt]},
"a",
"element",
"endIndex",
{func: "int__List_Object_int", ret: J.JSInt, args: [J.JSArray, P.Object, J.JSInt]},
{func: "void__List_int_int_int__dynamic_dynamic", void: true, args: [J.JSArray, J.JSInt, J.JSInt, {func: "int__dynamic_dynamic", ret: J.JSInt, args: [null, null]}]},
"left",
"right",
"compare",
{func: "Map_", ret: [P.Map, J.JSString, [J.JSArray, P.LibraryMirror]]},
{func: "String__Symbol", ret: J.JSString, args: [P.Symbol0]},
"symbol",
{func: "Symbol__String", ret: P.Symbol0, args: [J.JSString]},
{func: "Symbol__Symbol", ret: P.Symbol0, args: [P.Symbol0]},
{func: "InstanceMirror__Object", ret: P.InstanceMirror, args: [P.Object]},
"reflectee",
{func: "TypeMirror__String", ret: P.TypeMirror, args: [J.JSString]},
"mangledName",
{func: "TypeMirror__Symbol_String", ret: P.TypeMirror, args: [P.Symbol0, J.JSString]},
{func: "Map__List", ret: [P.Map, P.Symbol0, P.MethodMirror], args: [[J.JSArray, P.MethodMirror]]},
"methods",
{func: "Map__dynamic", ret: [P.Map, P.Symbol0, P.MethodMirror], args: [null]},
{func: "Map__List_Map", ret: [P.Map, P.Symbol0, P.Mirror], args: [[J.JSArray, P.MethodMirror], [P.Map, P.Symbol0, P.VariableMirror]]},
"variables",
{func: "ClassMirror__dynamic_String", ret: P.ClassMirror, args: [null, J.JSString]},
"mixinNames",
{func: "JsVariableMirror__String_dynamic_JsDeclarationMirror_bool", ret: H.JsVariableMirror, args: [J.JSString, null, H.JsDeclarationMirror, J.JSBool]},
"descriptor",
"metadataFunction",
"owner",
"code",
{func: "JsMethodMirror__String_dynamic_bool_bool", ret: H.JsMethodMirror, args: [J.JSString, null, J.JSBool, J.JSBool]},
"isConstructor",
{func: "int__List_String", ret: J.JSInt, args: [[J.JSArray, P.TypeVariableMirror], J.JSString]},
"typeVariables",
{func: "TypeMirror__DeclarationMirror_dynamic", ret: P.TypeMirror, args: [P.DeclarationMirror, null]},
{func: "Symbol__DeclarationMirror_Symbol", ret: P.Symbol0, args: [P.DeclarationMirror, P.Symbol0]},
"simpleName",
{func: "List__dynamic", ret: J.JSArray, args: [null]},
{func: "List__JsDeclarationMirror_dynamic_bool_List", ret: [J.JSArray, H.JsVariableMirror], args: [H.JsDeclarationMirror, null, J.JSBool, [J.JSArray, P.Mirror]]},
"fieldSpecification",
{func: "List__String_Pattern", ret: [J.JSArray, J.JSString], args: [J.JSString, P.Pattern]},
{func: "bool__String", ret: J.JSBool, args: [J.JSString]},
{func: "void_", void: true},
{func: "Map__dynamic_bool", ret: [P.Map, J.JSString, J.JSString], args: [null, J.JSBool]},
"jsMangledNames",
"isGlobal",
{func: "Map__Map", ret: [P.Map, J.JSString, J.JSString], args: [[P.Map, J.JSString, J.JSString]]},
"map",
{func: "Future__String_String", ret: [P.Future, J.JSBool], args: [J.JSString, J.JSString]},
"libraryName",
{func: "dynamic__Completer_dynamic", args: [[P.Completer, J.JSBool], null]},
"completer",
"event",
{func: "dynamic__Function_Object_StackTrace", args: [P.Function, P.Object, P.StackTrace]},
"errorHandler",
"error",
"stackTrace",
{func: "Function__Function_Zone", ret: P.Function, args: [P.Function, P.Zone]},
"zone",
{func: "dynamic__dynamic_StackTrace", args: [null, P.StackTrace]},
{func: "StackTrace__dynamic_StackTrace", ret: P.StackTrace, args: [null, P.StackTrace]},
{func: "dynamic___StreamControllerLifecycle", args: [P._StreamControllerLifecycle]},
"controller",
{func: "dynamic___StreamControllerLifecycle_bool", args: [P._StreamControllerLifecycle, J.JSBool]},
"cancelOnError",
{func: "dynamic___NotificationHandler__NotificationHandler", args: [{func: "args0"}, {func: "args0"}]},
"_onListen",
"_onCancel",
{func: "dynamic__void__void_", args: [{func: "void_", void: true}, {func: "void_", void: true}]},
"onListen",
"onCancel",
{func: "dynamic__String__String", args: [J.JSString], named: {uri: J.JSString}},
"computation",
"duration",
{func: "Future__Iterable__bool", ret: [P.Future, J.JSArray], args: [[P.Iterable, P.Future]], named: {eagerError: J.JSBool}},
false,
"futures",
"eagerError",
{func: "Future__Iterable_Future__dynamic", ret: P.Future, args: [P.Iterable, {func: "Future__dynamic", ret: P.Future, args: [null]}]},
"input",
{func: "dynamic__String__Duration", args: [J.JSString], opt: [P.Duration]},
{func: "dynamic__dynamic__StackTrace", args: [null], opt: [P.StackTrace]},
{func: "dynamic__args1_Function", args: [{func: "args1", args: [null]}, P.Function]},
"onValueCallback",
"onErrorCallback",
{func: "dynamic__Function_bool__dynamic", args: [P.Function, {func: "bool__dynamic", ret: J.JSBool, args: [null]}]},
"errorTestCallback",
{func: "dynamic__args0", args: [{func: "args0"}]},
"whenCompleteActionCallback",
{func: "void__Future__Future", void: true, args: [P.Future, P._Future]},
{func: "void___Future__Future", void: true, args: [P._Future, P._Future]},
"listeners",
{func: "void__void_", void: true, args: [{func: "void_", void: true}]},
"future",
"data",
"period",
"mapSink",
"_stream",
"transformer",
"handleData",
"handleDone",
"stream",
{func: "dynamic__EventSink", args: [P.EventSink]},
"_sink",
"onPause",
"onResume",
"sync",
{func: "dynamic___NotificationHandler__NotificationHandler__NotificationHandler__NotificationHandler", args: [{func: "args0"}, {func: "args0"}, {func: "args0"}, {func: "args0"}]},
"_onPause",
"_onResume",
{func: "Future___NotificationHandler", ret: P.Future, args: [{func: "args0"}]},
"notificationHandler",
"_controller",
{func: "dynamic__StreamController", args: [P.StreamController]},
"_target",
{func: "dynamic___EventSink", args: [P._EventSink]},
{func: "dynamic___StreamController_dynamic_Stream_bool", args: [P._StreamController, null, P.Stream, J.JSBool]},
"varData",
{func: "dynamic__bool", args: [J.JSBool]},
{func: "dynamic___EventGenerator", args: [{func: "_PendingEvents_", ret: P._PendingEvents}]},
"_pending",
{func: "void__dynamic__StackTrace", void: true, args: [null], opt: [P.StackTrace]},
"_source",
"onListenHandler",
"onCancelHandler",
{func: "dynamic___AsBroadcastStream", args: [P._AsBroadcastStream]},
{func: "dynamic__args0_args1_dynamic__dynamic_StackTrace", args: [{func: "args0"}, {func: "args1", args: [null]}, {func: "dynamic__dynamic_StackTrace", args: [null, P.StackTrace]}]},
"userCode",
"onSuccess",
"onError",
{func: "void__StreamSubscription__Future_dynamic_StackTrace", void: true, args: [P.StreamSubscription, P._Future, null, P.StackTrace]},
"subscription",
{func: "dynamic__StreamSubscription__Future", args: [P.StreamSubscription, P._Future]},
{func: "void__StreamSubscription__Future_dynamic", void: true, args: [P.StreamSubscription, P._Future, null]},
"transform",
"expand",
"equals",
"mapper",
"_sinkMapper",
"_handleData",
"_handleError",
"_handleDone",
{func: "void__dynamic_EventSink", void: true, args: [null, P.EventSink]},
"sink",
{func: "void__dynamic_StackTrace_EventSink", void: true, args: [null, P.StackTrace, P.EventSink]},
{func: "void__EventSink2", void: true, args: [P.EventSink]},
"_transformer",
{func: "Timer__Duration_void_", ret: P.Timer, args: [P.Duration, {func: "void_", void: true}]},
{func: "Timer__Duration_void__Timer", ret: P.Timer, args: [P.Duration, {func: "void__Timer", void: true, args: [P.Timer]}]},
{func: "ZoneSpecification___Timer__Zone_ZoneDelegate_Zone_Duration_void__Timer_Timer__Zone_ZoneDelegate_Zone_Duration_void__Zone__Zone_ZoneDelegate_Zone_ZoneSpecification_Map_dynamic__Zone_ZoneDelegate_Zone_dynamic_StackTrace_void__Zone_ZoneDelegate_Zone_String_ZoneBinaryCallback__Zone_ZoneDelegate_Zone_args2_ZoneCallback__Zone_ZoneDelegate_Zone_args0_ZoneUnaryCallback__Zone_ZoneDelegate_Zone_args1_dynamic__Zone_ZoneDelegate_Zone_args0_dynamic__Zone_ZoneDelegate_Zone_args2_dynamic_dynamic_dynamic__Zone_ZoneDelegate_Zone_args1_dynamic_void__Zone_ZoneDelegate_Zone_args0", ret: P.ZoneSpecification, named: {createPeriodicTimer: {func: "Timer__Zone_ZoneDelegate_Zone_Duration_void__Timer", ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: "void__Timer", void: true, args: [P.Timer]}]}, createTimer: {func: "Timer__Zone_ZoneDelegate_Zone_Duration_void_", ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: "void_", void: true}]}, fork: {func: "Zone__Zone_ZoneDelegate_Zone_ZoneSpecification_Map", ret: P.Zone, args: [P.Zone, P.ZoneDelegate, P.Zone, P.ZoneSpecification, P.Map]}, handleUncaughtError: {func: "dynamic__Zone_ZoneDelegate_Zone_dynamic_StackTrace", args: [P.Zone, P.ZoneDelegate, P.Zone, null, P.StackTrace]}, print: {func: "void__Zone_ZoneDelegate_Zone_String", void: true, args: [P.Zone, P.ZoneDelegate, P.Zone, J.JSString]}, registerBinaryCallback: {func: "ZoneBinaryCallback__Zone_ZoneDelegate_Zone_args2", ret: {func: "args2", args: [null, null]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args2", args: [null, null]}]}, registerCallback: {func: "ZoneCallback__Zone_ZoneDelegate_Zone_args0", ret: {func: "args0"}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args0"}]}, registerUnaryCallback: {func: "ZoneUnaryCallback__Zone_ZoneDelegate_Zone_args1", ret: {func: "args1", args: [null]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args1", args: [null]}]}, run: {func: "dynamic__Zone_ZoneDelegate_Zone_args0", args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args0"}]}, runBinary: {func: "dynamic__Zone_ZoneDelegate_Zone_args2_dynamic_dynamic", args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args2", args: [null, null]}, null, null]}, runUnary: {func: "dynamic__Zone_ZoneDelegate_Zone_args1_dynamic", args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args1", args: [null]}, null]}, scheduleMicrotask: {func: "void__Zone_ZoneDelegate_Zone_args0", void: true, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args0"}]}}},
"createPeriodicTimer",
"createTimer",
"fork",
"handleUncaughtError",
"print",
"registerBinaryCallback",
"registerCallback",
"registerUnaryCallback",
"run",
"runBinary",
"runUnary",
"scheduleMicrotask",
{func: "ZoneSpecification__ZoneSpecification__dynamic_dynamic_dynamic_dynamic_dynamic_dynamic_dynamic_dynamic_dynamic_dynamic_dynamic_dynamic", ret: P.ZoneSpecification, args: [P.ZoneSpecification], named: {createPeriodicTimer: null, createTimer: null, fork: null, handleUncaughtError: null, print: null, registerBinaryCallback: null, registerCallback: null, registerUnaryCallback: null, run: null, runBinary: null, runUnary: null, scheduleMicrotask: null}},
{func: "dynamic___dynamic_dynamic_dynamic_dynamic_dynamic_dynamic_dynamic_dynamic_dynamic_dynamic_dynamic_dynamic", named: {createPeriodicTimer: null, createTimer: null, fork: null, handleUncaughtError: null, print: null, registerBinaryCallback: null, registerCallback: null, registerUnaryCallback: null, run: null, runBinary: null, runUnary: null, scheduleMicrotask: null}},
{func: "Zone_", ret: P.Zone},
{func: "dynamic___BaseZone", args: [P._BaseZone]},
"_degelationTarget",
{func: "dynamic___BaseZone_ZoneSpecification_Map", args: [P._BaseZone, P.ZoneSpecification, [P.Map, P.Symbol0, null]]},
"parent",
"_specification",
"_map",
{func: "void__Zone_ZoneDelegate_Zone_dynamic_StackTrace", void: true, args: [P.Zone, P.ZoneDelegate, P.Zone, null, P.StackTrace]},
"self",
{func: "dynamic__Zone_ZoneDelegate_Zone_args0", args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args0"}]},
{func: "dynamic__Zone_ZoneDelegate_Zone_args1_dynamic", args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args1", args: [null]}, null]},
"arg",
{func: "dynamic__Zone_ZoneDelegate_Zone_args2_dynamic_dynamic", args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args2", args: [null, null]}, null, null]},
{func: "ZoneCallback__Zone_ZoneDelegate_Zone_args0", ret: {func: "args0"}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args0"}]},
{func: "ZoneUnaryCallback__Zone_ZoneDelegate_Zone_args1", ret: {func: "args1", args: [null]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args1", args: [null]}]},
{func: "ZoneBinaryCallback__Zone_ZoneDelegate_Zone_args2", ret: {func: "args2", args: [null, null]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args2", args: [null, null]}]},
{func: "void__Zone_ZoneDelegate_Zone_args0", void: true, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args0"}]},
{func: "Timer__Zone_ZoneDelegate_Zone_Duration_void_", ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: "void_", void: true}]},
{func: "Timer__Zone_ZoneDelegate_Zone_Duration_void__Timer", ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: "void__Timer", void: true, args: [P.Timer]}]},
{func: "void__Zone_ZoneDelegate_Zone_String", void: true, args: [P.Zone, P.ZoneDelegate, P.Zone, J.JSString]},
"line",
{func: "Zone__Zone_ZoneDelegate_Zone_ZoneSpecification_Map0", ret: P.Zone, args: [P.Zone, P.ZoneDelegate, P.Zone, P.ZoneSpecification, [P.Map, P.Symbol0, null]]},
"specification",
"zoneValues",
{func: "dynamic__args0__Function_ZoneSpecification_Map", args: [{func: "args0"}], named: {onError: P.Function, zoneSpecification: P.ZoneSpecification, zoneValues: [P.Map, P.Symbol0, null]}},
"body",
"zoneSpecification",
"table",
"_equals",
"_hashCode",
"validKey",
"_equality",
"_hasher",
"b",
"hashCode",
"isValidKey",
"keys",
"values",
{func: "String__Iterable", ret: J.JSString, args: [P.Iterable]},
{func: "void__Iterable_List", void: true, args: [P.Iterable, J.JSArray]},
"parts",
{func: "dynamic__Iterator", args: [P.Iterator]},
"_iterator",
{func: "void__List_bool__dynamic_bool", void: true, args: [J.JSArray, {func: "bool__dynamic", ret: J.JSBool, args: [null]}, J.JSBool]},
"retainMatching",
{func: "bool__Map_dynamic", ret: J.JSBool, args: [P.Map, null]},
{func: "dynamic__Map_dynamic_args0", args: [P.Map, null, {func: "args0"}]},
"ifAbsent",
{func: "dynamic__Map", args: [P.Map]},
{func: "dynamic__Map_void__dynamic_dynamic", args: [P.Map, {func: "void__dynamic_dynamic", void: true, args: [null, null]}]},
{func: "Iterable__Map", ret: P.Iterable, args: [P.Map]},
{func: "int__Map", ret: J.JSInt, args: [P.Map]},
{func: "bool__Map", ret: J.JSBool, args: [P.Map]},
{func: "String__Map", ret: J.JSString, args: [P.Map]},
"m",
{func: "void__Map_Iterable_args1_args1", void: true, args: [P.Map, P.Iterable, {func: "args1", args: [null]}, {func: "args1", args: [null]}]},
{func: "void__Map_Iterable_Iterable", void: true, args: [P.Map, P.Iterable, P.Iterable]},
"sentinel",
{func: "dynamic___int", opt: [J.JSInt]},
"initialCapacity",
"number",
{func: "dynamic__ListQueue", args: [P.ListQueue]},
"queue",
{func: "dynamic___SplayTree", args: [P._SplayTree]},
"tree",
{func: "dynamic___SplayTree_dynamic", args: [P._SplayTree, null]},
"startKey",
"_tree",
{func: "dynamic__dynamic_args2", args: [null, {func: "args2", args: [null, null]}]},
"json",
"reviver",
{func: "dynamic___bool", named: {allowInvalid: J.JSBool}},
"allowInvalid",
{func: "dynamic__int", args: [J.JSInt]},
"_subsetMask",
{func: "dynamic__int_ByteConversionSink", args: [J.JSInt, P.ByteConversionSink]},
{func: "dynamic__bool_int", args: [J.JSBool, J.JSInt]},
"_allowInvalid",
{func: "dynamic__bool_ByteConversionSink", args: [J.JSBool, P.ByteConversionSink]},
"_utf8Sink",
{func: "ByteConversionSink__void__List", ret: P.ByteConversionSink, args: [{func: "void__List", void: true, args: [[J.JSArray, J.JSInt]]}]},
{func: "ByteConversionSink__ChunkedConversionSink", ret: P.ByteConversionSink, args: [[P.ChunkedConversionSink, [J.JSArray, J.JSInt]]]},
{func: "dynamic__ChunkedConversionSink", args: [[P.ChunkedConversionSink, [J.JSArray, J.JSInt]]]},
{func: "dynamic__void__List", args: [{func: "void__List", void: true, args: [[J.JSArray, J.JSInt]]}]},
"v",
"_callback",
"converter",
"_first",
"_second",
"codec",
{func: "dynamic__Converter_Converter", args: [P.Converter, P.Converter]},
{func: "Encoding__String", ret: P.Encoding, args: [J.JSString]},
{func: "dynamic__String_bool_bool_bool_bool", args: [J.JSString, J.JSBool, J.JSBool, J.JSBool, J.JSBool]},
"_name",
"escapeLtGt",
"escapeQuot",
"escapeApos",
"escapeSlash",
{func: "dynamic___HtmlEscapeMode", opt: [P.HtmlEscapeMode]},
C.HtmlEscapeMode_p2v,
"mode",
{func: "dynamic__HtmlEscape_StringConversionSink", args: [P.HtmlEscape, P.StringConversionSink]},
"_escape",
{func: "dynamic__dynamic__dynamic", args: [null], named: {cause: null}},
"unsupportedObject",
"cause",
{func: "JsonCodec__args2", ret: P.JsonCodec, args: [{func: "args2", args: [null, null]}]},
{func: "dynamic___Reviver", args: [{func: "args2", args: [null, null]}]},
"_reviver",
{func: "dynamic___Object__Object", opt: [{func: "Object__Object", ret: P.Object, args: [P.Object]}]},
"toEncodable",
{func: "dynamic__StringConversionSink_Function", args: [P.StringConversionSink, P.Function]},
"_toEncodableFunction",
{func: "dynamic__args2", args: [{func: "args2", args: [null, null]}]},
{func: "dynamic___Reviver_ChunkedConversionSink", args: [{func: "args2", args: [null, null]}, [P.ChunkedConversionSink, P.Object]]},
"_chunkedSink",
{func: "dynamic__String_args2", args: [J.JSString, {func: "args2", args: [null, null]}]},
{func: "Object__dynamic", ret: P.Object, args: [null]},
{func: "dynamic__StringSink_Function", args: [P.StringSink, P.Function]},
{func: "String__dynamic_args1", ret: J.JSString, args: [null, {func: "args1", args: [null]}]},
{func: "void__dynamic_StringSink_args1", void: true, args: [null, P.StringSink, {func: "args1", args: [null]}]},
"output",
{func: "String__num", ret: J.JSString, args: [J.JSNumber]},
{func: "void__StringSink_String", void: true, args: [P.StringSink, J.JSString]},
"sb",
{func: "dynamic__bool_StringConversionSink", args: [J.JSBool, P.StringConversionSink]},
{func: "dynamic__StringConversionSink", args: [P.StringConversionSink]},
{func: "String__String_int_int_bool_void__String", ret: J.JSString, args: [J.JSString, J.JSInt, J.JSInt, J.JSBool, {func: "void__String", void: true, args: [J.JSString]}]},
"chunk",
"isLast",
"adder",
{func: "StringConversionSink__void__String", ret: P.StringConversionSink, args: [{func: "void__String", void: true, args: [J.JSString]}]},
{func: "StringConversionSink__ChunkedConversionSink", ret: P.StringConversionSink, args: [[P.ChunkedConversionSink, J.JSString]]},
{func: "StringConversionSink__StringSink", ret: P.StringConversionSink, args: [P.StringSink]},
{func: "ClosableStringSink__StringSink_void_", ret: P.ClosableStringSink, args: [P.StringSink, {func: "void_", void: true}]},
"onClose",
{func: "dynamic__StringSink__StringSinkCloseCallback", args: [P.StringSink, {func: "void_", void: true}]},
{func: "dynamic__StringSink", args: [P.StringSink]},
"_stringSink",
{func: "dynamic___ChunkedConversionCallback0", args: [{func: "void__String", void: true, args: [J.JSString]}]},
{func: "dynamic__ChunkedConversionSink0", args: [[P.ChunkedConversionSink, J.JSString]]},
{func: "dynamic__ChunkedConversionSink_StringSink_bool", args: [P.ChunkedConversionSink, P.StringSink, J.JSBool]},
"chunkedSink",
"allowMalformed",
{func: "dynamic__StringConversionSink_bool", args: [P.StringConversionSink, J.JSBool]},
{func: "dynamic__StringConversionSink_StringBuffer_bool", args: [P.StringConversionSink, P.StringBuffer, J.JSBool]},
"stringBuffer",
{func: "dynamic___bool0", named: {allowMalformed: J.JSBool}},
"bufferSize",
{func: "dynamic__ByteConversionSink", args: [P.ByteConversionSink]},
{func: "int__int_int", ret: J.JSInt, args: [J.JSInt, J.JSInt]},
"lead",
"tail",
{func: "dynamic__StringSink_bool", args: [P.StringSink, J.JSBool]},
"_allowMalformed",
{func: "Map__Map0", ret: [P.Map, J.JSString, null], args: [[P.Map, P.Symbol0, null]]},
"expires",
{func: "bool__String__bool", ret: J.JSBool, args: [J.JSString], named: {defaultValue: J.JSBool}},
"defaultValue",
{func: "int__Comparable_Comparable", ret: J.JSInt, args: [P.Comparable, P.Comparable]},
{func: "DateTime__int__int_int_int_int_int_int", ret: P.DateTime, args: [J.JSInt], opt: [J.JSInt, J.JSInt, J.JSInt, J.JSInt, J.JSInt, J.JSInt]},
1,
0,
"year",
"hour",
"minute",
"second",
"millisecond",
{func: "DateTime_", ret: P.DateTime},
{func: "DateTime__String", ret: P.DateTime, args: [J.JSString]},
"formattedString",
{func: "dynamic__int__bool", args: [J.JSInt], named: {isUtc: J.JSBool}},
"millisecondsSinceEpoch",
{func: "dynamic__int_int_int_int_int_int_int_bool", args: [J.JSInt, J.JSInt, J.JSInt, J.JSInt, J.JSInt, J.JSInt, J.JSInt, J.JSBool]},
{func: "int__int_int_int_int_int_int_int_bool", ret: J.JSInt, args: [J.JSInt, J.JSInt, J.JSInt, J.JSInt, J.JSInt, J.JSInt, J.JSInt, J.JSBool]},
{func: "double__String__double__String", ret: J.JSDouble, args: [J.JSString], opt: [{func: "double__String", ret: J.JSDouble, args: [J.JSString]}]},
{func: "dynamic___int_int_int_int_int_int", named: {days: J.JSInt, hours: J.JSInt, microseconds: J.JSInt, milliseconds: J.JSInt, minutes: J.JSInt, seconds: J.JSInt}},
"days",
"microseconds",
{func: "dynamic___dynamic", opt: [null]},
{func: "dynamic__num", args: [J.JSNumber]},
{func: "dynamic__num_num_num", args: [J.JSNumber, J.JSNumber, J.JSNumber]},
"_className",
{func: "dynamic__Object_Symbol_List_Map__List", args: [P.Object, P.Symbol0, J.JSArray, [P.Map, P.Symbol0, null]], opt: [J.JSArray]},
"existingArgumentNames",
{func: "dynamic___String", opt: [J.JSString]},
{func: "dynamic___Object", opt: [P.Object]},
"modifiedObject",
"variableName",
{func: "Exception___dynamic", ret: P.Exception, opt: [null]},
"",
{func: "dynamic__Function_List__Map", args: [P.Function, J.JSArray], opt: [[P.Map, P.Symbol0, null]]},
{func: "bool__Object_Object", ret: J.JSBool, args: [P.Object, P.Object]},
{func: "int__Object", ret: J.JSInt, args: [P.Object]},
{func: "int__String__int", ret: J.JSInt, args: [J.JSString], named: {defaultValue: J.JSInt}},
{func: "int__String__int__String_int", ret: J.JSInt, args: [J.JSString], named: {onError: {func: "int__String", ret: J.JSInt, args: [J.JSString]}, radix: J.JSInt}},
"generator",
"_count",
"_generator",
"fill",
true,
"growable",
{func: "Null_", ret: P.Null},
{func: "num__String__num__String", ret: J.JSNumber, args: [J.JSString], opt: [{func: "num__String", ret: J.JSNumber, args: [J.JSString]}]},
"_",
{func: "void__Object", void: true, args: [P.Object]},
{func: "RegExp__String__bool_bool", ret: P.RegExp, args: [J.JSString], named: {caseSensitive: J.JSBool, multiLine: J.JSBool}},
{func: "int_", ret: J.JSInt},
{func: "String__Iterable0", ret: J.JSString, args: [[P.Iterable, J.JSInt]]},
{func: "String__int", ret: J.JSString, args: [J.JSInt]},
"charCode",
{func: "String__String__String", ret: J.JSString, args: [J.JSString], named: {defaultValue: J.JSString}},
{func: "dynamic__String_int", args: [J.JSString, J.JSInt]},
"content",
{func: "Uri__String", ret: P.Uri, args: [J.JSString]},
{func: "dynamic__Match", args: [P.Match]},
{func: "dynamic___dynamic_String_String_Iterable_dynamic_String_Map_String_String", named: {fragment: null, host: J.JSString, path: J.JSString, pathSegments: [P.Iterable, J.JSString], port: null, query: J.JSString, queryParameters: [P.Map, J.JSString, J.JSString], scheme: J.JSString, userInfo: J.JSString}},
"fragment",
"host",
"path",
"pathSegments",
"port",
"query",
"queryParameters",
"scheme",
"userInfo",
{func: "Uri__String_String__Map", ret: P.Uri, args: [J.JSString, J.JSString], opt: [[P.Map, J.JSString, J.JSString]]},
"authority",
"unencodedPath",
{func: "Uri__String_String_String_Map", ret: P.Uri, args: [J.JSString, J.JSString, J.JSString, [P.Map, J.JSString, J.JSString]]},
{func: "Uri__String__bool", ret: P.Uri, args: [J.JSString], named: {windows: J.JSBool}},
"windows",
{func: "Uri_", ret: P.Uri},
{func: "bool_", ret: J.JSBool},
{func: "dynamic__List_bool", args: [[J.JSArray, J.JSString], J.JSBool]},
"segments",
"argumentError",
{func: "dynamic__List_bool__int", args: [[J.JSArray, J.JSString], J.JSBool], opt: [J.JSInt]},
"firstSegment",
{func: "dynamic__int_bool", args: [J.JSInt, J.JSBool]},
{func: "String__String_Map", ret: J.JSString, args: [J.JSString, [P.Map, J.JSString, J.JSString]]},
"component",
"val",
{func: "int__String", ret: J.JSInt, args: [J.JSString]},
{func: "String__String_String", ret: J.JSString, args: [J.JSString, J.JSString]},
"val1",
"val2",
{func: "void__StringBuffer_String_String_String", void: true, args: [P.StringBuffer, J.JSString, J.JSString, J.JSString]},
"first",
{func: "String__String__Encoding", ret: J.JSString, args: [J.JSString], named: {encoding: P.Encoding}},
C.Utf8Codec_false,
"encoding",
"encodedComponent",
{func: "Map__String__Encoding", ret: [P.Map, J.JSString, J.JSString], args: [J.JSString], named: {encoding: P.Encoding}},
{func: "List__String", ret: [J.JSArray, J.JSInt], args: [J.JSString]},
{func: "String__List_String__Encoding_bool", ret: J.JSString, args: [[J.JSArray, J.JSInt], J.JSString], named: {encoding: P.Encoding, spaceToPlus: J.JSBool}},
"canonicalTable",
"text",
"spaceToPlus",
{func: "int__String_int", ret: J.JSInt, args: [J.JSString, J.JSInt]},
"pos",
{func: "String__String__Encoding_bool", ret: J.JSString, args: [J.JSString], named: {encoding: P.Encoding, plusToSpace: J.JSBool}},
"plusToSpace",
"_s",
{func: "dynamic__SendPort", args: [P.SendPort]},
"controlPort",
{func: "Future__void__dynamic_dynamic", ret: [P.Future, P.Isolate], args: [{func: "void__dynamic", void: true, args: [null]}, null]},
"entryPoint",
{func: "Future__Uri_List_dynamic", ret: [P.Future, P.Isolate], args: [P.Uri, [J.JSArray, J.JSString], null]},
{func: "ReceivePort_", ret: P.ReceivePort},
{func: "ReceivePort__RawReceivePort", ret: P.ReceivePort, args: [P.RawReceivePort]},
"rawPort",
{func: "RawReceivePort___void__dynamic", ret: P.RawReceivePort, opt: [{func: "void__dynamic", void: true, args: [null]}]},
"handler",
{func: "dynamic__dynamic_dynamic_StackTrace", args: [null, null, P.StackTrace]},
"seed",
"hash",
{func: "int__dynamic_dynamic", ret: J.JSInt, args: [null, null]},
{func: "int__dynamic_dynamic_dynamic_dynamic", ret: J.JSInt, args: [null, null, null, null]},
"c",
"d",
{func: "num__num_num", ret: J.JSNumber, args: [J.JSNumber, J.JSNumber]},
{func: "double__num_num", ret: J.JSDouble, args: [J.JSNumber, J.JSNumber]},
"exponent",
{func: "double__num", ret: J.JSDouble, args: [J.JSNumber]},
"y",
{func: "Random___int", ret: P.Random, opt: [J.JSInt]},
"top",
"width",
"height",
{func: "Symbol__String__LibraryMirror", ret: P.Symbol0, args: [J.JSString], opt: [P.LibraryMirror]},
"library",
{func: "MirrorSystem_", ret: P.MirrorSystem},
{func: "ClassMirror__Type", ret: P.ClassMirror, args: [P.Type]},
{func: "TypeMirror__Type", ret: P.TypeMirror, args: [P.Type]},
{func: "dynamic__String_String_bool", args: [J.JSString, J.JSString, J.JSBool]},
"trimmedText",
"isDocComment",
{func: "dynamic___dynamic_dynamic_dynamic_dynamic", named: {metaTargets: null, override: null, symbols: null, targets: null}},
"metaTargets",
"override",
"symbols",
"targets",
{func: "dynamic___String0", named: {id: J.JSString}},
"id",
{func: "dynamic__DormManager_List_List_List_List", args: [O.DormManager, [J.JSArray, O.Entity], [J.JSArray, O.Entity], [J.JSArray, O.Entity], [J.JSArray, O.Entity]]},
"manager",
"dataToCommit",
"dataToDelete",
"rollbackCommit",
"rollbackDelete",
{func: "dynamic__String_Symbol", args: [J.JSString, P.Symbol0]},
"_property",
"_propertySymbol",
{func: "EntityAssembler_", ret: O.EntityAssembler},
{func: "dynamic__PostProcessorMethod", args: [{func: "void__Entity", void: true, args: [O.Entity]}]},
{func: "dynamic__String_EntityCtor", args: [J.JSString, {func: "Entity_", ret: O.Entity}]},
"refClassName",
"_entityCtor",
{func: "EntityScan__EntityScan_Entity", ret: O.EntityScan, args: [O.EntityScan, O.Entity]},
"originalScan",
"forEntity",
{func: "void__List2", void: true, args: [[J.JSArray, T.ChangeRecord]]},
"changes",
{func: "dynamic__String_Symbol_Type__PropertyMetadataCache", args: [J.JSString, P.Symbol0, P.Type, O._PropertyMetadataCache]},
"propertySymbol",
"metadataCache",
{func: "LazyLoader_", ret: O.LazyLoader},
{func: "dynamic__Symbol_LazyLoaderMethod", args: [P.Symbol0, {func: "Future__Entity_Symbol", ret: P.Future, args: [O.Entity, P.Symbol0]}]},
"forSymbol",
"method",
{func: "dynamic__bool_bool_bool_bool_bool_bool", args: [J.JSBool, J.JSBool, J.JSBool, J.JSBool, J.JSBool, J.JSBool]},
"isId",
"isTransient",
"isNullable",
"isLabelField",
"isMutable",
"isLazy",
{func: "MetadataValidationReason_", ret: O.MetadataValidationReason},
{func: "dynamic__Entity_String_Symbol_String", args: [O.Entity, J.JSString, P.Symbol0, J.JSString]},
"entity",
"propertyField",
"reasonFailed",
{func: "Entity_", ret: O.Entity},
{func: "dynamic__Entity_Entity", args: [O.Entity, O.Entity]},
"original",
"clone",
{func: "dynamic__Symbol_String_Type", args: [P.Symbol0, J.JSString, P.Type]},
"insertValue",
{func: "dynamic___int0", named: {maxStringLength: J.JSInt}},
"maxStringLength",
{func: "Externalizable_", ret: O.Externalizable},
{func: "SerializationType_", ret: O.SerializationType},
{func: "dynamic__Type_Function_Function", args: [P.Type, P.Function, P.Function]},
"forType",
"incoming",
"outgoing",
{func: "SerializerJson_", ret: O.SerializerJson},
{func: "ConflictManager__Entity_Entity", ret: O.ConflictManager, args: [O.Entity, O.Entity]},
"serverEntity",
"clientEntity",
{func: "TestEntitySuperClass_", ret: A.TestEntitySuperClass},
{func: "TestEntity_", ret: A.TestEntity},
{func: "Logger__String", ret: N.Logger, args: [J.JSString]},
{func: "dynamic__String_Logger_Map", args: [J.JSString, N.Logger, [P.Map, J.JSString, N.Logger]]},
"children",
{func: "Logger_", ret: N.Logger},
{func: "dynamic__Level_String_String__Object_StackTrace", args: [N.Level, J.JSString, J.JSString], opt: [P.Object, P.StackTrace]},
"level",
"loggerName",
{func: "StreamSubscription__Observable_Symbol_void_", ret: P.StreamSubscription, args: [F.Observable, P.Symbol0, {func: "void_", void: true}]},
"sourceName",
{func: "ChangeNotifier_", ret: O.ChangeNotifier},
{func: "ChangeRecord_", ret: T.ChangeRecord},
"oldValue",
"newValue",
{func: "dynamic___dynamic__List", named: {computeValue: {func: "dynamic__List", args: [J.JSArray]}}},
"computeValue",
{func: "void__Observable", void: true, args: [F.Observable]},
"obj",
{func: "ZoneSpecification_", ret: P.ZoneSpecification},
{func: "dynamic__List_int_dynamic_int", args: [J.JSArray, J.JSInt, null, J.JSInt]},
"_index",
"removed",
"_addedCount",
{func: "ListChangeRecord__List_int__int_List", ret: G.ListChangeRecord, args: [J.JSArray, J.JSInt], named: {addedCount: J.JSInt, removed: J.JSArray}},
"addedCount",
{func: "List__List_int_int_List_int_int", ret: [J.JSArray, [J.JSArray, J.JSInt]], args: [J.JSArray, J.JSInt, J.JSInt, J.JSArray, J.JSInt, J.JSInt]},
"current",
"currentStart",
"currentEnd",
"old",
"oldStart",
"oldEnd",
{func: "List__List", ret: [J.JSArray, J.JSInt], args: [[J.JSArray, [J.JSArray, J.JSInt]]]},
"distances",
{func: "int__List_List_int", ret: J.JSInt, args: [J.JSArray, J.JSArray, J.JSInt]},
"arr1",
"arr2",
"searchLength",
{func: "List__List_int_int_List_int_int0", ret: [J.JSArray, G.ListChangeRecord], args: [J.JSArray, J.JSInt, J.JSInt, J.JSArray, J.JSInt, J.JSInt]},
{func: "int__int_int_int_int", ret: J.JSInt, args: [J.JSInt, J.JSInt, J.JSInt, J.JSInt]},
"start1",
"end1",
"start2",
"end2",
{func: "void__List_ListChangeRecord", void: true, args: [[J.JSArray, G.ListChangeRecord], G.ListChangeRecord]},
"splices",
"record",
{func: "List__List_List", ret: [J.JSArray, G.ListChangeRecord], args: [[J.JSArray, P.Object], [J.JSArray, G.ListChangeRecord]]},
"records",
{func: "List__List_List0", ret: [J.JSArray, G.ListChangeRecord], args: [J.JSArray, [J.JSArray, G.ListChangeRecord]]},
{func: "Observable_", ret: F.Observable},
{func: "dynamic__Observable_Symbol_Object_Object", args: [F.Observable, P.Symbol0, P.Object, P.Object]},
"field",
{func: "List__List_List1", ret: [J.JSArray, G.ListChangeRecord], args: [[J.JSArray, P.Object], [J.JSArray, P.Object]]},
{func: "dynamic__Object_String__args1", args: [P.Object, J.JSString], named: {computeValue: {func: "args1", args: [null]}}},
{func: "bool__dynamic_dynamic_dynamic", ret: J.JSBool, args: [null, null, null]},
{func: "bool__ClassMirror_Symbol", ret: J.JSBool, args: [P.ClassMirror, P.Symbol0]},
"getter",
{func: "ClassMirror__ClassMirror", ret: P.ClassMirror, args: [P.ClassMirror]},
{func: "dynamic__dynamic__bool", args: [null], named: {deep: J.JSBool}},
"deep",
J.JSString,
{func: "dynamic__Invocation", args: [P.Invocation]},
{func: "Type_", ret: P.Type},
J.Interceptor,
J.JSBool,
P.Null,
J.JSObject,
J.JavaScriptObject,
{func: "bool__Object", ret: J.JSBool, args: [P.Object]},
"collection",
{func: "String___String", ret: J.JSString, opt: [J.JSString]},
"separator",
"n",
{func: "void__int_int", void: true, args: [J.JSInt, J.JSInt]},
{func: "void___Random", void: true, opt: [P.Random]},
{func: "int__Object__int", ret: J.JSInt, args: [P.Object], opt: [J.JSInt]},
{func: "void__int", void: true, args: [J.JSInt]},
"newLength",
J.JSIndexable,
[J.JSArray, 3],
{func: "bool__E", ret: J.JSBool, args: [3]},
H.Closure,
[J.JSArray, 4],
J.JSMutableIndexable,
[J.JSMutableArray, 6],
[J.JSMutableArray, 7],
{func: "int__num", ret: J.JSInt, args: [J.JSNumber]},
{func: "num__num", ret: J.JSNumber, args: [J.JSNumber]},
{func: "double_", ret: J.JSDouble},
{func: "num__dynamic_dynamic", ret: J.JSNumber, args: [null, null]},
"lowerLimit",
"upperLimit",
"fractionDigits",
{func: "String___int", ret: J.JSString, opt: [J.JSInt]},
"precision",
{func: "bool__num", ret: J.JSBool, args: [J.JSNumber]},
J.JSInt,
J.JSDouble,
J.JSPositiveInt,
J.JSUInt32,
{func: "Iterable__String", ret: [P.Iterable, P.Match], args: [J.JSString]},
"str",
{func: "Match__String__int", ret: P.Match, args: [J.JSString], opt: [J.JSInt]},
{func: "String__Pattern_String", ret: J.JSString, args: [P.Pattern, J.JSString]},
{func: "String__Pattern_String__Match", ret: J.JSString, args: [P.Pattern, {func: "String__Match", ret: J.JSString, args: [P.Match]}]},
"convert",
{func: "String__Pattern__String__Match_String__String", ret: J.JSString, args: [P.Pattern], named: {onMatch: {func: "String__Match", ret: J.JSString, args: [P.Match]}, onNonMatch: {func: "String__String", ret: J.JSString, args: [J.JSString]}}},
{func: "List__Pattern", ret: [J.JSArray, J.JSString], args: [P.Pattern]},
{func: "bool__Pattern__int", ret: J.JSBool, args: [P.Pattern], opt: [J.JSInt]},
{func: "String__int__int", ret: J.JSString, args: [J.JSInt], opt: [J.JSInt]},
{func: "List_", ret: [J.JSArray, J.JSInt]},
{func: "Runes_", ret: P.Runes},
{func: "int__Pattern__int", ret: J.JSInt, args: [P.Pattern], opt: [J.JSInt]},
[H.UnmodifiableListBase, J.JSInt],
H._IsolateContext,
H._EventLoop,
[P.Map, J.JSInt, H._IsolateContext],
H._MainManagerStub,
[P.Map, J.JSInt, null],
P.Function,
{func: "dynamic__Function", args: [P.Function]},
[P.Map, J.JSInt, H.RawReceivePortImpl],
[P.Set, J.JSInt],
{func: "RawReceivePortImpl__int", ret: H.RawReceivePortImpl, args: [J.JSInt]},
"portId",
{func: "void__int_RawReceivePortImpl", void: true, args: [J.JSInt, H.RawReceivePortImpl]},
H.IsolateContext,
[P.Queue, H._IsolateEvent],
"fn",
{func: "_IsolateEvent_", ret: H._IsolateEvent},
[J.JSArray, J.JSString],
P.SendPort,
H.RawReceivePortImpl,
H._BaseSendPort,
{func: "void__Function", void: true, args: [P.Function]},
"newHandler",
"dataEvent",
{func: "SendPort_", ret: P.SendPort},
P.RawReceivePort,
P.StreamController,
{func: "StreamSubscription__void__dynamic__bool_void__Function", ret: P.StreamSubscription, args: [{func: "void__dynamic", void: true, args: [null]}], named: {cancelOnError: J.JSBool, onDone: {func: "void_", void: true}, onError: P.Function}},
"onData",
"onDone",
P.Stream,
P.ReceivePort,
H._MessageTraverserVisitedMap,
H._Serializer,
H._Copier,
{func: "SendPort__List", ret: P.SendPort, args: [J.JSArray]},
H._Deserializer,
J.JSArray,
"info",
{func: "List__List0", ret: J.JSArray, args: [J.JSArray]},
{func: "Map__Map2", ret: P.Map, args: [P.Map]},
H._MessageTraverser,
{func: "dynamic__List", args: [J.JSArray]},
{func: "Map__List0", ret: P.Map, args: [J.JSArray]},
P.Timer,
{func: "void__Timer", void: true, args: [P.Timer]},
[P.Map, J.JSString, null],
{func: "Symbol_", ret: P.Symbol0},
{func: "List_0", ret: J.JSArray},
{func: "Map_2", ret: [P.Map, P.Symbol0, null]},
P.Invocation,
{func: "dynamic__Object_List", args: [P.Object, J.JSArray]},
H.ReflectionInfo,
H.CachedInvocation,
{func: "dynamic__Object_Invocation", args: [P.Object, P.Invocation]},
"parameter",
"jsConstructor",
C.Type_4CA,
H.TypeErrorDecoder,
P.Error,
P.NoSuchMethodError,
P.StackTrace,
H.TearOffClosure,
P.CastError,
H.RuntimeType,
[J.JSArray, H.RuntimeType],
P.Type,
{func: "Match__String", ret: P.Match, args: [J.JSString]},
{func: "Match__String_int", ret: P.Match, args: [J.JSString, J.JSInt]},
P.RegExp,
P.Pattern,
{func: "List__List1", ret: [J.JSArray, J.JSString], args: [[J.JSArray, J.JSInt]]},
"groups",
P.Match,
H.JSSyntaxRegExp,
{func: "Iterator_0", ret: [P.Iterator, P.Match]},
[P.IterableBase, P.Match],
{func: "Match_", ret: P.Match},
[P.Iterator, P.Match],
"g",
"group_",
"groups_",
"action",
[P.IterableBase, 81],
H.EfficientLength,
[P.Iterable, 80],
[H.ListIterable, 80],
[P.Iterable, 8],
8,
[P.Iterator, 8],
[P.Iterable, 44],
{func: "T__S", ret: 45, args: [44]},
[P.IterableBase, 45],
[H.MappedIterable, 48, 49],
47,
[P.Iterator, 46],
{func: "T__S1", ret: 47, args: [46]},
[P.Iterator, 47],
[P.Iterable, 116],
{func: "T__S2", ret: 117, args: [116]},
[H.ListIterable, 117],
[P.Iterable, 237],
[P.IterableBase, 237],
[P.Iterator, 238],
[P.Iterable, 123],
{func: "Iterable__dynamic", ret: P.Iterable, args: [null]},
[P.IterableBase, 124],
[P.Iterator, 125],
[P.Iterator, 126],
126,
[P.Iterable, 234],
[P.IterableBase, 234],
[H.TakeIterable, 236],
[P.Iterator, 235],
[P.Iterable, 232],
[P.IterableBase, 232],
[P.Iterator, 233],
[P.Iterable, 82],
[P.IterableBase, 82],
[H.SkipIterable, 84],
[P.Iterator, 83],
[P.Iterable, 230],
[P.IterableBase, 230],
[P.Iterator, 231],
[P.Iterator, 127],
"at",
[J.JSArray, 97],
[P.ListBase, 95],
[H.UnmodifiableListMixin, 95],
[H.ListIterable, J.JSInt],
[J.JSArray, 239],
{func: "Iterable_1", ret: [P.Iterable, J.JSInt]},
[P.Map, J.JSInt, 239],
[P.Iterable, 108],
[H.ListIterable, 108],
P.Symbol0,
[H.UnmodifiableMapView0, P.Uri, P.LibraryMirror],
P.IsolateMirror,
{func: "JsTypeMirror_", ret: H.JsTypeMirror},
{func: "Map_3", ret: [P.Map, P.Uri, P.LibraryMirror]},
{func: "LibraryMirror__Symbol", ret: P.LibraryMirror, args: [P.Symbol0]},
H.JsTypeMirror,
[P.Map, J.JSString, [J.JSArray, P.LibraryMirror]],
P.MirrorSystem,
{func: "dynamic__JsMirror", args: [H.JsMirror]},
{func: "void__JsMirror_Object", void: true, args: [H.JsMirror, P.Object]},
{func: "void__String_Object", void: true, args: [J.JSString, P.Object]},
P.Mirror,
{func: "LibraryMirror_", ret: P.LibraryMirror},
H.JsMirror,
{func: "dynamic__JsLibraryMirror", args: [H.JsLibraryMirror]},
{func: "List_1", ret: [J.JSArray, H.JsMethodMirror]},
{func: "dynamic__List_Map", args: [J.JSArray, [P.Map, P.Symbol0, null]]},
{func: "SourceLocation_", ret: P.SourceLocation},
P.DeclarationMirror,
H.TypeVariable,
P.TypeMirror,
{func: "TypeMirror_", ret: P.TypeMirror},
P.TypeVariableMirror,
{func: "DeclarationMirror_", ret: P.DeclarationMirror},
{func: "List_2", ret: [J.JSArray, P.InstanceMirror]},
{func: "List_3", ret: [J.JSArray, P.TypeVariableMirror]},
{func: "List_4", ret: [J.JSArray, P.TypeMirror]},
H.JsDeclarationMirror,
P.Uri,
[J.JSArray, H.JsMethodMirror],
[J.JSArray, P.VariableMirror],
[H.UnmodifiableMapView0, P.Symbol0, P.ClassMirror],
[H.UnmodifiableMapView0, P.Symbol0, P.MethodMirror],
[H.UnmodifiableMapView0, P.Symbol0, P.VariableMirror],
[H.UnmodifiableMapView0, P.Symbol0, P.Mirror],
[H.UnmodifiableMapView0, P.Symbol0, P.DeclarationMirror],
[P.UnmodifiableListView, P.InstanceMirror],
{func: "Map_4", ret: [P.Map, P.Symbol0, P.ClassMirror]},
{func: "InstanceMirror__Symbol_Object", ret: P.InstanceMirror, args: [P.Symbol0, P.Object]},
"fieldName",
{func: "InstanceMirror__Symbol", ret: P.InstanceMirror, args: [P.Symbol0]},
{func: "InstanceMirror__Symbol_List__Map", ret: P.InstanceMirror, args: [P.Symbol0, J.JSArray], opt: [[P.Map, P.Symbol0, null]]},
{func: "List_5", ret: [J.JSArray, P.VariableMirror]},
{func: "Map_5", ret: [P.Map, P.Symbol0, P.MethodMirror]},
{func: "Map_6", ret: [P.Map, P.Symbol0, P.VariableMirror]},
{func: "Map_7", ret: [P.Map, P.Symbol0, P.Mirror]},
{func: "Map_8", ret: [P.Map, P.Symbol0, P.DeclarationMirror]},
{func: "Function__Symbol", ret: P.Function, args: [P.Symbol0]},
H.JsDeclarationMirror_JsObjectMirror,
P.LibraryMirror,
[P.Map, P.Symbol0, P.Mirror],
{func: "dynamic__Symbol_Mirror", args: [P.Symbol0, P.Mirror]},
H.JsMethodMirror,
P.ClassMirror,
{func: "List_6", ret: [J.JSArray, P.ClassMirror]},
"constructorName",
{func: "ClassMirror_", ret: P.ClassMirror},
H.JsTypeMirror_JsObjectMirror,
P.ObjectMirror,
{func: "InstanceMirror__Symbol_int_String_List", ret: P.InstanceMirror, args: [P.Symbol0, J.JSInt, J.JSString, J.JSArray]},
"reflectiveName",
H.JsObjectMirror,
P.InstanceMirror,
{func: "dynamic__Symbol_dynamic", args: [P.Symbol0, null]},
H.JsClassMirror,
[P.UnmodifiableListView, P.TypeMirror],
[P.Map, P.Symbol0, P.VariableMirror],
[P.Map, P.Symbol0, P.MethodMirror],
[J.JSArray, P.ClassMirror],
{func: "JsLibraryMirror_", ret: H.JsLibraryMirror},
"typeArgument",
[P.Map, P.Symbol0, P.DeclarationMirror],
"tv",
[P.UnmodifiableListView, P.ClassMirror],
[P.UnmodifiableListView, P.TypeVariableMirror],
H.JsLibraryMirror,
{func: "List__DeclarationMirror", ret: [J.JSArray, H.JsMethodMirror], args: [P.DeclarationMirror]},
"methodOwner",
{func: "List__DeclarationMirror0", ret: [J.JSArray, P.VariableMirror], args: [P.DeclarationMirror]},
"fieldOwner",
{func: "dynamic__Symbol_List__Map", args: [P.Symbol0, J.JSArray], opt: [[P.Map, P.Symbol0, null]]},
{func: "List__DeclarationMirror1", ret: [J.JSArray, P.ClassMirror], args: [P.DeclarationMirror]},
H.JsTypeMirror_JsObjectMirror0,
[P.Map, P.Symbol0, null],
{func: "ClassMirror__int", ret: P.ClassMirror, args: [J.JSInt]},
P.VariableMirror,
{func: "MethodMirror_", ret: P.MethodMirror},
{func: "InstanceMirror__List__Map", ret: P.InstanceMirror, args: [J.JSArray], opt: [[P.Map, P.Symbol0, null]]},
H.JsInstanceMirror,
P.ClosureMirror,
[P.UnmodifiableListView, P.ParameterMirror],
{func: "List_7", ret: [J.JSArray, P.ParameterMirror]},
{func: "dynamic__JsMirror_Object", args: [H.JsMirror, P.Object]},
P.MethodMirror,
P.ParameterMirror,
H.JsFunctionTypeMirror,
{func: "JsFunctionTypeMirror_", ret: H.JsFunctionTypeMirror},
P.TypedefMirror,
H.BrokenClassMirror,
P.FunctionTypeMirror,
[P.Map, 120, 121],
{func: "dynamic__String_String", args: [J.JSString, J.JSString]},
P._AsyncError,
[P._StreamControllerLifecycle, 73],
[P._ControllerStream, 115],
P._BroadcastSubscriptionLink,
[P._StreamControllerLifecycle, 75],
{func: "void__T", void: true, args: [76]},
P.Zone,
P.Future,
P._PendingEvents,
{func: "_BroadcastStreamController_", ret: P._BroadcastStreamController},
"eventId",
[P._ControllerSubscription, 114],
[P._AddStreamState, 112],
P._Future,
{func: "_Future_", ret: P._Future},
{func: "Error_", ret: P.Error},
{func: "void__Object__StackTrace", void: true, args: [P.Object], opt: [P.StackTrace]},
{func: "Future_", ret: P.Future},
{func: "void__Object_StackTrace", void: true, args: [P.Object, P.StackTrace]},
[P._EventDispatch, 112],
[P._EventSink, 112],
[P._StreamControllerLifecycle, 112],
[P.StreamController, 112],
[P._BroadcastStreamController, 111],
111,
[P._BroadcastStreamController, 113],
P._StreamImplEvents,
{func: "void___DelayedEvent", void: true, args: [P._DelayedEvent]},
[P._SyncBroadcastStreamController, 142],
[P._EventDispatch, 142],
{func: "void___Future", void: true, opt: [P.Future]},
"resumeSignal",
{func: "Future___Object", ret: P.Future, opt: [P.Object]},
[P.StreamSubscription, 229],
{func: "Future_0", ret: [P.Future, J.JSBool]},
{func: "T_", ret: 57},
"ignored",
P.Completer,
"theError",
"theStackTrace",
{func: "Future__dynamic", ret: P.Future, args: [null]},
P.Iterator,
P.Duration,
P.Exception,
[P._Future, 227],
[P.Completer, 227],
{func: "void___dynamic", void: true, opt: [null]},
[P._Completer, 228],
[P._Completer, 226],
{func: "_FutureOnValue_", ret: {func: "args1", args: [null]}},
{func: "_FutureErrorTest_", ret: {func: "bool__dynamic", ret: J.JSBool, args: [null]}},
{func: "Function_", ret: P.Function},
{func: "_FutureAction_", ret: {func: "args0"}},
{func: "Future__Function__bool__dynamic", ret: P.Future, args: [P.Function], named: {test: {func: "bool__dynamic", ret: J.JSBool, args: [null]}}},
{func: "_AsyncError_", ret: P._AsyncError},
{func: "void___Future0", void: true, args: [P._Future]},
"listener",
{func: "void__dynamic_StackTrace", void: true, args: [null, P.StackTrace]},
{func: "Future__Duration__void_", ret: P.Future, args: [P.Duration], named: {onTimeout: {func: "void_", void: true}}},
"timeLimit",
"onTimeout",
[P.Future, 56],
{func: "dynamic__dynamic__dynamic0", args: [null], opt: [null]},
"streamConsumer",
"streamTransformer",
{func: "Future___String", ret: [P.Future, J.JSString], opt: [J.JSString]},
{func: "Future__Object", ret: [P.Future, J.JSBool], args: [P.Object]},
{func: "Future_1", ret: [P.Future, J.JSInt]},
{func: "Future___dynamic0", ret: P.Future, opt: [null]},
"futureValue",
{func: "Stream__Duration__void__EventSink", ret: P.Stream, args: [P.Duration], named: {onTimeout: {func: "void__EventSink2", void: true, args: [P.EventSink]}}},
[P.StreamController, 55],
55,
[P.Iterable, 55],
P.Stopwatch,
{func: "dynamic__Timer", args: [P.Timer]},
"timer",
[P.StreamConsumer, 55],
{func: "T__T_T", ret: 55, args: [55, 55]},
[P._Future, 55],
{func: "dynamic__dynamic_T", args: [null, 55]},
"st",
[P._Future, J.JSString],
P.StringBuffer,
[P._Future, J.JSBool],
"isMatch",
{func: "void__T6", void: true, args: [55]},
{func: "bool__T2", ret: J.JSBool, args: [55]},
[P._Future, J.JSInt],
[J.JSArray, 55],
[P._Future, [J.JSArray, 55]],
[P.Set, 55],
[P._Future, [P.Set, 55]],
{func: "Object_", ret: P.Object},
P._ControllerEventSinkWrapper,
[P.Stream, 144],
[P.EventSink, 59],
[P.StreamConsumer, 59],
P.EventSink,
[P.EventSink, 146],
[P.StreamSink, 58],
{func: "_PendingEvents_", ret: P._PendingEvents},
{func: "_StreamImplEvents_", ret: P._StreamImplEvents},
{func: "_ControllerSubscription_", ret: P._ControllerSubscription},
[P._EventDispatch, 62],
[P._EventSink, 62],
[P._StreamControllerLifecycle, 62],
[P.StreamController, 62],
[P._StreamController, 63],
[P._StreamController, 67],
[P._StreamController__AsyncStreamControllerDispatch, 70],
[P._StreamController__SyncStreamControllerDispatch, 68],
{func: "_NotificationHandler_", ret: {func: "args0"}},
P._StreamController__AsyncStreamControllerDispatch0,
P._NoCallbacks,
P._StreamController__SyncStreamControllerDispatch0,
[P._StreamImpl, 73],
[P._BufferingStreamSubscription, 75],
[P.StreamSink, 122],
P.StreamSubscription,
P._EventSink,
[P._AddStreamState, 148],
{func: "void___PendingEvents", void: true, args: [P._PendingEvents]},
"pendingEvents",
{func: "void__bool", void: true, args: [J.JSBool]},
"wasInputPaused",
[P._EventDispatch, 76],
[P._EventSink, 76],
[P.StreamSubscription, 76],
[P._Future, 76],
{func: "void__StreamSubscription", void: true, args: [P.StreamSubscription]},
[P.Stream, 74],
{func: "StreamSubscription__bool2", ret: P.StreamSubscription, args: [J.JSBool]},
[P._StreamImpl, 149],
[P.Iterator, 150],
{func: "void___EventDispatch", void: true, args: [P._EventDispatch]},
"dispatch",
P._DelayedEvent,
72,
{func: "_DelayedEvent_", ret: P._DelayedEvent},
P._EventDispatch,
P._BroadcastLinkedList,
{func: "void___BroadcastLinkedList", void: true, args: [P._BroadcastLinkedList]},
"newNext",
[P.StreamSubscription, 225],
[P.Stream, 151],
[P._AsBroadcastStreamController, 151],
[P.StreamSubscription, 151],
{func: "void__Future", void: true, args: [P.Future]},
P._AsBroadcastStream,
{func: "void__void__Object", void: true, args: [{func: "void__Object", void: true, args: [P.Object]}]},
[P.StreamSubscription, 152],
153,
[P.StreamIterator, 153],
[P.Stream, 86],
[P.Stream, 87],
[P._ForwardingStream, 88, 89],
[P.StreamSubscription, 88],
[P._BufferingStreamSubscription, 89],
{func: "bool__T", ret: J.JSBool, args: [154]},
"inputEvent",
[P._ForwardingStream, 154, 154],
[P._ForwardingStream, 118, 119],
{func: "Iterable__S", ret: [P.Iterable, 129], args: [128]},
[P._ForwardingStream, 128, 129],
[P._ForwardingStream, 155, 155],
[P._ForwardingStream, 156, 156],
{func: "bool__T0", ret: J.JSBool, args: [157]},
[P._ForwardingStream, 157, 157],
[P._ForwardingStream, 85, 85],
{func: "bool__T1", ret: J.JSBool, args: [158]},
[P._ForwardingStream, 158, 158],
{func: "bool__T_T", ret: J.JSBool, args: [159, 159]},
[P._ForwardingStream, 159, 159],
[P.EventSink, 160],
[P.StreamSubscription, 161],
{func: "void__dynamic__dynamic", void: true, args: [null], opt: [null]},
[P._BufferingStreamSubscription, 162],
{func: "EventSink__EventSink1", ret: [P.EventSink, 163], args: [[P.EventSink, 164]]},
[P.StreamTransformer, 163, 164],
{func: "EventSink__EventSink2", ret: [P.EventSink, 165], args: [[P.EventSink, 166]]},
[P.Stream, 165],
[P.Stream, 166],
{func: "void__S_EventSink0", void: true, args: [167, [P.EventSink, 168]]},
{func: "void__Object_StackTrace_EventSink0", void: true, args: [P.Object, P.StackTrace, [P.EventSink, 168]]},
{func: "void__EventSink0", void: true, args: [[P.EventSink, 168]]},
[P.EventSink, 168],
[P.EventSink, 167],
[P._StreamSinkTransformer, 169, 170],
169,
170,
"outputSink",
{func: "StreamSubscription__Stream_bool0", ret: [P.StreamSubscription, 172], args: [[P.Stream, 171], J.JSBool]},
[P.StreamTransformer, 171, 172],
{func: "StreamSubscription__Stream_bool1", ret: [P.StreamSubscription, 174], args: [[P.Stream, 173], J.JSBool]},
[P.Stream, 173],
[P.Stream, 174],
P.ZoneSpecification,
P._BaseZone,
{func: "dynamic__Zone_dynamic_StackTrace", args: [P.Zone, null, P.StackTrace]},
{func: "dynamic__Zone_args0", args: [P.Zone, {func: "args0"}]},
{func: "dynamic__Zone_args1_dynamic", args: [P.Zone, {func: "args1", args: [null]}, null]},
{func: "dynamic__Zone_args2_dynamic_dynamic", args: [P.Zone, {func: "args2", args: [null, null]}, null, null]},
{func: "ZoneCallback__Zone_args0", ret: {func: "args0"}, args: [P.Zone, {func: "args0"}]},
{func: "ZoneUnaryCallback__Zone_args1", ret: {func: "args1", args: [null]}, args: [P.Zone, {func: "args1", args: [null]}]},
{func: "ZoneBinaryCallback__Zone_args2", ret: {func: "args2", args: [null, null]}, args: [P.Zone, {func: "args2", args: [null, null]}]},
{func: "void__Zone_args0", void: true, args: [P.Zone, {func: "args0"}]},
{func: "Timer__Zone_Duration_void_", ret: P.Timer, args: [P.Zone, P.Duration, {func: "void_", void: true}]},
{func: "Timer__Zone_Duration_void__Timer", ret: P.Timer, args: [P.Zone, P.Duration, {func: "void__Timer", void: true, args: [P.Timer]}]},
{func: "void__Zone_String", void: true, args: [P.Zone, J.JSString]},
{func: "Zone__Zone_ZoneSpecification_Map", ret: P.Zone, args: [P.Zone, P.ZoneSpecification, [P.Map, P.Symbol0, null]]},
P.ZoneDelegate,
{func: "bool__Zone", ret: J.JSBool, args: [P.Zone]},
"otherZone",
{func: "dynamic__args1_dynamic", args: [{func: "args1", args: [null]}, null]},
{func: "dynamic__args2_dynamic_dynamic", args: [{func: "args2", args: [null, null]}, null, null]},
{func: "ZoneCallback__args0__bool", ret: {func: "args0"}, args: [{func: "args0"}], named: {runGuarded: J.JSBool}},
"runGuarded",
{func: "ZoneUnaryCallback__args1__bool", ret: {func: "args1", args: [null]}, args: [{func: "args1", args: [null]}], named: {runGuarded: J.JSBool}},
{func: "ZoneBinaryCallback__args2__bool", ret: {func: "args2", args: [null, null]}, args: [{func: "args2", args: [null, null]}], named: {runGuarded: J.JSBool}},
{func: "dynamic__Symbol", args: [P.Symbol0]},
{func: "Zone___ZoneSpecification_Map", ret: P.Zone, named: {specification: P.ZoneSpecification, zoneValues: P.Map}},
{func: "ZoneCallback__args0", ret: {func: "args0"}, args: [{func: "args0"}]},
{func: "ZoneUnaryCallback__args1", ret: {func: "args1", args: [null]}, args: [{func: "args1", args: [null]}]},
{func: "ZoneBinaryCallback__args2", ret: {func: "args2", args: [null, null]}, args: [{func: "args2", args: [null, null]}]},
{func: "HandleUncaughtErrorHandler_", ret: {func: "dynamic__Zone_ZoneDelegate_Zone_dynamic_StackTrace", args: [P.Zone, P.ZoneDelegate, P.Zone, null, P.StackTrace]}},
{func: "RunHandler_", ret: {func: "dynamic__Zone_ZoneDelegate_Zone_args0", args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args0"}]}},
{func: "RunUnaryHandler_", ret: {func: "dynamic__Zone_ZoneDelegate_Zone_args1_dynamic", args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args1", args: [null]}, null]}},
{func: "RunBinaryHandler_", ret: {func: "dynamic__Zone_ZoneDelegate_Zone_args2_dynamic_dynamic", args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args2", args: [null, null]}, null, null]}},
{func: "RegisterCallbackHandler_", ret: {func: "ZoneCallback__Zone_ZoneDelegate_Zone_args0", ret: {func: "args0"}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args0"}]}},
{func: "RegisterUnaryCallbackHandler_", ret: {func: "ZoneUnaryCallback__Zone_ZoneDelegate_Zone_args1", ret: {func: "args1", args: [null]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args1", args: [null]}]}},
{func: "RegisterBinaryCallbackHandler_", ret: {func: "ZoneBinaryCallback__Zone_ZoneDelegate_Zone_args2", ret: {func: "args2", args: [null, null]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args2", args: [null, null]}]}},
{func: "ScheduleMicrotaskHandler_", ret: {func: "void__Zone_ZoneDelegate_Zone_args0", void: true, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args0"}]}},
{func: "CreateTimerHandler_", ret: {func: "Timer__Zone_ZoneDelegate_Zone_Duration_void_", ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: "void_", void: true}]}},
{func: "CreatePeriodicTimerHandler_", ret: {func: "Timer__Zone_ZoneDelegate_Zone_Duration_void__Timer", ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: "void__Timer", void: true, args: [P.Timer]}]}},
{func: "PrintHandler_", ret: {func: "void__Zone_ZoneDelegate_Zone_String", void: true, args: [P.Zone, P.ZoneDelegate, P.Zone, J.JSString]}},
{func: "ForkHandler_", ret: {func: "Zone__Zone_ZoneDelegate_Zone_ZoneSpecification_Map0", ret: P.Zone, args: [P.Zone, P.ZoneDelegate, P.Zone, P.ZoneSpecification, [P.Map, P.Symbol0, null]]}},
{func: "dynamic__Zone_ZoneDelegate_Zone_dynamic_StackTrace", args: [P.Zone, P.ZoneDelegate, P.Zone, null, P.StackTrace]},
"bucket",
[P.HashMap, 38, 39],
"each",
[P._HashMap, 40, 41],
{func: "bool__K_K", ret: J.JSBool, args: [42, 42]},
{func: "int__K", ret: J.JSInt, args: [42]},
[P._HashMap, 42, 43],
42,
[P.IterableBase, 52],
53,
[P.Iterator, 53],
P.LinkedHashMapCell,
{func: "void__LinkedHashMapCell", void: true, args: [P.LinkedHashMapCell]},
"cell",
[P.LinkedHashMap, 32, 33],
[P._LinkedHashMap, 34, 35],
{func: "bool__K_K0", ret: J.JSBool, args: [36, 36]},
{func: "int__K0", ret: J.JSInt, args: [36]},
[P._LinkedHashMap, 36, 37],
36,
[P.IterableBase, 50],
51,
[P.Iterator, 51],
"objects",
{func: "void__Iterable2", void: true, args: [[P.Iterable, P.Object]]},
"objectsToRemove",
"elements",
{func: "bool__dynamic_Object", ret: J.JSBool, args: [null, P.Object]},
[P._HashSetBase, 18],
[P.HashSet, 18],
{func: "bool__E2", ret: J.JSBool, args: [18]},
[P._HashSet, 17],
{func: "bool__E_E", ret: J.JSBool, args: [240, 240]},
{func: "int__E", ret: J.JSInt, args: [240]},
{func: "bool__Iterable", ret: J.JSBool, args: [[P.Iterable, P.Object]]},
[P._HashSet, 240],
240,
20,
[P.Iterator, 20],
P.LinkedHashSetCell,
{func: "void__Iterable4", void: true, args: [P.Iterable]},
"removeMatching",
{func: "void__LinkedHashSetCell", void: true, args: [P.LinkedHashSetCell]},
[P._HashSetBase, 22],
[P.LinkedHashSet, 22],
[P._LinkedHashSet, 23],
{func: "bool__E_E0", ret: J.JSBool, args: [24, 24]},
{func: "int__E0", ret: J.JSInt, args: [24]},
[P._LinkedHashSet, 24],
24,
25,
[P.Iterator, 25],
[P.Iterable, 94],
[H.UnmodifiableListBase, 94],
[P.Map, 30, 31],
{func: "void__Iterable_bool__Object", void: true, args: [P.Iterable, {func: "bool__Object", ret: J.JSBool, args: [P.Object]}]},
"objectsToRetain",
[P.IterableBase, 19],
[P.Set, 19],
[P.Set, 16],
[P.Iterable, 214],
[P.Iterable, 15],
[P.HashMap, 28, 29],
[P.HashSet, 21],
P._LinkedListLink,
"entries",
"newEntry",
[P.IterableBase, 215],
[P.LinkedList, 217],
217,
[P.Iterator, 217],
[P.LinkedList, 222],
[P.ListMixin, 96],
"newContents",
[J.JSArray, 98],
P.Map,
"k",
[P.Iterable, 78],
[P.DoubleLinkedQueueEntry, 194],
194,
"p",
[P.DoubleLinkedQueueEntry, 195],
[P._DoubleLinkedQueueEntrySentinel, 196],
[P.IterableBase, 196],
[P.Queue, 196],
[P._DoubleLinkedQueueEntrySentinel, 197],
[P.DoubleLinkedQueueEntry, 197],
197,
[P.Iterator, 197],
[J.JSArray, 79],
"expectedModificationCount",
"offset",
"newElementCount",
[P.IterableBase, 79],
[P.Queue, 79],
P.ListQueue,
90,
[P.Iterator, 90],
198,
[P._SplayTreeNode, 198],
200,
[P._SplayTreeNode, 199],
[P._SplayTreeNode, 203],
"node",
"comp",
{func: "_SplayTreeNode_", ret: P._SplayTreeNode},
{func: "int__K_K", ret: J.JSInt, args: [201, 201]},
"key1",
"key2",
[P._SplayTree, 201],
[P.Map, 201, 202],
201,
{func: "bool___SplayTreeMapNode", ret: J.JSBool, args: [P._SplayTreeMapNode]},
P._SplayTree,
[J.JSArray, P._SplayTreeNode],
P._SplayTreeNode,
{func: "void___SplayTreeNode", void: true, args: [P._SplayTreeNode]},
"currentNode",
[P.Iterator, 204],
[P._SplayTree, 205],
[P.IterableBase, 205],
[P.SplayTreeMap, 206, 207],
[P.IterableBase, 207],
[P._SplayTreeIterator, 208],
[P._SplayTreeIterator, 210],
[P._SplayTreeIterator, [P._SplayTreeNode, 211]],
"e1",
"e2",
[P._SplayTree_IterableMixin, 212],
[P.Set, 212],
212,
{func: "String__List__bool", ret: J.JSString, args: [[J.JSArray, J.JSInt]], named: {allowInvalid: J.JSBool}},
"bytes",
{func: "Converter_", ret: [P.Converter, J.JSString, [J.JSArray, J.JSInt]]},
{func: "Converter_0", ret: [P.Converter, [J.JSArray, J.JSInt], J.JSString]},
P.Encoding,
{func: "StringConversionSink__ChunkedConversionSink0", ret: P.StringConversionSink, args: [[P.ChunkedConversionSink, [J.JSArray, J.JSInt]]]},
{func: "Stream__Stream2", ret: [P.Stream, [J.JSArray, J.JSInt]], args: [[P.Stream, J.JSString]]},
[P.Converter, J.JSString, [J.JSArray, J.JSInt]],
P._UnicodeSubsetEncoder,
P.ByteConversionSink,
{func: "void__String_int_int_bool", void: true, args: [J.JSString, J.JSInt, J.JSInt, J.JSBool]},
P.StringConversionSinkBase,
{func: "ByteConversionSink__ChunkedConversionSink0", ret: P.ByteConversionSink, args: [[P.ChunkedConversionSink, J.JSString]]},
{func: "Stream__Stream3", ret: [P.Stream, J.JSString], args: [[P.Stream, [J.JSArray, J.JSInt]]]},
[P.Converter, [J.JSArray, J.JSInt], J.JSString],
P._UnicodeSubsetDecoder,
{func: "void__List", void: true, args: [[J.JSArray, J.JSInt]]},
{func: "void__List_int_int_bool", void: true, args: [[J.JSArray, J.JSInt], J.JSInt, J.JSInt, J.JSBool]},
P.ByteConversionSinkBase,
[P.ChunkedConversionSink, [J.JSArray, J.JSInt]],
[J.JSArray, J.JSInt],
{func: "void__Iterable10", void: true, args: [[P.Iterable, J.JSInt]]},
{func: "void__List1", void: true, args: [[J.JSArray, 176]]},
[J.JSArray, 176],
[P.ChunkedConversionSink, 176],
[P.EventSink, 177],
[P.ChunkedConversionSink, 177],
[P.EventSink, 179],
P.ChunkedConversionSink,
[P.EventSink, 178],
"encoded",
[P.Codec, 180, 181],
[P.Codec, 181, 182],
[P.Codec, 180, 182],
[P.Codec, 184, 183],
[P.Codec, 183, 184],
{func: "ChunkedConversionSink__ChunkedConversionSink", ret: P.ChunkedConversionSink, args: [P.ChunkedConversionSink]},
{func: "Stream__Stream4", ret: P.Stream, args: [P.Stream]},
P.StreamTransformer,
P.Converter,
[P.Converter, 185, 187],
{func: "Future__Stream", ret: [P.Future, J.JSString], args: [[P.Stream, [J.JSArray, J.JSInt]]]},
"byteStream",
[P.Map, J.JSString, P.Encoding],
[P.Codec, J.JSString, [J.JSArray, J.JSInt]],
"buffer",
P.HtmlEscapeMode,
{func: "String__String_int_int", ret: J.JSString, args: [J.JSString, J.JSInt, J.JSInt]},
[P.Converter, J.JSString, J.JSString],
P.HtmlEscape,
P.StringConversionSink,
P.JsonUnsupportedObjectError,
{func: "dynamic__String__args2", args: [J.JSString], named: {reviver: {func: "args2", args: [null, null]}}},
{func: "String__Object__args1", ret: J.JSString, args: [P.Object], named: {toEncodable: {func: "args1", args: [null]}}},
{func: "JsonEncoder_", ret: P.JsonEncoder},
{func: "JsonDecoder_", ret: P.JsonDecoder},
[P.Codec, P.Object, J.JSString],
P.JsonCodec,
{func: "ChunkedConversionSink__ChunkedConversionSink0", ret: [P.ChunkedConversionSink, P.Object], args: [[P.ChunkedConversionSink, J.JSString]]},
{func: "Stream__Stream5", ret: [P.Stream, J.JSString], args: [[P.Stream, P.Object]]},
[P.Converter, P.Object, J.JSString],
[P.ChunkedConversionSink, P.Object],
{func: "StringConversionSink__ChunkedConversionSink1", ret: P.StringConversionSink, args: [[P.ChunkedConversionSink, P.Object]]},
{func: "Stream__Stream6", ret: [P.Stream, P.Object], args: [[P.Stream, J.JSString]]},
[P.Converter, J.JSString, P.Object],
P.StringSink,
P._StringSinkConversionSink,
[P.Set, P.Object],
{func: "dynamic__String_Object", args: [J.JSString, P.Object]},
{func: "List__String0", ret: [J.JSArray, J.JSString], args: [J.JSString]},
[P.Converter, J.JSString, [J.JSArray, J.JSString]],
[P.ChunkedConversionSink, J.JSString],
{func: "void___Object", void: true, opt: [P.Object]},
{func: "void__Iterable__String", void: true, args: [P.Iterable], opt: [J.JSString]},
P.ClosableStringSink,
P.StringConversionSinkMixin,
{func: "ByteConversionSink__bool", ret: P.ByteConversionSink, args: [J.JSBool]},
{func: "ClosableStringSink_", ret: P.ClosableStringSink},
P._Utf8Decoder,
"codeUnits",
{func: "String__List__bool0", ret: J.JSString, args: [[J.JSArray, J.JSInt]], named: {allowMalformed: J.JSBool}},
{func: "bool__int_int", ret: J.JSBool, args: [J.JSInt, J.JSInt]},
"leadingSurrogate",
"nextCodeUnit",
{func: "int__String_int_int", ret: J.JSInt, args: [J.JSString, J.JSInt, J.JSInt]},
P._Utf8Encoder_StringConversionSinkMixin,
{func: "void__List_int_int0", void: true, args: [[J.JSArray, J.JSInt], J.JSInt, J.JSInt]},
{func: "bool__DateTime", ret: J.JSBool, args: [P.DateTime]},
{func: "int__DateTime", ret: J.JSInt, args: [P.DateTime]},
{func: "DateTime__Duration", ret: P.DateTime, args: [P.Duration]},
{func: "Duration__DateTime", ret: P.Duration, args: [P.DateTime]},
{func: "Duration_", ret: P.Duration},
P.Comparable,
"matched",
{func: "double__String", ret: J.JSDouble, args: [J.JSString]},
{func: "Duration__Duration", ret: P.Duration, args: [P.Duration]},
{func: "Duration__num", ret: P.Duration, args: [J.JSNumber]},
"factor",
{func: "Duration__int", ret: P.Duration, args: [J.JSInt]},
"quotient",
{func: "bool__Duration", ret: J.JSBool, args: [P.Duration]},
{func: "int__Duration", ret: J.JSInt, args: [P.Duration]},
[P.Comparable, P.Duration],
{func: "StackTrace_", ret: P.StackTrace},
P.AssertionError,
P.ArgumentError,
P.UnsupportedError,
{func: "E__int0", ret: 219, args: [J.JSInt]},
[P.IterableBase, 219],
{func: "E__int1", ret: 220, args: [J.JSInt]},
220,
[P.Iterator, 220],
[P.Iterator, 221],
[P.Iterable, 2],
[P.Comparable, J.JSNumber],
[P.IterableBase, 14],
[P.Comparable, J.JSString],
{func: "RuneIterator_", ret: P.RuneIterator},
[P.IterableBase, J.JSInt],
"rawIndex",
{func: "void___int", void: true, opt: [J.JSInt]},
[P.BidirectionalIterator, J.JSInt],
[P.Map, J.JSString, J.JSString],
{func: "List_8", ret: [J.JSArray, J.JSString]},
{func: "Map_10", ret: [P.Map, J.JSString, J.JSString]},
{func: "String__String_Iterable", ret: J.JSString, args: [J.JSString, [P.Iterable, J.JSString]]},
"base",
"reference",
{func: "Uri__Uri", ret: P.Uri, args: [P.Uri]},
{func: "String___bool", ret: J.JSString, named: {windows: J.JSBool}},
{func: "void__StringSink", void: true, args: [P.StringSink]},
"ss",
"segment",
"ch",
"digit",
"part",
"byteString",
"byte",
[P.Map, 130, 131],
"max",
P.Random,
189,
{func: "bool__Rectangle", ret: J.JSBool, args: [[P.Rectangle, J.JSNumber]]},
"another",
{func: "bool__Point", ret: J.JSBool, args: [[P.Point, J.JSNumber]]},
191,
[P._RectangleBase, 191],
192,
[P._RectangleBase, 192],
[P.Rectangle, 192],
[J.JSArray, O._InternalConvertor],
O.SerializerMixin,
O.ConflictManager,
[J.JSArray, O.Entity],
[P.Map, P.Symbol0, P.Object],
[J.JSArray, T.ChangeRecord],
{func: "bool__Entity__bool", ret: J.JSBool, args: [O.Entity], named: {forDelete: J.JSBool}},
"forDelete",
{func: "void__Entity", void: true, args: [O.Entity]},
{func: "void__Iterable__bool", void: true, args: [[P.Iterable, O.Entity]], named: {asDeleted: J.JSBool}},
"entities",
"asDeleted",
{func: "void__Iterable11", void: true, args: [[P.Iterable, O.Entity]]},
{func: "DormManagerCommitStructure_", ret: O.DormManagerCommitStructure},
{func: "void__Entity_List", void: true, args: [O.Entity, [J.JSArray, O.Entity]]},
F.Observable,
{func: "dynamic__Entity", args: [O.Entity]},
{func: "dynamic___DormProxyListEntry", args: [O._DormProxyListEntry]},
"listEntity",
O.DormManager,
99,
[P.Future, 99],
Q.ObservableList,
{func: "MetadataValidationResult__Entity", ret: O.MetadataValidationResult, args: [O.Entity]},
[J.JSArray, O.EntityScan],
[J.JSArray, J.JSArray],
[J.JSArray, O.DormProxy],
O.EntityKey,
{func: "EntityScan__Type_String_Function", ret: O.EntityScan, args: [P.Type, J.JSString, P.Function]},
"constructorMethod",
{func: "void__Entity_List0", void: true, args: [O.Entity, [J.JSArray, O.DormProxy]]},
"proxies",
{func: "EntityScan__Entity", ret: O.EntityScan, args: [O.Entity]},
{func: "Entity__Map_DormProxy_Serializer_OnConflictFunction", ret: O.Entity, args: [[P.Map, J.JSString, null], O.DormProxy, O.Serializer, {func: "ConflictManager__Entity_Entity", ret: O.ConflictManager, args: [O.Entity, O.Entity]}]},
"rawData",
"owningProxy",
"serializer",
"onConflict",
{func: "void__Entity_Entity_OnConflictFunction", void: true, args: [O.Entity, O.Entity, {func: "ConflictManager__Entity_Entity", ret: O.ConflictManager, args: [O.Entity, O.Entity]}]},
"spawnee",
"existingEntity",
"actualEntity",
{func: "EntityScan__String", ret: O.EntityScan, args: [J.JSString]},
O.EntityAssembler,
{func: "dynamic__dynamic_Mirror", args: [null, P.Mirror]},
"mirror",
"entryA",
"entryB",
{func: "dynamic__EntityScan", args: [O.EntityScan]},
"scan",
[J.JSArray, O.EntityPostProcessor],
{func: "void__EntityPostProcessor", void: true, args: [O.EntityPostProcessor]},
"postProcessor",
"proxy",
O.EntityFactory,
O.EntityPostProcessor,
{func: "dynamic__EntityPostProcessor", args: [O.EntityPostProcessor]},
"tmpPostProcessor",
O.Serializer,
O.DormProxy,
[Q.ObservableList, 11],
{func: "dynamic__Map1", args: [[P.Map, J.JSString, null]]},
"rawDataEntry",
[P.Map, P.Symbol0, [P.Map, null, O.EntityKey]],
{func: "void__Symbol_dynamic", void: true, args: [P.Symbol0, null]},
{func: "EntityKey__List", ret: O.EntityKey, args: [J.JSArray]},
"otherKey",
{func: "Entity__Entity__bool", ret: O.Entity, args: [O.Entity], named: {allowPointers: J.JSBool}},
"allowPointers",
{func: "bool__Entity_Entity", ret: J.JSBool, args: [O.Entity, O.Entity]},
"compareEntity",
{func: "bool__Entity", ret: J.JSBool, args: [O.Entity]},
{func: "Iterable__Entity", ret: [P.Iterable, O.EntityScan], args: [O.Entity]},
{func: "List__Entity", ret: [J.JSArray, O.EntityScan], args: [O.Entity]},
{func: "EntityKey__Symbol_dynamic", ret: O.EntityKey, args: [P.Symbol0, null]},
O.EntityScan,
O.MetadataCache,
[J.JSArray, O._DormProxyListEntry],
{func: "void__ClassMirror", void: true, args: [P.ClassMirror]},
"classMirror",
{func: "void__VariableMirror", void: true, args: [P.VariableMirror]},
{func: "dynamic__InstanceMirror", args: [P.InstanceMirror]},
"classMetaData",
{func: "dynamic__ChangeRecord", args: [T.ChangeRecord]},
"change",
O._PropertyMetadataCache,
C.C__Override,
[J.JSArray, O._InternalLazyLoaderHandler],
{func: "void__Symbol_LazyLoaderMethod", void: true, args: [P.Symbol0, {func: "Future__Entity_Symbol", ret: P.Future, args: [O.Entity, P.Symbol0]}]},
{func: "void__Symbol", void: true, args: [P.Symbol0]},
{func: "Future__Entity_Symbol", ret: P.Future, args: [O.Entity, P.Symbol0]},
{func: "dynamic___InternalLazyLoaderHandler", args: [O._InternalLazyLoaderHandler]},
"tmpHandler",
{func: "void___DormProxyListEntry_Object", void: true, args: [O._DormProxyListEntry, P.Object]},
{func: "void___DormProxyListEntry_EntityScan", void: true, args: [O._DormProxyListEntry, O.EntityScan]},
{func: "MetadataExternalized_", ret: O.MetadataExternalized},
"propertyValue",
{func: "dynamic__Symbol_Object_Object", args: [P.Symbol0, P.Object, P.Object]},
{func: "bool__Symbol_dynamic", ret: J.JSBool, args: [P.Symbol0, null]},
{func: "List___List", ret: [J.JSArray, O.Entity], named: {traversedEntities: [J.JSArray, O.Entity]}},
"traversedEntities",
{func: "List_9", ret: [J.JSArray, P.Symbol0]},
{func: "MetadataExternalized__Symbol", ret: O.MetadataExternalized, args: [P.Symbol0]},
{func: "List_10", ret: [J.JSArray, O.MetadataValidationResult]},
{func: "void__Map_Serializer_OnConflictFunction", void: true, args: [[P.Map, J.JSString, null], O.Serializer, {func: "ConflictManager__Entity_Entity", ret: O.ConflictManager, args: [O.Entity, O.Entity]}]},
{func: "void__Map_Serializer", void: true, args: [[P.Map, J.JSString, null], O.Serializer]},
{func: "String___Map", ret: J.JSString, named: {convertedEntities: [P.Map, J.JSString, [P.Map, J.JSString, null]]}},
"convertedEntities",
{func: "Entity__List", ret: O.Entity, args: [[J.JSArray, O._ClonedEntityEntry]]},
"clonedEntities",
{func: "int__Entity", ret: J.JSInt, args: [O.Entity]},
"otherEntity",
{func: "void__Map_Map_Serializer", void: true, args: [[P.Map, J.JSString, null], [P.Map, J.JSInt, [P.Map, J.JSString, null]], O.Serializer]},
O.Externalizable,
"subListEntry",
[J.JSArray, P.Symbol0],
[J.JSArray, O.MetadataValidationResult],
{func: "dynamic___ClonedEntityEntry", args: [O._ClonedEntityEntry]},
"cloneEntry",
[J.JSArray, O._ClonedEntityEntry],
"listEntry",
"subEntry",
{func: "void__Type_args1_args1", void: true, args: [P.Type, {func: "args1", args: [null]}, {func: "args1", args: [null]}]},
{func: "void__Type", void: true, args: [P.Type]},
{func: "dynamic__Type_dynamic", args: [P.Type, null]},
"inValue",
"outValue",
{func: "dynamic___InternalConvertor", args: [O._InternalConvertor]},
"convertor",
{func: "List__String1", ret: [J.JSArray, [P.Map, J.JSString, null]], args: [J.JSString]},
O.SerializerBase,
"tmpConvertor",
Z.BenchmarkBase,
{func: "dynamic__TestEntity", args: [A.TestEntity]},
"testEntity",
[O.DormProxy, J.JSInt],
[O.DormProxy, J.JSString],
[O.DormProxy, P.DateTime],
[O.DormProxy, A.TestEntity],
{func: "dynamic__DateTime", args: [P.DateTime]},
A.TestEntitySuperClass,
N.Logger,
N.Level,
[P.Map, J.JSString, N.Logger],
[P.StreamController, N.LogRecord],
{func: "Level_", ret: N.Level},
{func: "void__Level", void: true, args: [N.Level]},
{func: "Stream_2", ret: [P.Stream, N.LogRecord]},
{func: "bool__Level", ret: J.JSBool, args: [N.Level]},
{func: "void__Level_String__Object_StackTrace", void: true, args: [N.Level, J.JSString], opt: [P.Object, P.StackTrace]},
"logLevel",
{func: "void__String__Object_StackTrace", void: true, args: [J.JSString], opt: [P.Object, P.StackTrace]},
{func: "void__LogRecord", void: true, args: [N.LogRecord]},
{func: "int__Level", ret: J.JSInt, args: [N.Level]},
[P.Comparable, N.Level],
P.DateTime,
{func: "Stream_3", ret: [P.Stream, [J.JSArray, T.ChangeRecord]]},
{func: "void__ChangeRecord", void: true, args: [T.ChangeRecord]},
93,
T.ChangeRecord,
[J.JSArray, L.PathObserver],
[J.JSArray, P.StreamSubscription],
C.C_Reflectable,
{func: "void__dynamic_String", void: true, args: [null, J.JSString]},
"model",
O.ChangeNotifier,
{func: "dynamic__ZoneDelegate_Zone", args: [P.ZoneDelegate, P.Zone]},
{func: "dynamic__Zone_ZoneDelegate_Zone_args1", args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args1", args: [null]}]},
P.UnmodifiableListView,
[Q.ObservableList, 137],
[P.Iterable, 138],
"lengthAdjust",
136,
[J.JSArray, G.ListChangeRecord],
[J.JSArray, 106],
{func: "Stream_4", ret: [P.Stream, [J.JSArray, G.ListChangeRecord]]},
{func: "void__ListChangeRecord", void: true, args: [G.ListChangeRecord]},
[Q.ListBase_ChangeNotifier, 106],
132,
133,
[P.Map, 134, 135],
[J.JSArray, P.Object],
{func: "StreamSubscription__void__dynamic", ret: P.StreamSubscription, args: [{func: "void__dynamic", void: true, args: [null]}]},
{func: "void___int0", void: true, named: {end: J.JSInt}},
{func: "void___int1", void: true, named: {start: J.JSInt}},
{func: "void___int_int", void: true, opt: [J.JSInt, J.JSInt]},
{func: "dynamic__List1", args: [[J.JSArray, G.ListChangeRecord]]},
{func: "dynamic__List2", args: [[J.JSArray, T.ChangeRecord]]},
[J.JSArray, 139],
[F._IterableView, 139],
[P.Set, 141],
[F._IterableView, 141],
[P.Map, 91, 92],
H.JsMirrorSystem,
[P.Queue, {func: "void_", void: true}],
[P.Map, J.JSString, [P.Future, J.JSBool]],
P.Set,
P.Utf8Codec,
P.Latin1Codec,
P.AsciiCodec,
P.Deprecated,
[J.JSArray, F.Observable],
O.LazyLoader,
K.Reflectable,
K.ObservableProperty,
];
$ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
$ = new Isolate();
function convertToFastObject(properties) {
  function MyClass() {};
  MyClass.prototype = properties;
  new MyClass();
  return properties;
}
A = convertToFastObject(A);
B = convertToFastObject(B);
C = convertToFastObject(C);
D = convertToFastObject(D);
E = convertToFastObject(E);
F = convertToFastObject(F);
G = convertToFastObject(G);
H = convertToFastObject(H);
J = convertToFastObject(J);
K = convertToFastObject(K);
L = convertToFastObject(L);
M = convertToFastObject(M);
N = convertToFastObject(N);
O = convertToFastObject(O);
P = convertToFastObject(P);
Q = convertToFastObject(Q);
R = convertToFastObject(R);
S = convertToFastObject(S);
T = convertToFastObject(T);
U = convertToFastObject(U);
V = convertToFastObject(V);
W = convertToFastObject(W);
X = convertToFastObject(X);
Y = convertToFastObject(Y);
Z = convertToFastObject(Z);
// BEGIN invoke [main].
;(function (callback) {
  if (typeof document === "undefined") {
    callback(null);
    return;
  }
  if (document.currentScript) {
    callback(document.currentScript);
    return;
  }

  var scripts = document.scripts;
  function onLoad(event) {
    for (var i = 0; i < scripts.length; ++i) {
      scripts[i].removeEventListener("load", onLoad, false);
    }
    callback(event.target);
  }
  for (var i = 0; i < scripts.length; ++i) {
    scripts[i].addEventListener("load", onLoad, false);
  }
})(function(currentScript) {
  init.currentScript = currentScript;

  if (typeof dartMainRunner === "function") {
    dartMainRunner(function() { H.startRootIsolate(M.main$closure()); });
  } else {
    H.startRootIsolate(M.main$closure());
  }
});
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(fieldDescriptor, accessors, cls) {
    var fieldInformation = fieldDescriptor.split("-");
    var field = fieldInformation[0];
    var len = field.length;
    var code = field.charCodeAt(len - 1);
    var reflectable;
    if (fieldInformation.length > 1)
      reflectable = true;
    else
      reflectable = false;
    code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
    if (code) {
      var getterCode = code & 3;
      var setterCode = code >> 2;
      var accessorName = field = field.substring(0, len - 1);
      var divider = field.indexOf(":");
      if (divider > 0) {
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (getterCode) {
        var args = getterCode & 2 ? "receiver" : "";
        var receiver = getterCode & 1 ? "this" : "receiver";
        var body = "return " + receiver + "." + field;
        var property = cls + ".prototype.get$" + accessorName + "=";
        var fn = "function(" + args + "){" + body + "}";
        if (reflectable)
          accessors.push(property + "$reflectable(" + fn + ");\n");
        else
          accessors.push(property + fn + ";\n");
      }
      if (setterCode) {
        var args = setterCode & 2 ? "receiver, value" : "value";
        var receiver = setterCode & 1 ? "this" : "receiver";
        var body = receiver + "." + field + " = value";
        var property = cls + ".prototype.set$" + accessorName + "=";
        var fn = "function(" + args + "){" + body + "}";
        if (reflectable)
          accessors.push(property + "$reflectable(" + fn + ");\n");
        else
          accessors.push(property + fn + ";\n");
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(name, cls, fields) {
    var accessors = [];
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0)
        str += ", ";
      var field = generateAccessor(fields[i], accessors, cls);
      var parameter = "parameter_" + field;
      str += parameter;
      body += "this." + field + " = " + parameter + ";\n";
    }
    str += ") {\n" + body + "}\n";
    str += cls + ".builtin$cls=\"" + name + "\";\n";
    str += "$desc=$collectedClasses." + cls + ";\n";
    str += "if($desc instanceof Array) $desc = $desc[1];\n";
    str += cls + ".prototype = $desc;\n";
    if (typeof defineClass.name != "string") {
      str += cls + ".name=\"" + cls + "\";\n";
    }
    str += accessors.join("");
    return str;
  }
  var inheritFrom = function() {
    function tmp() {
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    return function(constructor, superConstructor) {
      tmp.prototype = superConstructor.prototype;
      var object = new tmp();
      var properties = constructor.prototype;
      for (var member in properties)
        if (hasOwnProperty.call(properties, member))
          object[member] = properties[member];
      object.constructor = constructor;
      constructor.prototype = object;
      return object;
    };
  }();
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    if (!init.allClasses)
      init.allClasses = {};
    var allClasses = init.allClasses;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (typeof dart_precompiled == "function") {
      var constructors = dart_precompiled(collectedClasses);
    } else {
      var combinedConstructorFunction = "function $reflectable(fn){fn.$reflectable=1;return fn};\n" + "var $desc;\n";
      var constructorsList = [];
    }
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        if (desc instanceof Array)
          desc = desc[1];
        var classData = desc[""], supr, name = cls, fields = classData;
        if (typeof classData == "object" && classData instanceof Array) {
          classData = fields = classData[0];
        }
        if (typeof classData == "string") {
          var split = classData.split("/");
          if (split.length == 2) {
            name = split[0];
            fields = split[1];
          }
        }
        var s = fields.split(";");
        fields = s[1] == "" ? [] : s[1].split(",");
        supr = s[0];
        split = supr.split(":");
        if (split.length == 2) {
          supr = split[0];
          var functionSignature = split[1];
          if (functionSignature)
            desc.$signature = function(s) {
              return function() {
                return init.metadata[s];
              };
            }(functionSignature);
        }
        if (supr && supr.indexOf("+") > 0) {
          s = supr.split("+");
          supr = s[0];
          var mixin = collectedClasses[s[1]];
          if (mixin instanceof Array)
            mixin = mixin[1];
          for (var d in mixin) {
            if (hasOwnProperty.call(mixin, d) && !hasOwnProperty.call(desc, d))
              desc[d] = mixin[d];
          }
        }
        if (typeof dart_precompiled != "function") {
          combinedConstructorFunction += defineClass(name, cls, fields);
          constructorsList.push(cls);
        }
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    if (typeof dart_precompiled != "function") {
      combinedConstructorFunction += "return [\n  " + constructorsList.join(",\n  ") + "\n]";
      var constructors = new Function("$collectedClasses", combinedConstructorFunction)(collectedClasses);
      combinedConstructorFunction = null;
    }
    for (var i = 0; i < constructors.length; i++) {
      var constructor = constructors[i];
      var cls = constructor.name;
      var desc = collectedClasses[cls];
      var globalObject = isolateProperties;
      if (desc instanceof Array) {
        globalObject = desc[0] || isolateProperties;
        desc = desc[1];
      }
      constructor["@"] = desc;
      allClasses[cls] = constructor;
      globalObject[cls] = constructor;
    }
    constructors = null;
    var finishedClasses = {};
    init.interceptorsByTag = Object.create(null);
    init.leafTags = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if (!superclass || typeof superclass != "string")
        return;
      finishClass(superclass);
      var constructor = allClasses[cls];
      var superConstructor = allClasses[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = inheritFrom(constructor, superConstructor);
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
    if (!init.lazies)
      init.lazies = {};
    init.lazies[fieldName] = getterName;
    var sentinelUndefined = {};
    var sentinelInProgress = {};
    prototype[fieldName] = sentinelUndefined;
    prototype[getterName] = function() {
      var result = $[fieldName];
      try {
        if (result === sentinelUndefined) {
          $[fieldName] = sentinelInProgress;
          try {
            result = $[fieldName] = lazyValue();
          } finally {
            if (result === sentinelUndefined) {
              if ($[fieldName] === sentinelInProgress) {
                $[fieldName] = null;
              }
            }
          }
        } else {
          if (result === sentinelInProgress)
            H.throwCyclicInit(staticName);
        }
        return result;
      } finally {
        $[getterName] = function() {
          return this[fieldName];
        };
      }
    };
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    function Isolate() {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      for (var staticName in isolateProperties)
        if (hasOwnProperty.call(isolateProperties, staticName))
          this[staticName] = isolateProperties[staticName];
      function ForceEfficientMap() {
      }
      ForceEfficientMap.prototype = this;
      new ForceEfficientMap();
    }
    Isolate.prototype = oldIsolate.prototype;
    Isolate.prototype.constructor = Isolate;
    Isolate.$isolateProperties = isolateProperties;
    Isolate.$finishClasses = oldIsolate.$finishClasses;
    Isolate.makeConstantList = oldIsolate.makeConstantList;
    return Isolate;
  };
}
})()
function dart_precompiled($collectedClasses) {
  var $desc;
  function JS_CONST(code) {
    this.code = code;
  }
  JS_CONST.builtin$cls = "JS_CONST";
  if (!"name" in JS_CONST)
    JS_CONST.name = "JS_CONST";
  $desc = $collectedClasses.JS_CONST;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JS_CONST.prototype = $desc;
  JS_CONST.prototype.get$code = function() {
    return this.code;
  };
  JS_CONST.prototype.get$code.$reflectable = 1;
  function Interceptor() {
  }
  Interceptor.builtin$cls = "Interceptor";
  if (!"name" in Interceptor)
    Interceptor.name = "Interceptor";
  $desc = $collectedClasses.Interceptor;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Interceptor.prototype = $desc;
  function JSBool() {
  }
  JSBool.builtin$cls = "bool";
  if (!"name" in JSBool)
    JSBool.name = "JSBool";
  $desc = $collectedClasses.JSBool;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSBool.prototype = $desc;
  function JSNull() {
  }
  JSNull.builtin$cls = "JSNull";
  if (!"name" in JSNull)
    JSNull.name = "JSNull";
  $desc = $collectedClasses.JSNull;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSNull.prototype = $desc;
  function JavaScriptObject() {
  }
  JavaScriptObject.builtin$cls = "JavaScriptObject";
  if (!"name" in JavaScriptObject)
    JavaScriptObject.name = "JavaScriptObject";
  $desc = $collectedClasses.JavaScriptObject;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JavaScriptObject.prototype = $desc;
  function PlainJavaScriptObject() {
  }
  PlainJavaScriptObject.builtin$cls = "PlainJavaScriptObject";
  if (!"name" in PlainJavaScriptObject)
    PlainJavaScriptObject.name = "PlainJavaScriptObject";
  $desc = $collectedClasses.PlainJavaScriptObject;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PlainJavaScriptObject.prototype = $desc;
  function UnknownJavaScriptObject() {
  }
  UnknownJavaScriptObject.builtin$cls = "UnknownJavaScriptObject";
  if (!"name" in UnknownJavaScriptObject)
    UnknownJavaScriptObject.name = "UnknownJavaScriptObject";
  $desc = $collectedClasses.UnknownJavaScriptObject;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnknownJavaScriptObject.prototype = $desc;
  function JSArray() {
  }
  JSArray.builtin$cls = "List";
  if (!"name" in JSArray)
    JSArray.name = "JSArray";
  $desc = $collectedClasses.JSArray;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSArray.prototype = $desc;
  function JSArray_retainWhere_closure(this_0, test_1) {
    this.this_0 = this_0;
    this.test_1 = test_1;
  }
  JSArray_retainWhere_closure.builtin$cls = "JSArray_retainWhere_closure";
  if (!"name" in JSArray_retainWhere_closure)
    JSArray_retainWhere_closure.name = "JSArray_retainWhere_closure";
  $desc = $collectedClasses.JSArray_retainWhere_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSArray_retainWhere_closure.prototype = $desc;
  function JSMutableArray() {
  }
  JSMutableArray.builtin$cls = "JSMutableArray";
  if (!"name" in JSMutableArray)
    JSMutableArray.name = "JSMutableArray";
  $desc = $collectedClasses.JSMutableArray;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSMutableArray.prototype = $desc;
  function JSFixedArray() {
  }
  JSFixedArray.builtin$cls = "JSFixedArray";
  if (!"name" in JSFixedArray)
    JSFixedArray.name = "JSFixedArray";
  $desc = $collectedClasses.JSFixedArray;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSFixedArray.prototype = $desc;
  function JSExtendableArray() {
  }
  JSExtendableArray.builtin$cls = "JSExtendableArray";
  if (!"name" in JSExtendableArray)
    JSExtendableArray.name = "JSExtendableArray";
  $desc = $collectedClasses.JSExtendableArray;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSExtendableArray.prototype = $desc;
  function JSNumber() {
  }
  JSNumber.builtin$cls = "num";
  if (!"name" in JSNumber)
    JSNumber.name = "JSNumber";
  $desc = $collectedClasses.JSNumber;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSNumber.prototype = $desc;
  function JSInt() {
  }
  JSInt.builtin$cls = "int";
  if (!"name" in JSInt)
    JSInt.name = "JSInt";
  $desc = $collectedClasses.JSInt;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSInt.prototype = $desc;
  function JSDouble() {
  }
  JSDouble.builtin$cls = "double";
  if (!"name" in JSDouble)
    JSDouble.name = "JSDouble";
  $desc = $collectedClasses.JSDouble;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSDouble.prototype = $desc;
  function JSPositiveInt() {
  }
  JSPositiveInt.builtin$cls = "JSPositiveInt";
  if (!"name" in JSPositiveInt)
    JSPositiveInt.name = "JSPositiveInt";
  $desc = $collectedClasses.JSPositiveInt;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSPositiveInt.prototype = $desc;
  function JSUInt32() {
  }
  JSUInt32.builtin$cls = "JSUInt32";
  if (!"name" in JSUInt32)
    JSUInt32.name = "JSUInt32";
  $desc = $collectedClasses.JSUInt32;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSUInt32.prototype = $desc;
  function JSUInt31() {
  }
  JSUInt31.builtin$cls = "JSUInt31";
  if (!"name" in JSUInt31)
    JSUInt31.name = "JSUInt31";
  $desc = $collectedClasses.JSUInt31;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSUInt31.prototype = $desc;
  function JSString() {
  }
  JSString.builtin$cls = "String";
  if (!"name" in JSString)
    JSString.name = "JSString";
  $desc = $collectedClasses.JSString;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSString.prototype = $desc;
  function _CodeUnits(__interceptors$_string) {
    this.__interceptors$_string = __interceptors$_string;
  }
  _CodeUnits.builtin$cls = "_CodeUnits";
  if (!"name" in _CodeUnits)
    _CodeUnits.name = "_CodeUnits";
  $desc = $collectedClasses._CodeUnits;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _CodeUnits.prototype = $desc;
  _CodeUnits.prototype.get$__interceptors$_string = function() {
    return this.__interceptors$_string;
  };
  _CodeUnits.prototype.get$__interceptors$_string.$reflectable = 1;
  _CodeUnits.prototype.set$__interceptors$_string = function(v) {
    return this.__interceptors$_string = v;
  };
  _CodeUnits.prototype.set$__interceptors$_string.$reflectable = 1;
  function startRootIsolate_closure(entry_0) {
    this.entry_0 = entry_0;
  }
  startRootIsolate_closure.builtin$cls = "startRootIsolate_closure";
  if (!"name" in startRootIsolate_closure)
    startRootIsolate_closure.name = "startRootIsolate_closure";
  $desc = $collectedClasses.startRootIsolate_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  startRootIsolate_closure.prototype = $desc;
  function startRootIsolate_closure0(entry_1) {
    this.entry_1 = entry_1;
  }
  startRootIsolate_closure0.builtin$cls = "startRootIsolate_closure0";
  if (!"name" in startRootIsolate_closure0)
    startRootIsolate_closure0.name = "startRootIsolate_closure0";
  $desc = $collectedClasses.startRootIsolate_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  startRootIsolate_closure0.prototype = $desc;
  function _Manager(nextIsolateId, currentManagerId, nextManagerId, currentContext, rootContext, topEventLoop, fromCommandLine, isWorker, supportsWorkers, isolates, mainManager, managers, entry) {
    this.nextIsolateId = nextIsolateId;
    this.currentManagerId = currentManagerId;
    this.nextManagerId = nextManagerId;
    this.currentContext = currentContext;
    this.rootContext = rootContext;
    this.topEventLoop = topEventLoop;
    this.fromCommandLine = fromCommandLine;
    this.isWorker = isWorker;
    this.supportsWorkers = supportsWorkers;
    this.isolates = isolates;
    this.mainManager = mainManager;
    this.managers = managers;
    this.entry = entry;
  }
  _Manager.builtin$cls = "_Manager";
  if (!"name" in _Manager)
    _Manager.name = "_Manager";
  $desc = $collectedClasses._Manager;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Manager.prototype = $desc;
  _Manager.prototype.get$nextIsolateId = function() {
    return this.nextIsolateId;
  };
  _Manager.prototype.get$nextIsolateId.$reflectable = 1;
  _Manager.prototype.set$nextIsolateId = function(v) {
    return this.nextIsolateId = v;
  };
  _Manager.prototype.set$nextIsolateId.$reflectable = 1;
  _Manager.prototype.get$currentManagerId = function() {
    return this.currentManagerId;
  };
  _Manager.prototype.get$currentManagerId.$reflectable = 1;
  _Manager.prototype.set$currentManagerId = function(v) {
    return this.currentManagerId = v;
  };
  _Manager.prototype.set$currentManagerId.$reflectable = 1;
  _Manager.prototype.get$nextManagerId = function() {
    return this.nextManagerId;
  };
  _Manager.prototype.get$nextManagerId.$reflectable = 1;
  _Manager.prototype.set$nextManagerId = function(v) {
    return this.nextManagerId = v;
  };
  _Manager.prototype.set$nextManagerId.$reflectable = 1;
  _Manager.prototype.get$currentContext = function() {
    return this.currentContext;
  };
  _Manager.prototype.get$currentContext.$reflectable = 1;
  _Manager.prototype.set$currentContext = function(v) {
    return this.currentContext = v;
  };
  _Manager.prototype.set$currentContext.$reflectable = 1;
  _Manager.prototype.get$rootContext = function() {
    return this.rootContext;
  };
  _Manager.prototype.get$rootContext.$reflectable = 1;
  _Manager.prototype.set$rootContext = function(v) {
    return this.rootContext = v;
  };
  _Manager.prototype.set$rootContext.$reflectable = 1;
  _Manager.prototype.get$topEventLoop = function() {
    return this.topEventLoop;
  };
  _Manager.prototype.get$topEventLoop.$reflectable = 1;
  _Manager.prototype.set$topEventLoop = function(v) {
    return this.topEventLoop = v;
  };
  _Manager.prototype.set$topEventLoop.$reflectable = 1;
  _Manager.prototype.get$fromCommandLine = function() {
    return this.fromCommandLine;
  };
  _Manager.prototype.get$fromCommandLine.$reflectable = 1;
  _Manager.prototype.set$fromCommandLine = function(v) {
    return this.fromCommandLine = v;
  };
  _Manager.prototype.set$fromCommandLine.$reflectable = 1;
  _Manager.prototype.get$isWorker = function() {
    return this.isWorker;
  };
  _Manager.prototype.get$isWorker.$reflectable = 1;
  _Manager.prototype.set$isWorker = function(v) {
    return this.isWorker = v;
  };
  _Manager.prototype.set$isWorker.$reflectable = 1;
  _Manager.prototype.get$supportsWorkers = function() {
    return this.supportsWorkers;
  };
  _Manager.prototype.get$supportsWorkers.$reflectable = 1;
  _Manager.prototype.set$supportsWorkers = function(v) {
    return this.supportsWorkers = v;
  };
  _Manager.prototype.set$supportsWorkers.$reflectable = 1;
  _Manager.prototype.get$isolates = function() {
    return this.isolates;
  };
  _Manager.prototype.get$isolates.$reflectable = 1;
  _Manager.prototype.set$isolates = function(v) {
    return this.isolates = v;
  };
  _Manager.prototype.set$isolates.$reflectable = 1;
  _Manager.prototype.get$mainManager = function() {
    return this.mainManager;
  };
  _Manager.prototype.get$mainManager.$reflectable = 1;
  _Manager.prototype.set$mainManager = function(v) {
    return this.mainManager = v;
  };
  _Manager.prototype.set$mainManager.$reflectable = 1;
  _Manager.prototype.get$managers = function() {
    return this.managers;
  };
  _Manager.prototype.get$managers.$reflectable = 1;
  _Manager.prototype.set$managers = function(v) {
    return this.managers = v;
  };
  _Manager.prototype.set$managers.$reflectable = 1;
  _Manager.prototype.get$entry = function() {
    return this.entry;
  };
  _Manager.prototype.get$entry.$reflectable = 1;
  function _IsolateContext(id, ports, weakPorts, isolateStatics) {
    this.id = id;
    this.ports = ports;
    this.weakPorts = weakPorts;
    this.isolateStatics = isolateStatics;
  }
  _IsolateContext.builtin$cls = "_IsolateContext";
  if (!"name" in _IsolateContext)
    _IsolateContext.name = "_IsolateContext";
  $desc = $collectedClasses._IsolateContext;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _IsolateContext.prototype = $desc;
  _IsolateContext.prototype.get$id = function() {
    return this.id;
  };
  _IsolateContext.prototype.get$id.$reflectable = 1;
  _IsolateContext.prototype.get$ports = function() {
    return this.ports;
  };
  _IsolateContext.prototype.get$ports.$reflectable = 1;
  _IsolateContext.prototype.get$weakPorts = function() {
    return this.weakPorts;
  };
  _IsolateContext.prototype.get$weakPorts.$reflectable = 1;
  _IsolateContext.prototype.get$isolateStatics = function() {
    return this.isolateStatics;
  };
  _IsolateContext.prototype.get$isolateStatics.$reflectable = 1;
  function _EventLoop(events, activeTimerCount) {
    this.events = events;
    this.activeTimerCount = activeTimerCount;
  }
  _EventLoop.builtin$cls = "_EventLoop";
  if (!"name" in _EventLoop)
    _EventLoop.name = "_EventLoop";
  $desc = $collectedClasses._EventLoop;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _EventLoop.prototype = $desc;
  _EventLoop.prototype.get$events = function() {
    return this.events;
  };
  _EventLoop.prototype.get$events.$reflectable = 1;
  _EventLoop.prototype.get$activeTimerCount = function() {
    return this.activeTimerCount;
  };
  _EventLoop.prototype.get$activeTimerCount.$reflectable = 1;
  _EventLoop.prototype.set$activeTimerCount = function(v) {
    return this.activeTimerCount = v;
  };
  _EventLoop.prototype.set$activeTimerCount.$reflectable = 1;
  function _EventLoop__runHelper_next(this_0) {
    this.this_0 = this_0;
  }
  _EventLoop__runHelper_next.builtin$cls = "_EventLoop__runHelper_next";
  if (!"name" in _EventLoop__runHelper_next)
    _EventLoop__runHelper_next.name = "_EventLoop__runHelper_next";
  $desc = $collectedClasses._EventLoop__runHelper_next;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _EventLoop__runHelper_next.prototype = $desc;
  function _IsolateEvent(isolate, fn, message) {
    this.isolate = isolate;
    this.fn = fn;
    this.message = message;
  }
  _IsolateEvent.builtin$cls = "_IsolateEvent";
  if (!"name" in _IsolateEvent)
    _IsolateEvent.name = "_IsolateEvent";
  $desc = $collectedClasses._IsolateEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _IsolateEvent.prototype = $desc;
  _IsolateEvent.prototype.get$isolate = function() {
    return this.isolate;
  };
  _IsolateEvent.prototype.get$isolate.$reflectable = 1;
  _IsolateEvent.prototype.set$isolate = function(v) {
    return this.isolate = v;
  };
  _IsolateEvent.prototype.set$isolate.$reflectable = 1;
  _IsolateEvent.prototype.get$fn = function() {
    return this.fn;
  };
  _IsolateEvent.prototype.get$fn.$reflectable = 1;
  _IsolateEvent.prototype.set$fn = function(v) {
    return this.fn = v;
  };
  _IsolateEvent.prototype.set$fn.$reflectable = 1;
  _IsolateEvent.prototype.get$message = function() {
    return this.message;
  };
  _IsolateEvent.prototype.get$message.$reflectable = 1;
  _IsolateEvent.prototype.set$message = function(v) {
    return this.message = v;
  };
  _IsolateEvent.prototype.set$message.$reflectable = 1;
  function _MainManagerStub() {
  }
  _MainManagerStub.builtin$cls = "_MainManagerStub";
  if (!"name" in _MainManagerStub)
    _MainManagerStub.name = "_MainManagerStub";
  $desc = $collectedClasses._MainManagerStub;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MainManagerStub.prototype = $desc;
  function IsolateNatives__processWorkerMessage_closure(entryPoint_0, args_1, message_2, isSpawnUri_3, replyTo_4) {
    this.entryPoint_0 = entryPoint_0;
    this.args_1 = args_1;
    this.message_2 = message_2;
    this.isSpawnUri_3 = isSpawnUri_3;
    this.replyTo_4 = replyTo_4;
  }
  IsolateNatives__processWorkerMessage_closure.builtin$cls = "IsolateNatives__processWorkerMessage_closure";
  if (!"name" in IsolateNatives__processWorkerMessage_closure)
    IsolateNatives__processWorkerMessage_closure.name = "IsolateNatives__processWorkerMessage_closure";
  $desc = $collectedClasses.IsolateNatives__processWorkerMessage_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IsolateNatives__processWorkerMessage_closure.prototype = $desc;
  function IsolateNatives_spawn_closure() {
  }
  IsolateNatives_spawn_closure.builtin$cls = "IsolateNatives_spawn_closure";
  if (!"name" in IsolateNatives_spawn_closure)
    IsolateNatives_spawn_closure.name = "IsolateNatives_spawn_closure";
  $desc = $collectedClasses.IsolateNatives_spawn_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IsolateNatives_spawn_closure.prototype = $desc;
  function IsolateNatives__startNonWorker_closure(functionName_0, args_1, message_2, isSpawnUri_3, replyPort_4) {
    this.functionName_0 = functionName_0;
    this.args_1 = args_1;
    this.message_2 = message_2;
    this.isSpawnUri_3 = isSpawnUri_3;
    this.replyPort_4 = replyPort_4;
  }
  IsolateNatives__startNonWorker_closure.builtin$cls = "IsolateNatives__startNonWorker_closure";
  if (!"name" in IsolateNatives__startNonWorker_closure)
    IsolateNatives__startNonWorker_closure.name = "IsolateNatives__startNonWorker_closure";
  $desc = $collectedClasses.IsolateNatives__startNonWorker_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IsolateNatives__startNonWorker_closure.prototype = $desc;
  function _BaseSendPort(_isolateId) {
    this._isolateId = _isolateId;
  }
  _BaseSendPort.builtin$cls = "_BaseSendPort";
  if (!"name" in _BaseSendPort)
    _BaseSendPort.name = "_BaseSendPort";
  $desc = $collectedClasses._BaseSendPort;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BaseSendPort.prototype = $desc;
  _BaseSendPort.prototype.get$_isolateId = function() {
    return this._isolateId;
  };
  _BaseSendPort.prototype.get$_isolateId.$reflectable = 1;
  function _NativeJsSendPort(_receivePort, _isolateId) {
    this._receivePort = _receivePort;
    this._isolateId = _isolateId;
  }
  _NativeJsSendPort.builtin$cls = "_NativeJsSendPort";
  if (!"name" in _NativeJsSendPort)
    _NativeJsSendPort.name = "_NativeJsSendPort";
  $desc = $collectedClasses._NativeJsSendPort;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _NativeJsSendPort.prototype = $desc;
  _NativeJsSendPort.prototype.get$_receivePort = function() {
    return this._receivePort;
  };
  _NativeJsSendPort.prototype.get$_receivePort.$reflectable = 1;
  function _NativeJsSendPort_send_closure(box_0, this_1, shouldSerialize_2) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.shouldSerialize_2 = shouldSerialize_2;
  }
  _NativeJsSendPort_send_closure.builtin$cls = "_NativeJsSendPort_send_closure";
  if (!"name" in _NativeJsSendPort_send_closure)
    _NativeJsSendPort_send_closure.name = "_NativeJsSendPort_send_closure";
  $desc = $collectedClasses._NativeJsSendPort_send_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _NativeJsSendPort_send_closure.prototype = $desc;
  function _WorkerSendPort(_workerId, _receivePortId, _isolateId) {
    this._workerId = _workerId;
    this._receivePortId = _receivePortId;
    this._isolateId = _isolateId;
  }
  _WorkerSendPort.builtin$cls = "_WorkerSendPort";
  if (!"name" in _WorkerSendPort)
    _WorkerSendPort.name = "_WorkerSendPort";
  $desc = $collectedClasses._WorkerSendPort;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _WorkerSendPort.prototype = $desc;
  _WorkerSendPort.prototype.get$_workerId = function() {
    return this._workerId;
  };
  _WorkerSendPort.prototype.get$_workerId.$reflectable = 1;
  _WorkerSendPort.prototype.get$_receivePortId = function() {
    return this._receivePortId;
  };
  _WorkerSendPort.prototype.get$_receivePortId.$reflectable = 1;
  function RawReceivePortImpl(__isolate_helper$_id, _handler, _isClosed) {
    this.__isolate_helper$_id = __isolate_helper$_id;
    this._handler = _handler;
    this._isClosed = _isClosed;
  }
  RawReceivePortImpl.builtin$cls = "RawReceivePortImpl";
  if (!"name" in RawReceivePortImpl)
    RawReceivePortImpl.name = "RawReceivePortImpl";
  $desc = $collectedClasses.RawReceivePortImpl;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RawReceivePortImpl.prototype = $desc;
  RawReceivePortImpl.prototype.get$__isolate_helper$_id = function() {
    return this.__isolate_helper$_id;
  };
  RawReceivePortImpl.prototype.get$__isolate_helper$_id.$reflectable = 1;
  RawReceivePortImpl.prototype.get$_handler = function() {
    return this._handler;
  };
  RawReceivePortImpl.prototype.get$_handler.$reflectable = 1;
  RawReceivePortImpl.prototype.set$_handler = function(v) {
    return this._handler = v;
  };
  RawReceivePortImpl.prototype.set$_handler.$reflectable = 1;
  RawReceivePortImpl.prototype.get$_isClosed = function() {
    return this._isClosed;
  };
  RawReceivePortImpl.prototype.get$_isClosed.$reflectable = 1;
  RawReceivePortImpl.prototype.set$_isClosed = function(v) {
    return this._isClosed = v;
  };
  RawReceivePortImpl.prototype.set$_isClosed.$reflectable = 1;
  function ReceivePortImpl(_rawPort, __isolate_helper$_controller) {
    this._rawPort = _rawPort;
    this.__isolate_helper$_controller = __isolate_helper$_controller;
  }
  ReceivePortImpl.builtin$cls = "ReceivePortImpl";
  if (!"name" in ReceivePortImpl)
    ReceivePortImpl.name = "ReceivePortImpl";
  $desc = $collectedClasses.ReceivePortImpl;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ReceivePortImpl.prototype = $desc;
  ReceivePortImpl.prototype.get$_rawPort = function() {
    return this._rawPort;
  };
  ReceivePortImpl.prototype.get$_rawPort.$reflectable = 1;
  ReceivePortImpl.prototype.get$__isolate_helper$_controller = function() {
    return this.__isolate_helper$_controller;
  };
  ReceivePortImpl.prototype.get$__isolate_helper$_controller.$reflectable = 1;
  ReceivePortImpl.prototype.set$__isolate_helper$_controller = function(v) {
    return this.__isolate_helper$_controller = v;
  };
  ReceivePortImpl.prototype.set$__isolate_helper$_controller.$reflectable = 1;
  function _JsSerializer(_nextFreeRefId, _visited) {
    this._nextFreeRefId = _nextFreeRefId;
    this._visited = _visited;
  }
  _JsSerializer.builtin$cls = "_JsSerializer";
  if (!"name" in _JsSerializer)
    _JsSerializer.name = "_JsSerializer";
  $desc = $collectedClasses._JsSerializer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _JsSerializer.prototype = $desc;
  function _JsCopier(_visited) {
    this._visited = _visited;
  }
  _JsCopier.builtin$cls = "_JsCopier";
  if (!"name" in _JsCopier)
    _JsCopier.name = "_JsCopier";
  $desc = $collectedClasses._JsCopier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _JsCopier.prototype = $desc;
  function _JsDeserializer(_deserialized) {
    this._deserialized = _deserialized;
  }
  _JsDeserializer.builtin$cls = "_JsDeserializer";
  if (!"name" in _JsDeserializer)
    _JsDeserializer.name = "_JsDeserializer";
  $desc = $collectedClasses._JsDeserializer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _JsDeserializer.prototype = $desc;
  function _JsVisitedMap(tagged) {
    this.tagged = tagged;
  }
  _JsVisitedMap.builtin$cls = "_JsVisitedMap";
  if (!"name" in _JsVisitedMap)
    _JsVisitedMap.name = "_JsVisitedMap";
  $desc = $collectedClasses._JsVisitedMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _JsVisitedMap.prototype = $desc;
  _JsVisitedMap.prototype.get$tagged = function() {
    return this.tagged;
  };
  _JsVisitedMap.prototype.get$tagged.$reflectable = 1;
  _JsVisitedMap.prototype.set$tagged = function(v) {
    return this.tagged = v;
  };
  _JsVisitedMap.prototype.set$tagged.$reflectable = 1;
  function _MessageTraverserVisitedMap() {
  }
  _MessageTraverserVisitedMap.builtin$cls = "_MessageTraverserVisitedMap";
  if (!"name" in _MessageTraverserVisitedMap)
    _MessageTraverserVisitedMap.name = "_MessageTraverserVisitedMap";
  $desc = $collectedClasses._MessageTraverserVisitedMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MessageTraverserVisitedMap.prototype = $desc;
  function _MessageTraverser(_visited) {
    this._visited = _visited;
  }
  _MessageTraverser.builtin$cls = "_MessageTraverser";
  if (!"name" in _MessageTraverser)
    _MessageTraverser.name = "_MessageTraverser";
  $desc = $collectedClasses._MessageTraverser;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MessageTraverser.prototype = $desc;
  _MessageTraverser.prototype.get$_visited = function() {
    return this._visited;
  };
  _MessageTraverser.prototype.get$_visited.$reflectable = 1;
  _MessageTraverser.prototype.set$_visited = function(v) {
    return this._visited = v;
  };
  _MessageTraverser.prototype.set$_visited.$reflectable = 1;
  function _Copier() {
  }
  _Copier.builtin$cls = "_Copier";
  if (!"name" in _Copier)
    _Copier.name = "_Copier";
  $desc = $collectedClasses._Copier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Copier.prototype = $desc;
  function _Copier_visitMap_closure(box_0, this_1) {
    this.box_0 = box_0;
    this.this_1 = this_1;
  }
  _Copier_visitMap_closure.builtin$cls = "_Copier_visitMap_closure";
  if (!"name" in _Copier_visitMap_closure)
    _Copier_visitMap_closure.name = "_Copier_visitMap_closure";
  $desc = $collectedClasses._Copier_visitMap_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Copier_visitMap_closure.prototype = $desc;
  function _Serializer(_nextFreeRefId) {
    this._nextFreeRefId = _nextFreeRefId;
  }
  _Serializer.builtin$cls = "_Serializer";
  if (!"name" in _Serializer)
    _Serializer.name = "_Serializer";
  $desc = $collectedClasses._Serializer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Serializer.prototype = $desc;
  _Serializer.prototype.get$_nextFreeRefId = function() {
    return this._nextFreeRefId;
  };
  _Serializer.prototype.get$_nextFreeRefId.$reflectable = 1;
  _Serializer.prototype.set$_nextFreeRefId = function(v) {
    return this._nextFreeRefId = v;
  };
  _Serializer.prototype.set$_nextFreeRefId.$reflectable = 1;
  function _Deserializer(_deserialized) {
    this._deserialized = _deserialized;
  }
  _Deserializer.builtin$cls = "_Deserializer";
  if (!"name" in _Deserializer)
    _Deserializer.name = "_Deserializer";
  $desc = $collectedClasses._Deserializer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Deserializer.prototype = $desc;
  _Deserializer.prototype.get$_deserialized = function() {
    return this._deserialized;
  };
  _Deserializer.prototype.get$_deserialized.$reflectable = 1;
  _Deserializer.prototype.set$_deserialized = function(v) {
    return this._deserialized = v;
  };
  _Deserializer.prototype.set$_deserialized.$reflectable = 1;
  function TimerImpl(_once, _inEventLoop, _handle) {
    this._once = _once;
    this._inEventLoop = _inEventLoop;
    this._handle = _handle;
  }
  TimerImpl.builtin$cls = "TimerImpl";
  if (!"name" in TimerImpl)
    TimerImpl.name = "TimerImpl";
  $desc = $collectedClasses.TimerImpl;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TimerImpl.prototype = $desc;
  TimerImpl.prototype.get$_once = function() {
    return this._once;
  };
  TimerImpl.prototype.get$_once.$reflectable = 1;
  TimerImpl.prototype.get$_inEventLoop = function() {
    return this._inEventLoop;
  };
  TimerImpl.prototype.get$_inEventLoop.$reflectable = 1;
  TimerImpl.prototype.set$_inEventLoop = function(v) {
    return this._inEventLoop = v;
  };
  TimerImpl.prototype.set$_inEventLoop.$reflectable = 1;
  TimerImpl.prototype.get$_handle = function() {
    return this._handle;
  };
  TimerImpl.prototype.get$_handle.$reflectable = 1;
  TimerImpl.prototype.set$_handle = function(v) {
    return this._handle = v;
  };
  TimerImpl.prototype.set$_handle.$reflectable = 1;
  function TimerImpl_internalCallback(this_0, callback_1) {
    this.this_0 = this_0;
    this.callback_1 = callback_1;
  }
  TimerImpl_internalCallback.builtin$cls = "TimerImpl_internalCallback";
  if (!"name" in TimerImpl_internalCallback)
    TimerImpl_internalCallback.name = "TimerImpl_internalCallback";
  $desc = $collectedClasses.TimerImpl_internalCallback;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TimerImpl_internalCallback.prototype = $desc;
  function TimerImpl_internalCallback0(this_2, callback_3) {
    this.this_2 = this_2;
    this.callback_3 = callback_3;
  }
  TimerImpl_internalCallback0.builtin$cls = "TimerImpl_internalCallback0";
  if (!"name" in TimerImpl_internalCallback0)
    TimerImpl_internalCallback0.name = "TimerImpl_internalCallback0";
  $desc = $collectedClasses.TimerImpl_internalCallback0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TimerImpl_internalCallback0.prototype = $desc;
  function TimerImpl$periodic_closure(this_0, callback_1) {
    this.this_0 = this_0;
    this.callback_1 = callback_1;
  }
  TimerImpl$periodic_closure.builtin$cls = "TimerImpl$periodic_closure";
  if (!"name" in TimerImpl$periodic_closure)
    TimerImpl$periodic_closure.name = "TimerImpl$periodic_closure";
  $desc = $collectedClasses.TimerImpl$periodic_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TimerImpl$periodic_closure.prototype = $desc;
  function NoSideEffects() {
  }
  NoSideEffects.builtin$cls = "NoSideEffects";
  if (!"name" in NoSideEffects)
    NoSideEffects.name = "NoSideEffects";
  $desc = $collectedClasses.NoSideEffects;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NoSideEffects.prototype = $desc;
  function NoThrows() {
  }
  NoThrows.builtin$cls = "NoThrows";
  if (!"name" in NoThrows)
    NoThrows.name = "NoThrows";
  $desc = $collectedClasses.NoThrows;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NoThrows.prototype = $desc;
  function NoInline() {
  }
  NoInline.builtin$cls = "NoInline";
  if (!"name" in NoInline)
    NoInline.name = "NoInline";
  $desc = $collectedClasses.NoInline;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NoInline.prototype = $desc;
  function JSInvocationMirror(__js_helper$_memberName, _internalName, _kind, _arguments, _namedArgumentNames, _namedIndices) {
    this.__js_helper$_memberName = __js_helper$_memberName;
    this._internalName = _internalName;
    this._kind = _kind;
    this._arguments = _arguments;
    this._namedArgumentNames = _namedArgumentNames;
    this._namedIndices = _namedIndices;
  }
  JSInvocationMirror.builtin$cls = "JSInvocationMirror";
  if (!"name" in JSInvocationMirror)
    JSInvocationMirror.name = "JSInvocationMirror";
  $desc = $collectedClasses.JSInvocationMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSInvocationMirror.prototype = $desc;
  JSInvocationMirror.prototype.get$__js_helper$_memberName = function() {
    return this.__js_helper$_memberName;
  };
  JSInvocationMirror.prototype.get$__js_helper$_memberName.$reflectable = 1;
  JSInvocationMirror.prototype.set$__js_helper$_memberName = function(v) {
    return this.__js_helper$_memberName = v;
  };
  JSInvocationMirror.prototype.set$__js_helper$_memberName.$reflectable = 1;
  JSInvocationMirror.prototype.get$_internalName = function() {
    return this._internalName;
  };
  JSInvocationMirror.prototype.get$_internalName.$reflectable = 1;
  JSInvocationMirror.prototype.get$_kind = function() {
    return this._kind;
  };
  JSInvocationMirror.prototype.get$_kind.$reflectable = 1;
  JSInvocationMirror.prototype.get$_arguments = function() {
    return this._arguments;
  };
  JSInvocationMirror.prototype.get$_arguments.$reflectable = 1;
  JSInvocationMirror.prototype.get$_namedArgumentNames = function() {
    return this._namedArgumentNames;
  };
  JSInvocationMirror.prototype.get$_namedArgumentNames.$reflectable = 1;
  JSInvocationMirror.prototype.get$_namedIndices = function() {
    return this._namedIndices;
  };
  JSInvocationMirror.prototype.get$_namedIndices.$reflectable = 1;
  JSInvocationMirror.prototype.set$_namedIndices = function(v) {
    return this._namedIndices = v;
  };
  JSInvocationMirror.prototype.set$_namedIndices.$reflectable = 1;
  function CachedInvocation(jsFunction, isIntercepted, cachedInterceptor) {
    this.jsFunction = jsFunction;
    this.isIntercepted = isIntercepted;
    this.cachedInterceptor = cachedInterceptor;
  }
  CachedInvocation.builtin$cls = "CachedInvocation";
  if (!"name" in CachedInvocation)
    CachedInvocation.name = "CachedInvocation";
  $desc = $collectedClasses.CachedInvocation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CachedInvocation.prototype = $desc;
  CachedInvocation.prototype.get$jsFunction = function() {
    return this.jsFunction;
  };
  CachedInvocation.prototype.get$jsFunction.$reflectable = 1;
  CachedInvocation.prototype.set$jsFunction = function(v) {
    return this.jsFunction = v;
  };
  CachedInvocation.prototype.set$jsFunction.$reflectable = 1;
  CachedInvocation.prototype.get$isIntercepted = function() {
    return this.isIntercepted;
  };
  CachedInvocation.prototype.get$isIntercepted.$reflectable = 1;
  CachedInvocation.prototype.set$isIntercepted = function(v) {
    return this.isIntercepted = v;
  };
  CachedInvocation.prototype.set$isIntercepted.$reflectable = 1;
  CachedInvocation.prototype.get$cachedInterceptor = function() {
    return this.cachedInterceptor;
  };
  CachedInvocation.prototype.get$cachedInterceptor.$reflectable = 1;
  CachedInvocation.prototype.set$cachedInterceptor = function(v) {
    return this.cachedInterceptor = v;
  };
  CachedInvocation.prototype.set$cachedInterceptor.$reflectable = 1;
  function CachedCatchAllInvocation(info, jsFunction, isIntercepted, cachedInterceptor) {
    this.info = info;
    this.jsFunction = jsFunction;
    this.isIntercepted = isIntercepted;
    this.cachedInterceptor = cachedInterceptor;
  }
  CachedCatchAllInvocation.builtin$cls = "CachedCatchAllInvocation";
  if (!"name" in CachedCatchAllInvocation)
    CachedCatchAllInvocation.name = "CachedCatchAllInvocation";
  $desc = $collectedClasses.CachedCatchAllInvocation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CachedCatchAllInvocation.prototype = $desc;
  CachedCatchAllInvocation.prototype.get$info = function() {
    return this.info;
  };
  CachedCatchAllInvocation.prototype.get$info.$reflectable = 1;
  function CachedNoSuchMethodInvocation(interceptor) {
    this.interceptor = interceptor;
  }
  CachedNoSuchMethodInvocation.builtin$cls = "CachedNoSuchMethodInvocation";
  if (!"name" in CachedNoSuchMethodInvocation)
    CachedNoSuchMethodInvocation.name = "CachedNoSuchMethodInvocation";
  $desc = $collectedClasses.CachedNoSuchMethodInvocation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CachedNoSuchMethodInvocation.prototype = $desc;
  CachedNoSuchMethodInvocation.prototype.get$interceptor = function() {
    return this.interceptor;
  };
  CachedNoSuchMethodInvocation.prototype.get$interceptor.$reflectable = 1;
  CachedNoSuchMethodInvocation.prototype.set$interceptor = function(v) {
    return this.interceptor = v;
  };
  CachedNoSuchMethodInvocation.prototype.set$interceptor.$reflectable = 1;
  function ReflectionInfo(jsFunction, data, isAccessor, requiredParameterCount, optionalParameterCount, areOptionalParametersNamed, functionType) {
    this.jsFunction = jsFunction;
    this.data = data;
    this.isAccessor = isAccessor;
    this.requiredParameterCount = requiredParameterCount;
    this.optionalParameterCount = optionalParameterCount;
    this.areOptionalParametersNamed = areOptionalParametersNamed;
    this.functionType = functionType;
  }
  ReflectionInfo.builtin$cls = "ReflectionInfo";
  if (!"name" in ReflectionInfo)
    ReflectionInfo.name = "ReflectionInfo";
  $desc = $collectedClasses.ReflectionInfo;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ReflectionInfo.prototype = $desc;
  ReflectionInfo.prototype.get$jsFunction = function() {
    return this.jsFunction;
  };
  ReflectionInfo.prototype.get$jsFunction.$reflectable = 1;
  ReflectionInfo.prototype.get$data = function() {
    return this.data;
  };
  ReflectionInfo.prototype.get$data.$reflectable = 1;
  ReflectionInfo.prototype.get$isAccessor = function() {
    return this.isAccessor;
  };
  ReflectionInfo.prototype.get$isAccessor.$reflectable = 1;
  ReflectionInfo.prototype.get$requiredParameterCount = function() {
    return this.requiredParameterCount;
  };
  ReflectionInfo.prototype.get$requiredParameterCount.$reflectable = 1;
  ReflectionInfo.prototype.get$optionalParameterCount = function() {
    return this.optionalParameterCount;
  };
  ReflectionInfo.prototype.get$optionalParameterCount.$reflectable = 1;
  ReflectionInfo.prototype.get$areOptionalParametersNamed = function() {
    return this.areOptionalParametersNamed;
  };
  ReflectionInfo.prototype.get$areOptionalParametersNamed.$reflectable = 1;
  ReflectionInfo.prototype.get$functionType = function() {
    return this.functionType;
  };
  ReflectionInfo.prototype.get$functionType.$reflectable = 1;
  function Primitives_functionNoSuchMethod_closure(box_0, arguments_1, namedArgumentList_2) {
    this.box_0 = box_0;
    this.arguments_1 = arguments_1;
    this.namedArgumentList_2 = namedArgumentList_2;
  }
  Primitives_functionNoSuchMethod_closure.builtin$cls = "Primitives_functionNoSuchMethod_closure";
  if (!"name" in Primitives_functionNoSuchMethod_closure)
    Primitives_functionNoSuchMethod_closure.name = "Primitives_functionNoSuchMethod_closure";
  $desc = $collectedClasses.Primitives_functionNoSuchMethod_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Primitives_functionNoSuchMethod_closure.prototype = $desc;
  function Primitives_applyFunction_closure(box_0, defaultArguments_1) {
    this.box_0 = box_0;
    this.defaultArguments_1 = defaultArguments_1;
  }
  Primitives_applyFunction_closure.builtin$cls = "Primitives_applyFunction_closure";
  if (!"name" in Primitives_applyFunction_closure)
    Primitives_applyFunction_closure.name = "Primitives_applyFunction_closure";
  $desc = $collectedClasses.Primitives_applyFunction_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Primitives_applyFunction_closure.prototype = $desc;
  function TypeErrorDecoder(_pattern, _arguments, _argumentsExpr, _expr, _method, _receiver) {
    this._pattern = _pattern;
    this._arguments = _arguments;
    this._argumentsExpr = _argumentsExpr;
    this._expr = _expr;
    this._method = _method;
    this._receiver = _receiver;
  }
  TypeErrorDecoder.builtin$cls = "TypeErrorDecoder";
  if (!"name" in TypeErrorDecoder)
    TypeErrorDecoder.name = "TypeErrorDecoder";
  $desc = $collectedClasses.TypeErrorDecoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TypeErrorDecoder.prototype = $desc;
  TypeErrorDecoder.prototype.get$_pattern = function() {
    return this._pattern;
  };
  TypeErrorDecoder.prototype.get$_pattern.$reflectable = 1;
  TypeErrorDecoder.prototype.get$_arguments = function() {
    return this._arguments;
  };
  TypeErrorDecoder.prototype.get$_arguments.$reflectable = 1;
  TypeErrorDecoder.prototype.get$_argumentsExpr = function() {
    return this._argumentsExpr;
  };
  TypeErrorDecoder.prototype.get$_argumentsExpr.$reflectable = 1;
  TypeErrorDecoder.prototype.get$_expr = function() {
    return this._expr;
  };
  TypeErrorDecoder.prototype.get$_expr.$reflectable = 1;
  TypeErrorDecoder.prototype.get$_method = function() {
    return this._method;
  };
  TypeErrorDecoder.prototype.get$_method.$reflectable = 1;
  TypeErrorDecoder.prototype.get$_receiver = function() {
    return this._receiver;
  };
  TypeErrorDecoder.prototype.get$_receiver.$reflectable = 1;
  function NullError(_message, _method) {
    this._message = _message;
    this._method = _method;
  }
  NullError.builtin$cls = "NullError";
  if (!"name" in NullError)
    NullError.name = "NullError";
  $desc = $collectedClasses.NullError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NullError.prototype = $desc;
  NullError.prototype.get$_message = function() {
    return this._message;
  };
  NullError.prototype.get$_message.$reflectable = 1;
  NullError.prototype.get$_method = function() {
    return this._method;
  };
  NullError.prototype.get$_method.$reflectable = 1;
  function JsNoSuchMethodError(_message, _method, _receiver) {
    this._message = _message;
    this._method = _method;
    this._receiver = _receiver;
  }
  JsNoSuchMethodError.builtin$cls = "JsNoSuchMethodError";
  if (!"name" in JsNoSuchMethodError)
    JsNoSuchMethodError.name = "JsNoSuchMethodError";
  $desc = $collectedClasses.JsNoSuchMethodError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsNoSuchMethodError.prototype = $desc;
  JsNoSuchMethodError.prototype.get$_message = function() {
    return this._message;
  };
  JsNoSuchMethodError.prototype.get$_message.$reflectable = 1;
  JsNoSuchMethodError.prototype.get$_method = function() {
    return this._method;
  };
  JsNoSuchMethodError.prototype.get$_method.$reflectable = 1;
  JsNoSuchMethodError.prototype.get$_receiver = function() {
    return this._receiver;
  };
  JsNoSuchMethodError.prototype.get$_receiver.$reflectable = 1;
  function UnknownJsTypeError(_message) {
    this._message = _message;
  }
  UnknownJsTypeError.builtin$cls = "UnknownJsTypeError";
  if (!"name" in UnknownJsTypeError)
    UnknownJsTypeError.name = "UnknownJsTypeError";
  $desc = $collectedClasses.UnknownJsTypeError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnknownJsTypeError.prototype = $desc;
  UnknownJsTypeError.prototype.get$_message = function() {
    return this._message;
  };
  UnknownJsTypeError.prototype.get$_message.$reflectable = 1;
  function unwrapException_saveStackTrace(ex_0) {
    this.ex_0 = ex_0;
  }
  unwrapException_saveStackTrace.builtin$cls = "unwrapException_saveStackTrace";
  if (!"name" in unwrapException_saveStackTrace)
    unwrapException_saveStackTrace.name = "unwrapException_saveStackTrace";
  $desc = $collectedClasses.unwrapException_saveStackTrace;
  if ($desc instanceof Array)
    $desc = $desc[1];
  unwrapException_saveStackTrace.prototype = $desc;
  function _StackTrace(_exception, _trace) {
    this._exception = _exception;
    this._trace = _trace;
  }
  _StackTrace.builtin$cls = "_StackTrace";
  if (!"name" in _StackTrace)
    _StackTrace.name = "_StackTrace";
  $desc = $collectedClasses._StackTrace;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StackTrace.prototype = $desc;
  _StackTrace.prototype.get$_exception = function() {
    return this._exception;
  };
  _StackTrace.prototype.get$_exception.$reflectable = 1;
  _StackTrace.prototype.set$_exception = function(v) {
    return this._exception = v;
  };
  _StackTrace.prototype.set$_exception.$reflectable = 1;
  _StackTrace.prototype.get$_trace = function() {
    return this._trace;
  };
  _StackTrace.prototype.get$_trace.$reflectable = 1;
  _StackTrace.prototype.set$_trace = function(v) {
    return this._trace = v;
  };
  _StackTrace.prototype.set$_trace.$reflectable = 1;
  function invokeClosure_closure(closure_0) {
    this.closure_0 = closure_0;
  }
  invokeClosure_closure.builtin$cls = "invokeClosure_closure";
  if (!"name" in invokeClosure_closure)
    invokeClosure_closure.name = "invokeClosure_closure";
  $desc = $collectedClasses.invokeClosure_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  invokeClosure_closure.prototype = $desc;
  function invokeClosure_closure0(closure_1, arg1_2) {
    this.closure_1 = closure_1;
    this.arg1_2 = arg1_2;
  }
  invokeClosure_closure0.builtin$cls = "invokeClosure_closure0";
  if (!"name" in invokeClosure_closure0)
    invokeClosure_closure0.name = "invokeClosure_closure0";
  $desc = $collectedClasses.invokeClosure_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  invokeClosure_closure0.prototype = $desc;
  function invokeClosure_closure1(closure_3, arg1_4, arg2_5) {
    this.closure_3 = closure_3;
    this.arg1_4 = arg1_4;
    this.arg2_5 = arg2_5;
  }
  invokeClosure_closure1.builtin$cls = "invokeClosure_closure1";
  if (!"name" in invokeClosure_closure1)
    invokeClosure_closure1.name = "invokeClosure_closure1";
  $desc = $collectedClasses.invokeClosure_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  invokeClosure_closure1.prototype = $desc;
  function invokeClosure_closure2(closure_6, arg1_7, arg2_8, arg3_9) {
    this.closure_6 = closure_6;
    this.arg1_7 = arg1_7;
    this.arg2_8 = arg2_8;
    this.arg3_9 = arg3_9;
  }
  invokeClosure_closure2.builtin$cls = "invokeClosure_closure2";
  if (!"name" in invokeClosure_closure2)
    invokeClosure_closure2.name = "invokeClosure_closure2";
  $desc = $collectedClasses.invokeClosure_closure2;
  if ($desc instanceof Array)
    $desc = $desc[1];
  invokeClosure_closure2.prototype = $desc;
  function invokeClosure_closure3(closure_10, arg1_11, arg2_12, arg3_13, arg4_14) {
    this.closure_10 = closure_10;
    this.arg1_11 = arg1_11;
    this.arg2_12 = arg2_12;
    this.arg3_13 = arg3_13;
    this.arg4_14 = arg4_14;
  }
  invokeClosure_closure3.builtin$cls = "invokeClosure_closure3";
  if (!"name" in invokeClosure_closure3)
    invokeClosure_closure3.name = "invokeClosure_closure3";
  $desc = $collectedClasses.invokeClosure_closure3;
  if ($desc instanceof Array)
    $desc = $desc[1];
  invokeClosure_closure3.prototype = $desc;
  function Closure() {
  }
  Closure.builtin$cls = "Closure";
  if (!"name" in Closure)
    Closure.name = "Closure";
  $desc = $collectedClasses.Closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Closure.prototype = $desc;
  function TearOffClosure() {
  }
  TearOffClosure.builtin$cls = "TearOffClosure";
  if (!"name" in TearOffClosure)
    TearOffClosure.name = "TearOffClosure";
  $desc = $collectedClasses.TearOffClosure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TearOffClosure.prototype = $desc;
  function BoundClosure(_self, _target, _receiver, __js_helper$_name) {
    this._self = _self;
    this._target = _target;
    this._receiver = _receiver;
    this.__js_helper$_name = __js_helper$_name;
  }
  BoundClosure.builtin$cls = "BoundClosure";
  if (!"name" in BoundClosure)
    BoundClosure.name = "BoundClosure";
  $desc = $collectedClasses.BoundClosure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  BoundClosure.prototype = $desc;
  BoundClosure.prototype.get$_self = function() {
    return this._self;
  };
  BoundClosure.prototype.get$_self.$reflectable = 1;
  BoundClosure.prototype.get$_target = function() {
    return this._target;
  };
  BoundClosure.prototype.get$_target.$reflectable = 1;
  BoundClosure.prototype.get$_receiver = function() {
    return this._receiver;
  };
  BoundClosure.prototype.get$_receiver.$reflectable = 1;
  BoundClosure.prototype.get$__js_helper$_name = function() {
    return this.__js_helper$_name;
  };
  BoundClosure.prototype.get$__js_helper$_name.$reflectable = 1;
  function CastErrorImplementation(message) {
    this.message = message;
  }
  CastErrorImplementation.builtin$cls = "CastErrorImplementation";
  if (!"name" in CastErrorImplementation)
    CastErrorImplementation.name = "CastErrorImplementation";
  $desc = $collectedClasses.CastErrorImplementation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CastErrorImplementation.prototype = $desc;
  CastErrorImplementation.prototype.get$message = function() {
    return this.message;
  };
  CastErrorImplementation.prototype.get$message.$reflectable = 1;
  function RuntimeError(message) {
    this.message = message;
  }
  RuntimeError.builtin$cls = "RuntimeError";
  if (!"name" in RuntimeError)
    RuntimeError.name = "RuntimeError";
  $desc = $collectedClasses.RuntimeError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RuntimeError.prototype = $desc;
  RuntimeError.prototype.get$message = function() {
    return this.message;
  };
  RuntimeError.prototype.get$message.$reflectable = 1;
  function RuntimeType() {
  }
  RuntimeType.builtin$cls = "RuntimeType";
  if (!"name" in RuntimeType)
    RuntimeType.name = "RuntimeType";
  $desc = $collectedClasses.RuntimeType;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RuntimeType.prototype = $desc;
  function RuntimeFunctionType(returnType, parameterTypes, optionalParameterTypes, namedParameters) {
    this.returnType = returnType;
    this.parameterTypes = parameterTypes;
    this.optionalParameterTypes = optionalParameterTypes;
    this.namedParameters = namedParameters;
  }
  RuntimeFunctionType.builtin$cls = "RuntimeFunctionType";
  if (!"name" in RuntimeFunctionType)
    RuntimeFunctionType.name = "RuntimeFunctionType";
  $desc = $collectedClasses.RuntimeFunctionType;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RuntimeFunctionType.prototype = $desc;
  RuntimeFunctionType.prototype.get$returnType = function() {
    return this.returnType;
  };
  RuntimeFunctionType.prototype.get$returnType.$reflectable = 1;
  RuntimeFunctionType.prototype.get$parameterTypes = function() {
    return this.parameterTypes;
  };
  RuntimeFunctionType.prototype.get$parameterTypes.$reflectable = 1;
  RuntimeFunctionType.prototype.get$optionalParameterTypes = function() {
    return this.optionalParameterTypes;
  };
  RuntimeFunctionType.prototype.get$optionalParameterTypes.$reflectable = 1;
  RuntimeFunctionType.prototype.get$namedParameters = function() {
    return this.namedParameters;
  };
  RuntimeFunctionType.prototype.get$namedParameters.$reflectable = 1;
  function DynamicRuntimeType() {
  }
  DynamicRuntimeType.builtin$cls = "DynamicRuntimeType";
  if (!"name" in DynamicRuntimeType)
    DynamicRuntimeType.name = "DynamicRuntimeType";
  $desc = $collectedClasses.DynamicRuntimeType;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DynamicRuntimeType.prototype = $desc;
  function UnimplementedNoSuchMethodError(_message) {
    this._message = _message;
  }
  UnimplementedNoSuchMethodError.builtin$cls = "UnimplementedNoSuchMethodError";
  if (!"name" in UnimplementedNoSuchMethodError)
    UnimplementedNoSuchMethodError.name = "UnimplementedNoSuchMethodError";
  $desc = $collectedClasses.UnimplementedNoSuchMethodError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnimplementedNoSuchMethodError.prototype = $desc;
  UnimplementedNoSuchMethodError.prototype.get$_message = function() {
    return this._message;
  };
  UnimplementedNoSuchMethodError.prototype.get$_message.$reflectable = 1;
  function TypeImpl(_typeName, _unmangledName) {
    this._typeName = _typeName;
    this._unmangledName = _unmangledName;
  }
  TypeImpl.builtin$cls = "TypeImpl";
  if (!"name" in TypeImpl)
    TypeImpl.name = "TypeImpl";
  $desc = $collectedClasses.TypeImpl;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TypeImpl.prototype = $desc;
  TypeImpl.prototype.get$_typeName = function() {
    return this._typeName;
  };
  TypeImpl.prototype.get$_typeName.$reflectable = 1;
  TypeImpl.prototype.get$_unmangledName = function() {
    return this._unmangledName;
  };
  TypeImpl.prototype.get$_unmangledName.$reflectable = 1;
  TypeImpl.prototype.set$_unmangledName = function(v) {
    return this._unmangledName = v;
  };
  TypeImpl.prototype.set$_unmangledName.$reflectable = 1;
  function TypeVariable(owner, name, bound) {
    this.owner = owner;
    this.name = name;
    this.bound = bound;
  }
  TypeVariable.builtin$cls = "TypeVariable";
  if (!"name" in TypeVariable)
    TypeVariable.name = "TypeVariable";
  $desc = $collectedClasses.TypeVariable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TypeVariable.prototype = $desc;
  TypeVariable.prototype.get$owner = function() {
    return this.owner;
  };
  TypeVariable.prototype.get$owner.$reflectable = 1;
  TypeVariable.prototype.get$name = function() {
    return this.name;
  };
  TypeVariable.prototype.get$name.$reflectable = 1;
  TypeVariable.prototype.get$bound = function() {
    return this.bound;
  };
  TypeVariable.prototype.get$bound.$reflectable = 1;
  function JSSyntaxRegExp(_nativeRegExp, _nativeGlobalRegExp, _nativeAnchoredRegExp) {
    this._nativeRegExp = _nativeRegExp;
    this._nativeGlobalRegExp = _nativeGlobalRegExp;
    this._nativeAnchoredRegExp = _nativeAnchoredRegExp;
  }
  JSSyntaxRegExp.builtin$cls = "JSSyntaxRegExp";
  if (!"name" in JSSyntaxRegExp)
    JSSyntaxRegExp.name = "JSSyntaxRegExp";
  $desc = $collectedClasses.JSSyntaxRegExp;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSSyntaxRegExp.prototype = $desc;
  JSSyntaxRegExp.prototype.get$_nativeRegExp = function() {
    return this._nativeRegExp;
  };
  JSSyntaxRegExp.prototype.get$_nativeRegExp.$reflectable = 1;
  JSSyntaxRegExp.prototype.get$_nativeGlobalRegExp = function() {
    return this._nativeGlobalRegExp;
  };
  JSSyntaxRegExp.prototype.get$_nativeGlobalRegExp.$reflectable = 1;
  JSSyntaxRegExp.prototype.set$_nativeGlobalRegExp = function(v) {
    return this._nativeGlobalRegExp = v;
  };
  JSSyntaxRegExp.prototype.set$_nativeGlobalRegExp.$reflectable = 1;
  JSSyntaxRegExp.prototype.get$_nativeAnchoredRegExp = function() {
    return this._nativeAnchoredRegExp;
  };
  JSSyntaxRegExp.prototype.get$_nativeAnchoredRegExp.$reflectable = 1;
  JSSyntaxRegExp.prototype.set$_nativeAnchoredRegExp = function(v) {
    return this._nativeAnchoredRegExp = v;
  };
  JSSyntaxRegExp.prototype.set$_nativeAnchoredRegExp.$reflectable = 1;
  function _MatchImplementation(pattern, _match) {
    this.pattern = pattern;
    this._match = _match;
  }
  _MatchImplementation.builtin$cls = "_MatchImplementation";
  if (!"name" in _MatchImplementation)
    _MatchImplementation.name = "_MatchImplementation";
  $desc = $collectedClasses._MatchImplementation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MatchImplementation.prototype = $desc;
  _MatchImplementation.prototype.get$pattern = function() {
    return this.pattern;
  };
  _MatchImplementation.prototype.get$pattern.$reflectable = 1;
  _MatchImplementation.prototype.get$_match = function() {
    return this._match;
  };
  _MatchImplementation.prototype.get$_match.$reflectable = 1;
  function _AllMatchesIterable(_re, _string) {
    this._re = _re;
    this._string = _string;
  }
  _AllMatchesIterable.builtin$cls = "_AllMatchesIterable";
  if (!"name" in _AllMatchesIterable)
    _AllMatchesIterable.name = "_AllMatchesIterable";
  $desc = $collectedClasses._AllMatchesIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AllMatchesIterable.prototype = $desc;
  _AllMatchesIterable.prototype.get$_re = function() {
    return this._re;
  };
  _AllMatchesIterable.prototype.get$_re.$reflectable = 1;
  _AllMatchesIterable.prototype.get$_string = function() {
    return this._string;
  };
  _AllMatchesIterable.prototype.get$_string.$reflectable = 1;
  function _AllMatchesIterator(_regExp, _string, __js_helper$_current) {
    this._regExp = _regExp;
    this._string = _string;
    this.__js_helper$_current = __js_helper$_current;
  }
  _AllMatchesIterator.builtin$cls = "_AllMatchesIterator";
  if (!"name" in _AllMatchesIterator)
    _AllMatchesIterator.name = "_AllMatchesIterator";
  $desc = $collectedClasses._AllMatchesIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AllMatchesIterator.prototype = $desc;
  _AllMatchesIterator.prototype.get$_regExp = function() {
    return this._regExp;
  };
  _AllMatchesIterator.prototype.get$_regExp.$reflectable = 1;
  _AllMatchesIterator.prototype.get$_string = function() {
    return this._string;
  };
  _AllMatchesIterator.prototype.get$_string.$reflectable = 1;
  _AllMatchesIterator.prototype.set$_string = function(v) {
    return this._string = v;
  };
  _AllMatchesIterator.prototype.set$_string.$reflectable = 1;
  _AllMatchesIterator.prototype.get$__js_helper$_current = function() {
    return this.__js_helper$_current;
  };
  _AllMatchesIterator.prototype.get$__js_helper$_current.$reflectable = 1;
  _AllMatchesIterator.prototype.set$__js_helper$_current = function(v) {
    return this.__js_helper$_current = v;
  };
  _AllMatchesIterator.prototype.set$__js_helper$_current.$reflectable = 1;
  function StringMatch(start, input, pattern) {
    this.start = start;
    this.input = input;
    this.pattern = pattern;
  }
  StringMatch.builtin$cls = "StringMatch";
  if (!"name" in StringMatch)
    StringMatch.name = "StringMatch";
  $desc = $collectedClasses.StringMatch;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StringMatch.prototype = $desc;
  StringMatch.prototype.get$start = function() {
    return this.start;
  };
  StringMatch.prototype.get$start.$reflectable = 1;
  StringMatch.prototype.get$input = function() {
    return this.input;
  };
  StringMatch.prototype.get$input.$reflectable = 1;
  StringMatch.prototype.get$pattern = function() {
    return this.pattern;
  };
  StringMatch.prototype.get$pattern.$reflectable = 1;
  function BenchmarkBase(name) {
    this.name = name;
  }
  BenchmarkBase.builtin$cls = "BenchmarkBase";
  if (!"name" in BenchmarkBase)
    BenchmarkBase.name = "BenchmarkBase";
  $desc = $collectedClasses.BenchmarkBase;
  if ($desc instanceof Array)
    $desc = $desc[1];
  BenchmarkBase.prototype = $desc;
  BenchmarkBase.prototype.get$name = function() {
    return this.name;
  };
  BenchmarkBase.prototype.get$name.$reflectable = 1;
  function BenchmarkBase_measure_closure(this_0) {
    this.this_0 = this_0;
  }
  BenchmarkBase_measure_closure.builtin$cls = "BenchmarkBase_measure_closure";
  if (!"name" in BenchmarkBase_measure_closure)
    BenchmarkBase_measure_closure.name = "BenchmarkBase_measure_closure";
  $desc = $collectedClasses.BenchmarkBase_measure_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  BenchmarkBase_measure_closure.prototype = $desc;
  function BenchmarkBase_measure_closure0(this_1) {
    this.this_1 = this_1;
  }
  BenchmarkBase_measure_closure0.builtin$cls = "BenchmarkBase_measure_closure0";
  if (!"name" in BenchmarkBase_measure_closure0)
    BenchmarkBase_measure_closure0.name = "BenchmarkBase_measure_closure0";
  $desc = $collectedClasses.BenchmarkBase_measure_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  BenchmarkBase_measure_closure0.prototype = $desc;
  function ListIterable() {
  }
  ListIterable.builtin$cls = "ListIterable";
  if (!"name" in ListIterable)
    ListIterable.name = "ListIterable";
  $desc = $collectedClasses.ListIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListIterable.prototype = $desc;
  function SubListIterable(_iterable, _dev$_start, _endOrLength) {
    this._iterable = _iterable;
    this._dev$_start = _dev$_start;
    this._endOrLength = _endOrLength;
  }
  SubListIterable.builtin$cls = "SubListIterable";
  if (!"name" in SubListIterable)
    SubListIterable.name = "SubListIterable";
  $desc = $collectedClasses.SubListIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SubListIterable.prototype = $desc;
  SubListIterable.prototype.get$_iterable = function() {
    return this._iterable;
  };
  SubListIterable.prototype.get$_iterable.$reflectable = 1;
  SubListIterable.prototype.get$_dev$_start = function() {
    return this._dev$_start;
  };
  SubListIterable.prototype.get$_dev$_start.$reflectable = 1;
  SubListIterable.prototype.get$_endOrLength = function() {
    return this._endOrLength;
  };
  SubListIterable.prototype.get$_endOrLength.$reflectable = 1;
  function ListIterator(_iterable, _length, _index, _current) {
    this._iterable = _iterable;
    this._length = _length;
    this._index = _index;
    this._current = _current;
  }
  ListIterator.builtin$cls = "ListIterator";
  if (!"name" in ListIterator)
    ListIterator.name = "ListIterator";
  $desc = $collectedClasses.ListIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListIterator.prototype = $desc;
  ListIterator.prototype.get$_iterable = function() {
    return this._iterable;
  };
  ListIterator.prototype.get$_iterable.$reflectable = 1;
  ListIterator.prototype.get$_length = function() {
    return this._length;
  };
  ListIterator.prototype.get$_length.$reflectable = 1;
  ListIterator.prototype.get$_index = function() {
    return this._index;
  };
  ListIterator.prototype.get$_index.$reflectable = 1;
  ListIterator.prototype.set$_index = function(v) {
    return this._index = v;
  };
  ListIterator.prototype.set$_index.$reflectable = 1;
  ListIterator.prototype.get$_current = function() {
    return this._current;
  };
  ListIterator.prototype.get$_current.$reflectable = 1;
  ListIterator.prototype.set$_current = function(v) {
    return this._current = v;
  };
  ListIterator.prototype.set$_current.$reflectable = 1;
  function MappedIterable(_iterable, _f) {
    this._iterable = _iterable;
    this._f = _f;
  }
  MappedIterable.builtin$cls = "MappedIterable";
  if (!"name" in MappedIterable)
    MappedIterable.name = "MappedIterable";
  $desc = $collectedClasses.MappedIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MappedIterable.prototype = $desc;
  MappedIterable.prototype.get$_iterable = function() {
    return this._iterable;
  };
  MappedIterable.prototype.get$_iterable.$reflectable = 1;
  MappedIterable.prototype.get$_f = function() {
    return this._f;
  };
  MappedIterable.prototype.get$_f.$reflectable = 1;
  function EfficientLengthMappedIterable(_iterable, _f) {
    this._iterable = _iterable;
    this._f = _f;
  }
  EfficientLengthMappedIterable.builtin$cls = "EfficientLengthMappedIterable";
  if (!"name" in EfficientLengthMappedIterable)
    EfficientLengthMappedIterable.name = "EfficientLengthMappedIterable";
  $desc = $collectedClasses.EfficientLengthMappedIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EfficientLengthMappedIterable.prototype = $desc;
  function MappedIterator(_current, _iterator, _f) {
    this._current = _current;
    this._iterator = _iterator;
    this._f = _f;
  }
  MappedIterator.builtin$cls = "MappedIterator";
  if (!"name" in MappedIterator)
    MappedIterator.name = "MappedIterator";
  $desc = $collectedClasses.MappedIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MappedIterator.prototype = $desc;
  MappedIterator.prototype.get$_current = function() {
    return this._current;
  };
  MappedIterator.prototype.get$_current.$reflectable = 1;
  MappedIterator.prototype.set$_current = function(v) {
    return this._current = v;
  };
  MappedIterator.prototype.set$_current.$reflectable = 1;
  MappedIterator.prototype.get$_iterator = function() {
    return this._iterator;
  };
  MappedIterator.prototype.get$_iterator.$reflectable = 1;
  MappedIterator.prototype.get$_f = function() {
    return this._f;
  };
  MappedIterator.prototype.get$_f.$reflectable = 1;
  function MappedListIterable(_dev$_source, _f) {
    this._dev$_source = _dev$_source;
    this._f = _f;
  }
  MappedListIterable.builtin$cls = "MappedListIterable";
  if (!"name" in MappedListIterable)
    MappedListIterable.name = "MappedListIterable";
  $desc = $collectedClasses.MappedListIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MappedListIterable.prototype = $desc;
  MappedListIterable.prototype.get$_dev$_source = function() {
    return this._dev$_source;
  };
  MappedListIterable.prototype.get$_dev$_source.$reflectable = 1;
  MappedListIterable.prototype.get$_f = function() {
    return this._f;
  };
  MappedListIterable.prototype.get$_f.$reflectable = 1;
  function WhereIterable(_iterable, _f) {
    this._iterable = _iterable;
    this._f = _f;
  }
  WhereIterable.builtin$cls = "WhereIterable";
  if (!"name" in WhereIterable)
    WhereIterable.name = "WhereIterable";
  $desc = $collectedClasses.WhereIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  WhereIterable.prototype = $desc;
  WhereIterable.prototype.get$_iterable = function() {
    return this._iterable;
  };
  WhereIterable.prototype.get$_iterable.$reflectable = 1;
  WhereIterable.prototype.get$_f = function() {
    return this._f;
  };
  WhereIterable.prototype.get$_f.$reflectable = 1;
  function WhereIterator(_iterator, _f) {
    this._iterator = _iterator;
    this._f = _f;
  }
  WhereIterator.builtin$cls = "WhereIterator";
  if (!"name" in WhereIterator)
    WhereIterator.name = "WhereIterator";
  $desc = $collectedClasses.WhereIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  WhereIterator.prototype = $desc;
  WhereIterator.prototype.get$_iterator = function() {
    return this._iterator;
  };
  WhereIterator.prototype.get$_iterator.$reflectable = 1;
  WhereIterator.prototype.get$_f = function() {
    return this._f;
  };
  WhereIterator.prototype.get$_f.$reflectable = 1;
  function ExpandIterable(_iterable, _f) {
    this._iterable = _iterable;
    this._f = _f;
  }
  ExpandIterable.builtin$cls = "ExpandIterable";
  if (!"name" in ExpandIterable)
    ExpandIterable.name = "ExpandIterable";
  $desc = $collectedClasses.ExpandIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ExpandIterable.prototype = $desc;
  ExpandIterable.prototype.get$_iterable = function() {
    return this._iterable;
  };
  ExpandIterable.prototype.get$_iterable.$reflectable = 1;
  ExpandIterable.prototype.get$_f = function() {
    return this._f;
  };
  ExpandIterable.prototype.get$_f.$reflectable = 1;
  function ExpandIterator(_iterator, _f, _currentExpansion, _current) {
    this._iterator = _iterator;
    this._f = _f;
    this._currentExpansion = _currentExpansion;
    this._current = _current;
  }
  ExpandIterator.builtin$cls = "ExpandIterator";
  if (!"name" in ExpandIterator)
    ExpandIterator.name = "ExpandIterator";
  $desc = $collectedClasses.ExpandIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ExpandIterator.prototype = $desc;
  ExpandIterator.prototype.get$_iterator = function() {
    return this._iterator;
  };
  ExpandIterator.prototype.get$_iterator.$reflectable = 1;
  ExpandIterator.prototype.get$_f = function() {
    return this._f;
  };
  ExpandIterator.prototype.get$_f.$reflectable = 1;
  ExpandIterator.prototype.get$_currentExpansion = function() {
    return this._currentExpansion;
  };
  ExpandIterator.prototype.get$_currentExpansion.$reflectable = 1;
  ExpandIterator.prototype.set$_currentExpansion = function(v) {
    return this._currentExpansion = v;
  };
  ExpandIterator.prototype.set$_currentExpansion.$reflectable = 1;
  ExpandIterator.prototype.get$_current = function() {
    return this._current;
  };
  ExpandIterator.prototype.get$_current.$reflectable = 1;
  ExpandIterator.prototype.set$_current = function(v) {
    return this._current = v;
  };
  ExpandIterator.prototype.set$_current.$reflectable = 1;
  function TakeIterable(_iterable, _takeCount) {
    this._iterable = _iterable;
    this._takeCount = _takeCount;
  }
  TakeIterable.builtin$cls = "TakeIterable";
  if (!"name" in TakeIterable)
    TakeIterable.name = "TakeIterable";
  $desc = $collectedClasses.TakeIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TakeIterable.prototype = $desc;
  TakeIterable.prototype.get$_iterable = function() {
    return this._iterable;
  };
  TakeIterable.prototype.get$_iterable.$reflectable = 1;
  TakeIterable.prototype.get$_takeCount = function() {
    return this._takeCount;
  };
  TakeIterable.prototype.get$_takeCount.$reflectable = 1;
  function EfficientLengthTakeIterable(_iterable, _takeCount) {
    this._iterable = _iterable;
    this._takeCount = _takeCount;
  }
  EfficientLengthTakeIterable.builtin$cls = "EfficientLengthTakeIterable";
  if (!"name" in EfficientLengthTakeIterable)
    EfficientLengthTakeIterable.name = "EfficientLengthTakeIterable";
  $desc = $collectedClasses.EfficientLengthTakeIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EfficientLengthTakeIterable.prototype = $desc;
  function TakeIterator(_iterator, _dev$_remaining) {
    this._iterator = _iterator;
    this._dev$_remaining = _dev$_remaining;
  }
  TakeIterator.builtin$cls = "TakeIterator";
  if (!"name" in TakeIterator)
    TakeIterator.name = "TakeIterator";
  $desc = $collectedClasses.TakeIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TakeIterator.prototype = $desc;
  TakeIterator.prototype.get$_iterator = function() {
    return this._iterator;
  };
  TakeIterator.prototype.get$_iterator.$reflectable = 1;
  TakeIterator.prototype.get$_dev$_remaining = function() {
    return this._dev$_remaining;
  };
  TakeIterator.prototype.get$_dev$_remaining.$reflectable = 1;
  TakeIterator.prototype.set$_dev$_remaining = function(v) {
    return this._dev$_remaining = v;
  };
  TakeIterator.prototype.set$_dev$_remaining.$reflectable = 1;
  function TakeWhileIterable(_iterable, _f) {
    this._iterable = _iterable;
    this._f = _f;
  }
  TakeWhileIterable.builtin$cls = "TakeWhileIterable";
  if (!"name" in TakeWhileIterable)
    TakeWhileIterable.name = "TakeWhileIterable";
  $desc = $collectedClasses.TakeWhileIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TakeWhileIterable.prototype = $desc;
  TakeWhileIterable.prototype.get$_iterable = function() {
    return this._iterable;
  };
  TakeWhileIterable.prototype.get$_iterable.$reflectable = 1;
  TakeWhileIterable.prototype.get$_f = function() {
    return this._f;
  };
  TakeWhileIterable.prototype.get$_f.$reflectable = 1;
  function TakeWhileIterator(_iterator, _f, _isFinished) {
    this._iterator = _iterator;
    this._f = _f;
    this._isFinished = _isFinished;
  }
  TakeWhileIterator.builtin$cls = "TakeWhileIterator";
  if (!"name" in TakeWhileIterator)
    TakeWhileIterator.name = "TakeWhileIterator";
  $desc = $collectedClasses.TakeWhileIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TakeWhileIterator.prototype = $desc;
  TakeWhileIterator.prototype.get$_iterator = function() {
    return this._iterator;
  };
  TakeWhileIterator.prototype.get$_iterator.$reflectable = 1;
  TakeWhileIterator.prototype.get$_f = function() {
    return this._f;
  };
  TakeWhileIterator.prototype.get$_f.$reflectable = 1;
  TakeWhileIterator.prototype.get$_isFinished = function() {
    return this._isFinished;
  };
  TakeWhileIterator.prototype.get$_isFinished.$reflectable = 1;
  TakeWhileIterator.prototype.set$_isFinished = function(v) {
    return this._isFinished = v;
  };
  TakeWhileIterator.prototype.set$_isFinished.$reflectable = 1;
  function SkipIterable(_iterable, _skipCount) {
    this._iterable = _iterable;
    this._skipCount = _skipCount;
  }
  SkipIterable.builtin$cls = "SkipIterable";
  if (!"name" in SkipIterable)
    SkipIterable.name = "SkipIterable";
  $desc = $collectedClasses.SkipIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SkipIterable.prototype = $desc;
  SkipIterable.prototype.get$_iterable = function() {
    return this._iterable;
  };
  SkipIterable.prototype.get$_iterable.$reflectable = 1;
  SkipIterable.prototype.get$_skipCount = function() {
    return this._skipCount;
  };
  SkipIterable.prototype.get$_skipCount.$reflectable = 1;
  function EfficientLengthSkipIterable(_iterable, _skipCount) {
    this._iterable = _iterable;
    this._skipCount = _skipCount;
  }
  EfficientLengthSkipIterable.builtin$cls = "EfficientLengthSkipIterable";
  if (!"name" in EfficientLengthSkipIterable)
    EfficientLengthSkipIterable.name = "EfficientLengthSkipIterable";
  $desc = $collectedClasses.EfficientLengthSkipIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EfficientLengthSkipIterable.prototype = $desc;
  function SkipIterator(_iterator, _skipCount) {
    this._iterator = _iterator;
    this._skipCount = _skipCount;
  }
  SkipIterator.builtin$cls = "SkipIterator";
  if (!"name" in SkipIterator)
    SkipIterator.name = "SkipIterator";
  $desc = $collectedClasses.SkipIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SkipIterator.prototype = $desc;
  SkipIterator.prototype.get$_iterator = function() {
    return this._iterator;
  };
  SkipIterator.prototype.get$_iterator.$reflectable = 1;
  SkipIterator.prototype.get$_skipCount = function() {
    return this._skipCount;
  };
  SkipIterator.prototype.get$_skipCount.$reflectable = 1;
  SkipIterator.prototype.set$_skipCount = function(v) {
    return this._skipCount = v;
  };
  SkipIterator.prototype.set$_skipCount.$reflectable = 1;
  function SkipWhileIterable(_iterable, _f) {
    this._iterable = _iterable;
    this._f = _f;
  }
  SkipWhileIterable.builtin$cls = "SkipWhileIterable";
  if (!"name" in SkipWhileIterable)
    SkipWhileIterable.name = "SkipWhileIterable";
  $desc = $collectedClasses.SkipWhileIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SkipWhileIterable.prototype = $desc;
  SkipWhileIterable.prototype.get$_iterable = function() {
    return this._iterable;
  };
  SkipWhileIterable.prototype.get$_iterable.$reflectable = 1;
  SkipWhileIterable.prototype.get$_f = function() {
    return this._f;
  };
  SkipWhileIterable.prototype.get$_f.$reflectable = 1;
  function SkipWhileIterator(_iterator, _f, _hasSkipped) {
    this._iterator = _iterator;
    this._f = _f;
    this._hasSkipped = _hasSkipped;
  }
  SkipWhileIterator.builtin$cls = "SkipWhileIterator";
  if (!"name" in SkipWhileIterator)
    SkipWhileIterator.name = "SkipWhileIterator";
  $desc = $collectedClasses.SkipWhileIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SkipWhileIterator.prototype = $desc;
  SkipWhileIterator.prototype.get$_iterator = function() {
    return this._iterator;
  };
  SkipWhileIterator.prototype.get$_iterator.$reflectable = 1;
  SkipWhileIterator.prototype.get$_f = function() {
    return this._f;
  };
  SkipWhileIterator.prototype.get$_f.$reflectable = 1;
  SkipWhileIterator.prototype.get$_hasSkipped = function() {
    return this._hasSkipped;
  };
  SkipWhileIterator.prototype.get$_hasSkipped.$reflectable = 1;
  SkipWhileIterator.prototype.set$_hasSkipped = function(v) {
    return this._hasSkipped = v;
  };
  SkipWhileIterator.prototype.set$_hasSkipped.$reflectable = 1;
  function EmptyIterator() {
  }
  EmptyIterator.builtin$cls = "EmptyIterator";
  if (!"name" in EmptyIterator)
    EmptyIterator.name = "EmptyIterator";
  $desc = $collectedClasses.EmptyIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EmptyIterator.prototype = $desc;
  function UnmodifiableListMixin() {
  }
  UnmodifiableListMixin.builtin$cls = "UnmodifiableListMixin";
  if (!"name" in UnmodifiableListMixin)
    UnmodifiableListMixin.name = "UnmodifiableListMixin";
  $desc = $collectedClasses.UnmodifiableListMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnmodifiableListMixin.prototype = $desc;
  function UnmodifiableListBase() {
  }
  UnmodifiableListBase.builtin$cls = "UnmodifiableListBase";
  if (!"name" in UnmodifiableListBase)
    UnmodifiableListBase.name = "UnmodifiableListBase";
  $desc = $collectedClasses.UnmodifiableListBase;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnmodifiableListBase.prototype = $desc;
  function _ListIndicesIterable(_backedList) {
    this._backedList = _backedList;
  }
  _ListIndicesIterable.builtin$cls = "_ListIndicesIterable";
  if (!"name" in _ListIndicesIterable)
    _ListIndicesIterable.name = "_ListIndicesIterable";
  $desc = $collectedClasses._ListIndicesIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ListIndicesIterable.prototype = $desc;
  _ListIndicesIterable.prototype.get$_backedList = function() {
    return this._backedList;
  };
  _ListIndicesIterable.prototype.get$_backedList.$reflectable = 1;
  _ListIndicesIterable.prototype.set$_backedList = function(v) {
    return this._backedList = v;
  };
  _ListIndicesIterable.prototype.set$_backedList.$reflectable = 1;
  function ListMapView(_dev$_values) {
    this._dev$_values = _dev$_values;
  }
  ListMapView.builtin$cls = "ListMapView";
  if (!"name" in ListMapView)
    ListMapView.name = "ListMapView";
  $desc = $collectedClasses.ListMapView;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListMapView.prototype = $desc;
  ListMapView.prototype.get$_dev$_values = function() {
    return this._dev$_values;
  };
  ListMapView.prototype.get$_dev$_values.$reflectable = 1;
  ListMapView.prototype.set$_dev$_values = function(v) {
    return this._dev$_values = v;
  };
  ListMapView.prototype.set$_dev$_values.$reflectable = 1;
  function ReversedListIterable(_dev$_source) {
    this._dev$_source = _dev$_source;
  }
  ReversedListIterable.builtin$cls = "ReversedListIterable";
  if (!"name" in ReversedListIterable)
    ReversedListIterable.name = "ReversedListIterable";
  $desc = $collectedClasses.ReversedListIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ReversedListIterable.prototype = $desc;
  ReversedListIterable.prototype.get$_dev$_source = function() {
    return this._dev$_source;
  };
  ReversedListIterable.prototype.get$_dev$_source.$reflectable = 1;
  ReversedListIterable.prototype.set$_dev$_source = function(v) {
    return this._dev$_source = v;
  };
  ReversedListIterable.prototype.set$_dev$_source.$reflectable = 1;
  function Symbol(_name) {
    this._name = _name;
  }
  Symbol.builtin$cls = "Symbol";
  if (!"name" in Symbol)
    Symbol.name = "Symbol";
  $desc = $collectedClasses.Symbol;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Symbol.prototype = $desc;
  Symbol.prototype.get$_name = function() {
    return this._name;
  };
  Symbol.prototype.get$_name.$reflectable = 1;
  function JsMirrorSystem(_cachedLibraries, isolate) {
    this._cachedLibraries = _cachedLibraries;
    this.isolate = isolate;
  }
  JsMirrorSystem.builtin$cls = "JsMirrorSystem";
  if (!"name" in JsMirrorSystem)
    JsMirrorSystem.name = "JsMirrorSystem";
  $desc = $collectedClasses.JsMirrorSystem;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsMirrorSystem.prototype = $desc;
  JsMirrorSystem.prototype.get$_cachedLibraries = function() {
    return this._cachedLibraries;
  };
  JsMirrorSystem.prototype.get$_cachedLibraries.$reflectable = 1;
  JsMirrorSystem.prototype.set$_cachedLibraries = function(v) {
    return this._cachedLibraries = v;
  };
  JsMirrorSystem.prototype.set$_cachedLibraries.$reflectable = 1;
  JsMirrorSystem.prototype.get$isolate = function() {
    return this.isolate;
  };
  JsMirrorSystem.prototype.get$isolate.$reflectable = 1;
  function JsMirrorSystem_computeLibrariesByName_closure() {
  }
  JsMirrorSystem_computeLibrariesByName_closure.builtin$cls = "JsMirrorSystem_computeLibrariesByName_closure";
  if (!"name" in JsMirrorSystem_computeLibrariesByName_closure)
    JsMirrorSystem_computeLibrariesByName_closure.name = "JsMirrorSystem_computeLibrariesByName_closure";
  $desc = $collectedClasses.JsMirrorSystem_computeLibrariesByName_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsMirrorSystem_computeLibrariesByName_closure.prototype = $desc;
  function JsMirror() {
  }
  JsMirror.builtin$cls = "JsMirror";
  if (!"name" in JsMirror)
    JsMirror.name = "JsMirror";
  $desc = $collectedClasses.JsMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsMirror.prototype = $desc;
  function JsIsolateMirror(_isolateContext) {
    this._isolateContext = _isolateContext;
  }
  JsIsolateMirror.builtin$cls = "JsIsolateMirror";
  if (!"name" in JsIsolateMirror)
    JsIsolateMirror.name = "JsIsolateMirror";
  $desc = $collectedClasses.JsIsolateMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsIsolateMirror.prototype = $desc;
  JsIsolateMirror.prototype.get$_isolateContext = function() {
    return this._isolateContext;
  };
  JsIsolateMirror.prototype.get$_isolateContext.$reflectable = 1;
  function JsIsolateMirror_rootLibrary_closure() {
  }
  JsIsolateMirror_rootLibrary_closure.builtin$cls = "JsIsolateMirror_rootLibrary_closure";
  if (!"name" in JsIsolateMirror_rootLibrary_closure)
    JsIsolateMirror_rootLibrary_closure.name = "JsIsolateMirror_rootLibrary_closure";
  $desc = $collectedClasses.JsIsolateMirror_rootLibrary_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsIsolateMirror_rootLibrary_closure.prototype = $desc;
  function JsDeclarationMirror(simpleName) {
    this.simpleName = simpleName;
  }
  JsDeclarationMirror.builtin$cls = "JsDeclarationMirror";
  if (!"name" in JsDeclarationMirror)
    JsDeclarationMirror.name = "JsDeclarationMirror";
  $desc = $collectedClasses.JsDeclarationMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsDeclarationMirror.prototype = $desc;
  JsDeclarationMirror.prototype.get$simpleName = function() {
    return this.simpleName;
  };
  JsDeclarationMirror.prototype.get$simpleName.$reflectable = 1;
  function JsTypeVariableMirror(owner, _typeVariable, _metadataIndex, _cachedUpperBound, simpleName) {
    this.owner = owner;
    this._typeVariable = _typeVariable;
    this._metadataIndex = _metadataIndex;
    this._cachedUpperBound = _cachedUpperBound;
    this.simpleName = simpleName;
  }
  JsTypeVariableMirror.builtin$cls = "JsTypeVariableMirror";
  if (!"name" in JsTypeVariableMirror)
    JsTypeVariableMirror.name = "JsTypeVariableMirror";
  $desc = $collectedClasses.JsTypeVariableMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeVariableMirror.prototype = $desc;
  JsTypeVariableMirror.prototype.get$owner = function() {
    return this.owner;
  };
  JsTypeVariableMirror.prototype.get$owner.$reflectable = 1;
  JsTypeVariableMirror.prototype.get$_typeVariable = function() {
    return this._typeVariable;
  };
  JsTypeVariableMirror.prototype.get$_typeVariable.$reflectable = 1;
  JsTypeVariableMirror.prototype.get$_metadataIndex = function() {
    return this._metadataIndex;
  };
  JsTypeVariableMirror.prototype.get$_metadataIndex.$reflectable = 1;
  JsTypeVariableMirror.prototype.get$_cachedUpperBound = function() {
    return this._cachedUpperBound;
  };
  JsTypeVariableMirror.prototype.get$_cachedUpperBound.$reflectable = 1;
  JsTypeVariableMirror.prototype.set$_cachedUpperBound = function(v) {
    return this._cachedUpperBound = v;
  };
  JsTypeVariableMirror.prototype.set$_cachedUpperBound.$reflectable = 1;
  function JsTypeMirror(simpleName) {
    this.simpleName = simpleName;
  }
  JsTypeMirror.builtin$cls = "JsTypeMirror";
  if (!"name" in JsTypeMirror)
    JsTypeMirror.name = "JsTypeMirror";
  $desc = $collectedClasses.JsTypeMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeMirror.prototype = $desc;
  function JsLibraryMirror(uri, _classes, _functions, _metadata, _compactFieldSpecification, _isRoot, _globalObject, _cachedFunctionMirrors, _cachedFields, _cachedClasses, _cachedFunctions, _cachedGetters, _cachedSetters, _cachedVariables, _cachedMembers, _cachedDeclarations, _cachedMetadata, simpleName) {
    this.uri = uri;
    this._classes = _classes;
    this._functions = _functions;
    this._metadata = _metadata;
    this._compactFieldSpecification = _compactFieldSpecification;
    this._isRoot = _isRoot;
    this._globalObject = _globalObject;
    this._cachedFunctionMirrors = _cachedFunctionMirrors;
    this._cachedFields = _cachedFields;
    this._cachedClasses = _cachedClasses;
    this._cachedFunctions = _cachedFunctions;
    this._cachedGetters = _cachedGetters;
    this._cachedSetters = _cachedSetters;
    this._cachedVariables = _cachedVariables;
    this._cachedMembers = _cachedMembers;
    this._cachedDeclarations = _cachedDeclarations;
    this._cachedMetadata = _cachedMetadata;
    this.simpleName = simpleName;
  }
  JsLibraryMirror.builtin$cls = "JsLibraryMirror";
  if (!"name" in JsLibraryMirror)
    JsLibraryMirror.name = "JsLibraryMirror";
  $desc = $collectedClasses.JsLibraryMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsLibraryMirror.prototype = $desc;
  JsLibraryMirror.prototype.get$uri = function() {
    return this.uri;
  };
  JsLibraryMirror.prototype.get$uri.$reflectable = 1;
  JsLibraryMirror.prototype.get$_classes = function() {
    return this._classes;
  };
  JsLibraryMirror.prototype.get$_classes.$reflectable = 1;
  JsLibraryMirror.prototype.get$_functions = function() {
    return this._functions;
  };
  JsLibraryMirror.prototype.get$_functions.$reflectable = 1;
  JsLibraryMirror.prototype.get$_metadata = function() {
    return this._metadata;
  };
  JsLibraryMirror.prototype.get$_metadata.$reflectable = 1;
  JsLibraryMirror.prototype.get$_compactFieldSpecification = function() {
    return this._compactFieldSpecification;
  };
  JsLibraryMirror.prototype.get$_compactFieldSpecification.$reflectable = 1;
  JsLibraryMirror.prototype.get$_isRoot = function() {
    return this._isRoot;
  };
  JsLibraryMirror.prototype.get$_isRoot.$reflectable = 1;
  JsLibraryMirror.prototype.get$_globalObject = function() {
    return this._globalObject;
  };
  JsLibraryMirror.prototype.get$_globalObject.$reflectable = 1;
  JsLibraryMirror.prototype.get$_cachedFunctionMirrors = function() {
    return this._cachedFunctionMirrors;
  };
  JsLibraryMirror.prototype.get$_cachedFunctionMirrors.$reflectable = 1;
  JsLibraryMirror.prototype.set$_cachedFunctionMirrors = function(v) {
    return this._cachedFunctionMirrors = v;
  };
  JsLibraryMirror.prototype.set$_cachedFunctionMirrors.$reflectable = 1;
  JsLibraryMirror.prototype.get$_cachedFields = function() {
    return this._cachedFields;
  };
  JsLibraryMirror.prototype.get$_cachedFields.$reflectable = 1;
  JsLibraryMirror.prototype.set$_cachedFields = function(v) {
    return this._cachedFields = v;
  };
  JsLibraryMirror.prototype.set$_cachedFields.$reflectable = 1;
  JsLibraryMirror.prototype.get$_cachedClasses = function() {
    return this._cachedClasses;
  };
  JsLibraryMirror.prototype.get$_cachedClasses.$reflectable = 1;
  JsLibraryMirror.prototype.set$_cachedClasses = function(v) {
    return this._cachedClasses = v;
  };
  JsLibraryMirror.prototype.set$_cachedClasses.$reflectable = 1;
  JsLibraryMirror.prototype.get$_cachedFunctions = function() {
    return this._cachedFunctions;
  };
  JsLibraryMirror.prototype.get$_cachedFunctions.$reflectable = 1;
  JsLibraryMirror.prototype.set$_cachedFunctions = function(v) {
    return this._cachedFunctions = v;
  };
  JsLibraryMirror.prototype.set$_cachedFunctions.$reflectable = 1;
  JsLibraryMirror.prototype.get$_cachedGetters = function() {
    return this._cachedGetters;
  };
  JsLibraryMirror.prototype.get$_cachedGetters.$reflectable = 1;
  JsLibraryMirror.prototype.set$_cachedGetters = function(v) {
    return this._cachedGetters = v;
  };
  JsLibraryMirror.prototype.set$_cachedGetters.$reflectable = 1;
  JsLibraryMirror.prototype.get$_cachedSetters = function() {
    return this._cachedSetters;
  };
  JsLibraryMirror.prototype.get$_cachedSetters.$reflectable = 1;
  JsLibraryMirror.prototype.set$_cachedSetters = function(v) {
    return this._cachedSetters = v;
  };
  JsLibraryMirror.prototype.set$_cachedSetters.$reflectable = 1;
  JsLibraryMirror.prototype.get$_cachedVariables = function() {
    return this._cachedVariables;
  };
  JsLibraryMirror.prototype.get$_cachedVariables.$reflectable = 1;
  JsLibraryMirror.prototype.set$_cachedVariables = function(v) {
    return this._cachedVariables = v;
  };
  JsLibraryMirror.prototype.set$_cachedVariables.$reflectable = 1;
  JsLibraryMirror.prototype.get$_cachedMembers = function() {
    return this._cachedMembers;
  };
  JsLibraryMirror.prototype.get$_cachedMembers.$reflectable = 1;
  JsLibraryMirror.prototype.set$_cachedMembers = function(v) {
    return this._cachedMembers = v;
  };
  JsLibraryMirror.prototype.set$_cachedMembers.$reflectable = 1;
  JsLibraryMirror.prototype.get$_cachedDeclarations = function() {
    return this._cachedDeclarations;
  };
  JsLibraryMirror.prototype.get$_cachedDeclarations.$reflectable = 1;
  JsLibraryMirror.prototype.set$_cachedDeclarations = function(v) {
    return this._cachedDeclarations = v;
  };
  JsLibraryMirror.prototype.set$_cachedDeclarations.$reflectable = 1;
  JsLibraryMirror.prototype.get$_cachedMetadata = function() {
    return this._cachedMetadata;
  };
  JsLibraryMirror.prototype.get$_cachedMetadata.$reflectable = 1;
  JsLibraryMirror.prototype.set$_cachedMetadata = function(v) {
    return this._cachedMetadata = v;
  };
  JsLibraryMirror.prototype.set$_cachedMetadata.$reflectable = 1;
  function JsDeclarationMirror_JsObjectMirror() {
  }
  JsDeclarationMirror_JsObjectMirror.builtin$cls = "JsDeclarationMirror_JsObjectMirror";
  if (!"name" in JsDeclarationMirror_JsObjectMirror)
    JsDeclarationMirror_JsObjectMirror.name = "JsDeclarationMirror_JsObjectMirror";
  $desc = $collectedClasses.JsDeclarationMirror_JsObjectMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsDeclarationMirror_JsObjectMirror.prototype = $desc;
  function JsLibraryMirror___members_addToResult(result_0) {
    this.result_0 = result_0;
  }
  JsLibraryMirror___members_addToResult.builtin$cls = "JsLibraryMirror___members_addToResult";
  if (!"name" in JsLibraryMirror___members_addToResult)
    JsLibraryMirror___members_addToResult.name = "JsLibraryMirror___members_addToResult";
  $desc = $collectedClasses.JsLibraryMirror___members_addToResult;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsLibraryMirror___members_addToResult.prototype = $desc;
  function JsLibraryMirror_declarations_addToResult(result_0) {
    this.result_0 = result_0;
  }
  JsLibraryMirror_declarations_addToResult.builtin$cls = "JsLibraryMirror_declarations_addToResult";
  if (!"name" in JsLibraryMirror_declarations_addToResult)
    JsLibraryMirror_declarations_addToResult.name = "JsLibraryMirror_declarations_addToResult";
  $desc = $collectedClasses.JsLibraryMirror_declarations_addToResult;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsLibraryMirror_declarations_addToResult.prototype = $desc;
  function filterMembers_closure(method_0) {
    this.method_0 = method_0;
  }
  filterMembers_closure.builtin$cls = "filterMembers_closure";
  if (!"name" in filterMembers_closure)
    filterMembers_closure.name = "filterMembers_closure";
  $desc = $collectedClasses.filterMembers_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  filterMembers_closure.prototype = $desc;
  function JsMixinApplication(superclass, mixin, _cachedSimpleName, simpleName) {
    this.superclass = superclass;
    this.mixin = mixin;
    this._cachedSimpleName = _cachedSimpleName;
    this.simpleName = simpleName;
  }
  JsMixinApplication.builtin$cls = "JsMixinApplication";
  if (!"name" in JsMixinApplication)
    JsMixinApplication.name = "JsMixinApplication";
  $desc = $collectedClasses.JsMixinApplication;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsMixinApplication.prototype = $desc;
  JsMixinApplication.prototype.get$superclass = function() {
    return this.superclass;
  };
  JsMixinApplication.prototype.get$superclass.$reflectable = 1;
  JsMixinApplication.prototype.get$mixin = function() {
    return this.mixin;
  };
  JsMixinApplication.prototype.get$mixin.$reflectable = 1;
  JsMixinApplication.prototype.get$_cachedSimpleName = function() {
    return this._cachedSimpleName;
  };
  JsMixinApplication.prototype.get$_cachedSimpleName.$reflectable = 1;
  JsMixinApplication.prototype.set$_cachedSimpleName = function(v) {
    return this._cachedSimpleName = v;
  };
  JsMixinApplication.prototype.set$_cachedSimpleName.$reflectable = 1;
  function JsTypeMirror_JsObjectMirror() {
  }
  JsTypeMirror_JsObjectMirror.builtin$cls = "JsTypeMirror_JsObjectMirror";
  if (!"name" in JsTypeMirror_JsObjectMirror)
    JsTypeMirror_JsObjectMirror.name = "JsTypeMirror_JsObjectMirror";
  $desc = $collectedClasses.JsTypeMirror_JsObjectMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeMirror_JsObjectMirror.prototype = $desc;
  function JsObjectMirror() {
  }
  JsObjectMirror.builtin$cls = "JsObjectMirror";
  if (!"name" in JsObjectMirror)
    JsObjectMirror.name = "JsObjectMirror";
  $desc = $collectedClasses.JsObjectMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsObjectMirror.prototype = $desc;
  function JsInstanceMirror(reflectee) {
    this.reflectee = reflectee;
  }
  JsInstanceMirror.builtin$cls = "JsInstanceMirror";
  if (!"name" in JsInstanceMirror)
    JsInstanceMirror.name = "JsInstanceMirror";
  $desc = $collectedClasses.JsInstanceMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsInstanceMirror.prototype = $desc;
  JsInstanceMirror.prototype.get$reflectee = function() {
    return this.reflectee;
  };
  JsInstanceMirror.prototype.get$reflectee.$reflectable = 1;
  function JsInstanceMirror_invoke_closure(defaultArguments_0) {
    this.defaultArguments_0 = defaultArguments_0;
  }
  JsInstanceMirror_invoke_closure.builtin$cls = "JsInstanceMirror_invoke_closure";
  if (!"name" in JsInstanceMirror_invoke_closure)
    JsInstanceMirror_invoke_closure.name = "JsInstanceMirror_invoke_closure";
  $desc = $collectedClasses.JsInstanceMirror_invoke_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsInstanceMirror_invoke_closure.prototype = $desc;
  function JsTypeBoundClassMirror(_class, _typeArguments, _cachedTypeArguments, _cachedDeclarations, _cachedMembers, _cachedConstructors, _cachedVariables, _cachedGetters, _cachedSetters, _cachedMethodsMap, _cachedMethods, _superclass, _cachedSuperinterfaces, simpleName) {
    this._class = _class;
    this._typeArguments = _typeArguments;
    this._cachedTypeArguments = _cachedTypeArguments;
    this._cachedDeclarations = _cachedDeclarations;
    this._cachedMembers = _cachedMembers;
    this._cachedConstructors = _cachedConstructors;
    this._cachedVariables = _cachedVariables;
    this._cachedGetters = _cachedGetters;
    this._cachedSetters = _cachedSetters;
    this._cachedMethodsMap = _cachedMethodsMap;
    this._cachedMethods = _cachedMethods;
    this._superclass = _superclass;
    this._cachedSuperinterfaces = _cachedSuperinterfaces;
    this.simpleName = simpleName;
  }
  JsTypeBoundClassMirror.builtin$cls = "JsTypeBoundClassMirror";
  if (!"name" in JsTypeBoundClassMirror)
    JsTypeBoundClassMirror.name = "JsTypeBoundClassMirror";
  $desc = $collectedClasses.JsTypeBoundClassMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeBoundClassMirror.prototype = $desc;
  JsTypeBoundClassMirror.prototype.get$_class = function() {
    return this._class;
  };
  JsTypeBoundClassMirror.prototype.get$_class.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.get$_typeArguments = function() {
    return this._typeArguments;
  };
  JsTypeBoundClassMirror.prototype.get$_typeArguments.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.set$_typeArguments = function(v) {
    return this._typeArguments = v;
  };
  JsTypeBoundClassMirror.prototype.set$_typeArguments.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.get$_cachedTypeArguments = function() {
    return this._cachedTypeArguments;
  };
  JsTypeBoundClassMirror.prototype.get$_cachedTypeArguments.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.set$_cachedTypeArguments = function(v) {
    return this._cachedTypeArguments = v;
  };
  JsTypeBoundClassMirror.prototype.set$_cachedTypeArguments.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.get$_cachedDeclarations = function() {
    return this._cachedDeclarations;
  };
  JsTypeBoundClassMirror.prototype.get$_cachedDeclarations.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.set$_cachedDeclarations = function(v) {
    return this._cachedDeclarations = v;
  };
  JsTypeBoundClassMirror.prototype.set$_cachedDeclarations.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.get$_cachedMembers = function() {
    return this._cachedMembers;
  };
  JsTypeBoundClassMirror.prototype.get$_cachedMembers.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.set$_cachedMembers = function(v) {
    return this._cachedMembers = v;
  };
  JsTypeBoundClassMirror.prototype.set$_cachedMembers.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.get$_cachedConstructors = function() {
    return this._cachedConstructors;
  };
  JsTypeBoundClassMirror.prototype.get$_cachedConstructors.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.set$_cachedConstructors = function(v) {
    return this._cachedConstructors = v;
  };
  JsTypeBoundClassMirror.prototype.set$_cachedConstructors.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.get$_cachedVariables = function() {
    return this._cachedVariables;
  };
  JsTypeBoundClassMirror.prototype.get$_cachedVariables.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.set$_cachedVariables = function(v) {
    return this._cachedVariables = v;
  };
  JsTypeBoundClassMirror.prototype.set$_cachedVariables.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.get$_cachedGetters = function() {
    return this._cachedGetters;
  };
  JsTypeBoundClassMirror.prototype.get$_cachedGetters.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.set$_cachedGetters = function(v) {
    return this._cachedGetters = v;
  };
  JsTypeBoundClassMirror.prototype.set$_cachedGetters.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.get$_cachedSetters = function() {
    return this._cachedSetters;
  };
  JsTypeBoundClassMirror.prototype.get$_cachedSetters.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.set$_cachedSetters = function(v) {
    return this._cachedSetters = v;
  };
  JsTypeBoundClassMirror.prototype.set$_cachedSetters.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.get$_cachedMethodsMap = function() {
    return this._cachedMethodsMap;
  };
  JsTypeBoundClassMirror.prototype.get$_cachedMethodsMap.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.set$_cachedMethodsMap = function(v) {
    return this._cachedMethodsMap = v;
  };
  JsTypeBoundClassMirror.prototype.set$_cachedMethodsMap.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.get$_cachedMethods = function() {
    return this._cachedMethods;
  };
  JsTypeBoundClassMirror.prototype.get$_cachedMethods.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.set$_cachedMethods = function(v) {
    return this._cachedMethods = v;
  };
  JsTypeBoundClassMirror.prototype.set$_cachedMethods.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.get$_superclass = function() {
    return this._superclass;
  };
  JsTypeBoundClassMirror.prototype.get$_superclass.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.set$_superclass = function(v) {
    return this._superclass = v;
  };
  JsTypeBoundClassMirror.prototype.set$_superclass.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.get$_cachedSuperinterfaces = function() {
    return this._cachedSuperinterfaces;
  };
  JsTypeBoundClassMirror.prototype.get$_cachedSuperinterfaces.$reflectable = 1;
  JsTypeBoundClassMirror.prototype.set$_cachedSuperinterfaces = function(v) {
    return this._cachedSuperinterfaces = v;
  };
  JsTypeBoundClassMirror.prototype.set$_cachedSuperinterfaces.$reflectable = 1;
  function JsTypeBoundClassMirror_typeArguments_addTypeArgument(result_0) {
    this.result_0 = result_0;
  }
  JsTypeBoundClassMirror_typeArguments_addTypeArgument.builtin$cls = "JsTypeBoundClassMirror_typeArguments_addTypeArgument";
  if (!"name" in JsTypeBoundClassMirror_typeArguments_addTypeArgument)
    JsTypeBoundClassMirror_typeArguments_addTypeArgument.name = "JsTypeBoundClassMirror_typeArguments_addTypeArgument";
  $desc = $collectedClasses.JsTypeBoundClassMirror_typeArguments_addTypeArgument;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeBoundClassMirror_typeArguments_addTypeArgument.prototype = $desc;
  function JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure() {
  }
  JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure.builtin$cls = "JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure";
  if (!"name" in JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure)
    JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure.name = "JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure";
  $desc = $collectedClasses.JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure.prototype = $desc;
  function JsTypeBoundClassMirror_typeArguments_closure(addTypeArgument_1) {
    this.addTypeArgument_1 = addTypeArgument_1;
  }
  JsTypeBoundClassMirror_typeArguments_closure.builtin$cls = "JsTypeBoundClassMirror_typeArguments_closure";
  if (!"name" in JsTypeBoundClassMirror_typeArguments_closure)
    JsTypeBoundClassMirror_typeArguments_closure.name = "JsTypeBoundClassMirror_typeArguments_closure";
  $desc = $collectedClasses.JsTypeBoundClassMirror_typeArguments_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeBoundClassMirror_typeArguments_closure.prototype = $desc;
  function JsTypeBoundClassMirror_declarations_closure(result_0) {
    this.result_0 = result_0;
  }
  JsTypeBoundClassMirror_declarations_closure.builtin$cls = "JsTypeBoundClassMirror_declarations_closure";
  if (!"name" in JsTypeBoundClassMirror_declarations_closure)
    JsTypeBoundClassMirror_declarations_closure.name = "JsTypeBoundClassMirror_declarations_closure";
  $desc = $collectedClasses.JsTypeBoundClassMirror_declarations_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeBoundClassMirror_declarations_closure.prototype = $desc;
  function JsTypeBoundClassMirror_newInstance_closure() {
  }
  JsTypeBoundClassMirror_newInstance_closure.builtin$cls = "JsTypeBoundClassMirror_newInstance_closure";
  if (!"name" in JsTypeBoundClassMirror_newInstance_closure)
    JsTypeBoundClassMirror_newInstance_closure.name = "JsTypeBoundClassMirror_newInstance_closure";
  $desc = $collectedClasses.JsTypeBoundClassMirror_newInstance_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeBoundClassMirror_newInstance_closure.prototype = $desc;
  function JsTypeBoundClassMirror__asRuntimeType_closure() {
  }
  JsTypeBoundClassMirror__asRuntimeType_closure.builtin$cls = "JsTypeBoundClassMirror__asRuntimeType_closure";
  if (!"name" in JsTypeBoundClassMirror__asRuntimeType_closure)
    JsTypeBoundClassMirror__asRuntimeType_closure.name = "JsTypeBoundClassMirror__asRuntimeType_closure";
  $desc = $collectedClasses.JsTypeBoundClassMirror__asRuntimeType_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeBoundClassMirror__asRuntimeType_closure.prototype = $desc;
  function JsClassMirror(_mangledName, _jsConstructorOrInterceptor, _fieldsDescriptor, _fieldsMetadata, _jsConstructorCache, _metadata, _superclass, _cachedMethods, _cachedFields, _cachedConstructors, _cachedMethodsMap, _cachedGetters, _cachedSetters, _cachedVariables, _cachedMembers, _cachedDeclarations, _cachedMetadata, _cachedSuperinterfaces, _cachedTypeVariables, _owner, simpleName) {
    this._mangledName = _mangledName;
    this._jsConstructorOrInterceptor = _jsConstructorOrInterceptor;
    this._fieldsDescriptor = _fieldsDescriptor;
    this._fieldsMetadata = _fieldsMetadata;
    this._jsConstructorCache = _jsConstructorCache;
    this._metadata = _metadata;
    this._superclass = _superclass;
    this._cachedMethods = _cachedMethods;
    this._cachedFields = _cachedFields;
    this._cachedConstructors = _cachedConstructors;
    this._cachedMethodsMap = _cachedMethodsMap;
    this._cachedGetters = _cachedGetters;
    this._cachedSetters = _cachedSetters;
    this._cachedVariables = _cachedVariables;
    this._cachedMembers = _cachedMembers;
    this._cachedDeclarations = _cachedDeclarations;
    this._cachedMetadata = _cachedMetadata;
    this._cachedSuperinterfaces = _cachedSuperinterfaces;
    this._cachedTypeVariables = _cachedTypeVariables;
    this._owner = _owner;
    this.simpleName = simpleName;
  }
  JsClassMirror.builtin$cls = "JsClassMirror";
  if (!"name" in JsClassMirror)
    JsClassMirror.name = "JsClassMirror";
  $desc = $collectedClasses.JsClassMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsClassMirror.prototype = $desc;
  JsClassMirror.prototype.get$_mangledName = function() {
    return this._mangledName;
  };
  JsClassMirror.prototype.get$_mangledName.$reflectable = 1;
  JsClassMirror.prototype.get$_jsConstructorOrInterceptor = function() {
    return this._jsConstructorOrInterceptor;
  };
  JsClassMirror.prototype.get$_jsConstructorOrInterceptor.$reflectable = 1;
  JsClassMirror.prototype.get$_fieldsDescriptor = function() {
    return this._fieldsDescriptor;
  };
  JsClassMirror.prototype.get$_fieldsDescriptor.$reflectable = 1;
  JsClassMirror.prototype.get$_fieldsMetadata = function() {
    return this._fieldsMetadata;
  };
  JsClassMirror.prototype.get$_fieldsMetadata.$reflectable = 1;
  JsClassMirror.prototype.get$_jsConstructorCache = function() {
    return this._jsConstructorCache;
  };
  JsClassMirror.prototype.get$_jsConstructorCache.$reflectable = 1;
  JsClassMirror.prototype.get$_metadata = function() {
    return this._metadata;
  };
  JsClassMirror.prototype.get$_metadata.$reflectable = 1;
  JsClassMirror.prototype.set$_metadata = function(v) {
    return this._metadata = v;
  };
  JsClassMirror.prototype.set$_metadata.$reflectable = 1;
  JsClassMirror.prototype.get$_superclass = function() {
    return this._superclass;
  };
  JsClassMirror.prototype.get$_superclass.$reflectable = 1;
  JsClassMirror.prototype.set$_superclass = function(v) {
    return this._superclass = v;
  };
  JsClassMirror.prototype.set$_superclass.$reflectable = 1;
  JsClassMirror.prototype.get$_cachedMethods = function() {
    return this._cachedMethods;
  };
  JsClassMirror.prototype.get$_cachedMethods.$reflectable = 1;
  JsClassMirror.prototype.set$_cachedMethods = function(v) {
    return this._cachedMethods = v;
  };
  JsClassMirror.prototype.set$_cachedMethods.$reflectable = 1;
  JsClassMirror.prototype.get$_cachedFields = function() {
    return this._cachedFields;
  };
  JsClassMirror.prototype.get$_cachedFields.$reflectable = 1;
  JsClassMirror.prototype.set$_cachedFields = function(v) {
    return this._cachedFields = v;
  };
  JsClassMirror.prototype.set$_cachedFields.$reflectable = 1;
  JsClassMirror.prototype.get$_cachedConstructors = function() {
    return this._cachedConstructors;
  };
  JsClassMirror.prototype.get$_cachedConstructors.$reflectable = 1;
  JsClassMirror.prototype.set$_cachedConstructors = function(v) {
    return this._cachedConstructors = v;
  };
  JsClassMirror.prototype.set$_cachedConstructors.$reflectable = 1;
  JsClassMirror.prototype.get$_cachedMethodsMap = function() {
    return this._cachedMethodsMap;
  };
  JsClassMirror.prototype.get$_cachedMethodsMap.$reflectable = 1;
  JsClassMirror.prototype.set$_cachedMethodsMap = function(v) {
    return this._cachedMethodsMap = v;
  };
  JsClassMirror.prototype.set$_cachedMethodsMap.$reflectable = 1;
  JsClassMirror.prototype.get$_cachedGetters = function() {
    return this._cachedGetters;
  };
  JsClassMirror.prototype.get$_cachedGetters.$reflectable = 1;
  JsClassMirror.prototype.set$_cachedGetters = function(v) {
    return this._cachedGetters = v;
  };
  JsClassMirror.prototype.set$_cachedGetters.$reflectable = 1;
  JsClassMirror.prototype.get$_cachedSetters = function() {
    return this._cachedSetters;
  };
  JsClassMirror.prototype.get$_cachedSetters.$reflectable = 1;
  JsClassMirror.prototype.set$_cachedSetters = function(v) {
    return this._cachedSetters = v;
  };
  JsClassMirror.prototype.set$_cachedSetters.$reflectable = 1;
  JsClassMirror.prototype.get$_cachedVariables = function() {
    return this._cachedVariables;
  };
  JsClassMirror.prototype.get$_cachedVariables.$reflectable = 1;
  JsClassMirror.prototype.set$_cachedVariables = function(v) {
    return this._cachedVariables = v;
  };
  JsClassMirror.prototype.set$_cachedVariables.$reflectable = 1;
  JsClassMirror.prototype.get$_cachedMembers = function() {
    return this._cachedMembers;
  };
  JsClassMirror.prototype.get$_cachedMembers.$reflectable = 1;
  JsClassMirror.prototype.set$_cachedMembers = function(v) {
    return this._cachedMembers = v;
  };
  JsClassMirror.prototype.set$_cachedMembers.$reflectable = 1;
  JsClassMirror.prototype.get$_cachedDeclarations = function() {
    return this._cachedDeclarations;
  };
  JsClassMirror.prototype.get$_cachedDeclarations.$reflectable = 1;
  JsClassMirror.prototype.set$_cachedDeclarations = function(v) {
    return this._cachedDeclarations = v;
  };
  JsClassMirror.prototype.set$_cachedDeclarations.$reflectable = 1;
  JsClassMirror.prototype.get$_cachedMetadata = function() {
    return this._cachedMetadata;
  };
  JsClassMirror.prototype.get$_cachedMetadata.$reflectable = 1;
  JsClassMirror.prototype.set$_cachedMetadata = function(v) {
    return this._cachedMetadata = v;
  };
  JsClassMirror.prototype.set$_cachedMetadata.$reflectable = 1;
  JsClassMirror.prototype.get$_cachedSuperinterfaces = function() {
    return this._cachedSuperinterfaces;
  };
  JsClassMirror.prototype.get$_cachedSuperinterfaces.$reflectable = 1;
  JsClassMirror.prototype.set$_cachedSuperinterfaces = function(v) {
    return this._cachedSuperinterfaces = v;
  };
  JsClassMirror.prototype.set$_cachedSuperinterfaces.$reflectable = 1;
  JsClassMirror.prototype.get$_cachedTypeVariables = function() {
    return this._cachedTypeVariables;
  };
  JsClassMirror.prototype.get$_cachedTypeVariables.$reflectable = 1;
  JsClassMirror.prototype.set$_cachedTypeVariables = function(v) {
    return this._cachedTypeVariables = v;
  };
  JsClassMirror.prototype.set$_cachedTypeVariables.$reflectable = 1;
  JsClassMirror.prototype.get$_owner = function() {
    return this._owner;
  };
  JsClassMirror.prototype.get$_owner.$reflectable = 1;
  JsClassMirror.prototype.set$_owner = function(v) {
    return this._owner = v;
  };
  JsClassMirror.prototype.set$_owner.$reflectable = 1;
  function JsTypeMirror_JsObjectMirror0() {
  }
  JsTypeMirror_JsObjectMirror0.builtin$cls = "JsTypeMirror_JsObjectMirror0";
  if (!"name" in JsTypeMirror_JsObjectMirror0)
    JsTypeMirror_JsObjectMirror0.name = "JsTypeMirror_JsObjectMirror0";
  $desc = $collectedClasses.JsTypeMirror_JsObjectMirror0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeMirror_JsObjectMirror0.prototype = $desc;
  function JsClassMirror_declarations_addToResult(result_0) {
    this.result_0 = result_0;
  }
  JsClassMirror_declarations_addToResult.builtin$cls = "JsClassMirror_declarations_addToResult";
  if (!"name" in JsClassMirror_declarations_addToResult)
    JsClassMirror_declarations_addToResult.name = "JsClassMirror_declarations_addToResult";
  $desc = $collectedClasses.JsClassMirror_declarations_addToResult;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsClassMirror_declarations_addToResult.prototype = $desc;
  function JsClassMirror_declarations_closure(result_1) {
    this.result_1 = result_1;
  }
  JsClassMirror_declarations_closure.builtin$cls = "JsClassMirror_declarations_closure";
  if (!"name" in JsClassMirror_declarations_closure)
    JsClassMirror_declarations_closure.name = "JsClassMirror_declarations_closure";
  $desc = $collectedClasses.JsClassMirror_declarations_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsClassMirror_declarations_closure.prototype = $desc;
  function JsClassMirror__getInvokedInstance_closure(constructorName_0) {
    this.constructorName_0 = constructorName_0;
  }
  JsClassMirror__getInvokedInstance_closure.builtin$cls = "JsClassMirror__getInvokedInstance_closure";
  if (!"name" in JsClassMirror__getInvokedInstance_closure)
    JsClassMirror__getInvokedInstance_closure.name = "JsClassMirror__getInvokedInstance_closure";
  $desc = $collectedClasses.JsClassMirror__getInvokedInstance_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsClassMirror__getInvokedInstance_closure.prototype = $desc;
  function JsClassMirror__getInvokedInstance_closure0(this_1, constructorName_2, positionalArguments_3, namedArguments_4) {
    this.this_1 = this_1;
    this.constructorName_2 = constructorName_2;
    this.positionalArguments_3 = positionalArguments_3;
    this.namedArguments_4 = namedArguments_4;
  }
  JsClassMirror__getInvokedInstance_closure0.builtin$cls = "JsClassMirror__getInvokedInstance_closure0";
  if (!"name" in JsClassMirror__getInvokedInstance_closure0)
    JsClassMirror__getInvokedInstance_closure0.name = "JsClassMirror__getInvokedInstance_closure0";
  $desc = $collectedClasses.JsClassMirror__getInvokedInstance_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsClassMirror__getInvokedInstance_closure0.prototype = $desc;
  function JsClassMirror__getSuperinterfacesWithOwner_lookupType(owner_0) {
    this.owner_0 = owner_0;
  }
  JsClassMirror__getSuperinterfacesWithOwner_lookupType.builtin$cls = "JsClassMirror__getSuperinterfacesWithOwner_lookupType";
  if (!"name" in JsClassMirror__getSuperinterfacesWithOwner_lookupType)
    JsClassMirror__getSuperinterfacesWithOwner_lookupType.name = "JsClassMirror__getSuperinterfacesWithOwner_lookupType";
  $desc = $collectedClasses.JsClassMirror__getSuperinterfacesWithOwner_lookupType;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsClassMirror__getSuperinterfacesWithOwner_lookupType.prototype = $desc;
  function JsVariableMirror(_jsName, isFinal, isStatic, _metadataFunction, _owner, _type, _metadata, simpleName) {
    this._jsName = _jsName;
    this.isFinal = isFinal;
    this.isStatic = isStatic;
    this._metadataFunction = _metadataFunction;
    this._owner = _owner;
    this._type = _type;
    this._metadata = _metadata;
    this.simpleName = simpleName;
  }
  JsVariableMirror.builtin$cls = "JsVariableMirror";
  if (!"name" in JsVariableMirror)
    JsVariableMirror.name = "JsVariableMirror";
  $desc = $collectedClasses.JsVariableMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsVariableMirror.prototype = $desc;
  JsVariableMirror.prototype.get$_jsName = function() {
    return this._jsName;
  };
  JsVariableMirror.prototype.get$_jsName.$reflectable = 1;
  JsVariableMirror.prototype.get$isFinal = function() {
    return this.isFinal;
  };
  JsVariableMirror.prototype.get$isFinal.$reflectable = 1;
  JsVariableMirror.prototype.get$isStatic = function() {
    return this.isStatic;
  };
  JsVariableMirror.prototype.get$isStatic.$reflectable = 1;
  JsVariableMirror.prototype.get$_metadataFunction = function() {
    return this._metadataFunction;
  };
  JsVariableMirror.prototype.get$_metadataFunction.$reflectable = 1;
  JsVariableMirror.prototype.get$_owner = function() {
    return this._owner;
  };
  JsVariableMirror.prototype.get$_owner.$reflectable = 1;
  JsVariableMirror.prototype.get$_type = function() {
    return this._type;
  };
  JsVariableMirror.prototype.get$_type.$reflectable = 1;
  JsVariableMirror.prototype.get$_metadata = function() {
    return this._metadata;
  };
  JsVariableMirror.prototype.get$_metadata.$reflectable = 1;
  JsVariableMirror.prototype.set$_metadata = function(v) {
    return this._metadata = v;
  };
  JsVariableMirror.prototype.set$_metadata.$reflectable = 1;
  function JsClosureMirror(reflectee) {
    this.reflectee = reflectee;
  }
  JsClosureMirror.builtin$cls = "JsClosureMirror";
  if (!"name" in JsClosureMirror)
    JsClosureMirror.name = "JsClosureMirror";
  $desc = $collectedClasses.JsClosureMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsClosureMirror.prototype = $desc;
  function JsMethodMirror(_jsFunction, _parameterCount, isGetter, isSetter, isStatic, isConstructor, isOperator, _owner, _metadata, _returnType, _parameters, simpleName) {
    this._jsFunction = _jsFunction;
    this._parameterCount = _parameterCount;
    this.isGetter = isGetter;
    this.isSetter = isSetter;
    this.isStatic = isStatic;
    this.isConstructor = isConstructor;
    this.isOperator = isOperator;
    this._owner = _owner;
    this._metadata = _metadata;
    this._returnType = _returnType;
    this._parameters = _parameters;
    this.simpleName = simpleName;
  }
  JsMethodMirror.builtin$cls = "JsMethodMirror";
  if (!"name" in JsMethodMirror)
    JsMethodMirror.name = "JsMethodMirror";
  $desc = $collectedClasses.JsMethodMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsMethodMirror.prototype = $desc;
  JsMethodMirror.prototype.get$_jsFunction = function() {
    return this._jsFunction;
  };
  JsMethodMirror.prototype.get$_jsFunction.$reflectable = 1;
  JsMethodMirror.prototype.get$_parameterCount = function() {
    return this._parameterCount;
  };
  JsMethodMirror.prototype.get$_parameterCount.$reflectable = 1;
  JsMethodMirror.prototype.get$isGetter = function() {
    return this.isGetter;
  };
  JsMethodMirror.prototype.get$isGetter.$reflectable = 1;
  JsMethodMirror.prototype.get$isSetter = function() {
    return this.isSetter;
  };
  JsMethodMirror.prototype.get$isSetter.$reflectable = 1;
  JsMethodMirror.prototype.get$isStatic = function() {
    return this.isStatic;
  };
  JsMethodMirror.prototype.get$isStatic.$reflectable = 1;
  JsMethodMirror.prototype.get$isConstructor = function() {
    return this.isConstructor;
  };
  JsMethodMirror.prototype.get$isConstructor.$reflectable = 1;
  JsMethodMirror.prototype.get$isOperator = function() {
    return this.isOperator;
  };
  JsMethodMirror.prototype.get$isOperator.$reflectable = 1;
  JsMethodMirror.prototype.get$_owner = function() {
    return this._owner;
  };
  JsMethodMirror.prototype.get$_owner.$reflectable = 1;
  JsMethodMirror.prototype.set$_owner = function(v) {
    return this._owner = v;
  };
  JsMethodMirror.prototype.set$_owner.$reflectable = 1;
  JsMethodMirror.prototype.get$_metadata = function() {
    return this._metadata;
  };
  JsMethodMirror.prototype.get$_metadata.$reflectable = 1;
  JsMethodMirror.prototype.set$_metadata = function(v) {
    return this._metadata = v;
  };
  JsMethodMirror.prototype.set$_metadata.$reflectable = 1;
  JsMethodMirror.prototype.get$_returnType = function() {
    return this._returnType;
  };
  JsMethodMirror.prototype.get$_returnType.$reflectable = 1;
  JsMethodMirror.prototype.set$_returnType = function(v) {
    return this._returnType = v;
  };
  JsMethodMirror.prototype.set$_returnType.$reflectable = 1;
  JsMethodMirror.prototype.get$_parameters = function() {
    return this._parameters;
  };
  JsMethodMirror.prototype.get$_parameters.$reflectable = 1;
  JsMethodMirror.prototype.set$_parameters = function(v) {
    return this._parameters = v;
  };
  JsMethodMirror.prototype.set$_parameters.$reflectable = 1;
  function JsParameterMirror(owner, _type, isOptional, isNamed, __js_mirrors$_defaultValue, simpleName) {
    this.owner = owner;
    this._type = _type;
    this.isOptional = isOptional;
    this.isNamed = isNamed;
    this.__js_mirrors$_defaultValue = __js_mirrors$_defaultValue;
    this.simpleName = simpleName;
  }
  JsParameterMirror.builtin$cls = "JsParameterMirror";
  if (!"name" in JsParameterMirror)
    JsParameterMirror.name = "JsParameterMirror";
  $desc = $collectedClasses.JsParameterMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsParameterMirror.prototype = $desc;
  JsParameterMirror.prototype.get$owner = function() {
    return this.owner;
  };
  JsParameterMirror.prototype.get$owner.$reflectable = 1;
  JsParameterMirror.prototype.get$_type = function() {
    return this._type;
  };
  JsParameterMirror.prototype.get$_type.$reflectable = 1;
  JsParameterMirror.prototype.get$isOptional = function() {
    return this.isOptional;
  };
  JsParameterMirror.prototype.get$isOptional.$reflectable = 1;
  JsParameterMirror.prototype.get$isNamed = function() {
    return this.isNamed;
  };
  JsParameterMirror.prototype.get$isNamed.$reflectable = 1;
  JsParameterMirror.prototype.get$__js_mirrors$_defaultValue = function() {
    return this.__js_mirrors$_defaultValue;
  };
  JsParameterMirror.prototype.get$__js_mirrors$_defaultValue.$reflectable = 1;
  function JsTypedefMirror(_mangledName, referent, simpleName) {
    this._mangledName = _mangledName;
    this.referent = referent;
    this.simpleName = simpleName;
  }
  JsTypedefMirror.builtin$cls = "JsTypedefMirror";
  if (!"name" in JsTypedefMirror)
    JsTypedefMirror.name = "JsTypedefMirror";
  $desc = $collectedClasses.JsTypedefMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypedefMirror.prototype = $desc;
  JsTypedefMirror.prototype.get$_mangledName = function() {
    return this._mangledName;
  };
  JsTypedefMirror.prototype.get$_mangledName.$reflectable = 1;
  JsTypedefMirror.prototype.get$referent = function() {
    return this.referent;
  };
  JsTypedefMirror.prototype.get$referent.$reflectable = 1;
  JsTypedefMirror.prototype.set$referent = function(v) {
    return this.referent = v;
  };
  JsTypedefMirror.prototype.set$referent.$reflectable = 1;
  function BrokenClassMirror() {
  }
  BrokenClassMirror.builtin$cls = "BrokenClassMirror";
  if (!"name" in BrokenClassMirror)
    BrokenClassMirror.name = "BrokenClassMirror";
  $desc = $collectedClasses.BrokenClassMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  BrokenClassMirror.prototype = $desc;
  function JsFunctionTypeMirror(_typeData, _cachedToString, _cachedReturnType, _cachedParameters, owner) {
    this._typeData = _typeData;
    this._cachedToString = _cachedToString;
    this._cachedReturnType = _cachedReturnType;
    this._cachedParameters = _cachedParameters;
    this.owner = owner;
  }
  JsFunctionTypeMirror.builtin$cls = "JsFunctionTypeMirror";
  if (!"name" in JsFunctionTypeMirror)
    JsFunctionTypeMirror.name = "JsFunctionTypeMirror";
  $desc = $collectedClasses.JsFunctionTypeMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsFunctionTypeMirror.prototype = $desc;
  JsFunctionTypeMirror.prototype.get$_typeData = function() {
    return this._typeData;
  };
  JsFunctionTypeMirror.prototype.get$_typeData.$reflectable = 1;
  JsFunctionTypeMirror.prototype.get$_cachedToString = function() {
    return this._cachedToString;
  };
  JsFunctionTypeMirror.prototype.get$_cachedToString.$reflectable = 1;
  JsFunctionTypeMirror.prototype.set$_cachedToString = function(v) {
    return this._cachedToString = v;
  };
  JsFunctionTypeMirror.prototype.set$_cachedToString.$reflectable = 1;
  JsFunctionTypeMirror.prototype.get$_cachedReturnType = function() {
    return this._cachedReturnType;
  };
  JsFunctionTypeMirror.prototype.get$_cachedReturnType.$reflectable = 1;
  JsFunctionTypeMirror.prototype.set$_cachedReturnType = function(v) {
    return this._cachedReturnType = v;
  };
  JsFunctionTypeMirror.prototype.set$_cachedReturnType.$reflectable = 1;
  JsFunctionTypeMirror.prototype.get$_cachedParameters = function() {
    return this._cachedParameters;
  };
  JsFunctionTypeMirror.prototype.get$_cachedParameters.$reflectable = 1;
  JsFunctionTypeMirror.prototype.set$_cachedParameters = function(v) {
    return this._cachedParameters = v;
  };
  JsFunctionTypeMirror.prototype.set$_cachedParameters.$reflectable = 1;
  JsFunctionTypeMirror.prototype.get$owner = function() {
    return this.owner;
  };
  JsFunctionTypeMirror.prototype.get$owner.$reflectable = 1;
  JsFunctionTypeMirror.prototype.set$owner = function(v) {
    return this.owner = v;
  };
  JsFunctionTypeMirror.prototype.set$owner.$reflectable = 1;
  function typeMirrorFromRuntimeTypeRepresentation_getTypeArgument(box_0) {
    this.box_0 = box_0;
  }
  typeMirrorFromRuntimeTypeRepresentation_getTypeArgument.builtin$cls = "typeMirrorFromRuntimeTypeRepresentation_getTypeArgument";
  if (!"name" in typeMirrorFromRuntimeTypeRepresentation_getTypeArgument)
    typeMirrorFromRuntimeTypeRepresentation_getTypeArgument.name = "typeMirrorFromRuntimeTypeRepresentation_getTypeArgument";
  $desc = $collectedClasses.typeMirrorFromRuntimeTypeRepresentation_getTypeArgument;
  if ($desc instanceof Array)
    $desc = $desc[1];
  typeMirrorFromRuntimeTypeRepresentation_getTypeArgument.prototype = $desc;
  function typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable(getTypeArgument_1) {
    this.getTypeArgument_1 = getTypeArgument_1;
  }
  typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable.builtin$cls = "typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable";
  if (!"name" in typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable)
    typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable.name = "typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable";
  $desc = $collectedClasses.typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable.prototype = $desc;
  function extractMetadata_closure() {
  }
  extractMetadata_closure.builtin$cls = "extractMetadata_closure";
  if (!"name" in extractMetadata_closure)
    extractMetadata_closure.name = "extractMetadata_closure";
  $desc = $collectedClasses.extractMetadata_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  extractMetadata_closure.prototype = $desc;
  function extractMetadata_closure0() {
  }
  extractMetadata_closure0.builtin$cls = "extractMetadata_closure0";
  if (!"name" in extractMetadata_closure0)
    extractMetadata_closure0.name = "extractMetadata_closure0";
  $desc = $collectedClasses.extractMetadata_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  extractMetadata_closure0.prototype = $desc;
  function UnmodifiableMapView0(__js_mirrors$_source) {
    this.__js_mirrors$_source = __js_mirrors$_source;
  }
  UnmodifiableMapView0.builtin$cls = "UnmodifiableMapView0";
  if (!"name" in UnmodifiableMapView0)
    UnmodifiableMapView0.name = "UnmodifiableMapView0";
  $desc = $collectedClasses.UnmodifiableMapView0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnmodifiableMapView0.prototype = $desc;
  UnmodifiableMapView0.prototype.get$__js_mirrors$_source = function() {
    return this.__js_mirrors$_source;
  };
  UnmodifiableMapView0.prototype.get$__js_mirrors$_source.$reflectable = 1;
  UnmodifiableMapView0.prototype.set$__js_mirrors$_source = function(v) {
    return this.__js_mirrors$_source = v;
  };
  UnmodifiableMapView0.prototype.set$__js_mirrors$_source.$reflectable = 1;
  function computeReflectiveNames_closure(result_0) {
    this.result_0 = result_0;
  }
  computeReflectiveNames_closure.builtin$cls = "computeReflectiveNames_closure";
  if (!"name" in computeReflectiveNames_closure)
    computeReflectiveNames_closure.name = "computeReflectiveNames_closure";
  $desc = $collectedClasses.computeReflectiveNames_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  computeReflectiveNames_closure.prototype = $desc;
  function _load_closure() {
  }
  _load_closure.builtin$cls = "_load_closure";
  if (!"name" in _load_closure)
    _load_closure.name = "_load_closure";
  $desc = $collectedClasses._load_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _load_closure.prototype = $desc;
  function _load_closure0(box_0) {
    this.box_0 = box_0;
  }
  _load_closure0.builtin$cls = "_load_closure0";
  if (!"name" in _load_closure0)
    _load_closure0.name = "_load_closure0";
  $desc = $collectedClasses._load_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _load_closure0.prototype = $desc;
  function _load_closure1(box_0) {
    this.box_0 = box_0;
  }
  _load_closure1.builtin$cls = "_load_closure1";
  if (!"name" in _load_closure1)
    _load_closure1.name = "_load_closure1";
  $desc = $collectedClasses._load_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _load_closure1.prototype = $desc;
  function _load_closure2(box_0) {
    this.box_0 = box_0;
  }
  _load_closure2.builtin$cls = "_load_closure2";
  if (!"name" in _load_closure2)
    _load_closure2.name = "_load_closure2";
  $desc = $collectedClasses._load_closure2;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _load_closure2.prototype = $desc;
  function _AsyncError(error, stackTrace) {
    this.error = error;
    this.stackTrace = stackTrace;
  }
  _AsyncError.builtin$cls = "_AsyncError";
  if (!"name" in _AsyncError)
    _AsyncError.name = "_AsyncError";
  $desc = $collectedClasses._AsyncError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AsyncError.prototype = $desc;
  _AsyncError.prototype.get$error = function() {
    return this.error;
  };
  _AsyncError.prototype.get$error.$reflectable = 1;
  _AsyncError.prototype.get$stackTrace = function() {
    return this.stackTrace;
  };
  _AsyncError.prototype.get$stackTrace.$reflectable = 1;
  function _UncaughtAsyncError(error, stackTrace) {
    this.error = error;
    this.stackTrace = stackTrace;
  }
  _UncaughtAsyncError.builtin$cls = "_UncaughtAsyncError";
  if (!"name" in _UncaughtAsyncError)
    _UncaughtAsyncError.name = "_UncaughtAsyncError";
  $desc = $collectedClasses._UncaughtAsyncError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _UncaughtAsyncError.prototype = $desc;
  function _BroadcastStream(_async$_controller) {
    this._async$_controller = _async$_controller;
  }
  _BroadcastStream.builtin$cls = "_BroadcastStream";
  if (!"name" in _BroadcastStream)
    _BroadcastStream.name = "_BroadcastStream";
  $desc = $collectedClasses._BroadcastStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BroadcastStream.prototype = $desc;
  function _BroadcastSubscriptionLink(_async$_next, _async$_previous) {
    this._async$_next = _async$_next;
    this._async$_previous = _async$_previous;
  }
  _BroadcastSubscriptionLink.builtin$cls = "_BroadcastSubscriptionLink";
  if (!"name" in _BroadcastSubscriptionLink)
    _BroadcastSubscriptionLink.name = "_BroadcastSubscriptionLink";
  $desc = $collectedClasses._BroadcastSubscriptionLink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BroadcastSubscriptionLink.prototype = $desc;
  _BroadcastSubscriptionLink.prototype.get$_async$_next = function() {
    return this._async$_next;
  };
  _BroadcastSubscriptionLink.prototype.get$_async$_next.$reflectable = 1;
  _BroadcastSubscriptionLink.prototype.set$_async$_next = function(v) {
    return this._async$_next = v;
  };
  _BroadcastSubscriptionLink.prototype.set$_async$_next.$reflectable = 1;
  _BroadcastSubscriptionLink.prototype.get$_async$_previous = function() {
    return this._async$_previous;
  };
  _BroadcastSubscriptionLink.prototype.get$_async$_previous.$reflectable = 1;
  _BroadcastSubscriptionLink.prototype.set$_async$_previous = function(v) {
    return this._async$_previous = v;
  };
  _BroadcastSubscriptionLink.prototype.set$_async$_previous.$reflectable = 1;
  function _BroadcastSubscription(_eventState, _async$_next, _async$_previous, _async$_controller, _onData, _onError, _onDone, _zone, _state, _cancelFuture, _pending) {
    this._eventState = _eventState;
    this._async$_next = _async$_next;
    this._async$_previous = _async$_previous;
    this._async$_controller = _async$_controller;
    this._onData = _onData;
    this._onError = _onError;
    this._onDone = _onDone;
    this._zone = _zone;
    this._state = _state;
    this._cancelFuture = _cancelFuture;
    this._pending = _pending;
  }
  _BroadcastSubscription.builtin$cls = "_BroadcastSubscription";
  if (!"name" in _BroadcastSubscription)
    _BroadcastSubscription.name = "_BroadcastSubscription";
  $desc = $collectedClasses._BroadcastSubscription;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BroadcastSubscription.prototype = $desc;
  _BroadcastSubscription.prototype.get$_eventState = function() {
    return this._eventState;
  };
  _BroadcastSubscription.prototype.get$_eventState.$reflectable = 1;
  _BroadcastSubscription.prototype.set$_eventState = function(v) {
    return this._eventState = v;
  };
  _BroadcastSubscription.prototype.set$_eventState.$reflectable = 1;
  _BroadcastSubscription.prototype.get$_async$_next = function() {
    return this._async$_next;
  };
  _BroadcastSubscription.prototype.get$_async$_next.$reflectable = 1;
  _BroadcastSubscription.prototype.set$_async$_next = function(v) {
    return this._async$_next = v;
  };
  _BroadcastSubscription.prototype.set$_async$_next.$reflectable = 1;
  _BroadcastSubscription.prototype.get$_async$_previous = function() {
    return this._async$_previous;
  };
  _BroadcastSubscription.prototype.get$_async$_previous.$reflectable = 1;
  _BroadcastSubscription.prototype.set$_async$_previous = function(v) {
    return this._async$_previous = v;
  };
  _BroadcastSubscription.prototype.set$_async$_previous.$reflectable = 1;
  function _BroadcastStreamController(_onListen, _onCancel, _state, _async$_next, _async$_previous, _addStreamState, _doneFuture) {
    this._onListen = _onListen;
    this._onCancel = _onCancel;
    this._state = _state;
    this._async$_next = _async$_next;
    this._async$_previous = _async$_previous;
    this._addStreamState = _addStreamState;
    this._doneFuture = _doneFuture;
  }
  _BroadcastStreamController.builtin$cls = "_BroadcastStreamController";
  if (!"name" in _BroadcastStreamController)
    _BroadcastStreamController.name = "_BroadcastStreamController";
  $desc = $collectedClasses._BroadcastStreamController;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BroadcastStreamController.prototype = $desc;
  _BroadcastStreamController.prototype.get$_onListen = function() {
    return this._onListen;
  };
  _BroadcastStreamController.prototype.get$_onListen.$reflectable = 1;
  _BroadcastStreamController.prototype.get$_onCancel = function() {
    return this._onCancel;
  };
  _BroadcastStreamController.prototype.get$_onCancel.$reflectable = 1;
  _BroadcastStreamController.prototype.get$_state = function() {
    return this._state;
  };
  _BroadcastStreamController.prototype.get$_state.$reflectable = 1;
  _BroadcastStreamController.prototype.set$_state = function(v) {
    return this._state = v;
  };
  _BroadcastStreamController.prototype.set$_state.$reflectable = 1;
  _BroadcastStreamController.prototype.get$_async$_next = function() {
    return this._async$_next;
  };
  _BroadcastStreamController.prototype.get$_async$_next.$reflectable = 1;
  _BroadcastStreamController.prototype.set$_async$_next = function(v) {
    return this._async$_next = v;
  };
  _BroadcastStreamController.prototype.set$_async$_next.$reflectable = 1;
  _BroadcastStreamController.prototype.get$_async$_previous = function() {
    return this._async$_previous;
  };
  _BroadcastStreamController.prototype.get$_async$_previous.$reflectable = 1;
  _BroadcastStreamController.prototype.set$_async$_previous = function(v) {
    return this._async$_previous = v;
  };
  _BroadcastStreamController.prototype.set$_async$_previous.$reflectable = 1;
  _BroadcastStreamController.prototype.get$_addStreamState = function() {
    return this._addStreamState;
  };
  _BroadcastStreamController.prototype.get$_addStreamState.$reflectable = 1;
  _BroadcastStreamController.prototype.set$_addStreamState = function(v) {
    return this._addStreamState = v;
  };
  _BroadcastStreamController.prototype.set$_addStreamState.$reflectable = 1;
  _BroadcastStreamController.prototype.get$_doneFuture = function() {
    return this._doneFuture;
  };
  _BroadcastStreamController.prototype.get$_doneFuture.$reflectable = 1;
  _BroadcastStreamController.prototype.set$_doneFuture = function(v) {
    return this._doneFuture = v;
  };
  _BroadcastStreamController.prototype.set$_doneFuture.$reflectable = 1;
  function _SyncBroadcastStreamController(_onListen, _onCancel, _state, _async$_next, _async$_previous, _addStreamState, _doneFuture) {
    this._onListen = _onListen;
    this._onCancel = _onCancel;
    this._state = _state;
    this._async$_next = _async$_next;
    this._async$_previous = _async$_previous;
    this._addStreamState = _addStreamState;
    this._doneFuture = _doneFuture;
  }
  _SyncBroadcastStreamController.builtin$cls = "_SyncBroadcastStreamController";
  if (!"name" in _SyncBroadcastStreamController)
    _SyncBroadcastStreamController.name = "_SyncBroadcastStreamController";
  $desc = $collectedClasses._SyncBroadcastStreamController;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SyncBroadcastStreamController.prototype = $desc;
  function _SyncBroadcastStreamController__sendData_closure(this_0, data_1) {
    this.this_0 = this_0;
    this.data_1 = data_1;
  }
  _SyncBroadcastStreamController__sendData_closure.builtin$cls = "_SyncBroadcastStreamController__sendData_closure";
  if (!"name" in _SyncBroadcastStreamController__sendData_closure)
    _SyncBroadcastStreamController__sendData_closure.name = "_SyncBroadcastStreamController__sendData_closure";
  $desc = $collectedClasses._SyncBroadcastStreamController__sendData_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SyncBroadcastStreamController__sendData_closure.prototype = $desc;
  function _SyncBroadcastStreamController__sendError_closure(this_0, error_1, stackTrace_2) {
    this.this_0 = this_0;
    this.error_1 = error_1;
    this.stackTrace_2 = stackTrace_2;
  }
  _SyncBroadcastStreamController__sendError_closure.builtin$cls = "_SyncBroadcastStreamController__sendError_closure";
  if (!"name" in _SyncBroadcastStreamController__sendError_closure)
    _SyncBroadcastStreamController__sendError_closure.name = "_SyncBroadcastStreamController__sendError_closure";
  $desc = $collectedClasses._SyncBroadcastStreamController__sendError_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SyncBroadcastStreamController__sendError_closure.prototype = $desc;
  function _SyncBroadcastStreamController__sendDone_closure(this_0) {
    this.this_0 = this_0;
  }
  _SyncBroadcastStreamController__sendDone_closure.builtin$cls = "_SyncBroadcastStreamController__sendDone_closure";
  if (!"name" in _SyncBroadcastStreamController__sendDone_closure)
    _SyncBroadcastStreamController__sendDone_closure.name = "_SyncBroadcastStreamController__sendDone_closure";
  $desc = $collectedClasses._SyncBroadcastStreamController__sendDone_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SyncBroadcastStreamController__sendDone_closure.prototype = $desc;
  function _AsyncBroadcastStreamController(_onListen, _onCancel, _state, _async$_next, _async$_previous, _addStreamState, _doneFuture) {
    this._onListen = _onListen;
    this._onCancel = _onCancel;
    this._state = _state;
    this._async$_next = _async$_next;
    this._async$_previous = _async$_previous;
    this._addStreamState = _addStreamState;
    this._doneFuture = _doneFuture;
  }
  _AsyncBroadcastStreamController.builtin$cls = "_AsyncBroadcastStreamController";
  if (!"name" in _AsyncBroadcastStreamController)
    _AsyncBroadcastStreamController.name = "_AsyncBroadcastStreamController";
  $desc = $collectedClasses._AsyncBroadcastStreamController;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AsyncBroadcastStreamController.prototype = $desc;
  function _AsBroadcastStreamController(_pending, _onListen, _onCancel, _state, _async$_next, _async$_previous, _addStreamState, _doneFuture) {
    this._pending = _pending;
    this._onListen = _onListen;
    this._onCancel = _onCancel;
    this._state = _state;
    this._async$_next = _async$_next;
    this._async$_previous = _async$_previous;
    this._addStreamState = _addStreamState;
    this._doneFuture = _doneFuture;
  }
  _AsBroadcastStreamController.builtin$cls = "_AsBroadcastStreamController";
  if (!"name" in _AsBroadcastStreamController)
    _AsBroadcastStreamController.name = "_AsBroadcastStreamController";
  $desc = $collectedClasses._AsBroadcastStreamController;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AsBroadcastStreamController.prototype = $desc;
  _AsBroadcastStreamController.prototype.get$_pending = function() {
    return this._pending;
  };
  _AsBroadcastStreamController.prototype.get$_pending.$reflectable = 1;
  _AsBroadcastStreamController.prototype.set$_pending = function(v) {
    return this._pending = v;
  };
  _AsBroadcastStreamController.prototype.set$_pending.$reflectable = 1;
  function _DoneSubscription(_pauseCount) {
    this._pauseCount = _pauseCount;
  }
  _DoneSubscription.builtin$cls = "_DoneSubscription";
  if (!"name" in _DoneSubscription)
    _DoneSubscription.name = "_DoneSubscription";
  $desc = $collectedClasses._DoneSubscription;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DoneSubscription.prototype = $desc;
  _DoneSubscription.prototype.get$_pauseCount = function() {
    return this._pauseCount;
  };
  _DoneSubscription.prototype.get$_pauseCount.$reflectable = 1;
  _DoneSubscription.prototype.set$_pauseCount = function(v) {
    return this._pauseCount = v;
  };
  _DoneSubscription.prototype.set$_pauseCount.$reflectable = 1;
  function DeferredLibrary(libraryName, uri) {
    this.libraryName = libraryName;
    this.uri = uri;
  }
  DeferredLibrary.builtin$cls = "DeferredLibrary";
  if (!"name" in DeferredLibrary)
    DeferredLibrary.name = "DeferredLibrary";
  $desc = $collectedClasses.DeferredLibrary;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DeferredLibrary.prototype = $desc;
  DeferredLibrary.prototype.get$libraryName = function() {
    return this.libraryName;
  };
  DeferredLibrary.prototype.get$libraryName.$reflectable = 1;
  DeferredLibrary.prototype.get$uri = function() {
    return this.uri;
  };
  DeferredLibrary.prototype.get$uri.$reflectable = 1;
  function Future() {
  }
  Future.builtin$cls = "Future";
  if (!"name" in Future)
    Future.name = "Future";
  $desc = $collectedClasses.Future;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Future.prototype = $desc;
  function Future_Future_closure(computation_0, result_1) {
    this.computation_0 = computation_0;
    this.result_1 = result_1;
  }
  Future_Future_closure.builtin$cls = "Future_Future_closure";
  if (!"name" in Future_Future_closure)
    Future_Future_closure.name = "Future_Future_closure";
  $desc = $collectedClasses.Future_Future_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Future_Future_closure.prototype = $desc;
  function Future_Future$microtask_closure(computation_0, result_1) {
    this.computation_0 = computation_0;
    this.result_1 = result_1;
  }
  Future_Future$microtask_closure.builtin$cls = "Future_Future$microtask_closure";
  if (!"name" in Future_Future$microtask_closure)
    Future_Future$microtask_closure.name = "Future_Future$microtask_closure";
  $desc = $collectedClasses.Future_Future$microtask_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Future_Future$microtask_closure.prototype = $desc;
  function Future_Future$delayed_closure(computation_0) {
    this.computation_0 = computation_0;
  }
  Future_Future$delayed_closure.builtin$cls = "Future_Future$delayed_closure";
  if (!"name" in Future_Future$delayed_closure)
    Future_Future$delayed_closure.name = "Future_Future$delayed_closure";
  $desc = $collectedClasses.Future_Future$delayed_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Future_Future$delayed_closure.prototype = $desc;
  function Future_Future$delayed_closure0(completer_1) {
    this.completer_1 = completer_1;
  }
  Future_Future$delayed_closure0.builtin$cls = "Future_Future$delayed_closure0";
  if (!"name" in Future_Future$delayed_closure0)
    Future_Future$delayed_closure0.name = "Future_Future$delayed_closure0";
  $desc = $collectedClasses.Future_Future$delayed_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Future_Future$delayed_closure0.prototype = $desc;
  function Future_wait_handleError(box_0, eagerError_1) {
    this.box_0 = box_0;
    this.eagerError_1 = eagerError_1;
  }
  Future_wait_handleError.builtin$cls = "Future_wait_handleError";
  if (!"name" in Future_wait_handleError)
    Future_wait_handleError.name = "Future_wait_handleError";
  $desc = $collectedClasses.Future_wait_handleError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Future_wait_handleError.prototype = $desc;
  function Future_wait_closure(box_0, eagerError_2, pos_3) {
    this.box_0 = box_0;
    this.eagerError_2 = eagerError_2;
    this.pos_3 = pos_3;
  }
  Future_wait_closure.builtin$cls = "Future_wait_closure";
  if (!"name" in Future_wait_closure)
    Future_wait_closure.name = "Future_wait_closure";
  $desc = $collectedClasses.Future_wait_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Future_wait_closure.prototype = $desc;
  function Future_forEach_nextElement(f_0, doneSignal_1, iterator_2) {
    this.f_0 = f_0;
    this.doneSignal_1 = doneSignal_1;
    this.iterator_2 = iterator_2;
  }
  Future_forEach_nextElement.builtin$cls = "Future_forEach_nextElement";
  if (!"name" in Future_forEach_nextElement)
    Future_forEach_nextElement.name = "Future_forEach_nextElement";
  $desc = $collectedClasses.Future_forEach_nextElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Future_forEach_nextElement.prototype = $desc;
  function Future_forEach_nextElement_closure(f_3, iterator_4) {
    this.f_3 = f_3;
    this.iterator_4 = iterator_4;
  }
  Future_forEach_nextElement_closure.builtin$cls = "Future_forEach_nextElement_closure";
  if (!"name" in Future_forEach_nextElement_closure)
    Future_forEach_nextElement_closure.name = "Future_forEach_nextElement_closure";
  $desc = $collectedClasses.Future_forEach_nextElement_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Future_forEach_nextElement_closure.prototype = $desc;
  function TimeoutException(message, duration) {
    this.message = message;
    this.duration = duration;
  }
  TimeoutException.builtin$cls = "TimeoutException";
  if (!"name" in TimeoutException)
    TimeoutException.name = "TimeoutException";
  $desc = $collectedClasses.TimeoutException;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TimeoutException.prototype = $desc;
  TimeoutException.prototype.get$message = function() {
    return this.message;
  };
  TimeoutException.prototype.get$message.$reflectable = 1;
  TimeoutException.prototype.get$duration = function() {
    return this.duration;
  };
  TimeoutException.prototype.get$duration.$reflectable = 1;
  function Completer() {
  }
  Completer.builtin$cls = "Completer";
  if (!"name" in Completer)
    Completer.name = "Completer";
  $desc = $collectedClasses.Completer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Completer.prototype = $desc;
  function _Completer(future) {
    this.future = future;
  }
  _Completer.builtin$cls = "_Completer";
  if (!"name" in _Completer)
    _Completer.name = "_Completer";
  $desc = $collectedClasses._Completer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Completer.prototype = $desc;
  _Completer.prototype.get$future = function() {
    return this.future;
  };
  _Completer.prototype.get$future.$reflectable = 1;
  function _AsyncCompleter(future) {
    this.future = future;
  }
  _AsyncCompleter.builtin$cls = "_AsyncCompleter";
  if (!"name" in _AsyncCompleter)
    _AsyncCompleter.name = "_AsyncCompleter";
  $desc = $collectedClasses._AsyncCompleter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AsyncCompleter.prototype = $desc;
  function _SyncCompleter(future) {
    this.future = future;
  }
  _SyncCompleter.builtin$cls = "_SyncCompleter";
  if (!"name" in _SyncCompleter)
    _SyncCompleter.name = "_SyncCompleter";
  $desc = $collectedClasses._SyncCompleter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SyncCompleter.prototype = $desc;
  function _Future(_state, _zone, _resultOrListeners, _nextListener, _onValueCallback, _errorTestCallback, _onErrorCallback, _whenCompleteActionCallback) {
    this._state = _state;
    this._zone = _zone;
    this._resultOrListeners = _resultOrListeners;
    this._nextListener = _nextListener;
    this._onValueCallback = _onValueCallback;
    this._errorTestCallback = _errorTestCallback;
    this._onErrorCallback = _onErrorCallback;
    this._whenCompleteActionCallback = _whenCompleteActionCallback;
  }
  _Future.builtin$cls = "_Future";
  if (!"name" in _Future)
    _Future.name = "_Future";
  $desc = $collectedClasses._Future;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future.prototype = $desc;
  _Future.prototype.get$_state = function() {
    return this._state;
  };
  _Future.prototype.get$_state.$reflectable = 1;
  _Future.prototype.set$_state = function(v) {
    return this._state = v;
  };
  _Future.prototype.set$_state.$reflectable = 1;
  _Future.prototype.get$_zone = function() {
    return this._zone;
  };
  _Future.prototype.get$_zone.$reflectable = 1;
  _Future.prototype.get$_resultOrListeners = function() {
    return this._resultOrListeners;
  };
  _Future.prototype.get$_resultOrListeners.$reflectable = 1;
  _Future.prototype.set$_resultOrListeners = function(v) {
    return this._resultOrListeners = v;
  };
  _Future.prototype.set$_resultOrListeners.$reflectable = 1;
  _Future.prototype.get$_nextListener = function() {
    return this._nextListener;
  };
  _Future.prototype.get$_nextListener.$reflectable = 1;
  _Future.prototype.set$_nextListener = function(v) {
    return this._nextListener = v;
  };
  _Future.prototype.set$_nextListener.$reflectable = 1;
  _Future.prototype.get$_onValueCallback = function() {
    return this._onValueCallback;
  };
  _Future.prototype.get$_onValueCallback.$reflectable = 1;
  _Future.prototype.get$_errorTestCallback = function() {
    return this._errorTestCallback;
  };
  _Future.prototype.get$_errorTestCallback.$reflectable = 1;
  _Future.prototype.get$_onErrorCallback = function() {
    return this._onErrorCallback;
  };
  _Future.prototype.get$_onErrorCallback.$reflectable = 1;
  _Future.prototype.get$_whenCompleteActionCallback = function() {
    return this._whenCompleteActionCallback;
  };
  _Future.prototype.get$_whenCompleteActionCallback.$reflectable = 1;
  function _Future__addListener_closure(this_0, listener_1) {
    this.this_0 = this_0;
    this.listener_1 = listener_1;
  }
  _Future__addListener_closure.builtin$cls = "_Future__addListener_closure";
  if (!"name" in _Future__addListener_closure)
    _Future__addListener_closure.name = "_Future__addListener_closure";
  $desc = $collectedClasses._Future__addListener_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__addListener_closure.prototype = $desc;
  function _Future__chainFutures_closure(target_0) {
    this.target_0 = target_0;
  }
  _Future__chainFutures_closure.builtin$cls = "_Future__chainFutures_closure";
  if (!"name" in _Future__chainFutures_closure)
    _Future__chainFutures_closure.name = "_Future__chainFutures_closure";
  $desc = $collectedClasses._Future__chainFutures_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__chainFutures_closure.prototype = $desc;
  function _Future__chainFutures_closure0(target_1) {
    this.target_1 = target_1;
  }
  _Future__chainFutures_closure0.builtin$cls = "_Future__chainFutures_closure0";
  if (!"name" in _Future__chainFutures_closure0)
    _Future__chainFutures_closure0.name = "_Future__chainFutures_closure0";
  $desc = $collectedClasses._Future__chainFutures_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__chainFutures_closure0.prototype = $desc;
  function _Future__asyncComplete_closure(this_0, value_1) {
    this.this_0 = this_0;
    this.value_1 = value_1;
  }
  _Future__asyncComplete_closure.builtin$cls = "_Future__asyncComplete_closure";
  if (!"name" in _Future__asyncComplete_closure)
    _Future__asyncComplete_closure.name = "_Future__asyncComplete_closure";
  $desc = $collectedClasses._Future__asyncComplete_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__asyncComplete_closure.prototype = $desc;
  function _Future__asyncCompleteError_closure(this_0, error_1, stackTrace_2) {
    this.this_0 = this_0;
    this.error_1 = error_1;
    this.stackTrace_2 = stackTrace_2;
  }
  _Future__asyncCompleteError_closure.builtin$cls = "_Future__asyncCompleteError_closure";
  if (!"name" in _Future__asyncCompleteError_closure)
    _Future__asyncCompleteError_closure.name = "_Future__asyncCompleteError_closure";
  $desc = $collectedClasses._Future__asyncCompleteError_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__asyncCompleteError_closure.prototype = $desc;
  function _Future__propagateToListeners_closure(box_2, listener_3) {
    this.box_2 = box_2;
    this.listener_3 = listener_3;
  }
  _Future__propagateToListeners_closure.builtin$cls = "_Future__propagateToListeners_closure";
  if (!"name" in _Future__propagateToListeners_closure)
    _Future__propagateToListeners_closure.name = "_Future__propagateToListeners_closure";
  $desc = $collectedClasses._Future__propagateToListeners_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__propagateToListeners_closure.prototype = $desc;
  function _Future__propagateToListeners_closure0(box_2, box_1, hasError_4, listener_5) {
    this.box_2 = box_2;
    this.box_1 = box_1;
    this.hasError_4 = hasError_4;
    this.listener_5 = listener_5;
  }
  _Future__propagateToListeners_closure0.builtin$cls = "_Future__propagateToListeners_closure0";
  if (!"name" in _Future__propagateToListeners_closure0)
    _Future__propagateToListeners_closure0.name = "_Future__propagateToListeners_closure0";
  $desc = $collectedClasses._Future__propagateToListeners_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__propagateToListeners_closure0.prototype = $desc;
  function _Future__propagateToListeners__closure(box_2, listener_6) {
    this.box_2 = box_2;
    this.listener_6 = listener_6;
  }
  _Future__propagateToListeners__closure.builtin$cls = "_Future__propagateToListeners__closure";
  if (!"name" in _Future__propagateToListeners__closure)
    _Future__propagateToListeners__closure.name = "_Future__propagateToListeners__closure";
  $desc = $collectedClasses._Future__propagateToListeners__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__propagateToListeners__closure.prototype = $desc;
  function _Future__propagateToListeners__closure0(box_0, listener_7) {
    this.box_0 = box_0;
    this.listener_7 = listener_7;
  }
  _Future__propagateToListeners__closure0.builtin$cls = "_Future__propagateToListeners__closure0";
  if (!"name" in _Future__propagateToListeners__closure0)
    _Future__propagateToListeners__closure0.name = "_Future__propagateToListeners__closure0";
  $desc = $collectedClasses._Future__propagateToListeners__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__propagateToListeners__closure0.prototype = $desc;
  function _Future_timeout_closure(timeLimit_1, result_2) {
    this.timeLimit_1 = timeLimit_1;
    this.result_2 = result_2;
  }
  _Future_timeout_closure.builtin$cls = "_Future_timeout_closure";
  if (!"name" in _Future_timeout_closure)
    _Future_timeout_closure.name = "_Future_timeout_closure";
  $desc = $collectedClasses._Future_timeout_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future_timeout_closure.prototype = $desc;
  function _Future_timeout_closure0(box_0, result_3, zone_4) {
    this.box_0 = box_0;
    this.result_3 = result_3;
    this.zone_4 = zone_4;
  }
  _Future_timeout_closure0.builtin$cls = "_Future_timeout_closure0";
  if (!"name" in _Future_timeout_closure0)
    _Future_timeout_closure0.name = "_Future_timeout_closure0";
  $desc = $collectedClasses._Future_timeout_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future_timeout_closure0.prototype = $desc;
  function _Future_timeout_closure1(box_0, this_5, result_6) {
    this.box_0 = box_0;
    this.this_5 = this_5;
    this.result_6 = result_6;
  }
  _Future_timeout_closure1.builtin$cls = "_Future_timeout_closure1";
  if (!"name" in _Future_timeout_closure1)
    _Future_timeout_closure1.name = "_Future_timeout_closure1";
  $desc = $collectedClasses._Future_timeout_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future_timeout_closure1.prototype = $desc;
  function _Future_timeout_closure2(box_0, result_7) {
    this.box_0 = box_0;
    this.result_7 = result_7;
  }
  _Future_timeout_closure2.builtin$cls = "_Future_timeout_closure2";
  if (!"name" in _Future_timeout_closure2)
    _Future_timeout_closure2.name = "_Future_timeout_closure2";
  $desc = $collectedClasses._Future_timeout_closure2;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future_timeout_closure2.prototype = $desc;
  function _AsyncRun() {
  }
  _AsyncRun.builtin$cls = "_AsyncRun";
  if (!"name" in _AsyncRun)
    _AsyncRun.name = "_AsyncRun";
  $desc = $collectedClasses._AsyncRun;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AsyncRun.prototype = $desc;
  function Stream() {
  }
  Stream.builtin$cls = "Stream";
  if (!"name" in Stream)
    Stream.name = "Stream";
  $desc = $collectedClasses.Stream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream.prototype = $desc;
  function Stream_Stream$fromFuture_closure(controller_0) {
    this.controller_0 = controller_0;
  }
  Stream_Stream$fromFuture_closure.builtin$cls = "Stream_Stream$fromFuture_closure";
  if (!"name" in Stream_Stream$fromFuture_closure)
    Stream_Stream$fromFuture_closure.name = "Stream_Stream$fromFuture_closure";
  $desc = $collectedClasses.Stream_Stream$fromFuture_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_Stream$fromFuture_closure.prototype = $desc;
  function Stream_Stream$fromFuture_closure0(controller_1) {
    this.controller_1 = controller_1;
  }
  Stream_Stream$fromFuture_closure0.builtin$cls = "Stream_Stream$fromFuture_closure0";
  if (!"name" in Stream_Stream$fromFuture_closure0)
    Stream_Stream$fromFuture_closure0.name = "Stream_Stream$fromFuture_closure0";
  $desc = $collectedClasses.Stream_Stream$fromFuture_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_Stream$fromFuture_closure0.prototype = $desc;
  function Stream_Stream$fromIterable_closure(T_0, data_1) {
    this.T_0 = T_0;
    this.data_1 = data_1;
  }
  Stream_Stream$fromIterable_closure.builtin$cls = "Stream_Stream$fromIterable_closure";
  if (!"name" in Stream_Stream$fromIterable_closure)
    Stream_Stream$fromIterable_closure.name = "Stream_Stream$fromIterable_closure";
  $desc = $collectedClasses.Stream_Stream$fromIterable_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_Stream$fromIterable_closure.prototype = $desc;
  function Stream_Stream$periodic_closure() {
  }
  Stream_Stream$periodic_closure.builtin$cls = "Stream_Stream$periodic_closure";
  if (!"name" in Stream_Stream$periodic_closure)
    Stream_Stream$periodic_closure.name = "Stream_Stream$periodic_closure";
  $desc = $collectedClasses.Stream_Stream$periodic_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_Stream$periodic_closure.prototype = $desc;
  function Stream_Stream$periodic_sendEvent(box_0, watch_1) {
    this.box_0 = box_0;
    this.watch_1 = watch_1;
  }
  Stream_Stream$periodic_sendEvent.builtin$cls = "Stream_Stream$periodic_sendEvent";
  if (!"name" in Stream_Stream$periodic_sendEvent)
    Stream_Stream$periodic_sendEvent.name = "Stream_Stream$periodic_sendEvent";
  $desc = $collectedClasses.Stream_Stream$periodic_sendEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_Stream$periodic_sendEvent.prototype = $desc;
  function Stream_Stream$periodic_startPeriodicTimer(box_0, period_2, sendEvent_3) {
    this.box_0 = box_0;
    this.period_2 = period_2;
    this.sendEvent_3 = sendEvent_3;
  }
  Stream_Stream$periodic_startPeriodicTimer.builtin$cls = "Stream_Stream$periodic_startPeriodicTimer";
  if (!"name" in Stream_Stream$periodic_startPeriodicTimer)
    Stream_Stream$periodic_startPeriodicTimer.name = "Stream_Stream$periodic_startPeriodicTimer";
  $desc = $collectedClasses.Stream_Stream$periodic_startPeriodicTimer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_Stream$periodic_startPeriodicTimer.prototype = $desc;
  function Stream_Stream$periodic_startPeriodicTimer_closure(sendEvent_4) {
    this.sendEvent_4 = sendEvent_4;
  }
  Stream_Stream$periodic_startPeriodicTimer_closure.builtin$cls = "Stream_Stream$periodic_startPeriodicTimer_closure";
  if (!"name" in Stream_Stream$periodic_startPeriodicTimer_closure)
    Stream_Stream$periodic_startPeriodicTimer_closure.name = "Stream_Stream$periodic_startPeriodicTimer_closure";
  $desc = $collectedClasses.Stream_Stream$periodic_startPeriodicTimer_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_Stream$periodic_startPeriodicTimer_closure.prototype = $desc;
  function Stream_Stream$periodic_closure1(watch_5, startPeriodicTimer_6) {
    this.watch_5 = watch_5;
    this.startPeriodicTimer_6 = startPeriodicTimer_6;
  }
  Stream_Stream$periodic_closure1.builtin$cls = "Stream_Stream$periodic_closure1";
  if (!"name" in Stream_Stream$periodic_closure1)
    Stream_Stream$periodic_closure1.name = "Stream_Stream$periodic_closure1";
  $desc = $collectedClasses.Stream_Stream$periodic_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_Stream$periodic_closure1.prototype = $desc;
  function Stream_Stream$periodic_closure2(box_0, watch_7) {
    this.box_0 = box_0;
    this.watch_7 = watch_7;
  }
  Stream_Stream$periodic_closure2.builtin$cls = "Stream_Stream$periodic_closure2";
  if (!"name" in Stream_Stream$periodic_closure2)
    Stream_Stream$periodic_closure2.name = "Stream_Stream$periodic_closure2";
  $desc = $collectedClasses.Stream_Stream$periodic_closure2;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_Stream$periodic_closure2.prototype = $desc;
  function Stream_Stream$periodic_closure3(box_0, period_8, watch_9, sendEvent_10, startPeriodicTimer_11) {
    this.box_0 = box_0;
    this.period_8 = period_8;
    this.watch_9 = watch_9;
    this.sendEvent_10 = sendEvent_10;
    this.startPeriodicTimer_11 = startPeriodicTimer_11;
  }
  Stream_Stream$periodic_closure3.builtin$cls = "Stream_Stream$periodic_closure3";
  if (!"name" in Stream_Stream$periodic_closure3)
    Stream_Stream$periodic_closure3.name = "Stream_Stream$periodic_closure3";
  $desc = $collectedClasses.Stream_Stream$periodic_closure3;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_Stream$periodic_closure3.prototype = $desc;
  function Stream_Stream$periodic__closure(box_0, sendEvent_12, startPeriodicTimer_13) {
    this.box_0 = box_0;
    this.sendEvent_12 = sendEvent_12;
    this.startPeriodicTimer_13 = startPeriodicTimer_13;
  }
  Stream_Stream$periodic__closure.builtin$cls = "Stream_Stream$periodic__closure";
  if (!"name" in Stream_Stream$periodic__closure)
    Stream_Stream$periodic__closure.name = "Stream_Stream$periodic__closure";
  $desc = $collectedClasses.Stream_Stream$periodic__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_Stream$periodic__closure.prototype = $desc;
  function Stream_Stream$periodic_closure0(box_0) {
    this.box_0 = box_0;
  }
  Stream_Stream$periodic_closure0.builtin$cls = "Stream_Stream$periodic_closure0";
  if (!"name" in Stream_Stream$periodic_closure0)
    Stream_Stream$periodic_closure0.name = "Stream_Stream$periodic_closure0";
  $desc = $collectedClasses.Stream_Stream$periodic_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_Stream$periodic_closure0.prototype = $desc;
  function Stream_pipe_closure(streamConsumer_0) {
    this.streamConsumer_0 = streamConsumer_0;
  }
  Stream_pipe_closure.builtin$cls = "Stream_pipe_closure";
  if (!"name" in Stream_pipe_closure)
    Stream_pipe_closure.name = "Stream_pipe_closure";
  $desc = $collectedClasses.Stream_pipe_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_pipe_closure.prototype = $desc;
  function Stream_reduce_closure(box_0, this_1, combine_2, result_3) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.combine_2 = combine_2;
    this.result_3 = result_3;
  }
  Stream_reduce_closure.builtin$cls = "Stream_reduce_closure";
  if (!"name" in Stream_reduce_closure)
    Stream_reduce_closure.name = "Stream_reduce_closure";
  $desc = $collectedClasses.Stream_reduce_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_reduce_closure.prototype = $desc;
  function Stream_reduce__closure(box_0, combine_4, element_5) {
    this.box_0 = box_0;
    this.combine_4 = combine_4;
    this.element_5 = element_5;
  }
  Stream_reduce__closure.builtin$cls = "Stream_reduce__closure";
  if (!"name" in Stream_reduce__closure)
    Stream_reduce__closure.name = "Stream_reduce__closure";
  $desc = $collectedClasses.Stream_reduce__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_reduce__closure.prototype = $desc;
  function Stream_reduce__closure0(box_0, this_6) {
    this.box_0 = box_0;
    this.this_6 = this_6;
  }
  Stream_reduce__closure0.builtin$cls = "Stream_reduce__closure0";
  if (!"name" in Stream_reduce__closure0)
    Stream_reduce__closure0.name = "Stream_reduce__closure0";
  $desc = $collectedClasses.Stream_reduce__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_reduce__closure0.prototype = $desc;
  function Stream_reduce_closure0(box_0, result_7) {
    this.box_0 = box_0;
    this.result_7 = result_7;
  }
  Stream_reduce_closure0.builtin$cls = "Stream_reduce_closure0";
  if (!"name" in Stream_reduce_closure0)
    Stream_reduce_closure0.name = "Stream_reduce_closure0";
  $desc = $collectedClasses.Stream_reduce_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_reduce_closure0.prototype = $desc;
  function Stream_fold_closure(box_0, this_1, combine_2, result_3) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.combine_2 = combine_2;
    this.result_3 = result_3;
  }
  Stream_fold_closure.builtin$cls = "Stream_fold_closure";
  if (!"name" in Stream_fold_closure)
    Stream_fold_closure.name = "Stream_fold_closure";
  $desc = $collectedClasses.Stream_fold_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_fold_closure.prototype = $desc;
  function Stream_fold__closure(box_0, combine_4, element_5) {
    this.box_0 = box_0;
    this.combine_4 = combine_4;
    this.element_5 = element_5;
  }
  Stream_fold__closure.builtin$cls = "Stream_fold__closure";
  if (!"name" in Stream_fold__closure)
    Stream_fold__closure.name = "Stream_fold__closure";
  $desc = $collectedClasses.Stream_fold__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_fold__closure.prototype = $desc;
  function Stream_fold__closure0(box_0) {
    this.box_0 = box_0;
  }
  Stream_fold__closure0.builtin$cls = "Stream_fold__closure0";
  if (!"name" in Stream_fold__closure0)
    Stream_fold__closure0.name = "Stream_fold__closure0";
  $desc = $collectedClasses.Stream_fold__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_fold__closure0.prototype = $desc;
  function Stream_fold_closure1(result_6) {
    this.result_6 = result_6;
  }
  Stream_fold_closure1.builtin$cls = "Stream_fold_closure1";
  if (!"name" in Stream_fold_closure1)
    Stream_fold_closure1.name = "Stream_fold_closure1";
  $desc = $collectedClasses.Stream_fold_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_fold_closure1.prototype = $desc;
  function Stream_fold_closure0(box_0, result_7) {
    this.box_0 = box_0;
    this.result_7 = result_7;
  }
  Stream_fold_closure0.builtin$cls = "Stream_fold_closure0";
  if (!"name" in Stream_fold_closure0)
    Stream_fold_closure0.name = "Stream_fold_closure0";
  $desc = $collectedClasses.Stream_fold_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_fold_closure0.prototype = $desc;
  function Stream_join_closure(box_0, this_1, separator_2, result_3, buffer_4) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.separator_2 = separator_2;
    this.result_3 = result_3;
    this.buffer_4 = buffer_4;
  }
  Stream_join_closure.builtin$cls = "Stream_join_closure";
  if (!"name" in Stream_join_closure)
    Stream_join_closure.name = "Stream_join_closure";
  $desc = $collectedClasses.Stream_join_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_join_closure.prototype = $desc;
  function Stream_join_closure1(result_5) {
    this.result_5 = result_5;
  }
  Stream_join_closure1.builtin$cls = "Stream_join_closure1";
  if (!"name" in Stream_join_closure1)
    Stream_join_closure1.name = "Stream_join_closure1";
  $desc = $collectedClasses.Stream_join_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_join_closure1.prototype = $desc;
  function Stream_join_closure0(result_6, buffer_7) {
    this.result_6 = result_6;
    this.buffer_7 = buffer_7;
  }
  Stream_join_closure0.builtin$cls = "Stream_join_closure0";
  if (!"name" in Stream_join_closure0)
    Stream_join_closure0.name = "Stream_join_closure0";
  $desc = $collectedClasses.Stream_join_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_join_closure0.prototype = $desc;
  function Stream_contains_closure(box_0, this_1, needle_2, future_3) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.needle_2 = needle_2;
    this.future_3 = future_3;
  }
  Stream_contains_closure.builtin$cls = "Stream_contains_closure";
  if (!"name" in Stream_contains_closure)
    Stream_contains_closure.name = "Stream_contains_closure";
  $desc = $collectedClasses.Stream_contains_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_contains_closure.prototype = $desc;
  function Stream_contains__closure(needle_4, element_5) {
    this.needle_4 = needle_4;
    this.element_5 = element_5;
  }
  Stream_contains__closure.builtin$cls = "Stream_contains__closure";
  if (!"name" in Stream_contains__closure)
    Stream_contains__closure.name = "Stream_contains__closure";
  $desc = $collectedClasses.Stream_contains__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_contains__closure.prototype = $desc;
  function Stream_contains__closure0(box_0, future_6) {
    this.box_0 = box_0;
    this.future_6 = future_6;
  }
  Stream_contains__closure0.builtin$cls = "Stream_contains__closure0";
  if (!"name" in Stream_contains__closure0)
    Stream_contains__closure0.name = "Stream_contains__closure0";
  $desc = $collectedClasses.Stream_contains__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_contains__closure0.prototype = $desc;
  function Stream_contains_closure0(future_7) {
    this.future_7 = future_7;
  }
  Stream_contains_closure0.builtin$cls = "Stream_contains_closure0";
  if (!"name" in Stream_contains_closure0)
    Stream_contains_closure0.name = "Stream_contains_closure0";
  $desc = $collectedClasses.Stream_contains_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_contains_closure0.prototype = $desc;
  function Stream_forEach_closure(box_0, this_1, action_2, future_3) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.action_2 = action_2;
    this.future_3 = future_3;
  }
  Stream_forEach_closure.builtin$cls = "Stream_forEach_closure";
  if (!"name" in Stream_forEach_closure)
    Stream_forEach_closure.name = "Stream_forEach_closure";
  $desc = $collectedClasses.Stream_forEach_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_forEach_closure.prototype = $desc;
  function Stream_forEach__closure(action_4, element_5) {
    this.action_4 = action_4;
    this.element_5 = element_5;
  }
  Stream_forEach__closure.builtin$cls = "Stream_forEach__closure";
  if (!"name" in Stream_forEach__closure)
    Stream_forEach__closure.name = "Stream_forEach__closure";
  $desc = $collectedClasses.Stream_forEach__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_forEach__closure.prototype = $desc;
  function Stream_forEach__closure0() {
  }
  Stream_forEach__closure0.builtin$cls = "Stream_forEach__closure0";
  if (!"name" in Stream_forEach__closure0)
    Stream_forEach__closure0.name = "Stream_forEach__closure0";
  $desc = $collectedClasses.Stream_forEach__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_forEach__closure0.prototype = $desc;
  function Stream_forEach_closure0(future_6) {
    this.future_6 = future_6;
  }
  Stream_forEach_closure0.builtin$cls = "Stream_forEach_closure0";
  if (!"name" in Stream_forEach_closure0)
    Stream_forEach_closure0.name = "Stream_forEach_closure0";
  $desc = $collectedClasses.Stream_forEach_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_forEach_closure0.prototype = $desc;
  function Stream_every_closure(box_0, this_1, test_2, future_3) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.test_2 = test_2;
    this.future_3 = future_3;
  }
  Stream_every_closure.builtin$cls = "Stream_every_closure";
  if (!"name" in Stream_every_closure)
    Stream_every_closure.name = "Stream_every_closure";
  $desc = $collectedClasses.Stream_every_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_every_closure.prototype = $desc;
  function Stream_every__closure(test_4, element_5) {
    this.test_4 = test_4;
    this.element_5 = element_5;
  }
  Stream_every__closure.builtin$cls = "Stream_every__closure";
  if (!"name" in Stream_every__closure)
    Stream_every__closure.name = "Stream_every__closure";
  $desc = $collectedClasses.Stream_every__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_every__closure.prototype = $desc;
  function Stream_every__closure0(box_0, future_6) {
    this.box_0 = box_0;
    this.future_6 = future_6;
  }
  Stream_every__closure0.builtin$cls = "Stream_every__closure0";
  if (!"name" in Stream_every__closure0)
    Stream_every__closure0.name = "Stream_every__closure0";
  $desc = $collectedClasses.Stream_every__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_every__closure0.prototype = $desc;
  function Stream_every_closure0(future_7) {
    this.future_7 = future_7;
  }
  Stream_every_closure0.builtin$cls = "Stream_every_closure0";
  if (!"name" in Stream_every_closure0)
    Stream_every_closure0.name = "Stream_every_closure0";
  $desc = $collectedClasses.Stream_every_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_every_closure0.prototype = $desc;
  function Stream_any_closure(box_0, this_1, test_2, future_3) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.test_2 = test_2;
    this.future_3 = future_3;
  }
  Stream_any_closure.builtin$cls = "Stream_any_closure";
  if (!"name" in Stream_any_closure)
    Stream_any_closure.name = "Stream_any_closure";
  $desc = $collectedClasses.Stream_any_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_any_closure.prototype = $desc;
  function Stream_any__closure(test_4, element_5) {
    this.test_4 = test_4;
    this.element_5 = element_5;
  }
  Stream_any__closure.builtin$cls = "Stream_any__closure";
  if (!"name" in Stream_any__closure)
    Stream_any__closure.name = "Stream_any__closure";
  $desc = $collectedClasses.Stream_any__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_any__closure.prototype = $desc;
  function Stream_any__closure0(box_0, future_6) {
    this.box_0 = box_0;
    this.future_6 = future_6;
  }
  Stream_any__closure0.builtin$cls = "Stream_any__closure0";
  if (!"name" in Stream_any__closure0)
    Stream_any__closure0.name = "Stream_any__closure0";
  $desc = $collectedClasses.Stream_any__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_any__closure0.prototype = $desc;
  function Stream_any_closure0(future_7) {
    this.future_7 = future_7;
  }
  Stream_any_closure0.builtin$cls = "Stream_any_closure0";
  if (!"name" in Stream_any_closure0)
    Stream_any_closure0.name = "Stream_any_closure0";
  $desc = $collectedClasses.Stream_any_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_any_closure0.prototype = $desc;
  function Stream_length_closure(box_0) {
    this.box_0 = box_0;
  }
  Stream_length_closure.builtin$cls = "Stream_length_closure";
  if (!"name" in Stream_length_closure)
    Stream_length_closure.name = "Stream_length_closure";
  $desc = $collectedClasses.Stream_length_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_length_closure.prototype = $desc;
  function Stream_length_closure0(box_0, future_1) {
    this.box_0 = box_0;
    this.future_1 = future_1;
  }
  Stream_length_closure0.builtin$cls = "Stream_length_closure0";
  if (!"name" in Stream_length_closure0)
    Stream_length_closure0.name = "Stream_length_closure0";
  $desc = $collectedClasses.Stream_length_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_length_closure0.prototype = $desc;
  function Stream_isEmpty_closure(box_0, future_1) {
    this.box_0 = box_0;
    this.future_1 = future_1;
  }
  Stream_isEmpty_closure.builtin$cls = "Stream_isEmpty_closure";
  if (!"name" in Stream_isEmpty_closure)
    Stream_isEmpty_closure.name = "Stream_isEmpty_closure";
  $desc = $collectedClasses.Stream_isEmpty_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_isEmpty_closure.prototype = $desc;
  function Stream_isEmpty_closure0(future_2) {
    this.future_2 = future_2;
  }
  Stream_isEmpty_closure0.builtin$cls = "Stream_isEmpty_closure0";
  if (!"name" in Stream_isEmpty_closure0)
    Stream_isEmpty_closure0.name = "Stream_isEmpty_closure0";
  $desc = $collectedClasses.Stream_isEmpty_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_isEmpty_closure0.prototype = $desc;
  function Stream_toList_closure(this_0, result_1) {
    this.this_0 = this_0;
    this.result_1 = result_1;
  }
  Stream_toList_closure.builtin$cls = "Stream_toList_closure";
  if (!"name" in Stream_toList_closure)
    Stream_toList_closure.name = "Stream_toList_closure";
  $desc = $collectedClasses.Stream_toList_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_toList_closure.prototype = $desc;
  function Stream_toList_closure0(result_2, future_3) {
    this.result_2 = result_2;
    this.future_3 = future_3;
  }
  Stream_toList_closure0.builtin$cls = "Stream_toList_closure0";
  if (!"name" in Stream_toList_closure0)
    Stream_toList_closure0.name = "Stream_toList_closure0";
  $desc = $collectedClasses.Stream_toList_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_toList_closure0.prototype = $desc;
  function Stream_toSet_closure(this_0, result_1) {
    this.this_0 = this_0;
    this.result_1 = result_1;
  }
  Stream_toSet_closure.builtin$cls = "Stream_toSet_closure";
  if (!"name" in Stream_toSet_closure)
    Stream_toSet_closure.name = "Stream_toSet_closure";
  $desc = $collectedClasses.Stream_toSet_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_toSet_closure.prototype = $desc;
  function Stream_toSet_closure0(result_2, future_3) {
    this.result_2 = result_2;
    this.future_3 = future_3;
  }
  Stream_toSet_closure0.builtin$cls = "Stream_toSet_closure0";
  if (!"name" in Stream_toSet_closure0)
    Stream_toSet_closure0.name = "Stream_toSet_closure0";
  $desc = $collectedClasses.Stream_toSet_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_toSet_closure0.prototype = $desc;
  function Stream_first_closure(box_0, this_1, future_2) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.future_2 = future_2;
  }
  Stream_first_closure.builtin$cls = "Stream_first_closure";
  if (!"name" in Stream_first_closure)
    Stream_first_closure.name = "Stream_first_closure";
  $desc = $collectedClasses.Stream_first_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_first_closure.prototype = $desc;
  function Stream_first_closure0(future_3) {
    this.future_3 = future_3;
  }
  Stream_first_closure0.builtin$cls = "Stream_first_closure0";
  if (!"name" in Stream_first_closure0)
    Stream_first_closure0.name = "Stream_first_closure0";
  $desc = $collectedClasses.Stream_first_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_first_closure0.prototype = $desc;
  function Stream_last_closure(box_0, this_1) {
    this.box_0 = box_0;
    this.this_1 = this_1;
  }
  Stream_last_closure.builtin$cls = "Stream_last_closure";
  if (!"name" in Stream_last_closure)
    Stream_last_closure.name = "Stream_last_closure";
  $desc = $collectedClasses.Stream_last_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_last_closure.prototype = $desc;
  function Stream_last_closure0(box_0, future_2) {
    this.box_0 = box_0;
    this.future_2 = future_2;
  }
  Stream_last_closure0.builtin$cls = "Stream_last_closure0";
  if (!"name" in Stream_last_closure0)
    Stream_last_closure0.name = "Stream_last_closure0";
  $desc = $collectedClasses.Stream_last_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_last_closure0.prototype = $desc;
  function Stream_single_closure(box_0, this_1, future_2) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.future_2 = future_2;
  }
  Stream_single_closure.builtin$cls = "Stream_single_closure";
  if (!"name" in Stream_single_closure)
    Stream_single_closure.name = "Stream_single_closure";
  $desc = $collectedClasses.Stream_single_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_single_closure.prototype = $desc;
  function Stream_single_closure0(box_0, future_3) {
    this.box_0 = box_0;
    this.future_3 = future_3;
  }
  Stream_single_closure0.builtin$cls = "Stream_single_closure0";
  if (!"name" in Stream_single_closure0)
    Stream_single_closure0.name = "Stream_single_closure0";
  $desc = $collectedClasses.Stream_single_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_single_closure0.prototype = $desc;
  function Stream_firstWhere_closure(box_0, this_1, test_2, future_3) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.test_2 = test_2;
    this.future_3 = future_3;
  }
  Stream_firstWhere_closure.builtin$cls = "Stream_firstWhere_closure";
  if (!"name" in Stream_firstWhere_closure)
    Stream_firstWhere_closure.name = "Stream_firstWhere_closure";
  $desc = $collectedClasses.Stream_firstWhere_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_firstWhere_closure.prototype = $desc;
  function Stream_firstWhere__closure(test_4, value_5) {
    this.test_4 = test_4;
    this.value_5 = value_5;
  }
  Stream_firstWhere__closure.builtin$cls = "Stream_firstWhere__closure";
  if (!"name" in Stream_firstWhere__closure)
    Stream_firstWhere__closure.name = "Stream_firstWhere__closure";
  $desc = $collectedClasses.Stream_firstWhere__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_firstWhere__closure.prototype = $desc;
  function Stream_firstWhere__closure0(box_0, future_6, value_7) {
    this.box_0 = box_0;
    this.future_6 = future_6;
    this.value_7 = value_7;
  }
  Stream_firstWhere__closure0.builtin$cls = "Stream_firstWhere__closure0";
  if (!"name" in Stream_firstWhere__closure0)
    Stream_firstWhere__closure0.name = "Stream_firstWhere__closure0";
  $desc = $collectedClasses.Stream_firstWhere__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_firstWhere__closure0.prototype = $desc;
  function Stream_firstWhere_closure0(defaultValue_8, future_9) {
    this.defaultValue_8 = defaultValue_8;
    this.future_9 = future_9;
  }
  Stream_firstWhere_closure0.builtin$cls = "Stream_firstWhere_closure0";
  if (!"name" in Stream_firstWhere_closure0)
    Stream_firstWhere_closure0.name = "Stream_firstWhere_closure0";
  $desc = $collectedClasses.Stream_firstWhere_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_firstWhere_closure0.prototype = $desc;
  function Stream_lastWhere_closure(box_0, this_1, test_2, future_3) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.test_2 = test_2;
    this.future_3 = future_3;
  }
  Stream_lastWhere_closure.builtin$cls = "Stream_lastWhere_closure";
  if (!"name" in Stream_lastWhere_closure)
    Stream_lastWhere_closure.name = "Stream_lastWhere_closure";
  $desc = $collectedClasses.Stream_lastWhere_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_lastWhere_closure.prototype = $desc;
  function Stream_lastWhere__closure(test_4, value_5) {
    this.test_4 = test_4;
    this.value_5 = value_5;
  }
  Stream_lastWhere__closure.builtin$cls = "Stream_lastWhere__closure";
  if (!"name" in Stream_lastWhere__closure)
    Stream_lastWhere__closure.name = "Stream_lastWhere__closure";
  $desc = $collectedClasses.Stream_lastWhere__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_lastWhere__closure.prototype = $desc;
  function Stream_lastWhere__closure0(box_0, value_6) {
    this.box_0 = box_0;
    this.value_6 = value_6;
  }
  Stream_lastWhere__closure0.builtin$cls = "Stream_lastWhere__closure0";
  if (!"name" in Stream_lastWhere__closure0)
    Stream_lastWhere__closure0.name = "Stream_lastWhere__closure0";
  $desc = $collectedClasses.Stream_lastWhere__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_lastWhere__closure0.prototype = $desc;
  function Stream_lastWhere_closure0(box_0, defaultValue_7, future_8) {
    this.box_0 = box_0;
    this.defaultValue_7 = defaultValue_7;
    this.future_8 = future_8;
  }
  Stream_lastWhere_closure0.builtin$cls = "Stream_lastWhere_closure0";
  if (!"name" in Stream_lastWhere_closure0)
    Stream_lastWhere_closure0.name = "Stream_lastWhere_closure0";
  $desc = $collectedClasses.Stream_lastWhere_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_lastWhere_closure0.prototype = $desc;
  function Stream_singleWhere_closure(box_0, this_1, test_2, future_3) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.test_2 = test_2;
    this.future_3 = future_3;
  }
  Stream_singleWhere_closure.builtin$cls = "Stream_singleWhere_closure";
  if (!"name" in Stream_singleWhere_closure)
    Stream_singleWhere_closure.name = "Stream_singleWhere_closure";
  $desc = $collectedClasses.Stream_singleWhere_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_singleWhere_closure.prototype = $desc;
  function Stream_singleWhere__closure(test_4, value_5) {
    this.test_4 = test_4;
    this.value_5 = value_5;
  }
  Stream_singleWhere__closure.builtin$cls = "Stream_singleWhere__closure";
  if (!"name" in Stream_singleWhere__closure)
    Stream_singleWhere__closure.name = "Stream_singleWhere__closure";
  $desc = $collectedClasses.Stream_singleWhere__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_singleWhere__closure.prototype = $desc;
  function Stream_singleWhere__closure0(box_0, future_6, value_7) {
    this.box_0 = box_0;
    this.future_6 = future_6;
    this.value_7 = value_7;
  }
  Stream_singleWhere__closure0.builtin$cls = "Stream_singleWhere__closure0";
  if (!"name" in Stream_singleWhere__closure0)
    Stream_singleWhere__closure0.name = "Stream_singleWhere__closure0";
  $desc = $collectedClasses.Stream_singleWhere__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_singleWhere__closure0.prototype = $desc;
  function Stream_singleWhere_closure0(box_0, future_8) {
    this.box_0 = box_0;
    this.future_8 = future_8;
  }
  Stream_singleWhere_closure0.builtin$cls = "Stream_singleWhere_closure0";
  if (!"name" in Stream_singleWhere_closure0)
    Stream_singleWhere_closure0.name = "Stream_singleWhere_closure0";
  $desc = $collectedClasses.Stream_singleWhere_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_singleWhere_closure0.prototype = $desc;
  function Stream_elementAt_closure(box_0, this_1, future_2) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.future_2 = future_2;
  }
  Stream_elementAt_closure.builtin$cls = "Stream_elementAt_closure";
  if (!"name" in Stream_elementAt_closure)
    Stream_elementAt_closure.name = "Stream_elementAt_closure";
  $desc = $collectedClasses.Stream_elementAt_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_elementAt_closure.prototype = $desc;
  function Stream_elementAt_closure0(box_0, future_3) {
    this.box_0 = box_0;
    this.future_3 = future_3;
  }
  Stream_elementAt_closure0.builtin$cls = "Stream_elementAt_closure0";
  if (!"name" in Stream_elementAt_closure0)
    Stream_elementAt_closure0.name = "Stream_elementAt_closure0";
  $desc = $collectedClasses.Stream_elementAt_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_elementAt_closure0.prototype = $desc;
  function Stream_timeout_onData(box_0, this_1, timeLimit_2) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.timeLimit_2 = timeLimit_2;
  }
  Stream_timeout_onData.builtin$cls = "Stream_timeout_onData";
  if (!"name" in Stream_timeout_onData)
    Stream_timeout_onData.name = "Stream_timeout_onData";
  $desc = $collectedClasses.Stream_timeout_onData;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_timeout_onData.prototype = $desc;
  function Stream_timeout_onError(box_0, timeLimit_3) {
    this.box_0 = box_0;
    this.timeLimit_3 = timeLimit_3;
  }
  Stream_timeout_onError.builtin$cls = "Stream_timeout_onError";
  if (!"name" in Stream_timeout_onError)
    Stream_timeout_onError.name = "Stream_timeout_onError";
  $desc = $collectedClasses.Stream_timeout_onError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_timeout_onError.prototype = $desc;
  function Stream_timeout_onDone(box_0) {
    this.box_0 = box_0;
  }
  Stream_timeout_onDone.builtin$cls = "Stream_timeout_onDone";
  if (!"name" in Stream_timeout_onDone)
    Stream_timeout_onDone.name = "Stream_timeout_onDone";
  $desc = $collectedClasses.Stream_timeout_onDone;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_timeout_onDone.prototype = $desc;
  function Stream_timeout_closure(box_0, this_4, timeLimit_5, onData_6, onError_7, onDone_8) {
    this.box_0 = box_0;
    this.this_4 = this_4;
    this.timeLimit_5 = timeLimit_5;
    this.onData_6 = onData_6;
    this.onError_7 = onError_7;
    this.onDone_8 = onDone_8;
  }
  Stream_timeout_closure.builtin$cls = "Stream_timeout_closure";
  if (!"name" in Stream_timeout_closure)
    Stream_timeout_closure.name = "Stream_timeout_closure";
  $desc = $collectedClasses.Stream_timeout_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_timeout_closure.prototype = $desc;
  function Stream_timeout__closure(box_0, timeLimit_9) {
    this.box_0 = box_0;
    this.timeLimit_9 = timeLimit_9;
  }
  Stream_timeout__closure.builtin$cls = "Stream_timeout__closure";
  if (!"name" in Stream_timeout__closure)
    Stream_timeout__closure.name = "Stream_timeout__closure";
  $desc = $collectedClasses.Stream_timeout__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_timeout__closure.prototype = $desc;
  function Stream_timeout__closure0(box_0, wrapper_10) {
    this.box_0 = box_0;
    this.wrapper_10 = wrapper_10;
  }
  Stream_timeout__closure0.builtin$cls = "Stream_timeout__closure0";
  if (!"name" in Stream_timeout__closure0)
    Stream_timeout__closure0.name = "Stream_timeout__closure0";
  $desc = $collectedClasses.Stream_timeout__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_timeout__closure0.prototype = $desc;
  function Stream_timeout_closure0(box_0) {
    this.box_0 = box_0;
  }
  Stream_timeout_closure0.builtin$cls = "Stream_timeout_closure0";
  if (!"name" in Stream_timeout_closure0)
    Stream_timeout_closure0.name = "Stream_timeout_closure0";
  $desc = $collectedClasses.Stream_timeout_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_timeout_closure0.prototype = $desc;
  function Stream_timeout_closure1(box_0, timeLimit_11) {
    this.box_0 = box_0;
    this.timeLimit_11 = timeLimit_11;
  }
  Stream_timeout_closure1.builtin$cls = "Stream_timeout_closure1";
  if (!"name" in Stream_timeout_closure1)
    Stream_timeout_closure1.name = "Stream_timeout_closure1";
  $desc = $collectedClasses.Stream_timeout_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_timeout_closure1.prototype = $desc;
  function Stream_timeout_closure2(box_0) {
    this.box_0 = box_0;
  }
  Stream_timeout_closure2.builtin$cls = "Stream_timeout_closure2";
  if (!"name" in Stream_timeout_closure2)
    Stream_timeout_closure2.name = "Stream_timeout_closure2";
  $desc = $collectedClasses.Stream_timeout_closure2;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_timeout_closure2.prototype = $desc;
  function StreamSubscription() {
  }
  StreamSubscription.builtin$cls = "StreamSubscription";
  if (!"name" in StreamSubscription)
    StreamSubscription.name = "StreamSubscription";
  $desc = $collectedClasses.StreamSubscription;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StreamSubscription.prototype = $desc;
  function EventSink() {
  }
  EventSink.builtin$cls = "EventSink";
  if (!"name" in EventSink)
    EventSink.name = "EventSink";
  $desc = $collectedClasses.EventSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EventSink.prototype = $desc;
  function StreamView(_stream) {
    this._stream = _stream;
  }
  StreamView.builtin$cls = "StreamView";
  if (!"name" in StreamView)
    StreamView.name = "StreamView";
  $desc = $collectedClasses.StreamView;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StreamView.prototype = $desc;
  StreamView.prototype.get$_stream = function() {
    return this._stream;
  };
  StreamView.prototype.get$_stream.$reflectable = 1;
  StreamView.prototype.set$_stream = function(v) {
    return this._stream = v;
  };
  StreamView.prototype.set$_stream.$reflectable = 1;
  function StreamConsumer() {
  }
  StreamConsumer.builtin$cls = "StreamConsumer";
  if (!"name" in StreamConsumer)
    StreamConsumer.name = "StreamConsumer";
  $desc = $collectedClasses.StreamConsumer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StreamConsumer.prototype = $desc;
  function StreamSink() {
  }
  StreamSink.builtin$cls = "StreamSink";
  if (!"name" in StreamSink)
    StreamSink.name = "StreamSink";
  $desc = $collectedClasses.StreamSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StreamSink.prototype = $desc;
  function StreamTransformer() {
  }
  StreamTransformer.builtin$cls = "StreamTransformer";
  if (!"name" in StreamTransformer)
    StreamTransformer.name = "StreamTransformer";
  $desc = $collectedClasses.StreamTransformer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StreamTransformer.prototype = $desc;
  function StreamIterator() {
  }
  StreamIterator.builtin$cls = "StreamIterator";
  if (!"name" in StreamIterator)
    StreamIterator.name = "StreamIterator";
  $desc = $collectedClasses.StreamIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StreamIterator.prototype = $desc;
  function _ControllerEventSinkWrapper(_sink) {
    this._sink = _sink;
  }
  _ControllerEventSinkWrapper.builtin$cls = "_ControllerEventSinkWrapper";
  if (!"name" in _ControllerEventSinkWrapper)
    _ControllerEventSinkWrapper.name = "_ControllerEventSinkWrapper";
  $desc = $collectedClasses._ControllerEventSinkWrapper;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ControllerEventSinkWrapper.prototype = $desc;
  _ControllerEventSinkWrapper.prototype.get$_sink = function() {
    return this._sink;
  };
  _ControllerEventSinkWrapper.prototype.get$_sink.$reflectable = 1;
  _ControllerEventSinkWrapper.prototype.set$_sink = function(v) {
    return this._sink = v;
  };
  _ControllerEventSinkWrapper.prototype.set$_sink.$reflectable = 1;
  function StreamController() {
  }
  StreamController.builtin$cls = "StreamController";
  if (!"name" in StreamController)
    StreamController.name = "StreamController";
  $desc = $collectedClasses.StreamController;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StreamController.prototype = $desc;
  function _StreamControllerLifecycle() {
  }
  _StreamControllerLifecycle.builtin$cls = "_StreamControllerLifecycle";
  if (!"name" in _StreamControllerLifecycle)
    _StreamControllerLifecycle.name = "_StreamControllerLifecycle";
  $desc = $collectedClasses._StreamControllerLifecycle;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamControllerLifecycle.prototype = $desc;
  function _StreamController(_varData, _state, _doneFuture) {
    this._varData = _varData;
    this._state = _state;
    this._doneFuture = _doneFuture;
  }
  _StreamController.builtin$cls = "_StreamController";
  if (!"name" in _StreamController)
    _StreamController.name = "_StreamController";
  $desc = $collectedClasses._StreamController;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamController.prototype = $desc;
  _StreamController.prototype.get$_varData = function() {
    return this._varData;
  };
  _StreamController.prototype.get$_varData.$reflectable = 1;
  _StreamController.prototype.set$_varData = function(v) {
    return this._varData = v;
  };
  _StreamController.prototype.set$_varData.$reflectable = 1;
  _StreamController.prototype.get$_state = function() {
    return this._state;
  };
  _StreamController.prototype.get$_state.$reflectable = 1;
  _StreamController.prototype.set$_state = function(v) {
    return this._state = v;
  };
  _StreamController.prototype.set$_state.$reflectable = 1;
  _StreamController.prototype.get$_doneFuture = function() {
    return this._doneFuture;
  };
  _StreamController.prototype.get$_doneFuture.$reflectable = 1;
  _StreamController.prototype.set$_doneFuture = function(v) {
    return this._doneFuture = v;
  };
  _StreamController.prototype.set$_doneFuture.$reflectable = 1;
  function _StreamController__subscribe_closure(this_0) {
    this.this_0 = this_0;
  }
  _StreamController__subscribe_closure.builtin$cls = "_StreamController__subscribe_closure";
  if (!"name" in _StreamController__subscribe_closure)
    _StreamController__subscribe_closure.name = "_StreamController__subscribe_closure";
  $desc = $collectedClasses._StreamController__subscribe_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamController__subscribe_closure.prototype = $desc;
  function _StreamController__recordCancel_complete(this_0) {
    this.this_0 = this_0;
  }
  _StreamController__recordCancel_complete.builtin$cls = "_StreamController__recordCancel_complete";
  if (!"name" in _StreamController__recordCancel_complete)
    _StreamController__recordCancel_complete.name = "_StreamController__recordCancel_complete";
  $desc = $collectedClasses._StreamController__recordCancel_complete;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamController__recordCancel_complete.prototype = $desc;
  function _SyncStreamControllerDispatch() {
  }
  _SyncStreamControllerDispatch.builtin$cls = "_SyncStreamControllerDispatch";
  if (!"name" in _SyncStreamControllerDispatch)
    _SyncStreamControllerDispatch.name = "_SyncStreamControllerDispatch";
  $desc = $collectedClasses._SyncStreamControllerDispatch;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SyncStreamControllerDispatch.prototype = $desc;
  function _AsyncStreamControllerDispatch() {
  }
  _AsyncStreamControllerDispatch.builtin$cls = "_AsyncStreamControllerDispatch";
  if (!"name" in _AsyncStreamControllerDispatch)
    _AsyncStreamControllerDispatch.name = "_AsyncStreamControllerDispatch";
  $desc = $collectedClasses._AsyncStreamControllerDispatch;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AsyncStreamControllerDispatch.prototype = $desc;
  function _AsyncStreamController(_onListen, _onPause, _onResume, _onCancel, _varData, _state, _doneFuture) {
    this._onListen = _onListen;
    this._onPause = _onPause;
    this._onResume = _onResume;
    this._onCancel = _onCancel;
    this._varData = _varData;
    this._state = _state;
    this._doneFuture = _doneFuture;
  }
  _AsyncStreamController.builtin$cls = "_AsyncStreamController";
  if (!"name" in _AsyncStreamController)
    _AsyncStreamController.name = "_AsyncStreamController";
  $desc = $collectedClasses._AsyncStreamController;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AsyncStreamController.prototype = $desc;
  _AsyncStreamController.prototype.get$_onListen = function() {
    return this._onListen;
  };
  _AsyncStreamController.prototype.get$_onListen.$reflectable = 1;
  _AsyncStreamController.prototype.get$_onPause = function() {
    return this._onPause;
  };
  _AsyncStreamController.prototype.get$_onPause.$reflectable = 1;
  _AsyncStreamController.prototype.get$_onResume = function() {
    return this._onResume;
  };
  _AsyncStreamController.prototype.get$_onResume.$reflectable = 1;
  _AsyncStreamController.prototype.get$_onCancel = function() {
    return this._onCancel;
  };
  _AsyncStreamController.prototype.get$_onCancel.$reflectable = 1;
  function _StreamController__AsyncStreamControllerDispatch() {
  }
  _StreamController__AsyncStreamControllerDispatch.builtin$cls = "_StreamController__AsyncStreamControllerDispatch";
  if (!"name" in _StreamController__AsyncStreamControllerDispatch)
    _StreamController__AsyncStreamControllerDispatch.name = "_StreamController__AsyncStreamControllerDispatch";
  $desc = $collectedClasses._StreamController__AsyncStreamControllerDispatch;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamController__AsyncStreamControllerDispatch.prototype = $desc;
  function _SyncStreamController(_onListen, _onPause, _onResume, _onCancel, _varData, _state, _doneFuture) {
    this._onListen = _onListen;
    this._onPause = _onPause;
    this._onResume = _onResume;
    this._onCancel = _onCancel;
    this._varData = _varData;
    this._state = _state;
    this._doneFuture = _doneFuture;
  }
  _SyncStreamController.builtin$cls = "_SyncStreamController";
  if (!"name" in _SyncStreamController)
    _SyncStreamController.name = "_SyncStreamController";
  $desc = $collectedClasses._SyncStreamController;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SyncStreamController.prototype = $desc;
  _SyncStreamController.prototype.get$_onListen = function() {
    return this._onListen;
  };
  _SyncStreamController.prototype.get$_onListen.$reflectable = 1;
  _SyncStreamController.prototype.get$_onPause = function() {
    return this._onPause;
  };
  _SyncStreamController.prototype.get$_onPause.$reflectable = 1;
  _SyncStreamController.prototype.get$_onResume = function() {
    return this._onResume;
  };
  _SyncStreamController.prototype.get$_onResume.$reflectable = 1;
  _SyncStreamController.prototype.get$_onCancel = function() {
    return this._onCancel;
  };
  _SyncStreamController.prototype.get$_onCancel.$reflectable = 1;
  function _StreamController__SyncStreamControllerDispatch() {
  }
  _StreamController__SyncStreamControllerDispatch.builtin$cls = "_StreamController__SyncStreamControllerDispatch";
  if (!"name" in _StreamController__SyncStreamControllerDispatch)
    _StreamController__SyncStreamControllerDispatch.name = "_StreamController__SyncStreamControllerDispatch";
  $desc = $collectedClasses._StreamController__SyncStreamControllerDispatch;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamController__SyncStreamControllerDispatch.prototype = $desc;
  function _NoCallbacks() {
  }
  _NoCallbacks.builtin$cls = "_NoCallbacks";
  if (!"name" in _NoCallbacks)
    _NoCallbacks.name = "_NoCallbacks";
  $desc = $collectedClasses._NoCallbacks;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _NoCallbacks.prototype = $desc;
  function _NoCallbackAsyncStreamController(_varData, _state, _doneFuture) {
    this._varData = _varData;
    this._state = _state;
    this._doneFuture = _doneFuture;
  }
  _NoCallbackAsyncStreamController.builtin$cls = "_NoCallbackAsyncStreamController";
  if (!"name" in _NoCallbackAsyncStreamController)
    _NoCallbackAsyncStreamController.name = "_NoCallbackAsyncStreamController";
  $desc = $collectedClasses._NoCallbackAsyncStreamController;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _NoCallbackAsyncStreamController.prototype = $desc;
  function _StreamController__AsyncStreamControllerDispatch0() {
  }
  _StreamController__AsyncStreamControllerDispatch0.builtin$cls = "_StreamController__AsyncStreamControllerDispatch0";
  if (!"name" in _StreamController__AsyncStreamControllerDispatch0)
    _StreamController__AsyncStreamControllerDispatch0.name = "_StreamController__AsyncStreamControllerDispatch0";
  $desc = $collectedClasses._StreamController__AsyncStreamControllerDispatch0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamController__AsyncStreamControllerDispatch0.prototype = $desc;
  function _NoCallbackSyncStreamController(_varData, _state, _doneFuture) {
    this._varData = _varData;
    this._state = _state;
    this._doneFuture = _doneFuture;
  }
  _NoCallbackSyncStreamController.builtin$cls = "_NoCallbackSyncStreamController";
  if (!"name" in _NoCallbackSyncStreamController)
    _NoCallbackSyncStreamController.name = "_NoCallbackSyncStreamController";
  $desc = $collectedClasses._NoCallbackSyncStreamController;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _NoCallbackSyncStreamController.prototype = $desc;
  function _StreamController__SyncStreamControllerDispatch0() {
  }
  _StreamController__SyncStreamControllerDispatch0.builtin$cls = "_StreamController__SyncStreamControllerDispatch0";
  if (!"name" in _StreamController__SyncStreamControllerDispatch0)
    _StreamController__SyncStreamControllerDispatch0.name = "_StreamController__SyncStreamControllerDispatch0";
  $desc = $collectedClasses._StreamController__SyncStreamControllerDispatch0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamController__SyncStreamControllerDispatch0.prototype = $desc;
  function _ControllerStream(_async$_controller) {
    this._async$_controller = _async$_controller;
  }
  _ControllerStream.builtin$cls = "_ControllerStream";
  if (!"name" in _ControllerStream)
    _ControllerStream.name = "_ControllerStream";
  $desc = $collectedClasses._ControllerStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ControllerStream.prototype = $desc;
  _ControllerStream.prototype.get$_async$_controller = function() {
    return this._async$_controller;
  };
  _ControllerStream.prototype.get$_async$_controller.$reflectable = 1;
  _ControllerStream.prototype.set$_async$_controller = function(v) {
    return this._async$_controller = v;
  };
  _ControllerStream.prototype.set$_async$_controller.$reflectable = 1;
  function _ControllerSubscription(_async$_controller, _onData, _onError, _onDone, _zone, _state, _cancelFuture, _pending) {
    this._async$_controller = _async$_controller;
    this._onData = _onData;
    this._onError = _onError;
    this._onDone = _onDone;
    this._zone = _zone;
    this._state = _state;
    this._cancelFuture = _cancelFuture;
    this._pending = _pending;
  }
  _ControllerSubscription.builtin$cls = "_ControllerSubscription";
  if (!"name" in _ControllerSubscription)
    _ControllerSubscription.name = "_ControllerSubscription";
  $desc = $collectedClasses._ControllerSubscription;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ControllerSubscription.prototype = $desc;
  _ControllerSubscription.prototype.get$_async$_controller = function() {
    return this._async$_controller;
  };
  _ControllerSubscription.prototype.get$_async$_controller.$reflectable = 1;
  function _StreamSinkWrapper(_async$_target) {
    this._async$_target = _async$_target;
  }
  _StreamSinkWrapper.builtin$cls = "_StreamSinkWrapper";
  if (!"name" in _StreamSinkWrapper)
    _StreamSinkWrapper.name = "_StreamSinkWrapper";
  $desc = $collectedClasses._StreamSinkWrapper;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamSinkWrapper.prototype = $desc;
  _StreamSinkWrapper.prototype.get$_async$_target = function() {
    return this._async$_target;
  };
  _StreamSinkWrapper.prototype.get$_async$_target.$reflectable = 1;
  function _AddStreamState(addStreamFuture, addSubscription) {
    this.addStreamFuture = addStreamFuture;
    this.addSubscription = addSubscription;
  }
  _AddStreamState.builtin$cls = "_AddStreamState";
  if (!"name" in _AddStreamState)
    _AddStreamState.name = "_AddStreamState";
  $desc = $collectedClasses._AddStreamState;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AddStreamState.prototype = $desc;
  _AddStreamState.prototype.get$addStreamFuture = function() {
    return this.addStreamFuture;
  };
  _AddStreamState.prototype.get$addStreamFuture.$reflectable = 1;
  _AddStreamState.prototype.get$addSubscription = function() {
    return this.addSubscription;
  };
  _AddStreamState.prototype.get$addSubscription.$reflectable = 1;
  function _AddStreamState_makeErrorHandler_closure(controller_0) {
    this.controller_0 = controller_0;
  }
  _AddStreamState_makeErrorHandler_closure.builtin$cls = "_AddStreamState_makeErrorHandler_closure";
  if (!"name" in _AddStreamState_makeErrorHandler_closure)
    _AddStreamState_makeErrorHandler_closure.name = "_AddStreamState_makeErrorHandler_closure";
  $desc = $collectedClasses._AddStreamState_makeErrorHandler_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AddStreamState_makeErrorHandler_closure.prototype = $desc;
  function _StreamControllerAddStreamState(varData, addStreamFuture, addSubscription) {
    this.varData = varData;
    this.addStreamFuture = addStreamFuture;
    this.addSubscription = addSubscription;
  }
  _StreamControllerAddStreamState.builtin$cls = "_StreamControllerAddStreamState";
  if (!"name" in _StreamControllerAddStreamState)
    _StreamControllerAddStreamState.name = "_StreamControllerAddStreamState";
  $desc = $collectedClasses._StreamControllerAddStreamState;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamControllerAddStreamState.prototype = $desc;
  _StreamControllerAddStreamState.prototype.get$varData = function() {
    return this.varData;
  };
  _StreamControllerAddStreamState.prototype.get$varData.$reflectable = 1;
  _StreamControllerAddStreamState.prototype.set$varData = function(v) {
    return this.varData = v;
  };
  _StreamControllerAddStreamState.prototype.set$varData.$reflectable = 1;
  function _EventSink() {
  }
  _EventSink.builtin$cls = "_EventSink";
  if (!"name" in _EventSink)
    _EventSink.name = "_EventSink";
  $desc = $collectedClasses._EventSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _EventSink.prototype = $desc;
  function _EventDispatch() {
  }
  _EventDispatch.builtin$cls = "_EventDispatch";
  if (!"name" in _EventDispatch)
    _EventDispatch.name = "_EventDispatch";
  $desc = $collectedClasses._EventDispatch;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _EventDispatch.prototype = $desc;
  function _BufferingStreamSubscription(_onData, _onError, _onDone, _zone, _state, _cancelFuture, _pending) {
    this._onData = _onData;
    this._onError = _onError;
    this._onDone = _onDone;
    this._zone = _zone;
    this._state = _state;
    this._cancelFuture = _cancelFuture;
    this._pending = _pending;
  }
  _BufferingStreamSubscription.builtin$cls = "_BufferingStreamSubscription";
  if (!"name" in _BufferingStreamSubscription)
    _BufferingStreamSubscription.name = "_BufferingStreamSubscription";
  $desc = $collectedClasses._BufferingStreamSubscription;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BufferingStreamSubscription.prototype = $desc;
  _BufferingStreamSubscription.prototype.get$_onData = function() {
    return this._onData;
  };
  _BufferingStreamSubscription.prototype.get$_onData.$reflectable = 1;
  _BufferingStreamSubscription.prototype.set$_onData = function(v) {
    return this._onData = v;
  };
  _BufferingStreamSubscription.prototype.set$_onData.$reflectable = 1;
  _BufferingStreamSubscription.prototype.get$_onError = function() {
    return this._onError;
  };
  _BufferingStreamSubscription.prototype.get$_onError.$reflectable = 1;
  _BufferingStreamSubscription.prototype.set$_onError = function(v) {
    return this._onError = v;
  };
  _BufferingStreamSubscription.prototype.set$_onError.$reflectable = 1;
  _BufferingStreamSubscription.prototype.get$_onDone = function() {
    return this._onDone;
  };
  _BufferingStreamSubscription.prototype.get$_onDone.$reflectable = 1;
  _BufferingStreamSubscription.prototype.set$_onDone = function(v) {
    return this._onDone = v;
  };
  _BufferingStreamSubscription.prototype.set$_onDone.$reflectable = 1;
  _BufferingStreamSubscription.prototype.get$_zone = function() {
    return this._zone;
  };
  _BufferingStreamSubscription.prototype.get$_zone.$reflectable = 1;
  _BufferingStreamSubscription.prototype.get$_state = function() {
    return this._state;
  };
  _BufferingStreamSubscription.prototype.get$_state.$reflectable = 1;
  _BufferingStreamSubscription.prototype.set$_state = function(v) {
    return this._state = v;
  };
  _BufferingStreamSubscription.prototype.set$_state.$reflectable = 1;
  _BufferingStreamSubscription.prototype.get$_cancelFuture = function() {
    return this._cancelFuture;
  };
  _BufferingStreamSubscription.prototype.get$_cancelFuture.$reflectable = 1;
  _BufferingStreamSubscription.prototype.set$_cancelFuture = function(v) {
    return this._cancelFuture = v;
  };
  _BufferingStreamSubscription.prototype.set$_cancelFuture.$reflectable = 1;
  _BufferingStreamSubscription.prototype.get$_pending = function() {
    return this._pending;
  };
  _BufferingStreamSubscription.prototype.get$_pending.$reflectable = 1;
  _BufferingStreamSubscription.prototype.set$_pending = function(v) {
    return this._pending = v;
  };
  _BufferingStreamSubscription.prototype.set$_pending.$reflectable = 1;
  function _BufferingStreamSubscription_asFuture_closure(futureValue_0, result_1) {
    this.futureValue_0 = futureValue_0;
    this.result_1 = result_1;
  }
  _BufferingStreamSubscription_asFuture_closure.builtin$cls = "_BufferingStreamSubscription_asFuture_closure";
  if (!"name" in _BufferingStreamSubscription_asFuture_closure)
    _BufferingStreamSubscription_asFuture_closure.name = "_BufferingStreamSubscription_asFuture_closure";
  $desc = $collectedClasses._BufferingStreamSubscription_asFuture_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BufferingStreamSubscription_asFuture_closure.prototype = $desc;
  function _BufferingStreamSubscription_asFuture_closure0(this_2, result_3) {
    this.this_2 = this_2;
    this.result_3 = result_3;
  }
  _BufferingStreamSubscription_asFuture_closure0.builtin$cls = "_BufferingStreamSubscription_asFuture_closure0";
  if (!"name" in _BufferingStreamSubscription_asFuture_closure0)
    _BufferingStreamSubscription_asFuture_closure0.name = "_BufferingStreamSubscription_asFuture_closure0";
  $desc = $collectedClasses._BufferingStreamSubscription_asFuture_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BufferingStreamSubscription_asFuture_closure0.prototype = $desc;
  function _BufferingStreamSubscription__sendError_sendError(this_0, error_1, stackTrace_2) {
    this.this_0 = this_0;
    this.error_1 = error_1;
    this.stackTrace_2 = stackTrace_2;
  }
  _BufferingStreamSubscription__sendError_sendError.builtin$cls = "_BufferingStreamSubscription__sendError_sendError";
  if (!"name" in _BufferingStreamSubscription__sendError_sendError)
    _BufferingStreamSubscription__sendError_sendError.name = "_BufferingStreamSubscription__sendError_sendError";
  $desc = $collectedClasses._BufferingStreamSubscription__sendError_sendError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BufferingStreamSubscription__sendError_sendError.prototype = $desc;
  function _BufferingStreamSubscription__sendDone_sendDone(this_0) {
    this.this_0 = this_0;
  }
  _BufferingStreamSubscription__sendDone_sendDone.builtin$cls = "_BufferingStreamSubscription__sendDone_sendDone";
  if (!"name" in _BufferingStreamSubscription__sendDone_sendDone)
    _BufferingStreamSubscription__sendDone_sendDone.name = "_BufferingStreamSubscription__sendDone_sendDone";
  $desc = $collectedClasses._BufferingStreamSubscription__sendDone_sendDone;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BufferingStreamSubscription__sendDone_sendDone.prototype = $desc;
  function _StreamImpl() {
  }
  _StreamImpl.builtin$cls = "_StreamImpl";
  if (!"name" in _StreamImpl)
    _StreamImpl.name = "_StreamImpl";
  $desc = $collectedClasses._StreamImpl;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamImpl.prototype = $desc;
  function _GeneratedStreamImpl(_pending, _isUsed) {
    this._pending = _pending;
    this._isUsed = _isUsed;
  }
  _GeneratedStreamImpl.builtin$cls = "_GeneratedStreamImpl";
  if (!"name" in _GeneratedStreamImpl)
    _GeneratedStreamImpl.name = "_GeneratedStreamImpl";
  $desc = $collectedClasses._GeneratedStreamImpl;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _GeneratedStreamImpl.prototype = $desc;
  _GeneratedStreamImpl.prototype.get$_pending = function() {
    return this._pending;
  };
  _GeneratedStreamImpl.prototype.get$_pending.$reflectable = 1;
  _GeneratedStreamImpl.prototype.get$_isUsed = function() {
    return this._isUsed;
  };
  _GeneratedStreamImpl.prototype.get$_isUsed.$reflectable = 1;
  _GeneratedStreamImpl.prototype.set$_isUsed = function(v) {
    return this._isUsed = v;
  };
  _GeneratedStreamImpl.prototype.set$_isUsed.$reflectable = 1;
  function _IterablePendingEvents(_async$_iterator, _state) {
    this._async$_iterator = _async$_iterator;
    this._state = _state;
  }
  _IterablePendingEvents.builtin$cls = "_IterablePendingEvents";
  if (!"name" in _IterablePendingEvents)
    _IterablePendingEvents.name = "_IterablePendingEvents";
  $desc = $collectedClasses._IterablePendingEvents;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _IterablePendingEvents.prototype = $desc;
  _IterablePendingEvents.prototype.get$_async$_iterator = function() {
    return this._async$_iterator;
  };
  _IterablePendingEvents.prototype.get$_async$_iterator.$reflectable = 1;
  _IterablePendingEvents.prototype.set$_async$_iterator = function(v) {
    return this._async$_iterator = v;
  };
  _IterablePendingEvents.prototype.set$_async$_iterator.$reflectable = 1;
  function _DelayedEvent(next) {
    this.next = next;
  }
  _DelayedEvent.builtin$cls = "_DelayedEvent";
  if (!"name" in _DelayedEvent)
    _DelayedEvent.name = "_DelayedEvent";
  $desc = $collectedClasses._DelayedEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DelayedEvent.prototype = $desc;
  _DelayedEvent.prototype.get$next = function() {
    return this.next;
  };
  _DelayedEvent.prototype.get$next.$reflectable = 1;
  _DelayedEvent.prototype.set$next = function(v) {
    return this.next = v;
  };
  _DelayedEvent.prototype.set$next.$reflectable = 1;
  function _DelayedData(value, next) {
    this.value = value;
    this.next = next;
  }
  _DelayedData.builtin$cls = "_DelayedData";
  if (!"name" in _DelayedData)
    _DelayedData.name = "_DelayedData";
  $desc = $collectedClasses._DelayedData;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DelayedData.prototype = $desc;
  _DelayedData.prototype.get$value = function() {
    return this.value;
  };
  _DelayedData.prototype.get$value.$reflectable = 1;
  function _DelayedError(error, stackTrace, next) {
    this.error = error;
    this.stackTrace = stackTrace;
    this.next = next;
  }
  _DelayedError.builtin$cls = "_DelayedError";
  if (!"name" in _DelayedError)
    _DelayedError.name = "_DelayedError";
  $desc = $collectedClasses._DelayedError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DelayedError.prototype = $desc;
  _DelayedError.prototype.get$error = function() {
    return this.error;
  };
  _DelayedError.prototype.get$error.$reflectable = 1;
  _DelayedError.prototype.get$stackTrace = function() {
    return this.stackTrace;
  };
  _DelayedError.prototype.get$stackTrace.$reflectable = 1;
  function _DelayedDone() {
  }
  _DelayedDone.builtin$cls = "_DelayedDone";
  if (!"name" in _DelayedDone)
    _DelayedDone.name = "_DelayedDone";
  $desc = $collectedClasses._DelayedDone;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DelayedDone.prototype = $desc;
  function _PendingEvents(_state) {
    this._state = _state;
  }
  _PendingEvents.builtin$cls = "_PendingEvents";
  if (!"name" in _PendingEvents)
    _PendingEvents.name = "_PendingEvents";
  $desc = $collectedClasses._PendingEvents;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _PendingEvents.prototype = $desc;
  _PendingEvents.prototype.get$_state = function() {
    return this._state;
  };
  _PendingEvents.prototype.get$_state.$reflectable = 1;
  _PendingEvents.prototype.set$_state = function(v) {
    return this._state = v;
  };
  _PendingEvents.prototype.set$_state.$reflectable = 1;
  function _PendingEvents_schedule_closure(this_0, dispatch_1) {
    this.this_0 = this_0;
    this.dispatch_1 = dispatch_1;
  }
  _PendingEvents_schedule_closure.builtin$cls = "_PendingEvents_schedule_closure";
  if (!"name" in _PendingEvents_schedule_closure)
    _PendingEvents_schedule_closure.name = "_PendingEvents_schedule_closure";
  $desc = $collectedClasses._PendingEvents_schedule_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _PendingEvents_schedule_closure.prototype = $desc;
  function _StreamImplEvents(firstPendingEvent, lastPendingEvent, _state) {
    this.firstPendingEvent = firstPendingEvent;
    this.lastPendingEvent = lastPendingEvent;
    this._state = _state;
  }
  _StreamImplEvents.builtin$cls = "_StreamImplEvents";
  if (!"name" in _StreamImplEvents)
    _StreamImplEvents.name = "_StreamImplEvents";
  $desc = $collectedClasses._StreamImplEvents;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamImplEvents.prototype = $desc;
  _StreamImplEvents.prototype.get$firstPendingEvent = function() {
    return this.firstPendingEvent;
  };
  _StreamImplEvents.prototype.get$firstPendingEvent.$reflectable = 1;
  _StreamImplEvents.prototype.set$firstPendingEvent = function(v) {
    return this.firstPendingEvent = v;
  };
  _StreamImplEvents.prototype.set$firstPendingEvent.$reflectable = 1;
  _StreamImplEvents.prototype.get$lastPendingEvent = function() {
    return this.lastPendingEvent;
  };
  _StreamImplEvents.prototype.get$lastPendingEvent.$reflectable = 1;
  _StreamImplEvents.prototype.set$lastPendingEvent = function(v) {
    return this.lastPendingEvent = v;
  };
  _StreamImplEvents.prototype.set$lastPendingEvent.$reflectable = 1;
  function _BroadcastLinkedList(_async$_next, _async$_previous) {
    this._async$_next = _async$_next;
    this._async$_previous = _async$_previous;
  }
  _BroadcastLinkedList.builtin$cls = "_BroadcastLinkedList";
  if (!"name" in _BroadcastLinkedList)
    _BroadcastLinkedList.name = "_BroadcastLinkedList";
  $desc = $collectedClasses._BroadcastLinkedList;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BroadcastLinkedList.prototype = $desc;
  _BroadcastLinkedList.prototype.get$_async$_next = function() {
    return this._async$_next;
  };
  _BroadcastLinkedList.prototype.get$_async$_next.$reflectable = 1;
  _BroadcastLinkedList.prototype.set$_async$_next = function(v) {
    return this._async$_next = v;
  };
  _BroadcastLinkedList.prototype.set$_async$_next.$reflectable = 1;
  _BroadcastLinkedList.prototype.get$_async$_previous = function() {
    return this._async$_previous;
  };
  _BroadcastLinkedList.prototype.get$_async$_previous.$reflectable = 1;
  _BroadcastLinkedList.prototype.set$_async$_previous = function(v) {
    return this._async$_previous = v;
  };
  _BroadcastLinkedList.prototype.set$_async$_previous.$reflectable = 1;
  function _DummyStreamSubscription(_pauseCounter) {
    this._pauseCounter = _pauseCounter;
  }
  _DummyStreamSubscription.builtin$cls = "_DummyStreamSubscription";
  if (!"name" in _DummyStreamSubscription)
    _DummyStreamSubscription.name = "_DummyStreamSubscription";
  $desc = $collectedClasses._DummyStreamSubscription;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DummyStreamSubscription.prototype = $desc;
  _DummyStreamSubscription.prototype.get$_pauseCounter = function() {
    return this._pauseCounter;
  };
  _DummyStreamSubscription.prototype.get$_pauseCounter.$reflectable = 1;
  _DummyStreamSubscription.prototype.set$_pauseCounter = function(v) {
    return this._pauseCounter = v;
  };
  _DummyStreamSubscription.prototype.set$_pauseCounter.$reflectable = 1;
  function _DummyStreamSubscription_pause_closure(this_0) {
    this.this_0 = this_0;
  }
  _DummyStreamSubscription_pause_closure.builtin$cls = "_DummyStreamSubscription_pause_closure";
  if (!"name" in _DummyStreamSubscription_pause_closure)
    _DummyStreamSubscription_pause_closure.name = "_DummyStreamSubscription_pause_closure";
  $desc = $collectedClasses._DummyStreamSubscription_pause_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DummyStreamSubscription_pause_closure.prototype = $desc;
  function _AsBroadcastStream(_async$_source, _onListenHandler, _onCancelHandler, _zone, _async$_controller, _subscription) {
    this._async$_source = _async$_source;
    this._onListenHandler = _onListenHandler;
    this._onCancelHandler = _onCancelHandler;
    this._zone = _zone;
    this._async$_controller = _async$_controller;
    this._subscription = _subscription;
  }
  _AsBroadcastStream.builtin$cls = "_AsBroadcastStream";
  if (!"name" in _AsBroadcastStream)
    _AsBroadcastStream.name = "_AsBroadcastStream";
  $desc = $collectedClasses._AsBroadcastStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AsBroadcastStream.prototype = $desc;
  _AsBroadcastStream.prototype.get$_async$_source = function() {
    return this._async$_source;
  };
  _AsBroadcastStream.prototype.get$_async$_source.$reflectable = 1;
  _AsBroadcastStream.prototype.get$_onListenHandler = function() {
    return this._onListenHandler;
  };
  _AsBroadcastStream.prototype.get$_onListenHandler.$reflectable = 1;
  _AsBroadcastStream.prototype.get$_onCancelHandler = function() {
    return this._onCancelHandler;
  };
  _AsBroadcastStream.prototype.get$_onCancelHandler.$reflectable = 1;
  _AsBroadcastStream.prototype.get$_zone = function() {
    return this._zone;
  };
  _AsBroadcastStream.prototype.get$_zone.$reflectable = 1;
  _AsBroadcastStream.prototype.get$_async$_controller = function() {
    return this._async$_controller;
  };
  _AsBroadcastStream.prototype.get$_async$_controller.$reflectable = 1;
  _AsBroadcastStream.prototype.set$_async$_controller = function(v) {
    return this._async$_controller = v;
  };
  _AsBroadcastStream.prototype.set$_async$_controller.$reflectable = 1;
  _AsBroadcastStream.prototype.get$_subscription = function() {
    return this._subscription;
  };
  _AsBroadcastStream.prototype.get$_subscription.$reflectable = 1;
  _AsBroadcastStream.prototype.set$_subscription = function(v) {
    return this._subscription = v;
  };
  _AsBroadcastStream.prototype.set$_subscription.$reflectable = 1;
  function _BroadcastSubscriptionWrapper(_stream) {
    this._stream = _stream;
  }
  _BroadcastSubscriptionWrapper.builtin$cls = "_BroadcastSubscriptionWrapper";
  if (!"name" in _BroadcastSubscriptionWrapper)
    _BroadcastSubscriptionWrapper.name = "_BroadcastSubscriptionWrapper";
  $desc = $collectedClasses._BroadcastSubscriptionWrapper;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BroadcastSubscriptionWrapper.prototype = $desc;
  _BroadcastSubscriptionWrapper.prototype.get$_stream = function() {
    return this._stream;
  };
  _BroadcastSubscriptionWrapper.prototype.get$_stream.$reflectable = 1;
  function _StreamIteratorImpl(_subscription, _async$_current, _futureOrPrefetch, _state) {
    this._subscription = _subscription;
    this._async$_current = _async$_current;
    this._futureOrPrefetch = _futureOrPrefetch;
    this._state = _state;
  }
  _StreamIteratorImpl.builtin$cls = "_StreamIteratorImpl";
  if (!"name" in _StreamIteratorImpl)
    _StreamIteratorImpl.name = "_StreamIteratorImpl";
  $desc = $collectedClasses._StreamIteratorImpl;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamIteratorImpl.prototype = $desc;
  _StreamIteratorImpl.prototype.get$_subscription = function() {
    return this._subscription;
  };
  _StreamIteratorImpl.prototype.get$_subscription.$reflectable = 1;
  _StreamIteratorImpl.prototype.set$_subscription = function(v) {
    return this._subscription = v;
  };
  _StreamIteratorImpl.prototype.set$_subscription.$reflectable = 1;
  _StreamIteratorImpl.prototype.get$_async$_current = function() {
    return this._async$_current;
  };
  _StreamIteratorImpl.prototype.get$_async$_current.$reflectable = 1;
  _StreamIteratorImpl.prototype.set$_async$_current = function(v) {
    return this._async$_current = v;
  };
  _StreamIteratorImpl.prototype.set$_async$_current.$reflectable = 1;
  _StreamIteratorImpl.prototype.get$_futureOrPrefetch = function() {
    return this._futureOrPrefetch;
  };
  _StreamIteratorImpl.prototype.get$_futureOrPrefetch.$reflectable = 1;
  _StreamIteratorImpl.prototype.set$_futureOrPrefetch = function(v) {
    return this._futureOrPrefetch = v;
  };
  _StreamIteratorImpl.prototype.set$_futureOrPrefetch.$reflectable = 1;
  _StreamIteratorImpl.prototype.get$_state = function() {
    return this._state;
  };
  _StreamIteratorImpl.prototype.get$_state.$reflectable = 1;
  _StreamIteratorImpl.prototype.set$_state = function(v) {
    return this._state = v;
  };
  _StreamIteratorImpl.prototype.set$_state.$reflectable = 1;
  function _cancelAndError_closure(future_0, error_1, stackTrace_2) {
    this.future_0 = future_0;
    this.error_1 = error_1;
    this.stackTrace_2 = stackTrace_2;
  }
  _cancelAndError_closure.builtin$cls = "_cancelAndError_closure";
  if (!"name" in _cancelAndError_closure)
    _cancelAndError_closure.name = "_cancelAndError_closure";
  $desc = $collectedClasses._cancelAndError_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _cancelAndError_closure.prototype = $desc;
  function _cancelAndErrorClosure_closure(subscription_0, future_1) {
    this.subscription_0 = subscription_0;
    this.future_1 = future_1;
  }
  _cancelAndErrorClosure_closure.builtin$cls = "_cancelAndErrorClosure_closure";
  if (!"name" in _cancelAndErrorClosure_closure)
    _cancelAndErrorClosure_closure.name = "_cancelAndErrorClosure_closure";
  $desc = $collectedClasses._cancelAndErrorClosure_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _cancelAndErrorClosure_closure.prototype = $desc;
  function _cancelAndValue_closure(future_0, value_1) {
    this.future_0 = future_0;
    this.value_1 = value_1;
  }
  _cancelAndValue_closure.builtin$cls = "_cancelAndValue_closure";
  if (!"name" in _cancelAndValue_closure)
    _cancelAndValue_closure.name = "_cancelAndValue_closure";
  $desc = $collectedClasses._cancelAndValue_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _cancelAndValue_closure.prototype = $desc;
  function _ForwardingStream(_async$_source) {
    this._async$_source = _async$_source;
  }
  _ForwardingStream.builtin$cls = "_ForwardingStream";
  if (!"name" in _ForwardingStream)
    _ForwardingStream.name = "_ForwardingStream";
  $desc = $collectedClasses._ForwardingStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ForwardingStream.prototype = $desc;
  _ForwardingStream.prototype.get$_async$_source = function() {
    return this._async$_source;
  };
  _ForwardingStream.prototype.get$_async$_source.$reflectable = 1;
  function _ForwardingStreamSubscription(_stream, _subscription, _onData, _onError, _onDone, _zone, _state, _cancelFuture, _pending) {
    this._stream = _stream;
    this._subscription = _subscription;
    this._onData = _onData;
    this._onError = _onError;
    this._onDone = _onDone;
    this._zone = _zone;
    this._state = _state;
    this._cancelFuture = _cancelFuture;
    this._pending = _pending;
  }
  _ForwardingStreamSubscription.builtin$cls = "_ForwardingStreamSubscription";
  if (!"name" in _ForwardingStreamSubscription)
    _ForwardingStreamSubscription.name = "_ForwardingStreamSubscription";
  $desc = $collectedClasses._ForwardingStreamSubscription;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ForwardingStreamSubscription.prototype = $desc;
  _ForwardingStreamSubscription.prototype.get$_stream = function() {
    return this._stream;
  };
  _ForwardingStreamSubscription.prototype.get$_stream.$reflectable = 1;
  _ForwardingStreamSubscription.prototype.get$_subscription = function() {
    return this._subscription;
  };
  _ForwardingStreamSubscription.prototype.get$_subscription.$reflectable = 1;
  _ForwardingStreamSubscription.prototype.set$_subscription = function(v) {
    return this._subscription = v;
  };
  _ForwardingStreamSubscription.prototype.set$_subscription.$reflectable = 1;
  function _WhereStream(_test, _async$_source) {
    this._test = _test;
    this._async$_source = _async$_source;
  }
  _WhereStream.builtin$cls = "_WhereStream";
  if (!"name" in _WhereStream)
    _WhereStream.name = "_WhereStream";
  $desc = $collectedClasses._WhereStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _WhereStream.prototype = $desc;
  _WhereStream.prototype.get$_test = function() {
    return this._test;
  };
  _WhereStream.prototype.get$_test.$reflectable = 1;
  function _MapStream(_transform, _async$_source) {
    this._transform = _transform;
    this._async$_source = _async$_source;
  }
  _MapStream.builtin$cls = "_MapStream";
  if (!"name" in _MapStream)
    _MapStream.name = "_MapStream";
  $desc = $collectedClasses._MapStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MapStream.prototype = $desc;
  _MapStream.prototype.get$_transform = function() {
    return this._transform;
  };
  _MapStream.prototype.get$_transform.$reflectable = 1;
  function _ExpandStream(_expand, _async$_source) {
    this._expand = _expand;
    this._async$_source = _async$_source;
  }
  _ExpandStream.builtin$cls = "_ExpandStream";
  if (!"name" in _ExpandStream)
    _ExpandStream.name = "_ExpandStream";
  $desc = $collectedClasses._ExpandStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ExpandStream.prototype = $desc;
  _ExpandStream.prototype.get$_expand = function() {
    return this._expand;
  };
  _ExpandStream.prototype.get$_expand.$reflectable = 1;
  function _HandleErrorStream(_transform, _test, _async$_source) {
    this._transform = _transform;
    this._test = _test;
    this._async$_source = _async$_source;
  }
  _HandleErrorStream.builtin$cls = "_HandleErrorStream";
  if (!"name" in _HandleErrorStream)
    _HandleErrorStream.name = "_HandleErrorStream";
  $desc = $collectedClasses._HandleErrorStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HandleErrorStream.prototype = $desc;
  _HandleErrorStream.prototype.get$_transform = function() {
    return this._transform;
  };
  _HandleErrorStream.prototype.get$_transform.$reflectable = 1;
  _HandleErrorStream.prototype.get$_test = function() {
    return this._test;
  };
  _HandleErrorStream.prototype.get$_test.$reflectable = 1;
  function _TakeStream(_remaining, _async$_source) {
    this._remaining = _remaining;
    this._async$_source = _async$_source;
  }
  _TakeStream.builtin$cls = "_TakeStream";
  if (!"name" in _TakeStream)
    _TakeStream.name = "_TakeStream";
  $desc = $collectedClasses._TakeStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _TakeStream.prototype = $desc;
  _TakeStream.prototype.get$_remaining = function() {
    return this._remaining;
  };
  _TakeStream.prototype.get$_remaining.$reflectable = 1;
  _TakeStream.prototype.set$_remaining = function(v) {
    return this._remaining = v;
  };
  _TakeStream.prototype.set$_remaining.$reflectable = 1;
  function _TakeWhileStream(_test, _async$_source) {
    this._test = _test;
    this._async$_source = _async$_source;
  }
  _TakeWhileStream.builtin$cls = "_TakeWhileStream";
  if (!"name" in _TakeWhileStream)
    _TakeWhileStream.name = "_TakeWhileStream";
  $desc = $collectedClasses._TakeWhileStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _TakeWhileStream.prototype = $desc;
  _TakeWhileStream.prototype.get$_test = function() {
    return this._test;
  };
  _TakeWhileStream.prototype.get$_test.$reflectable = 1;
  function _SkipStream(_remaining, _async$_source) {
    this._remaining = _remaining;
    this._async$_source = _async$_source;
  }
  _SkipStream.builtin$cls = "_SkipStream";
  if (!"name" in _SkipStream)
    _SkipStream.name = "_SkipStream";
  $desc = $collectedClasses._SkipStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SkipStream.prototype = $desc;
  _SkipStream.prototype.get$_remaining = function() {
    return this._remaining;
  };
  _SkipStream.prototype.get$_remaining.$reflectable = 1;
  _SkipStream.prototype.set$_remaining = function(v) {
    return this._remaining = v;
  };
  _SkipStream.prototype.set$_remaining.$reflectable = 1;
  function _SkipWhileStream(_test, _hasFailed, _async$_source) {
    this._test = _test;
    this._hasFailed = _hasFailed;
    this._async$_source = _async$_source;
  }
  _SkipWhileStream.builtin$cls = "_SkipWhileStream";
  if (!"name" in _SkipWhileStream)
    _SkipWhileStream.name = "_SkipWhileStream";
  $desc = $collectedClasses._SkipWhileStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SkipWhileStream.prototype = $desc;
  _SkipWhileStream.prototype.get$_test = function() {
    return this._test;
  };
  _SkipWhileStream.prototype.get$_test.$reflectable = 1;
  _SkipWhileStream.prototype.get$_hasFailed = function() {
    return this._hasFailed;
  };
  _SkipWhileStream.prototype.get$_hasFailed.$reflectable = 1;
  _SkipWhileStream.prototype.set$_hasFailed = function(v) {
    return this._hasFailed = v;
  };
  _SkipWhileStream.prototype.set$_hasFailed.$reflectable = 1;
  function _DistinctStream(_async$_equals, _async$_previous, _async$_source) {
    this._async$_equals = _async$_equals;
    this._async$_previous = _async$_previous;
    this._async$_source = _async$_source;
  }
  _DistinctStream.builtin$cls = "_DistinctStream";
  if (!"name" in _DistinctStream)
    _DistinctStream.name = "_DistinctStream";
  $desc = $collectedClasses._DistinctStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DistinctStream.prototype = $desc;
  _DistinctStream.prototype.get$_async$_equals = function() {
    return this._async$_equals;
  };
  _DistinctStream.prototype.get$_async$_equals.$reflectable = 1;
  _DistinctStream.prototype.set$_async$_equals = function(v) {
    return this._async$_equals = v;
  };
  _DistinctStream.prototype.set$_async$_equals.$reflectable = 1;
  _DistinctStream.prototype.get$_async$_previous = function() {
    return this._async$_previous;
  };
  _DistinctStream.prototype.get$_async$_previous.$reflectable = 1;
  _DistinctStream.prototype.set$_async$_previous = function(v) {
    return this._async$_previous = v;
  };
  _DistinctStream.prototype.set$_async$_previous.$reflectable = 1;
  function _EventSinkWrapper(_sink) {
    this._sink = _sink;
  }
  _EventSinkWrapper.builtin$cls = "_EventSinkWrapper";
  if (!"name" in _EventSinkWrapper)
    _EventSinkWrapper.name = "_EventSinkWrapper";
  $desc = $collectedClasses._EventSinkWrapper;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _EventSinkWrapper.prototype = $desc;
  _EventSinkWrapper.prototype.get$_sink = function() {
    return this._sink;
  };
  _EventSinkWrapper.prototype.get$_sink.$reflectable = 1;
  _EventSinkWrapper.prototype.set$_sink = function(v) {
    return this._sink = v;
  };
  _EventSinkWrapper.prototype.set$_sink.$reflectable = 1;
  function _SinkTransformerStreamSubscription(_transformerSink, _subscription, _onData, _onError, _onDone, _zone, _state, _cancelFuture, _pending) {
    this._transformerSink = _transformerSink;
    this._subscription = _subscription;
    this._onData = _onData;
    this._onError = _onError;
    this._onDone = _onDone;
    this._zone = _zone;
    this._state = _state;
    this._cancelFuture = _cancelFuture;
    this._pending = _pending;
  }
  _SinkTransformerStreamSubscription.builtin$cls = "_SinkTransformerStreamSubscription";
  if (!"name" in _SinkTransformerStreamSubscription)
    _SinkTransformerStreamSubscription.name = "_SinkTransformerStreamSubscription";
  $desc = $collectedClasses._SinkTransformerStreamSubscription;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SinkTransformerStreamSubscription.prototype = $desc;
  _SinkTransformerStreamSubscription.prototype.get$_transformerSink = function() {
    return this._transformerSink;
  };
  _SinkTransformerStreamSubscription.prototype.get$_transformerSink.$reflectable = 1;
  _SinkTransformerStreamSubscription.prototype.set$_transformerSink = function(v) {
    return this._transformerSink = v;
  };
  _SinkTransformerStreamSubscription.prototype.set$_transformerSink.$reflectable = 1;
  _SinkTransformerStreamSubscription.prototype.get$_subscription = function() {
    return this._subscription;
  };
  _SinkTransformerStreamSubscription.prototype.get$_subscription.$reflectable = 1;
  _SinkTransformerStreamSubscription.prototype.set$_subscription = function(v) {
    return this._subscription = v;
  };
  _SinkTransformerStreamSubscription.prototype.set$_subscription.$reflectable = 1;
  function _StreamSinkTransformer(_sinkMapper) {
    this._sinkMapper = _sinkMapper;
  }
  _StreamSinkTransformer.builtin$cls = "_StreamSinkTransformer";
  if (!"name" in _StreamSinkTransformer)
    _StreamSinkTransformer.name = "_StreamSinkTransformer";
  $desc = $collectedClasses._StreamSinkTransformer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamSinkTransformer.prototype = $desc;
  _StreamSinkTransformer.prototype.get$_sinkMapper = function() {
    return this._sinkMapper;
  };
  _StreamSinkTransformer.prototype.get$_sinkMapper.$reflectable = 1;
  function _BoundSinkStream(_sinkMapper, _stream) {
    this._sinkMapper = _sinkMapper;
    this._stream = _stream;
  }
  _BoundSinkStream.builtin$cls = "_BoundSinkStream";
  if (!"name" in _BoundSinkStream)
    _BoundSinkStream.name = "_BoundSinkStream";
  $desc = $collectedClasses._BoundSinkStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BoundSinkStream.prototype = $desc;
  _BoundSinkStream.prototype.get$_sinkMapper = function() {
    return this._sinkMapper;
  };
  _BoundSinkStream.prototype.get$_sinkMapper.$reflectable = 1;
  _BoundSinkStream.prototype.get$_stream = function() {
    return this._stream;
  };
  _BoundSinkStream.prototype.get$_stream.$reflectable = 1;
  function _HandlerEventSink(_handleData, _handleError, _handleDone, _sink) {
    this._handleData = _handleData;
    this._handleError = _handleError;
    this._handleDone = _handleDone;
    this._sink = _sink;
  }
  _HandlerEventSink.builtin$cls = "_HandlerEventSink";
  if (!"name" in _HandlerEventSink)
    _HandlerEventSink.name = "_HandlerEventSink";
  $desc = $collectedClasses._HandlerEventSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HandlerEventSink.prototype = $desc;
  _HandlerEventSink.prototype.get$_handleData = function() {
    return this._handleData;
  };
  _HandlerEventSink.prototype.get$_handleData.$reflectable = 1;
  _HandlerEventSink.prototype.get$_handleError = function() {
    return this._handleError;
  };
  _HandlerEventSink.prototype.get$_handleError.$reflectable = 1;
  _HandlerEventSink.prototype.get$_handleDone = function() {
    return this._handleDone;
  };
  _HandlerEventSink.prototype.get$_handleDone.$reflectable = 1;
  _HandlerEventSink.prototype.get$_sink = function() {
    return this._sink;
  };
  _HandlerEventSink.prototype.get$_sink.$reflectable = 1;
  function _StreamHandlerTransformer(_sinkMapper) {
    this._sinkMapper = _sinkMapper;
  }
  _StreamHandlerTransformer.builtin$cls = "_StreamHandlerTransformer";
  if (!"name" in _StreamHandlerTransformer)
    _StreamHandlerTransformer.name = "_StreamHandlerTransformer";
  $desc = $collectedClasses._StreamHandlerTransformer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamHandlerTransformer.prototype = $desc;
  function _StreamHandlerTransformer_closure(box_0, S_1, T_2) {
    this.box_0 = box_0;
    this.S_1 = S_1;
    this.T_2 = T_2;
  }
  _StreamHandlerTransformer_closure.builtin$cls = "_StreamHandlerTransformer_closure";
  if (!"name" in _StreamHandlerTransformer_closure)
    _StreamHandlerTransformer_closure.name = "_StreamHandlerTransformer_closure";
  $desc = $collectedClasses._StreamHandlerTransformer_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamHandlerTransformer_closure.prototype = $desc;
  function _StreamSubscriptionTransformer(_transformer) {
    this._transformer = _transformer;
  }
  _StreamSubscriptionTransformer.builtin$cls = "_StreamSubscriptionTransformer";
  if (!"name" in _StreamSubscriptionTransformer)
    _StreamSubscriptionTransformer.name = "_StreamSubscriptionTransformer";
  $desc = $collectedClasses._StreamSubscriptionTransformer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamSubscriptionTransformer.prototype = $desc;
  _StreamSubscriptionTransformer.prototype.get$_transformer = function() {
    return this._transformer;
  };
  _StreamSubscriptionTransformer.prototype.get$_transformer.$reflectable = 1;
  function _BoundSubscriptionStream(_transformer, _stream) {
    this._transformer = _transformer;
    this._stream = _stream;
  }
  _BoundSubscriptionStream.builtin$cls = "_BoundSubscriptionStream";
  if (!"name" in _BoundSubscriptionStream)
    _BoundSubscriptionStream.name = "_BoundSubscriptionStream";
  $desc = $collectedClasses._BoundSubscriptionStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BoundSubscriptionStream.prototype = $desc;
  _BoundSubscriptionStream.prototype.get$_transformer = function() {
    return this._transformer;
  };
  _BoundSubscriptionStream.prototype.get$_transformer.$reflectable = 1;
  _BoundSubscriptionStream.prototype.get$_stream = function() {
    return this._stream;
  };
  _BoundSubscriptionStream.prototype.get$_stream.$reflectable = 1;
  function Timer() {
  }
  Timer.builtin$cls = "Timer";
  if (!"name" in Timer)
    Timer.name = "Timer";
  $desc = $collectedClasses.Timer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Timer.prototype = $desc;
  function ZoneSpecification() {
  }
  ZoneSpecification.builtin$cls = "ZoneSpecification";
  if (!"name" in ZoneSpecification)
    ZoneSpecification.name = "ZoneSpecification";
  $desc = $collectedClasses.ZoneSpecification;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ZoneSpecification.prototype = $desc;
  function _ZoneSpecification(handleUncaughtError, run, runUnary, runBinary, registerCallback, registerUnaryCallback, registerBinaryCallback, scheduleMicrotask, createTimer, createPeriodicTimer, print, fork) {
    this.handleUncaughtError = handleUncaughtError;
    this.run = run;
    this.runUnary = runUnary;
    this.runBinary = runBinary;
    this.registerCallback = registerCallback;
    this.registerUnaryCallback = registerUnaryCallback;
    this.registerBinaryCallback = registerBinaryCallback;
    this.scheduleMicrotask = scheduleMicrotask;
    this.createTimer = createTimer;
    this.createPeriodicTimer = createPeriodicTimer;
    this.print = print;
    this.fork = fork;
  }
  _ZoneSpecification.builtin$cls = "_ZoneSpecification";
  if (!"name" in _ZoneSpecification)
    _ZoneSpecification.name = "_ZoneSpecification";
  $desc = $collectedClasses._ZoneSpecification;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ZoneSpecification.prototype = $desc;
  _ZoneSpecification.prototype.get$handleUncaughtError = function() {
    return this.handleUncaughtError;
  };
  _ZoneSpecification.prototype.get$handleUncaughtError.$reflectable = 1;
  _ZoneSpecification.prototype.get$run = function() {
    return this.run;
  };
  _ZoneSpecification.prototype.get$run.$reflectable = 1;
  _ZoneSpecification.prototype.get$runUnary = function() {
    return this.runUnary;
  };
  _ZoneSpecification.prototype.get$runUnary.$reflectable = 1;
  _ZoneSpecification.prototype.get$runBinary = function() {
    return this.runBinary;
  };
  _ZoneSpecification.prototype.get$runBinary.$reflectable = 1;
  _ZoneSpecification.prototype.get$registerCallback = function() {
    return this.registerCallback;
  };
  _ZoneSpecification.prototype.get$registerCallback.$reflectable = 1;
  _ZoneSpecification.prototype.get$registerUnaryCallback = function() {
    return this.registerUnaryCallback;
  };
  _ZoneSpecification.prototype.get$registerUnaryCallback.$reflectable = 1;
  _ZoneSpecification.prototype.get$registerBinaryCallback = function() {
    return this.registerBinaryCallback;
  };
  _ZoneSpecification.prototype.get$registerBinaryCallback.$reflectable = 1;
  _ZoneSpecification.prototype.get$scheduleMicrotask = function() {
    return this.scheduleMicrotask;
  };
  _ZoneSpecification.prototype.get$scheduleMicrotask.$reflectable = 1;
  _ZoneSpecification.prototype.get$createTimer = function() {
    return this.createTimer;
  };
  _ZoneSpecification.prototype.get$createTimer.$reflectable = 1;
  _ZoneSpecification.prototype.get$createPeriodicTimer = function() {
    return this.createPeriodicTimer;
  };
  _ZoneSpecification.prototype.get$createPeriodicTimer.$reflectable = 1;
  _ZoneSpecification.prototype.get$print = function() {
    return this.print;
  };
  _ZoneSpecification.prototype.get$print.$reflectable = 1;
  _ZoneSpecification.prototype.get$fork = function() {
    return this.fork;
  };
  _ZoneSpecification.prototype.get$fork.$reflectable = 1;
  function ZoneDelegate() {
  }
  ZoneDelegate.builtin$cls = "ZoneDelegate";
  if (!"name" in ZoneDelegate)
    ZoneDelegate.name = "ZoneDelegate";
  $desc = $collectedClasses.ZoneDelegate;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ZoneDelegate.prototype = $desc;
  function Zone() {
  }
  Zone.builtin$cls = "Zone";
  if (!"name" in Zone)
    Zone.name = "Zone";
  $desc = $collectedClasses.Zone;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Zone.prototype = $desc;
  function _ZoneDelegate(_degelationTarget) {
    this._degelationTarget = _degelationTarget;
  }
  _ZoneDelegate.builtin$cls = "_ZoneDelegate";
  if (!"name" in _ZoneDelegate)
    _ZoneDelegate.name = "_ZoneDelegate";
  $desc = $collectedClasses._ZoneDelegate;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ZoneDelegate.prototype = $desc;
  _ZoneDelegate.prototype.get$_degelationTarget = function() {
    return this._degelationTarget;
  };
  _ZoneDelegate.prototype.get$_degelationTarget.$reflectable = 1;
  function _BaseZone() {
  }
  _BaseZone.builtin$cls = "_BaseZone";
  if (!"name" in _BaseZone)
    _BaseZone.name = "_BaseZone";
  $desc = $collectedClasses._BaseZone;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BaseZone.prototype = $desc;
  function _BaseZone_bindCallback_closure(this_0, registered_1) {
    this.this_0 = this_0;
    this.registered_1 = registered_1;
  }
  _BaseZone_bindCallback_closure.builtin$cls = "_BaseZone_bindCallback_closure";
  if (!"name" in _BaseZone_bindCallback_closure)
    _BaseZone_bindCallback_closure.name = "_BaseZone_bindCallback_closure";
  $desc = $collectedClasses._BaseZone_bindCallback_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BaseZone_bindCallback_closure.prototype = $desc;
  function _BaseZone_bindCallback_closure0(this_2, registered_3) {
    this.this_2 = this_2;
    this.registered_3 = registered_3;
  }
  _BaseZone_bindCallback_closure0.builtin$cls = "_BaseZone_bindCallback_closure0";
  if (!"name" in _BaseZone_bindCallback_closure0)
    _BaseZone_bindCallback_closure0.name = "_BaseZone_bindCallback_closure0";
  $desc = $collectedClasses._BaseZone_bindCallback_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BaseZone_bindCallback_closure0.prototype = $desc;
  function _BaseZone_bindUnaryCallback_closure(this_0, registered_1) {
    this.this_0 = this_0;
    this.registered_1 = registered_1;
  }
  _BaseZone_bindUnaryCallback_closure.builtin$cls = "_BaseZone_bindUnaryCallback_closure";
  if (!"name" in _BaseZone_bindUnaryCallback_closure)
    _BaseZone_bindUnaryCallback_closure.name = "_BaseZone_bindUnaryCallback_closure";
  $desc = $collectedClasses._BaseZone_bindUnaryCallback_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BaseZone_bindUnaryCallback_closure.prototype = $desc;
  function _BaseZone_bindUnaryCallback_closure0(this_2, registered_3) {
    this.this_2 = this_2;
    this.registered_3 = registered_3;
  }
  _BaseZone_bindUnaryCallback_closure0.builtin$cls = "_BaseZone_bindUnaryCallback_closure0";
  if (!"name" in _BaseZone_bindUnaryCallback_closure0)
    _BaseZone_bindUnaryCallback_closure0.name = "_BaseZone_bindUnaryCallback_closure0";
  $desc = $collectedClasses._BaseZone_bindUnaryCallback_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BaseZone_bindUnaryCallback_closure0.prototype = $desc;
  function _BaseZone_bindBinaryCallback_closure(this_0, registered_1) {
    this.this_0 = this_0;
    this.registered_1 = registered_1;
  }
  _BaseZone_bindBinaryCallback_closure.builtin$cls = "_BaseZone_bindBinaryCallback_closure";
  if (!"name" in _BaseZone_bindBinaryCallback_closure)
    _BaseZone_bindBinaryCallback_closure.name = "_BaseZone_bindBinaryCallback_closure";
  $desc = $collectedClasses._BaseZone_bindBinaryCallback_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BaseZone_bindBinaryCallback_closure.prototype = $desc;
  function _BaseZone_bindBinaryCallback_closure0(this_2, registered_3) {
    this.this_2 = this_2;
    this.registered_3 = registered_3;
  }
  _BaseZone_bindBinaryCallback_closure0.builtin$cls = "_BaseZone_bindBinaryCallback_closure0";
  if (!"name" in _BaseZone_bindBinaryCallback_closure0)
    _BaseZone_bindBinaryCallback_closure0.name = "_BaseZone_bindBinaryCallback_closure0";
  $desc = $collectedClasses._BaseZone_bindBinaryCallback_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BaseZone_bindBinaryCallback_closure0.prototype = $desc;
  function _CustomizedZone(parent, _specification, _async$_map) {
    this.parent = parent;
    this._specification = _specification;
    this._async$_map = _async$_map;
  }
  _CustomizedZone.builtin$cls = "_CustomizedZone";
  if (!"name" in _CustomizedZone)
    _CustomizedZone.name = "_CustomizedZone";
  $desc = $collectedClasses._CustomizedZone;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _CustomizedZone.prototype = $desc;
  _CustomizedZone.prototype.get$parent = function() {
    return this.parent;
  };
  _CustomizedZone.prototype.get$parent.$reflectable = 1;
  _CustomizedZone.prototype.get$_specification = function() {
    return this._specification;
  };
  _CustomizedZone.prototype.get$_specification.$reflectable = 1;
  _CustomizedZone.prototype.get$_async$_map = function() {
    return this._async$_map;
  };
  _CustomizedZone.prototype.get$_async$_map.$reflectable = 1;
  function _rootHandleUncaughtError_closure(error_0, stackTrace_1) {
    this.error_0 = error_0;
    this.stackTrace_1 = stackTrace_1;
  }
  _rootHandleUncaughtError_closure.builtin$cls = "_rootHandleUncaughtError_closure";
  if (!"name" in _rootHandleUncaughtError_closure)
    _rootHandleUncaughtError_closure.name = "_rootHandleUncaughtError_closure";
  $desc = $collectedClasses._rootHandleUncaughtError_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _rootHandleUncaughtError_closure.prototype = $desc;
  function _rootHandleUncaughtError__closure(error_2, stackTrace_3) {
    this.error_2 = error_2;
    this.stackTrace_3 = stackTrace_3;
  }
  _rootHandleUncaughtError__closure.builtin$cls = "_rootHandleUncaughtError__closure";
  if (!"name" in _rootHandleUncaughtError__closure)
    _rootHandleUncaughtError__closure.name = "_rootHandleUncaughtError__closure";
  $desc = $collectedClasses._rootHandleUncaughtError__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _rootHandleUncaughtError__closure.prototype = $desc;
  function _rootFork_closure(copiedMap_0) {
    this.copiedMap_0 = copiedMap_0;
  }
  _rootFork_closure.builtin$cls = "_rootFork_closure";
  if (!"name" in _rootFork_closure)
    _rootFork_closure.name = "_rootFork_closure";
  $desc = $collectedClasses._rootFork_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _rootFork_closure.prototype = $desc;
  function _RootZoneSpecification() {
  }
  _RootZoneSpecification.builtin$cls = "_RootZoneSpecification";
  if (!"name" in _RootZoneSpecification)
    _RootZoneSpecification.name = "_RootZoneSpecification";
  $desc = $collectedClasses._RootZoneSpecification;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _RootZoneSpecification.prototype = $desc;
  function _RootZone() {
  }
  _RootZone.builtin$cls = "_RootZone";
  if (!"name" in _RootZone)
    _RootZone.name = "_RootZone";
  $desc = $collectedClasses._RootZone;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _RootZone.prototype = $desc;
  function runZoned_closure(onError_0) {
    this.onError_0 = onError_0;
  }
  runZoned_closure.builtin$cls = "runZoned_closure";
  if (!"name" in runZoned_closure)
    runZoned_closure.name = "runZoned_closure";
  $desc = $collectedClasses.runZoned_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  runZoned_closure.prototype = $desc;
  function _HashMap(_collection$_length, _strings, _nums, _rest, _keys) {
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._keys = _keys;
  }
  _HashMap.builtin$cls = "_HashMap";
  if (!"name" in _HashMap)
    _HashMap.name = "_HashMap";
  $desc = $collectedClasses._HashMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HashMap.prototype = $desc;
  _HashMap.prototype.get$_collection$_length = function() {
    return this._collection$_length;
  };
  _HashMap.prototype.get$_collection$_length.$reflectable = 1;
  _HashMap.prototype.set$_collection$_length = function(v) {
    return this._collection$_length = v;
  };
  _HashMap.prototype.set$_collection$_length.$reflectable = 1;
  _HashMap.prototype.get$_strings = function() {
    return this._strings;
  };
  _HashMap.prototype.get$_strings.$reflectable = 1;
  _HashMap.prototype.set$_strings = function(v) {
    return this._strings = v;
  };
  _HashMap.prototype.set$_strings.$reflectable = 1;
  _HashMap.prototype.get$_nums = function() {
    return this._nums;
  };
  _HashMap.prototype.get$_nums.$reflectable = 1;
  _HashMap.prototype.set$_nums = function(v) {
    return this._nums = v;
  };
  _HashMap.prototype.set$_nums.$reflectable = 1;
  _HashMap.prototype.get$_rest = function() {
    return this._rest;
  };
  _HashMap.prototype.get$_rest.$reflectable = 1;
  _HashMap.prototype.set$_rest = function(v) {
    return this._rest = v;
  };
  _HashMap.prototype.set$_rest.$reflectable = 1;
  _HashMap.prototype.get$_keys = function() {
    return this._keys;
  };
  _HashMap.prototype.get$_keys.$reflectable = 1;
  _HashMap.prototype.set$_keys = function(v) {
    return this._keys = v;
  };
  _HashMap.prototype.set$_keys.$reflectable = 1;
  function _HashMap_values_closure(this_0) {
    this.this_0 = this_0;
  }
  _HashMap_values_closure.builtin$cls = "_HashMap_values_closure";
  if (!"name" in _HashMap_values_closure)
    _HashMap_values_closure.name = "_HashMap_values_closure";
  $desc = $collectedClasses._HashMap_values_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HashMap_values_closure.prototype = $desc;
  function _HashMap_containsValue_closure(this_0, value_1) {
    this.this_0 = this_0;
    this.value_1 = value_1;
  }
  _HashMap_containsValue_closure.builtin$cls = "_HashMap_containsValue_closure";
  if (!"name" in _HashMap_containsValue_closure)
    _HashMap_containsValue_closure.name = "_HashMap_containsValue_closure";
  $desc = $collectedClasses._HashMap_containsValue_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HashMap_containsValue_closure.prototype = $desc;
  function _HashMap_addAll_closure(this_0) {
    this.this_0 = this_0;
  }
  _HashMap_addAll_closure.builtin$cls = "_HashMap_addAll_closure";
  if (!"name" in _HashMap_addAll_closure)
    _HashMap_addAll_closure.name = "_HashMap_addAll_closure";
  $desc = $collectedClasses._HashMap_addAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HashMap_addAll_closure.prototype = $desc;
  function _IdentityHashMap(_collection$_length, _strings, _nums, _rest, _keys) {
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._keys = _keys;
  }
  _IdentityHashMap.builtin$cls = "_IdentityHashMap";
  if (!"name" in _IdentityHashMap)
    _IdentityHashMap.name = "_IdentityHashMap";
  $desc = $collectedClasses._IdentityHashMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _IdentityHashMap.prototype = $desc;
  function _CustomHashMap(_equals, _hashCode, _validKey, _collection$_length, _strings, _nums, _rest, _keys) {
    this._equals = _equals;
    this._hashCode = _hashCode;
    this._validKey = _validKey;
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._keys = _keys;
  }
  _CustomHashMap.builtin$cls = "_CustomHashMap";
  if (!"name" in _CustomHashMap)
    _CustomHashMap.name = "_CustomHashMap";
  $desc = $collectedClasses._CustomHashMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _CustomHashMap.prototype = $desc;
  _CustomHashMap.prototype.get$_equals = function() {
    return this._equals;
  };
  _CustomHashMap.prototype.get$_equals.$reflectable = 1;
  _CustomHashMap.prototype.get$_hashCode = function() {
    return this._hashCode;
  };
  _CustomHashMap.prototype.get$_hashCode.$reflectable = 1;
  _CustomHashMap.prototype.get$_validKey = function() {
    return this._validKey;
  };
  _CustomHashMap.prototype.get$_validKey.$reflectable = 1;
  function _CustomHashMap_closure(K_0) {
    this.K_0 = K_0;
  }
  _CustomHashMap_closure.builtin$cls = "_CustomHashMap_closure";
  if (!"name" in _CustomHashMap_closure)
    _CustomHashMap_closure.name = "_CustomHashMap_closure";
  $desc = $collectedClasses._CustomHashMap_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _CustomHashMap_closure.prototype = $desc;
  function HashMapKeyIterable(_collection$_map) {
    this._collection$_map = _collection$_map;
  }
  HashMapKeyIterable.builtin$cls = "HashMapKeyIterable";
  if (!"name" in HashMapKeyIterable)
    HashMapKeyIterable.name = "HashMapKeyIterable";
  $desc = $collectedClasses.HashMapKeyIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HashMapKeyIterable.prototype = $desc;
  HashMapKeyIterable.prototype.get$_collection$_map = function() {
    return this._collection$_map;
  };
  HashMapKeyIterable.prototype.get$_collection$_map.$reflectable = 1;
  function HashMapKeyIterator(_collection$_map, _keys, _offset, _collection$_current) {
    this._collection$_map = _collection$_map;
    this._keys = _keys;
    this._offset = _offset;
    this._collection$_current = _collection$_current;
  }
  HashMapKeyIterator.builtin$cls = "HashMapKeyIterator";
  if (!"name" in HashMapKeyIterator)
    HashMapKeyIterator.name = "HashMapKeyIterator";
  $desc = $collectedClasses.HashMapKeyIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HashMapKeyIterator.prototype = $desc;
  HashMapKeyIterator.prototype.get$_collection$_map = function() {
    return this._collection$_map;
  };
  HashMapKeyIterator.prototype.get$_collection$_map.$reflectable = 1;
  HashMapKeyIterator.prototype.get$_keys = function() {
    return this._keys;
  };
  HashMapKeyIterator.prototype.get$_keys.$reflectable = 1;
  HashMapKeyIterator.prototype.get$_offset = function() {
    return this._offset;
  };
  HashMapKeyIterator.prototype.get$_offset.$reflectable = 1;
  HashMapKeyIterator.prototype.set$_offset = function(v) {
    return this._offset = v;
  };
  HashMapKeyIterator.prototype.set$_offset.$reflectable = 1;
  HashMapKeyIterator.prototype.get$_collection$_current = function() {
    return this._collection$_current;
  };
  HashMapKeyIterator.prototype.get$_collection$_current.$reflectable = 1;
  HashMapKeyIterator.prototype.set$_collection$_current = function(v) {
    return this._collection$_current = v;
  };
  HashMapKeyIterator.prototype.set$_collection$_current.$reflectable = 1;
  function _LinkedHashMap(_collection$_length, _strings, _nums, _rest, _first, _last, _modifications) {
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._first = _first;
    this._last = _last;
    this._modifications = _modifications;
  }
  _LinkedHashMap.builtin$cls = "_LinkedHashMap";
  if (!"name" in _LinkedHashMap)
    _LinkedHashMap.name = "_LinkedHashMap";
  $desc = $collectedClasses._LinkedHashMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedHashMap.prototype = $desc;
  _LinkedHashMap.prototype.get$_collection$_length = function() {
    return this._collection$_length;
  };
  _LinkedHashMap.prototype.get$_collection$_length.$reflectable = 1;
  _LinkedHashMap.prototype.set$_collection$_length = function(v) {
    return this._collection$_length = v;
  };
  _LinkedHashMap.prototype.set$_collection$_length.$reflectable = 1;
  _LinkedHashMap.prototype.get$_strings = function() {
    return this._strings;
  };
  _LinkedHashMap.prototype.get$_strings.$reflectable = 1;
  _LinkedHashMap.prototype.set$_strings = function(v) {
    return this._strings = v;
  };
  _LinkedHashMap.prototype.set$_strings.$reflectable = 1;
  _LinkedHashMap.prototype.get$_nums = function() {
    return this._nums;
  };
  _LinkedHashMap.prototype.get$_nums.$reflectable = 1;
  _LinkedHashMap.prototype.set$_nums = function(v) {
    return this._nums = v;
  };
  _LinkedHashMap.prototype.set$_nums.$reflectable = 1;
  _LinkedHashMap.prototype.get$_rest = function() {
    return this._rest;
  };
  _LinkedHashMap.prototype.get$_rest.$reflectable = 1;
  _LinkedHashMap.prototype.set$_rest = function(v) {
    return this._rest = v;
  };
  _LinkedHashMap.prototype.set$_rest.$reflectable = 1;
  _LinkedHashMap.prototype.get$_first = function() {
    return this._first;
  };
  _LinkedHashMap.prototype.get$_first.$reflectable = 1;
  _LinkedHashMap.prototype.set$_first = function(v) {
    return this._first = v;
  };
  _LinkedHashMap.prototype.set$_first.$reflectable = 1;
  _LinkedHashMap.prototype.get$_last = function() {
    return this._last;
  };
  _LinkedHashMap.prototype.get$_last.$reflectable = 1;
  _LinkedHashMap.prototype.set$_last = function(v) {
    return this._last = v;
  };
  _LinkedHashMap.prototype.set$_last.$reflectable = 1;
  _LinkedHashMap.prototype.get$_modifications = function() {
    return this._modifications;
  };
  _LinkedHashMap.prototype.get$_modifications.$reflectable = 1;
  _LinkedHashMap.prototype.set$_modifications = function(v) {
    return this._modifications = v;
  };
  _LinkedHashMap.prototype.set$_modifications.$reflectable = 1;
  function _LinkedHashMap_values_closure(this_0) {
    this.this_0 = this_0;
  }
  _LinkedHashMap_values_closure.builtin$cls = "_LinkedHashMap_values_closure";
  if (!"name" in _LinkedHashMap_values_closure)
    _LinkedHashMap_values_closure.name = "_LinkedHashMap_values_closure";
  $desc = $collectedClasses._LinkedHashMap_values_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedHashMap_values_closure.prototype = $desc;
  function _LinkedHashMap_containsValue_closure(this_0, value_1) {
    this.this_0 = this_0;
    this.value_1 = value_1;
  }
  _LinkedHashMap_containsValue_closure.builtin$cls = "_LinkedHashMap_containsValue_closure";
  if (!"name" in _LinkedHashMap_containsValue_closure)
    _LinkedHashMap_containsValue_closure.name = "_LinkedHashMap_containsValue_closure";
  $desc = $collectedClasses._LinkedHashMap_containsValue_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedHashMap_containsValue_closure.prototype = $desc;
  function _LinkedHashMap_addAll_closure(this_0) {
    this.this_0 = this_0;
  }
  _LinkedHashMap_addAll_closure.builtin$cls = "_LinkedHashMap_addAll_closure";
  if (!"name" in _LinkedHashMap_addAll_closure)
    _LinkedHashMap_addAll_closure.name = "_LinkedHashMap_addAll_closure";
  $desc = $collectedClasses._LinkedHashMap_addAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedHashMap_addAll_closure.prototype = $desc;
  function _LinkedIdentityHashMap(_collection$_length, _strings, _nums, _rest, _first, _last, _modifications) {
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._first = _first;
    this._last = _last;
    this._modifications = _modifications;
  }
  _LinkedIdentityHashMap.builtin$cls = "_LinkedIdentityHashMap";
  if (!"name" in _LinkedIdentityHashMap)
    _LinkedIdentityHashMap.name = "_LinkedIdentityHashMap";
  $desc = $collectedClasses._LinkedIdentityHashMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedIdentityHashMap.prototype = $desc;
  function _LinkedCustomHashMap(_equals, _hashCode, _validKey, _collection$_length, _strings, _nums, _rest, _first, _last, _modifications) {
    this._equals = _equals;
    this._hashCode = _hashCode;
    this._validKey = _validKey;
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._first = _first;
    this._last = _last;
    this._modifications = _modifications;
  }
  _LinkedCustomHashMap.builtin$cls = "_LinkedCustomHashMap";
  if (!"name" in _LinkedCustomHashMap)
    _LinkedCustomHashMap.name = "_LinkedCustomHashMap";
  $desc = $collectedClasses._LinkedCustomHashMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedCustomHashMap.prototype = $desc;
  _LinkedCustomHashMap.prototype.get$_equals = function() {
    return this._equals;
  };
  _LinkedCustomHashMap.prototype.get$_equals.$reflectable = 1;
  _LinkedCustomHashMap.prototype.get$_hashCode = function() {
    return this._hashCode;
  };
  _LinkedCustomHashMap.prototype.get$_hashCode.$reflectable = 1;
  _LinkedCustomHashMap.prototype.get$_validKey = function() {
    return this._validKey;
  };
  _LinkedCustomHashMap.prototype.get$_validKey.$reflectable = 1;
  function _LinkedCustomHashMap_closure(K_0) {
    this.K_0 = K_0;
  }
  _LinkedCustomHashMap_closure.builtin$cls = "_LinkedCustomHashMap_closure";
  if (!"name" in _LinkedCustomHashMap_closure)
    _LinkedCustomHashMap_closure.name = "_LinkedCustomHashMap_closure";
  $desc = $collectedClasses._LinkedCustomHashMap_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedCustomHashMap_closure.prototype = $desc;
  function LinkedHashMapCell(_key, _value, _next, _previous) {
    this._key = _key;
    this._value = _value;
    this._next = _next;
    this._previous = _previous;
  }
  LinkedHashMapCell.builtin$cls = "LinkedHashMapCell";
  if (!"name" in LinkedHashMapCell)
    LinkedHashMapCell.name = "LinkedHashMapCell";
  $desc = $collectedClasses.LinkedHashMapCell;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkedHashMapCell.prototype = $desc;
  LinkedHashMapCell.prototype.get$_key = function() {
    return this._key;
  };
  LinkedHashMapCell.prototype.get$_key.$reflectable = 1;
  LinkedHashMapCell.prototype.get$_value = function() {
    return this._value;
  };
  LinkedHashMapCell.prototype.get$_value.$reflectable = 1;
  LinkedHashMapCell.prototype.set$_value = function(v) {
    return this._value = v;
  };
  LinkedHashMapCell.prototype.set$_value.$reflectable = 1;
  LinkedHashMapCell.prototype.get$_next = function() {
    return this._next;
  };
  LinkedHashMapCell.prototype.get$_next.$reflectable = 1;
  LinkedHashMapCell.prototype.set$_next = function(v) {
    return this._next = v;
  };
  LinkedHashMapCell.prototype.set$_next.$reflectable = 1;
  LinkedHashMapCell.prototype.get$_previous = function() {
    return this._previous;
  };
  LinkedHashMapCell.prototype.get$_previous.$reflectable = 1;
  LinkedHashMapCell.prototype.set$_previous = function(v) {
    return this._previous = v;
  };
  LinkedHashMapCell.prototype.set$_previous.$reflectable = 1;
  function LinkedHashMapKeyIterable(_collection$_map) {
    this._collection$_map = _collection$_map;
  }
  LinkedHashMapKeyIterable.builtin$cls = "LinkedHashMapKeyIterable";
  if (!"name" in LinkedHashMapKeyIterable)
    LinkedHashMapKeyIterable.name = "LinkedHashMapKeyIterable";
  $desc = $collectedClasses.LinkedHashMapKeyIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkedHashMapKeyIterable.prototype = $desc;
  LinkedHashMapKeyIterable.prototype.get$_collection$_map = function() {
    return this._collection$_map;
  };
  LinkedHashMapKeyIterable.prototype.get$_collection$_map.$reflectable = 1;
  function LinkedHashMapKeyIterator(_collection$_map, _modifications, _cell, _collection$_current) {
    this._collection$_map = _collection$_map;
    this._modifications = _modifications;
    this._cell = _cell;
    this._collection$_current = _collection$_current;
  }
  LinkedHashMapKeyIterator.builtin$cls = "LinkedHashMapKeyIterator";
  if (!"name" in LinkedHashMapKeyIterator)
    LinkedHashMapKeyIterator.name = "LinkedHashMapKeyIterator";
  $desc = $collectedClasses.LinkedHashMapKeyIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkedHashMapKeyIterator.prototype = $desc;
  LinkedHashMapKeyIterator.prototype.get$_collection$_map = function() {
    return this._collection$_map;
  };
  LinkedHashMapKeyIterator.prototype.get$_collection$_map.$reflectable = 1;
  LinkedHashMapKeyIterator.prototype.get$_modifications = function() {
    return this._modifications;
  };
  LinkedHashMapKeyIterator.prototype.get$_modifications.$reflectable = 1;
  LinkedHashMapKeyIterator.prototype.get$_cell = function() {
    return this._cell;
  };
  LinkedHashMapKeyIterator.prototype.get$_cell.$reflectable = 1;
  LinkedHashMapKeyIterator.prototype.set$_cell = function(v) {
    return this._cell = v;
  };
  LinkedHashMapKeyIterator.prototype.set$_cell.$reflectable = 1;
  LinkedHashMapKeyIterator.prototype.get$_collection$_current = function() {
    return this._collection$_current;
  };
  LinkedHashMapKeyIterator.prototype.get$_collection$_current.$reflectable = 1;
  LinkedHashMapKeyIterator.prototype.set$_collection$_current = function(v) {
    return this._collection$_current = v;
  };
  LinkedHashMapKeyIterator.prototype.set$_collection$_current.$reflectable = 1;
  function _HashSet(_collection$_length, _strings, _nums, _rest, _elements) {
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._elements = _elements;
  }
  _HashSet.builtin$cls = "_HashSet";
  if (!"name" in _HashSet)
    _HashSet.name = "_HashSet";
  $desc = $collectedClasses._HashSet;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HashSet.prototype = $desc;
  _HashSet.prototype.get$_collection$_length = function() {
    return this._collection$_length;
  };
  _HashSet.prototype.get$_collection$_length.$reflectable = 1;
  _HashSet.prototype.set$_collection$_length = function(v) {
    return this._collection$_length = v;
  };
  _HashSet.prototype.set$_collection$_length.$reflectable = 1;
  _HashSet.prototype.get$_strings = function() {
    return this._strings;
  };
  _HashSet.prototype.get$_strings.$reflectable = 1;
  _HashSet.prototype.set$_strings = function(v) {
    return this._strings = v;
  };
  _HashSet.prototype.set$_strings.$reflectable = 1;
  _HashSet.prototype.get$_nums = function() {
    return this._nums;
  };
  _HashSet.prototype.get$_nums.$reflectable = 1;
  _HashSet.prototype.set$_nums = function(v) {
    return this._nums = v;
  };
  _HashSet.prototype.set$_nums.$reflectable = 1;
  _HashSet.prototype.get$_rest = function() {
    return this._rest;
  };
  _HashSet.prototype.get$_rest.$reflectable = 1;
  _HashSet.prototype.set$_rest = function(v) {
    return this._rest = v;
  };
  _HashSet.prototype.set$_rest.$reflectable = 1;
  _HashSet.prototype.get$_elements = function() {
    return this._elements;
  };
  _HashSet.prototype.get$_elements.$reflectable = 1;
  _HashSet.prototype.set$_elements = function(v) {
    return this._elements = v;
  };
  _HashSet.prototype.set$_elements.$reflectable = 1;
  function _HashSet_retainAll_closure(this_0) {
    this.this_0 = this_0;
  }
  _HashSet_retainAll_closure.builtin$cls = "_HashSet_retainAll_closure";
  if (!"name" in _HashSet_retainAll_closure)
    _HashSet_retainAll_closure.name = "_HashSet_retainAll_closure";
  $desc = $collectedClasses._HashSet_retainAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HashSet_retainAll_closure.prototype = $desc;
  function _HashSet_retainWhere_closure(this_0, test_1) {
    this.this_0 = this_0;
    this.test_1 = test_1;
  }
  _HashSet_retainWhere_closure.builtin$cls = "_HashSet_retainWhere_closure";
  if (!"name" in _HashSet_retainWhere_closure)
    _HashSet_retainWhere_closure.name = "_HashSet_retainWhere_closure";
  $desc = $collectedClasses._HashSet_retainWhere_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HashSet_retainWhere_closure.prototype = $desc;
  function _IdentityHashSet(_collection$_length, _strings, _nums, _rest, _elements) {
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._elements = _elements;
  }
  _IdentityHashSet.builtin$cls = "_IdentityHashSet";
  if (!"name" in _IdentityHashSet)
    _IdentityHashSet.name = "_IdentityHashSet";
  $desc = $collectedClasses._IdentityHashSet;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _IdentityHashSet.prototype = $desc;
  function _CustomHashSet(_equality, _hasher, _validKey, _collection$_length, _strings, _nums, _rest, _elements) {
    this._equality = _equality;
    this._hasher = _hasher;
    this._validKey = _validKey;
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._elements = _elements;
  }
  _CustomHashSet.builtin$cls = "_CustomHashSet";
  if (!"name" in _CustomHashSet)
    _CustomHashSet.name = "_CustomHashSet";
  $desc = $collectedClasses._CustomHashSet;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _CustomHashSet.prototype = $desc;
  _CustomHashSet.prototype.get$_equality = function() {
    return this._equality;
  };
  _CustomHashSet.prototype.get$_equality.$reflectable = 1;
  _CustomHashSet.prototype.set$_equality = function(v) {
    return this._equality = v;
  };
  _CustomHashSet.prototype.set$_equality.$reflectable = 1;
  _CustomHashSet.prototype.get$_hasher = function() {
    return this._hasher;
  };
  _CustomHashSet.prototype.get$_hasher.$reflectable = 1;
  _CustomHashSet.prototype.set$_hasher = function(v) {
    return this._hasher = v;
  };
  _CustomHashSet.prototype.set$_hasher.$reflectable = 1;
  _CustomHashSet.prototype.get$_validKey = function() {
    return this._validKey;
  };
  _CustomHashSet.prototype.get$_validKey.$reflectable = 1;
  _CustomHashSet.prototype.set$_validKey = function(v) {
    return this._validKey = v;
  };
  _CustomHashSet.prototype.set$_validKey.$reflectable = 1;
  function _CustomHashSet_closure(E_0) {
    this.E_0 = E_0;
  }
  _CustomHashSet_closure.builtin$cls = "_CustomHashSet_closure";
  if (!"name" in _CustomHashSet_closure)
    _CustomHashSet_closure.name = "_CustomHashSet_closure";
  $desc = $collectedClasses._CustomHashSet_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _CustomHashSet_closure.prototype = $desc;
  function HashSetIterator(_set, _elements, _offset, _collection$_current) {
    this._set = _set;
    this._elements = _elements;
    this._offset = _offset;
    this._collection$_current = _collection$_current;
  }
  HashSetIterator.builtin$cls = "HashSetIterator";
  if (!"name" in HashSetIterator)
    HashSetIterator.name = "HashSetIterator";
  $desc = $collectedClasses.HashSetIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HashSetIterator.prototype = $desc;
  HashSetIterator.prototype.get$_set = function() {
    return this._set;
  };
  HashSetIterator.prototype.get$_set.$reflectable = 1;
  HashSetIterator.prototype.get$_elements = function() {
    return this._elements;
  };
  HashSetIterator.prototype.get$_elements.$reflectable = 1;
  HashSetIterator.prototype.get$_offset = function() {
    return this._offset;
  };
  HashSetIterator.prototype.get$_offset.$reflectable = 1;
  HashSetIterator.prototype.set$_offset = function(v) {
    return this._offset = v;
  };
  HashSetIterator.prototype.set$_offset.$reflectable = 1;
  HashSetIterator.prototype.get$_collection$_current = function() {
    return this._collection$_current;
  };
  HashSetIterator.prototype.get$_collection$_current.$reflectable = 1;
  HashSetIterator.prototype.set$_collection$_current = function(v) {
    return this._collection$_current = v;
  };
  HashSetIterator.prototype.set$_collection$_current.$reflectable = 1;
  function _LinkedHashSet(_collection$_length, _strings, _nums, _rest, _first, _last, _modifications) {
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._first = _first;
    this._last = _last;
    this._modifications = _modifications;
  }
  _LinkedHashSet.builtin$cls = "_LinkedHashSet";
  if (!"name" in _LinkedHashSet)
    _LinkedHashSet.name = "_LinkedHashSet";
  $desc = $collectedClasses._LinkedHashSet;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedHashSet.prototype = $desc;
  _LinkedHashSet.prototype.get$_collection$_length = function() {
    return this._collection$_length;
  };
  _LinkedHashSet.prototype.get$_collection$_length.$reflectable = 1;
  _LinkedHashSet.prototype.set$_collection$_length = function(v) {
    return this._collection$_length = v;
  };
  _LinkedHashSet.prototype.set$_collection$_length.$reflectable = 1;
  _LinkedHashSet.prototype.get$_strings = function() {
    return this._strings;
  };
  _LinkedHashSet.prototype.get$_strings.$reflectable = 1;
  _LinkedHashSet.prototype.set$_strings = function(v) {
    return this._strings = v;
  };
  _LinkedHashSet.prototype.set$_strings.$reflectable = 1;
  _LinkedHashSet.prototype.get$_nums = function() {
    return this._nums;
  };
  _LinkedHashSet.prototype.get$_nums.$reflectable = 1;
  _LinkedHashSet.prototype.set$_nums = function(v) {
    return this._nums = v;
  };
  _LinkedHashSet.prototype.set$_nums.$reflectable = 1;
  _LinkedHashSet.prototype.get$_rest = function() {
    return this._rest;
  };
  _LinkedHashSet.prototype.get$_rest.$reflectable = 1;
  _LinkedHashSet.prototype.set$_rest = function(v) {
    return this._rest = v;
  };
  _LinkedHashSet.prototype.set$_rest.$reflectable = 1;
  _LinkedHashSet.prototype.get$_first = function() {
    return this._first;
  };
  _LinkedHashSet.prototype.get$_first.$reflectable = 1;
  _LinkedHashSet.prototype.set$_first = function(v) {
    return this._first = v;
  };
  _LinkedHashSet.prototype.set$_first.$reflectable = 1;
  _LinkedHashSet.prototype.get$_last = function() {
    return this._last;
  };
  _LinkedHashSet.prototype.get$_last.$reflectable = 1;
  _LinkedHashSet.prototype.set$_last = function(v) {
    return this._last = v;
  };
  _LinkedHashSet.prototype.set$_last.$reflectable = 1;
  _LinkedHashSet.prototype.get$_modifications = function() {
    return this._modifications;
  };
  _LinkedHashSet.prototype.get$_modifications.$reflectable = 1;
  _LinkedHashSet.prototype.set$_modifications = function(v) {
    return this._modifications = v;
  };
  _LinkedHashSet.prototype.set$_modifications.$reflectable = 1;
  function _LinkedHashSet_retainAll_closure(this_0) {
    this.this_0 = this_0;
  }
  _LinkedHashSet_retainAll_closure.builtin$cls = "_LinkedHashSet_retainAll_closure";
  if (!"name" in _LinkedHashSet_retainAll_closure)
    _LinkedHashSet_retainAll_closure.name = "_LinkedHashSet_retainAll_closure";
  $desc = $collectedClasses._LinkedHashSet_retainAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedHashSet_retainAll_closure.prototype = $desc;
  function _LinkedIdentityHashSet(_collection$_length, _strings, _nums, _rest, _first, _last, _modifications) {
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._first = _first;
    this._last = _last;
    this._modifications = _modifications;
  }
  _LinkedIdentityHashSet.builtin$cls = "_LinkedIdentityHashSet";
  if (!"name" in _LinkedIdentityHashSet)
    _LinkedIdentityHashSet.name = "_LinkedIdentityHashSet";
  $desc = $collectedClasses._LinkedIdentityHashSet;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedIdentityHashSet.prototype = $desc;
  function _LinkedCustomHashSet(_equality, _hasher, _validKey, _collection$_length, _strings, _nums, _rest, _first, _last, _modifications) {
    this._equality = _equality;
    this._hasher = _hasher;
    this._validKey = _validKey;
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._first = _first;
    this._last = _last;
    this._modifications = _modifications;
  }
  _LinkedCustomHashSet.builtin$cls = "_LinkedCustomHashSet";
  if (!"name" in _LinkedCustomHashSet)
    _LinkedCustomHashSet.name = "_LinkedCustomHashSet";
  $desc = $collectedClasses._LinkedCustomHashSet;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedCustomHashSet.prototype = $desc;
  _LinkedCustomHashSet.prototype.get$_equality = function() {
    return this._equality;
  };
  _LinkedCustomHashSet.prototype.get$_equality.$reflectable = 1;
  _LinkedCustomHashSet.prototype.set$_equality = function(v) {
    return this._equality = v;
  };
  _LinkedCustomHashSet.prototype.set$_equality.$reflectable = 1;
  _LinkedCustomHashSet.prototype.get$_hasher = function() {
    return this._hasher;
  };
  _LinkedCustomHashSet.prototype.get$_hasher.$reflectable = 1;
  _LinkedCustomHashSet.prototype.set$_hasher = function(v) {
    return this._hasher = v;
  };
  _LinkedCustomHashSet.prototype.set$_hasher.$reflectable = 1;
  _LinkedCustomHashSet.prototype.get$_validKey = function() {
    return this._validKey;
  };
  _LinkedCustomHashSet.prototype.get$_validKey.$reflectable = 1;
  _LinkedCustomHashSet.prototype.set$_validKey = function(v) {
    return this._validKey = v;
  };
  _LinkedCustomHashSet.prototype.set$_validKey.$reflectable = 1;
  function _LinkedCustomHashSet_closure(E_0) {
    this.E_0 = E_0;
  }
  _LinkedCustomHashSet_closure.builtin$cls = "_LinkedCustomHashSet_closure";
  if (!"name" in _LinkedCustomHashSet_closure)
    _LinkedCustomHashSet_closure.name = "_LinkedCustomHashSet_closure";
  $desc = $collectedClasses._LinkedCustomHashSet_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedCustomHashSet_closure.prototype = $desc;
  function LinkedHashSetCell(_element, _next, _previous) {
    this._element = _element;
    this._next = _next;
    this._previous = _previous;
  }
  LinkedHashSetCell.builtin$cls = "LinkedHashSetCell";
  if (!"name" in LinkedHashSetCell)
    LinkedHashSetCell.name = "LinkedHashSetCell";
  $desc = $collectedClasses.LinkedHashSetCell;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkedHashSetCell.prototype = $desc;
  LinkedHashSetCell.prototype.get$_element = function() {
    return this._element;
  };
  LinkedHashSetCell.prototype.get$_element.$reflectable = 1;
  LinkedHashSetCell.prototype.get$_next = function() {
    return this._next;
  };
  LinkedHashSetCell.prototype.get$_next.$reflectable = 1;
  LinkedHashSetCell.prototype.set$_next = function(v) {
    return this._next = v;
  };
  LinkedHashSetCell.prototype.set$_next.$reflectable = 1;
  LinkedHashSetCell.prototype.get$_previous = function() {
    return this._previous;
  };
  LinkedHashSetCell.prototype.get$_previous.$reflectable = 1;
  LinkedHashSetCell.prototype.set$_previous = function(v) {
    return this._previous = v;
  };
  LinkedHashSetCell.prototype.set$_previous.$reflectable = 1;
  function LinkedHashSetIterator(_set, _modifications, _cell, _collection$_current) {
    this._set = _set;
    this._modifications = _modifications;
    this._cell = _cell;
    this._collection$_current = _collection$_current;
  }
  LinkedHashSetIterator.builtin$cls = "LinkedHashSetIterator";
  if (!"name" in LinkedHashSetIterator)
    LinkedHashSetIterator.name = "LinkedHashSetIterator";
  $desc = $collectedClasses.LinkedHashSetIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkedHashSetIterator.prototype = $desc;
  LinkedHashSetIterator.prototype.get$_set = function() {
    return this._set;
  };
  LinkedHashSetIterator.prototype.get$_set.$reflectable = 1;
  LinkedHashSetIterator.prototype.get$_modifications = function() {
    return this._modifications;
  };
  LinkedHashSetIterator.prototype.get$_modifications.$reflectable = 1;
  LinkedHashSetIterator.prototype.get$_cell = function() {
    return this._cell;
  };
  LinkedHashSetIterator.prototype.get$_cell.$reflectable = 1;
  LinkedHashSetIterator.prototype.set$_cell = function(v) {
    return this._cell = v;
  };
  LinkedHashSetIterator.prototype.set$_cell.$reflectable = 1;
  LinkedHashSetIterator.prototype.get$_collection$_current = function() {
    return this._collection$_current;
  };
  LinkedHashSetIterator.prototype.get$_collection$_current.$reflectable = 1;
  LinkedHashSetIterator.prototype.set$_collection$_current = function(v) {
    return this._collection$_current = v;
  };
  LinkedHashSetIterator.prototype.set$_collection$_current.$reflectable = 1;
  function UnmodifiableListView(_source) {
    this._source = _source;
  }
  UnmodifiableListView.builtin$cls = "UnmodifiableListView";
  if (!"name" in UnmodifiableListView)
    UnmodifiableListView.name = "UnmodifiableListView";
  $desc = $collectedClasses.UnmodifiableListView;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnmodifiableListView.prototype = $desc;
  UnmodifiableListView.prototype.get$_source = function() {
    return this._source;
  };
  UnmodifiableListView.prototype.get$_source.$reflectable = 1;
  function HashMap() {
  }
  HashMap.builtin$cls = "HashMap";
  if (!"name" in HashMap)
    HashMap.name = "HashMap";
  $desc = $collectedClasses.HashMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HashMap.prototype = $desc;
  function _HashSetBase() {
  }
  _HashSetBase.builtin$cls = "_HashSetBase";
  if (!"name" in _HashSetBase)
    _HashSetBase.name = "_HashSetBase";
  $desc = $collectedClasses._HashSetBase;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HashSetBase.prototype = $desc;
  function HashSet() {
  }
  HashSet.builtin$cls = "HashSet";
  if (!"name" in HashSet)
    HashSet.name = "HashSet";
  $desc = $collectedClasses.HashSet;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HashSet.prototype = $desc;
  function IterableMixin() {
  }
  IterableMixin.builtin$cls = "IterableMixin";
  if (!"name" in IterableMixin)
    IterableMixin.name = "IterableMixin";
  $desc = $collectedClasses.IterableMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IterableMixin.prototype = $desc;
  function IterableBase() {
  }
  IterableBase.builtin$cls = "IterableBase";
  if (!"name" in IterableBase)
    IterableBase.name = "IterableBase";
  $desc = $collectedClasses.IterableBase;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IterableBase.prototype = $desc;
  function HasNextIterator(_collection$_iterator, _collection$_state) {
    this._collection$_iterator = _collection$_iterator;
    this._collection$_state = _collection$_state;
  }
  HasNextIterator.builtin$cls = "HasNextIterator";
  if (!"name" in HasNextIterator)
    HasNextIterator.name = "HasNextIterator";
  $desc = $collectedClasses.HasNextIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HasNextIterator.prototype = $desc;
  HasNextIterator.prototype.get$_collection$_iterator = function() {
    return this._collection$_iterator;
  };
  HasNextIterator.prototype.get$_collection$_iterator.$reflectable = 1;
  HasNextIterator.prototype.set$_collection$_iterator = function(v) {
    return this._collection$_iterator = v;
  };
  HasNextIterator.prototype.set$_collection$_iterator.$reflectable = 1;
  HasNextIterator.prototype.get$_collection$_state = function() {
    return this._collection$_state;
  };
  HasNextIterator.prototype.get$_collection$_state.$reflectable = 1;
  HasNextIterator.prototype.set$_collection$_state = function(v) {
    return this._collection$_state = v;
  };
  HasNextIterator.prototype.set$_collection$_state.$reflectable = 1;
  function LinkedHashMap() {
  }
  LinkedHashMap.builtin$cls = "LinkedHashMap";
  if (!"name" in LinkedHashMap)
    LinkedHashMap.name = "LinkedHashMap";
  $desc = $collectedClasses.LinkedHashMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkedHashMap.prototype = $desc;
  function LinkedHashSet() {
  }
  LinkedHashSet.builtin$cls = "LinkedHashSet";
  if (!"name" in LinkedHashSet)
    LinkedHashSet.name = "LinkedHashSet";
  $desc = $collectedClasses.LinkedHashSet;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkedHashSet.prototype = $desc;
  function LinkedList(_modificationCount, _collection$_length, _next, _previous) {
    this._modificationCount = _modificationCount;
    this._collection$_length = _collection$_length;
    this._next = _next;
    this._previous = _previous;
  }
  LinkedList.builtin$cls = "LinkedList";
  if (!"name" in LinkedList)
    LinkedList.name = "LinkedList";
  $desc = $collectedClasses.LinkedList;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkedList.prototype = $desc;
  LinkedList.prototype.get$_modificationCount = function() {
    return this._modificationCount;
  };
  LinkedList.prototype.get$_modificationCount.$reflectable = 1;
  LinkedList.prototype.set$_modificationCount = function(v) {
    return this._modificationCount = v;
  };
  LinkedList.prototype.set$_modificationCount.$reflectable = 1;
  LinkedList.prototype.get$_collection$_length = function() {
    return this._collection$_length;
  };
  LinkedList.prototype.get$_collection$_length.$reflectable = 1;
  LinkedList.prototype.set$_collection$_length = function(v) {
    return this._collection$_length = v;
  };
  LinkedList.prototype.set$_collection$_length.$reflectable = 1;
  LinkedList.prototype.get$_next = function() {
    return this._next;
  };
  LinkedList.prototype.get$_next.$reflectable = 1;
  LinkedList.prototype.set$_next = function(v) {
    return this._next = v;
  };
  LinkedList.prototype.set$_next.$reflectable = 1;
  LinkedList.prototype.get$_previous = function() {
    return this._previous;
  };
  LinkedList.prototype.get$_previous.$reflectable = 1;
  LinkedList.prototype.set$_previous = function(v) {
    return this._previous = v;
  };
  LinkedList.prototype.set$_previous.$reflectable = 1;
  function LinkedList_addAll_closure(this_0) {
    this.this_0 = this_0;
  }
  LinkedList_addAll_closure.builtin$cls = "LinkedList_addAll_closure";
  if (!"name" in LinkedList_addAll_closure)
    LinkedList_addAll_closure.name = "LinkedList_addAll_closure";
  $desc = $collectedClasses.LinkedList_addAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkedList_addAll_closure.prototype = $desc;
  function _LinkedListIterator(_collection$_list, _modificationCount, _collection$_current, _next) {
    this._collection$_list = _collection$_list;
    this._modificationCount = _modificationCount;
    this._collection$_current = _collection$_current;
    this._next = _next;
  }
  _LinkedListIterator.builtin$cls = "_LinkedListIterator";
  if (!"name" in _LinkedListIterator)
    _LinkedListIterator.name = "_LinkedListIterator";
  $desc = $collectedClasses._LinkedListIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedListIterator.prototype = $desc;
  _LinkedListIterator.prototype.get$_collection$_list = function() {
    return this._collection$_list;
  };
  _LinkedListIterator.prototype.get$_collection$_list.$reflectable = 1;
  _LinkedListIterator.prototype.get$_modificationCount = function() {
    return this._modificationCount;
  };
  _LinkedListIterator.prototype.get$_modificationCount.$reflectable = 1;
  _LinkedListIterator.prototype.get$_collection$_current = function() {
    return this._collection$_current;
  };
  _LinkedListIterator.prototype.get$_collection$_current.$reflectable = 1;
  _LinkedListIterator.prototype.set$_collection$_current = function(v) {
    return this._collection$_current = v;
  };
  _LinkedListIterator.prototype.set$_collection$_current.$reflectable = 1;
  _LinkedListIterator.prototype.get$_next = function() {
    return this._next;
  };
  _LinkedListIterator.prototype.get$_next.$reflectable = 1;
  _LinkedListIterator.prototype.set$_next = function(v) {
    return this._next = v;
  };
  _LinkedListIterator.prototype.set$_next.$reflectable = 1;
  function _LinkedListLink(_next, _previous) {
    this._next = _next;
    this._previous = _previous;
  }
  _LinkedListLink.builtin$cls = "_LinkedListLink";
  if (!"name" in _LinkedListLink)
    _LinkedListLink.name = "_LinkedListLink";
  $desc = $collectedClasses._LinkedListLink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedListLink.prototype = $desc;
  _LinkedListLink.prototype.get$_next = function() {
    return this._next;
  };
  _LinkedListLink.prototype.get$_next.$reflectable = 1;
  _LinkedListLink.prototype.set$_next = function(v) {
    return this._next = v;
  };
  _LinkedListLink.prototype.set$_next.$reflectable = 1;
  _LinkedListLink.prototype.get$_previous = function() {
    return this._previous;
  };
  _LinkedListLink.prototype.get$_previous.$reflectable = 1;
  _LinkedListLink.prototype.set$_previous = function(v) {
    return this._previous = v;
  };
  _LinkedListLink.prototype.set$_previous.$reflectable = 1;
  function LinkedListEntry(_collection$_list, _next, _previous) {
    this._collection$_list = _collection$_list;
    this._next = _next;
    this._previous = _previous;
  }
  LinkedListEntry.builtin$cls = "LinkedListEntry";
  if (!"name" in LinkedListEntry)
    LinkedListEntry.name = "LinkedListEntry";
  $desc = $collectedClasses.LinkedListEntry;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkedListEntry.prototype = $desc;
  LinkedListEntry.prototype.get$_collection$_list = function() {
    return this._collection$_list;
  };
  LinkedListEntry.prototype.get$_collection$_list.$reflectable = 1;
  LinkedListEntry.prototype.set$_collection$_list = function(v) {
    return this._collection$_list = v;
  };
  LinkedListEntry.prototype.set$_collection$_list.$reflectable = 1;
  LinkedListEntry.prototype.get$_next = function() {
    return this._next;
  };
  LinkedListEntry.prototype.get$_next.$reflectable = 1;
  LinkedListEntry.prototype.set$_next = function(v) {
    return this._next = v;
  };
  LinkedListEntry.prototype.set$_next.$reflectable = 1;
  LinkedListEntry.prototype.get$_previous = function() {
    return this._previous;
  };
  LinkedListEntry.prototype.get$_previous.$reflectable = 1;
  LinkedListEntry.prototype.set$_previous = function(v) {
    return this._previous = v;
  };
  LinkedListEntry.prototype.set$_previous.$reflectable = 1;
  function ListBase() {
  }
  ListBase.builtin$cls = "ListBase";
  if (!"name" in ListBase)
    ListBase.name = "ListBase";
  $desc = $collectedClasses.ListBase;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListBase.prototype = $desc;
  function ListMixin() {
  }
  ListMixin.builtin$cls = "ListMixin";
  if (!"name" in ListMixin)
    ListMixin.name = "ListMixin";
  $desc = $collectedClasses.ListMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListMixin.prototype = $desc;
  function Maps() {
  }
  Maps.builtin$cls = "Maps";
  if (!"name" in Maps)
    Maps.name = "Maps";
  $desc = $collectedClasses.Maps;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Maps.prototype = $desc;
  function Maps_getValues_closure(map_0) {
    this.map_0 = map_0;
  }
  Maps_getValues_closure.builtin$cls = "Maps_getValues_closure";
  if (!"name" in Maps_getValues_closure)
    Maps_getValues_closure.name = "Maps_getValues_closure";
  $desc = $collectedClasses.Maps_getValues_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Maps_getValues_closure.prototype = $desc;
  function Maps_mapToString_closure(box_0, result_1) {
    this.box_0 = box_0;
    this.result_1 = result_1;
  }
  Maps_mapToString_closure.builtin$cls = "Maps_mapToString_closure";
  if (!"name" in Maps_mapToString_closure)
    Maps_mapToString_closure.name = "Maps_mapToString_closure";
  $desc = $collectedClasses.Maps_mapToString_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Maps_mapToString_closure.prototype = $desc;
  function Queue() {
  }
  Queue.builtin$cls = "Queue";
  if (!"name" in Queue)
    Queue.name = "Queue";
  $desc = $collectedClasses.Queue;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Queue.prototype = $desc;
  function DoubleLinkedQueueEntry(_previous, _next, _element) {
    this._previous = _previous;
    this._next = _next;
    this._element = _element;
  }
  DoubleLinkedQueueEntry.builtin$cls = "DoubleLinkedQueueEntry";
  if (!"name" in DoubleLinkedQueueEntry)
    DoubleLinkedQueueEntry.name = "DoubleLinkedQueueEntry";
  $desc = $collectedClasses.DoubleLinkedQueueEntry;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DoubleLinkedQueueEntry.prototype = $desc;
  DoubleLinkedQueueEntry.prototype.get$_previous = function() {
    return this._previous;
  };
  DoubleLinkedQueueEntry.prototype.get$_previous.$reflectable = 1;
  DoubleLinkedQueueEntry.prototype.set$_previous = function(v) {
    return this._previous = v;
  };
  DoubleLinkedQueueEntry.prototype.set$_previous.$reflectable = 1;
  DoubleLinkedQueueEntry.prototype.get$_next = function() {
    return this._next;
  };
  DoubleLinkedQueueEntry.prototype.get$_next.$reflectable = 1;
  DoubleLinkedQueueEntry.prototype.set$_next = function(v) {
    return this._next = v;
  };
  DoubleLinkedQueueEntry.prototype.set$_next.$reflectable = 1;
  DoubleLinkedQueueEntry.prototype.get$_element = function() {
    return this._element;
  };
  DoubleLinkedQueueEntry.prototype.get$_element.$reflectable = 1;
  DoubleLinkedQueueEntry.prototype.set$_element = function(v) {
    return this._element = v;
  };
  DoubleLinkedQueueEntry.prototype.set$_element.$reflectable = 1;
  function _DoubleLinkedQueueEntrySentinel(_previous, _next, _element) {
    this._previous = _previous;
    this._next = _next;
    this._element = _element;
  }
  _DoubleLinkedQueueEntrySentinel.builtin$cls = "_DoubleLinkedQueueEntrySentinel";
  if (!"name" in _DoubleLinkedQueueEntrySentinel)
    _DoubleLinkedQueueEntrySentinel.name = "_DoubleLinkedQueueEntrySentinel";
  $desc = $collectedClasses._DoubleLinkedQueueEntrySentinel;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DoubleLinkedQueueEntrySentinel.prototype = $desc;
  function DoubleLinkedQueue(_sentinel, _elementCount) {
    this._sentinel = _sentinel;
    this._elementCount = _elementCount;
  }
  DoubleLinkedQueue.builtin$cls = "DoubleLinkedQueue";
  if (!"name" in DoubleLinkedQueue)
    DoubleLinkedQueue.name = "DoubleLinkedQueue";
  $desc = $collectedClasses.DoubleLinkedQueue;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DoubleLinkedQueue.prototype = $desc;
  DoubleLinkedQueue.prototype.get$_sentinel = function() {
    return this._sentinel;
  };
  DoubleLinkedQueue.prototype.get$_sentinel.$reflectable = 1;
  DoubleLinkedQueue.prototype.set$_sentinel = function(v) {
    return this._sentinel = v;
  };
  DoubleLinkedQueue.prototype.set$_sentinel.$reflectable = 1;
  DoubleLinkedQueue.prototype.get$_elementCount = function() {
    return this._elementCount;
  };
  DoubleLinkedQueue.prototype.get$_elementCount.$reflectable = 1;
  DoubleLinkedQueue.prototype.set$_elementCount = function(v) {
    return this._elementCount = v;
  };
  DoubleLinkedQueue.prototype.set$_elementCount.$reflectable = 1;
  function _DoubleLinkedQueueIterator(_sentinel, _nextEntry, _collection$_current) {
    this._sentinel = _sentinel;
    this._nextEntry = _nextEntry;
    this._collection$_current = _collection$_current;
  }
  _DoubleLinkedQueueIterator.builtin$cls = "_DoubleLinkedQueueIterator";
  if (!"name" in _DoubleLinkedQueueIterator)
    _DoubleLinkedQueueIterator.name = "_DoubleLinkedQueueIterator";
  $desc = $collectedClasses._DoubleLinkedQueueIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DoubleLinkedQueueIterator.prototype = $desc;
  _DoubleLinkedQueueIterator.prototype.get$_sentinel = function() {
    return this._sentinel;
  };
  _DoubleLinkedQueueIterator.prototype.get$_sentinel.$reflectable = 1;
  _DoubleLinkedQueueIterator.prototype.set$_sentinel = function(v) {
    return this._sentinel = v;
  };
  _DoubleLinkedQueueIterator.prototype.set$_sentinel.$reflectable = 1;
  _DoubleLinkedQueueIterator.prototype.get$_nextEntry = function() {
    return this._nextEntry;
  };
  _DoubleLinkedQueueIterator.prototype.get$_nextEntry.$reflectable = 1;
  _DoubleLinkedQueueIterator.prototype.set$_nextEntry = function(v) {
    return this._nextEntry = v;
  };
  _DoubleLinkedQueueIterator.prototype.set$_nextEntry.$reflectable = 1;
  _DoubleLinkedQueueIterator.prototype.get$_collection$_current = function() {
    return this._collection$_current;
  };
  _DoubleLinkedQueueIterator.prototype.get$_collection$_current.$reflectable = 1;
  _DoubleLinkedQueueIterator.prototype.set$_collection$_current = function(v) {
    return this._collection$_current = v;
  };
  _DoubleLinkedQueueIterator.prototype.set$_collection$_current.$reflectable = 1;
  function ListQueue(_table, _head, _tail, _modificationCount) {
    this._table = _table;
    this._head = _head;
    this._tail = _tail;
    this._modificationCount = _modificationCount;
  }
  ListQueue.builtin$cls = "ListQueue";
  if (!"name" in ListQueue)
    ListQueue.name = "ListQueue";
  $desc = $collectedClasses.ListQueue;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListQueue.prototype = $desc;
  ListQueue.prototype.get$_table = function() {
    return this._table;
  };
  ListQueue.prototype.get$_table.$reflectable = 1;
  ListQueue.prototype.set$_table = function(v) {
    return this._table = v;
  };
  ListQueue.prototype.set$_table.$reflectable = 1;
  ListQueue.prototype.get$_head = function() {
    return this._head;
  };
  ListQueue.prototype.get$_head.$reflectable = 1;
  ListQueue.prototype.set$_head = function(v) {
    return this._head = v;
  };
  ListQueue.prototype.set$_head.$reflectable = 1;
  ListQueue.prototype.get$_tail = function() {
    return this._tail;
  };
  ListQueue.prototype.get$_tail.$reflectable = 1;
  ListQueue.prototype.set$_tail = function(v) {
    return this._tail = v;
  };
  ListQueue.prototype.set$_tail.$reflectable = 1;
  ListQueue.prototype.get$_modificationCount = function() {
    return this._modificationCount;
  };
  ListQueue.prototype.get$_modificationCount.$reflectable = 1;
  ListQueue.prototype.set$_modificationCount = function(v) {
    return this._modificationCount = v;
  };
  ListQueue.prototype.set$_modificationCount.$reflectable = 1;
  function _ListQueueIterator(_queue, _end, _modificationCount, _position, _collection$_current) {
    this._queue = _queue;
    this._end = _end;
    this._modificationCount = _modificationCount;
    this._position = _position;
    this._collection$_current = _collection$_current;
  }
  _ListQueueIterator.builtin$cls = "_ListQueueIterator";
  if (!"name" in _ListQueueIterator)
    _ListQueueIterator.name = "_ListQueueIterator";
  $desc = $collectedClasses._ListQueueIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ListQueueIterator.prototype = $desc;
  _ListQueueIterator.prototype.get$_queue = function() {
    return this._queue;
  };
  _ListQueueIterator.prototype.get$_queue.$reflectable = 1;
  _ListQueueIterator.prototype.get$_end = function() {
    return this._end;
  };
  _ListQueueIterator.prototype.get$_end.$reflectable = 1;
  _ListQueueIterator.prototype.get$_modificationCount = function() {
    return this._modificationCount;
  };
  _ListQueueIterator.prototype.get$_modificationCount.$reflectable = 1;
  _ListQueueIterator.prototype.get$_position = function() {
    return this._position;
  };
  _ListQueueIterator.prototype.get$_position.$reflectable = 1;
  _ListQueueIterator.prototype.set$_position = function(v) {
    return this._position = v;
  };
  _ListQueueIterator.prototype.set$_position.$reflectable = 1;
  _ListQueueIterator.prototype.get$_collection$_current = function() {
    return this._collection$_current;
  };
  _ListQueueIterator.prototype.get$_collection$_current.$reflectable = 1;
  _ListQueueIterator.prototype.set$_collection$_current = function(v) {
    return this._collection$_current = v;
  };
  _ListQueueIterator.prototype.set$_collection$_current.$reflectable = 1;
  function _SplayTreeNode(key, left, right) {
    this.key = key;
    this.left = left;
    this.right = right;
  }
  _SplayTreeNode.builtin$cls = "_SplayTreeNode";
  if (!"name" in _SplayTreeNode)
    _SplayTreeNode.name = "_SplayTreeNode";
  $desc = $collectedClasses._SplayTreeNode;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTreeNode.prototype = $desc;
  _SplayTreeNode.prototype.get$key = function() {
    return this.key;
  };
  _SplayTreeNode.prototype.get$key.$reflectable = 1;
  _SplayTreeNode.prototype.get$left = function() {
    return this.left;
  };
  _SplayTreeNode.prototype.get$left.$reflectable = 1;
  _SplayTreeNode.prototype.set$left = function(v) {
    return this.left = v;
  };
  _SplayTreeNode.prototype.set$left.$reflectable = 1;
  _SplayTreeNode.prototype.get$right = function() {
    return this.right;
  };
  _SplayTreeNode.prototype.get$right.$reflectable = 1;
  _SplayTreeNode.prototype.set$right = function(v) {
    return this.right = v;
  };
  _SplayTreeNode.prototype.set$right.$reflectable = 1;
  function _SplayTreeMapNode(value, key, left, right) {
    this.value = value;
    this.key = key;
    this.left = left;
    this.right = right;
  }
  _SplayTreeMapNode.builtin$cls = "_SplayTreeMapNode";
  if (!"name" in _SplayTreeMapNode)
    _SplayTreeMapNode.name = "_SplayTreeMapNode";
  $desc = $collectedClasses._SplayTreeMapNode;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTreeMapNode.prototype = $desc;
  _SplayTreeMapNode.prototype.get$value = function() {
    return this.value;
  };
  _SplayTreeMapNode.prototype.get$value.$reflectable = 1;
  _SplayTreeMapNode.prototype.set$value = function(v) {
    return this.value = v;
  };
  _SplayTreeMapNode.prototype.set$value.$reflectable = 1;
  function _SplayTree(_root, _dummy, _count, _modificationCount, _splayCount) {
    this._root = _root;
    this._dummy = _dummy;
    this._count = _count;
    this._modificationCount = _modificationCount;
    this._splayCount = _splayCount;
  }
  _SplayTree.builtin$cls = "_SplayTree";
  if (!"name" in _SplayTree)
    _SplayTree.name = "_SplayTree";
  $desc = $collectedClasses._SplayTree;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTree.prototype = $desc;
  _SplayTree.prototype.get$_root = function() {
    return this._root;
  };
  _SplayTree.prototype.get$_root.$reflectable = 1;
  _SplayTree.prototype.set$_root = function(v) {
    return this._root = v;
  };
  _SplayTree.prototype.set$_root.$reflectable = 1;
  _SplayTree.prototype.get$_dummy = function() {
    return this._dummy;
  };
  _SplayTree.prototype.get$_dummy.$reflectable = 1;
  _SplayTree.prototype.set$_dummy = function(v) {
    return this._dummy = v;
  };
  _SplayTree.prototype.set$_dummy.$reflectable = 1;
  _SplayTree.prototype.get$_count = function() {
    return this._count;
  };
  _SplayTree.prototype.get$_count.$reflectable = 1;
  _SplayTree.prototype.set$_count = function(v) {
    return this._count = v;
  };
  _SplayTree.prototype.set$_count.$reflectable = 1;
  _SplayTree.prototype.get$_modificationCount = function() {
    return this._modificationCount;
  };
  _SplayTree.prototype.get$_modificationCount.$reflectable = 1;
  _SplayTree.prototype.set$_modificationCount = function(v) {
    return this._modificationCount = v;
  };
  _SplayTree.prototype.set$_modificationCount.$reflectable = 1;
  _SplayTree.prototype.get$_splayCount = function() {
    return this._splayCount;
  };
  _SplayTree.prototype.get$_splayCount.$reflectable = 1;
  _SplayTree.prototype.set$_splayCount = function(v) {
    return this._splayCount = v;
  };
  _SplayTree.prototype.set$_splayCount.$reflectable = 1;
  function _TypeTest() {
  }
  _TypeTest.builtin$cls = "_TypeTest";
  if (!"name" in _TypeTest)
    _TypeTest.name = "_TypeTest";
  $desc = $collectedClasses._TypeTest;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _TypeTest.prototype = $desc;
  function SplayTreeMap(_comparator, _validKey, _root, _dummy, _count, _modificationCount, _splayCount) {
    this._comparator = _comparator;
    this._validKey = _validKey;
    this._root = _root;
    this._dummy = _dummy;
    this._count = _count;
    this._modificationCount = _modificationCount;
    this._splayCount = _splayCount;
  }
  SplayTreeMap.builtin$cls = "SplayTreeMap";
  if (!"name" in SplayTreeMap)
    SplayTreeMap.name = "SplayTreeMap";
  $desc = $collectedClasses.SplayTreeMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SplayTreeMap.prototype = $desc;
  SplayTreeMap.prototype.get$_comparator = function() {
    return this._comparator;
  };
  SplayTreeMap.prototype.get$_comparator.$reflectable = 1;
  SplayTreeMap.prototype.set$_comparator = function(v) {
    return this._comparator = v;
  };
  SplayTreeMap.prototype.set$_comparator.$reflectable = 1;
  SplayTreeMap.prototype.get$_validKey = function() {
    return this._validKey;
  };
  SplayTreeMap.prototype.get$_validKey.$reflectable = 1;
  SplayTreeMap.prototype.set$_validKey = function(v) {
    return this._validKey = v;
  };
  SplayTreeMap.prototype.set$_validKey.$reflectable = 1;
  function SplayTreeMap_closure(K_0) {
    this.K_0 = K_0;
  }
  SplayTreeMap_closure.builtin$cls = "SplayTreeMap_closure";
  if (!"name" in SplayTreeMap_closure)
    SplayTreeMap_closure.name = "SplayTreeMap_closure";
  $desc = $collectedClasses.SplayTreeMap_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SplayTreeMap_closure.prototype = $desc;
  function SplayTreeMap_addAll_closure(this_0) {
    this.this_0 = this_0;
  }
  SplayTreeMap_addAll_closure.builtin$cls = "SplayTreeMap_addAll_closure";
  if (!"name" in SplayTreeMap_addAll_closure)
    SplayTreeMap_addAll_closure.name = "SplayTreeMap_addAll_closure";
  $desc = $collectedClasses.SplayTreeMap_addAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SplayTreeMap_addAll_closure.prototype = $desc;
  function SplayTreeMap_containsValue_visit(this_0, value_1, initialSplayCount_2) {
    this.this_0 = this_0;
    this.value_1 = value_1;
    this.initialSplayCount_2 = initialSplayCount_2;
  }
  SplayTreeMap_containsValue_visit.builtin$cls = "SplayTreeMap_containsValue_visit";
  if (!"name" in SplayTreeMap_containsValue_visit)
    SplayTreeMap_containsValue_visit.name = "SplayTreeMap_containsValue_visit";
  $desc = $collectedClasses.SplayTreeMap_containsValue_visit;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SplayTreeMap_containsValue_visit.prototype = $desc;
  function _SplayTreeIterator(_tree, _workList, _modificationCount, _splayCount, _currentNode) {
    this._tree = _tree;
    this._workList = _workList;
    this._modificationCount = _modificationCount;
    this._splayCount = _splayCount;
    this._currentNode = _currentNode;
  }
  _SplayTreeIterator.builtin$cls = "_SplayTreeIterator";
  if (!"name" in _SplayTreeIterator)
    _SplayTreeIterator.name = "_SplayTreeIterator";
  $desc = $collectedClasses._SplayTreeIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTreeIterator.prototype = $desc;
  _SplayTreeIterator.prototype.get$_tree = function() {
    return this._tree;
  };
  _SplayTreeIterator.prototype.get$_tree.$reflectable = 1;
  _SplayTreeIterator.prototype.get$_workList = function() {
    return this._workList;
  };
  _SplayTreeIterator.prototype.get$_workList.$reflectable = 1;
  _SplayTreeIterator.prototype.get$_modificationCount = function() {
    return this._modificationCount;
  };
  _SplayTreeIterator.prototype.get$_modificationCount.$reflectable = 1;
  _SplayTreeIterator.prototype.set$_modificationCount = function(v) {
    return this._modificationCount = v;
  };
  _SplayTreeIterator.prototype.set$_modificationCount.$reflectable = 1;
  _SplayTreeIterator.prototype.get$_splayCount = function() {
    return this._splayCount;
  };
  _SplayTreeIterator.prototype.get$_splayCount.$reflectable = 1;
  _SplayTreeIterator.prototype.set$_splayCount = function(v) {
    return this._splayCount = v;
  };
  _SplayTreeIterator.prototype.set$_splayCount.$reflectable = 1;
  _SplayTreeIterator.prototype.get$_currentNode = function() {
    return this._currentNode;
  };
  _SplayTreeIterator.prototype.get$_currentNode.$reflectable = 1;
  _SplayTreeIterator.prototype.set$_currentNode = function(v) {
    return this._currentNode = v;
  };
  _SplayTreeIterator.prototype.set$_currentNode.$reflectable = 1;
  function _SplayTreeKeyIterable(_tree) {
    this._tree = _tree;
  }
  _SplayTreeKeyIterable.builtin$cls = "_SplayTreeKeyIterable";
  if (!"name" in _SplayTreeKeyIterable)
    _SplayTreeKeyIterable.name = "_SplayTreeKeyIterable";
  $desc = $collectedClasses._SplayTreeKeyIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTreeKeyIterable.prototype = $desc;
  _SplayTreeKeyIterable.prototype.get$_tree = function() {
    return this._tree;
  };
  _SplayTreeKeyIterable.prototype.get$_tree.$reflectable = 1;
  _SplayTreeKeyIterable.prototype.set$_tree = function(v) {
    return this._tree = v;
  };
  _SplayTreeKeyIterable.prototype.set$_tree.$reflectable = 1;
  function _SplayTreeValueIterable(_collection$_map) {
    this._collection$_map = _collection$_map;
  }
  _SplayTreeValueIterable.builtin$cls = "_SplayTreeValueIterable";
  if (!"name" in _SplayTreeValueIterable)
    _SplayTreeValueIterable.name = "_SplayTreeValueIterable";
  $desc = $collectedClasses._SplayTreeValueIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTreeValueIterable.prototype = $desc;
  _SplayTreeValueIterable.prototype.get$_collection$_map = function() {
    return this._collection$_map;
  };
  _SplayTreeValueIterable.prototype.get$_collection$_map.$reflectable = 1;
  _SplayTreeValueIterable.prototype.set$_collection$_map = function(v) {
    return this._collection$_map = v;
  };
  _SplayTreeValueIterable.prototype.set$_collection$_map.$reflectable = 1;
  function _SplayTreeKeyIterator(_tree, _workList, _modificationCount, _splayCount, _currentNode) {
    this._tree = _tree;
    this._workList = _workList;
    this._modificationCount = _modificationCount;
    this._splayCount = _splayCount;
    this._currentNode = _currentNode;
  }
  _SplayTreeKeyIterator.builtin$cls = "_SplayTreeKeyIterator";
  if (!"name" in _SplayTreeKeyIterator)
    _SplayTreeKeyIterator.name = "_SplayTreeKeyIterator";
  $desc = $collectedClasses._SplayTreeKeyIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTreeKeyIterator.prototype = $desc;
  function _SplayTreeValueIterator(_tree, _workList, _modificationCount, _splayCount, _currentNode) {
    this._tree = _tree;
    this._workList = _workList;
    this._modificationCount = _modificationCount;
    this._splayCount = _splayCount;
    this._currentNode = _currentNode;
  }
  _SplayTreeValueIterator.builtin$cls = "_SplayTreeValueIterator";
  if (!"name" in _SplayTreeValueIterator)
    _SplayTreeValueIterator.name = "_SplayTreeValueIterator";
  $desc = $collectedClasses._SplayTreeValueIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTreeValueIterator.prototype = $desc;
  function _SplayTreeNodeIterator(_tree, _workList, _modificationCount, _splayCount, _currentNode) {
    this._tree = _tree;
    this._workList = _workList;
    this._modificationCount = _modificationCount;
    this._splayCount = _splayCount;
    this._currentNode = _currentNode;
  }
  _SplayTreeNodeIterator.builtin$cls = "_SplayTreeNodeIterator";
  if (!"name" in _SplayTreeNodeIterator)
    _SplayTreeNodeIterator.name = "_SplayTreeNodeIterator";
  $desc = $collectedClasses._SplayTreeNodeIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTreeNodeIterator.prototype = $desc;
  function SplayTreeSet(_comparator, _validKey, _root, _dummy, _count, _modificationCount, _splayCount) {
    this._comparator = _comparator;
    this._validKey = _validKey;
    this._root = _root;
    this._dummy = _dummy;
    this._count = _count;
    this._modificationCount = _modificationCount;
    this._splayCount = _splayCount;
  }
  SplayTreeSet.builtin$cls = "SplayTreeSet";
  if (!"name" in SplayTreeSet)
    SplayTreeSet.name = "SplayTreeSet";
  $desc = $collectedClasses.SplayTreeSet;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SplayTreeSet.prototype = $desc;
  SplayTreeSet.prototype.get$_comparator = function() {
    return this._comparator;
  };
  SplayTreeSet.prototype.get$_comparator.$reflectable = 1;
  SplayTreeSet.prototype.set$_comparator = function(v) {
    return this._comparator = v;
  };
  SplayTreeSet.prototype.set$_comparator.$reflectable = 1;
  SplayTreeSet.prototype.get$_validKey = function() {
    return this._validKey;
  };
  SplayTreeSet.prototype.get$_validKey.$reflectable = 1;
  SplayTreeSet.prototype.set$_validKey = function(v) {
    return this._validKey = v;
  };
  SplayTreeSet.prototype.set$_validKey.$reflectable = 1;
  function _SplayTree_IterableMixin() {
  }
  _SplayTree_IterableMixin.builtin$cls = "_SplayTree_IterableMixin";
  if (!"name" in _SplayTree_IterableMixin)
    _SplayTree_IterableMixin.name = "_SplayTree_IterableMixin";
  $desc = $collectedClasses._SplayTree_IterableMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTree_IterableMixin.prototype = $desc;
  function SplayTreeSet_closure(E_0) {
    this.E_0 = E_0;
  }
  SplayTreeSet_closure.builtin$cls = "SplayTreeSet_closure";
  if (!"name" in SplayTreeSet_closure)
    SplayTreeSet_closure.name = "SplayTreeSet_closure";
  $desc = $collectedClasses.SplayTreeSet_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SplayTreeSet_closure.prototype = $desc;
  function _convertJsonToDart_closure() {
  }
  _convertJsonToDart_closure.builtin$cls = "_convertJsonToDart_closure";
  if (!"name" in _convertJsonToDart_closure)
    _convertJsonToDart_closure.name = "_convertJsonToDart_closure";
  $desc = $collectedClasses._convertJsonToDart_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _convertJsonToDart_closure.prototype = $desc;
  function _convertJsonToDart_walk(revive_0) {
    this.revive_0 = revive_0;
  }
  _convertJsonToDart_walk.builtin$cls = "_convertJsonToDart_walk";
  if (!"name" in _convertJsonToDart_walk)
    _convertJsonToDart_walk.name = "_convertJsonToDart_walk";
  $desc = $collectedClasses._convertJsonToDart_walk;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _convertJsonToDart_walk.prototype = $desc;
  function AsciiCodec(_allowInvalid) {
    this._allowInvalid = _allowInvalid;
  }
  AsciiCodec.builtin$cls = "AsciiCodec";
  if (!"name" in AsciiCodec)
    AsciiCodec.name = "AsciiCodec";
  $desc = $collectedClasses.AsciiCodec;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AsciiCodec.prototype = $desc;
  AsciiCodec.prototype.get$_allowInvalid = function() {
    return this._allowInvalid;
  };
  AsciiCodec.prototype.get$_allowInvalid.$reflectable = 1;
  function _UnicodeSubsetEncoder(_subsetMask) {
    this._subsetMask = _subsetMask;
  }
  _UnicodeSubsetEncoder.builtin$cls = "_UnicodeSubsetEncoder";
  if (!"name" in _UnicodeSubsetEncoder)
    _UnicodeSubsetEncoder.name = "_UnicodeSubsetEncoder";
  $desc = $collectedClasses._UnicodeSubsetEncoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _UnicodeSubsetEncoder.prototype = $desc;
  _UnicodeSubsetEncoder.prototype.get$_subsetMask = function() {
    return this._subsetMask;
  };
  _UnicodeSubsetEncoder.prototype.get$_subsetMask.$reflectable = 1;
  function AsciiEncoder(_subsetMask) {
    this._subsetMask = _subsetMask;
  }
  AsciiEncoder.builtin$cls = "AsciiEncoder";
  if (!"name" in AsciiEncoder)
    AsciiEncoder.name = "AsciiEncoder";
  $desc = $collectedClasses.AsciiEncoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AsciiEncoder.prototype = $desc;
  function _UnicodeSubsetEncoderSink(_convert$_sink, _subsetMask) {
    this._convert$_sink = _convert$_sink;
    this._subsetMask = _subsetMask;
  }
  _UnicodeSubsetEncoderSink.builtin$cls = "_UnicodeSubsetEncoderSink";
  if (!"name" in _UnicodeSubsetEncoderSink)
    _UnicodeSubsetEncoderSink.name = "_UnicodeSubsetEncoderSink";
  $desc = $collectedClasses._UnicodeSubsetEncoderSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _UnicodeSubsetEncoderSink.prototype = $desc;
  _UnicodeSubsetEncoderSink.prototype.get$_convert$_sink = function() {
    return this._convert$_sink;
  };
  _UnicodeSubsetEncoderSink.prototype.get$_convert$_sink.$reflectable = 1;
  _UnicodeSubsetEncoderSink.prototype.get$_subsetMask = function() {
    return this._subsetMask;
  };
  _UnicodeSubsetEncoderSink.prototype.get$_subsetMask.$reflectable = 1;
  function _UnicodeSubsetDecoder(_allowInvalid, _subsetMask) {
    this._allowInvalid = _allowInvalid;
    this._subsetMask = _subsetMask;
  }
  _UnicodeSubsetDecoder.builtin$cls = "_UnicodeSubsetDecoder";
  if (!"name" in _UnicodeSubsetDecoder)
    _UnicodeSubsetDecoder.name = "_UnicodeSubsetDecoder";
  $desc = $collectedClasses._UnicodeSubsetDecoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _UnicodeSubsetDecoder.prototype = $desc;
  _UnicodeSubsetDecoder.prototype.get$_allowInvalid = function() {
    return this._allowInvalid;
  };
  _UnicodeSubsetDecoder.prototype.get$_allowInvalid.$reflectable = 1;
  _UnicodeSubsetDecoder.prototype.get$_subsetMask = function() {
    return this._subsetMask;
  };
  _UnicodeSubsetDecoder.prototype.get$_subsetMask.$reflectable = 1;
  function AsciiDecoder(_allowInvalid, _subsetMask) {
    this._allowInvalid = _allowInvalid;
    this._subsetMask = _subsetMask;
  }
  AsciiDecoder.builtin$cls = "AsciiDecoder";
  if (!"name" in AsciiDecoder)
    AsciiDecoder.name = "AsciiDecoder";
  $desc = $collectedClasses.AsciiDecoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AsciiDecoder.prototype = $desc;
  function _AsciiDecoderSink(_allowInvalid, _utf8Sink) {
    this._allowInvalid = _allowInvalid;
    this._utf8Sink = _utf8Sink;
  }
  _AsciiDecoderSink.builtin$cls = "_AsciiDecoderSink";
  if (!"name" in _AsciiDecoderSink)
    _AsciiDecoderSink.name = "_AsciiDecoderSink";
  $desc = $collectedClasses._AsciiDecoderSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AsciiDecoderSink.prototype = $desc;
  _AsciiDecoderSink.prototype.get$_allowInvalid = function() {
    return this._allowInvalid;
  };
  _AsciiDecoderSink.prototype.get$_allowInvalid.$reflectable = 1;
  _AsciiDecoderSink.prototype.get$_utf8Sink = function() {
    return this._utf8Sink;
  };
  _AsciiDecoderSink.prototype.get$_utf8Sink.$reflectable = 1;
  _AsciiDecoderSink.prototype.set$_utf8Sink = function(v) {
    return this._utf8Sink = v;
  };
  _AsciiDecoderSink.prototype.set$_utf8Sink.$reflectable = 1;
  function ByteConversionSink() {
  }
  ByteConversionSink.builtin$cls = "ByteConversionSink";
  if (!"name" in ByteConversionSink)
    ByteConversionSink.name = "ByteConversionSink";
  $desc = $collectedClasses.ByteConversionSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ByteConversionSink.prototype = $desc;
  function ByteConversionSinkBase() {
  }
  ByteConversionSinkBase.builtin$cls = "ByteConversionSinkBase";
  if (!"name" in ByteConversionSinkBase)
    ByteConversionSinkBase.name = "ByteConversionSinkBase";
  $desc = $collectedClasses.ByteConversionSinkBase;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ByteConversionSinkBase.prototype = $desc;
  function _ByteAdapterSink(_convert$_sink) {
    this._convert$_sink = _convert$_sink;
  }
  _ByteAdapterSink.builtin$cls = "_ByteAdapterSink";
  if (!"name" in _ByteAdapterSink)
    _ByteAdapterSink.name = "_ByteAdapterSink";
  $desc = $collectedClasses._ByteAdapterSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ByteAdapterSink.prototype = $desc;
  _ByteAdapterSink.prototype.get$_convert$_sink = function() {
    return this._convert$_sink;
  };
  _ByteAdapterSink.prototype.get$_convert$_sink.$reflectable = 1;
  function _ByteCallbackSink(_callback, _buffer, _bufferIndex) {
    this._callback = _callback;
    this._buffer = _buffer;
    this._bufferIndex = _bufferIndex;
  }
  _ByteCallbackSink.builtin$cls = "_ByteCallbackSink";
  if (!"name" in _ByteCallbackSink)
    _ByteCallbackSink.name = "_ByteCallbackSink";
  $desc = $collectedClasses._ByteCallbackSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ByteCallbackSink.prototype = $desc;
  _ByteCallbackSink.prototype.get$_callback = function() {
    return this._callback;
  };
  _ByteCallbackSink.prototype.get$_callback.$reflectable = 1;
  _ByteCallbackSink.prototype.get$_buffer = function() {
    return this._buffer;
  };
  _ByteCallbackSink.prototype.get$_buffer.$reflectable = 1;
  _ByteCallbackSink.prototype.set$_buffer = function(v) {
    return this._buffer = v;
  };
  _ByteCallbackSink.prototype.set$_buffer.$reflectable = 1;
  _ByteCallbackSink.prototype.get$_bufferIndex = function() {
    return this._bufferIndex;
  };
  _ByteCallbackSink.prototype.get$_bufferIndex.$reflectable = 1;
  _ByteCallbackSink.prototype.set$_bufferIndex = function(v) {
    return this._bufferIndex = v;
  };
  _ByteCallbackSink.prototype.set$_bufferIndex.$reflectable = 1;
  function ChunkedConversionSink() {
  }
  ChunkedConversionSink.builtin$cls = "ChunkedConversionSink";
  if (!"name" in ChunkedConversionSink)
    ChunkedConversionSink.name = "ChunkedConversionSink";
  $desc = $collectedClasses.ChunkedConversionSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ChunkedConversionSink.prototype = $desc;
  function _SimpleCallbackSink(_callback, _accumulated) {
    this._callback = _callback;
    this._accumulated = _accumulated;
  }
  _SimpleCallbackSink.builtin$cls = "_SimpleCallbackSink";
  if (!"name" in _SimpleCallbackSink)
    _SimpleCallbackSink.name = "_SimpleCallbackSink";
  $desc = $collectedClasses._SimpleCallbackSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SimpleCallbackSink.prototype = $desc;
  _SimpleCallbackSink.prototype.get$_callback = function() {
    return this._callback;
  };
  _SimpleCallbackSink.prototype.get$_callback.$reflectable = 1;
  _SimpleCallbackSink.prototype.get$_accumulated = function() {
    return this._accumulated;
  };
  _SimpleCallbackSink.prototype.get$_accumulated.$reflectable = 1;
  function _EventSinkAdapter(_convert$_sink) {
    this._convert$_sink = _convert$_sink;
  }
  _EventSinkAdapter.builtin$cls = "_EventSinkAdapter";
  if (!"name" in _EventSinkAdapter)
    _EventSinkAdapter.name = "_EventSinkAdapter";
  $desc = $collectedClasses._EventSinkAdapter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _EventSinkAdapter.prototype = $desc;
  _EventSinkAdapter.prototype.get$_convert$_sink = function() {
    return this._convert$_sink;
  };
  _EventSinkAdapter.prototype.get$_convert$_sink.$reflectable = 1;
  function _ConverterStreamEventSink(_eventSink, _chunkedSink) {
    this._eventSink = _eventSink;
    this._chunkedSink = _chunkedSink;
  }
  _ConverterStreamEventSink.builtin$cls = "_ConverterStreamEventSink";
  if (!"name" in _ConverterStreamEventSink)
    _ConverterStreamEventSink.name = "_ConverterStreamEventSink";
  $desc = $collectedClasses._ConverterStreamEventSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ConverterStreamEventSink.prototype = $desc;
  _ConverterStreamEventSink.prototype.get$_eventSink = function() {
    return this._eventSink;
  };
  _ConverterStreamEventSink.prototype.get$_eventSink.$reflectable = 1;
  _ConverterStreamEventSink.prototype.get$_chunkedSink = function() {
    return this._chunkedSink;
  };
  _ConverterStreamEventSink.prototype.get$_chunkedSink.$reflectable = 1;
  _ConverterStreamEventSink.prototype.set$_chunkedSink = function(v) {
    return this._chunkedSink = v;
  };
  _ConverterStreamEventSink.prototype.set$_chunkedSink.$reflectable = 1;
  function Codec() {
  }
  Codec.builtin$cls = "Codec";
  if (!"name" in Codec)
    Codec.name = "Codec";
  $desc = $collectedClasses.Codec;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Codec.prototype = $desc;
  function _FusedCodec(_convert$_first, _second) {
    this._convert$_first = _convert$_first;
    this._second = _second;
  }
  _FusedCodec.builtin$cls = "_FusedCodec";
  if (!"name" in _FusedCodec)
    _FusedCodec.name = "_FusedCodec";
  $desc = $collectedClasses._FusedCodec;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _FusedCodec.prototype = $desc;
  _FusedCodec.prototype.get$_convert$_first = function() {
    return this._convert$_first;
  };
  _FusedCodec.prototype.get$_convert$_first.$reflectable = 1;
  _FusedCodec.prototype.get$_second = function() {
    return this._second;
  };
  _FusedCodec.prototype.get$_second.$reflectable = 1;
  function _InvertedCodec(_codec) {
    this._codec = _codec;
  }
  _InvertedCodec.builtin$cls = "_InvertedCodec";
  if (!"name" in _InvertedCodec)
    _InvertedCodec.name = "_InvertedCodec";
  $desc = $collectedClasses._InvertedCodec;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _InvertedCodec.prototype = $desc;
  _InvertedCodec.prototype.get$_codec = function() {
    return this._codec;
  };
  _InvertedCodec.prototype.get$_codec.$reflectable = 1;
  function Converter() {
  }
  Converter.builtin$cls = "Converter";
  if (!"name" in Converter)
    Converter.name = "Converter";
  $desc = $collectedClasses.Converter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Converter.prototype = $desc;
  function Converter_bind_closure(this_0) {
    this.this_0 = this_0;
  }
  Converter_bind_closure.builtin$cls = "Converter_bind_closure";
  if (!"name" in Converter_bind_closure)
    Converter_bind_closure.name = "Converter_bind_closure";
  $desc = $collectedClasses.Converter_bind_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Converter_bind_closure.prototype = $desc;
  function _FusedConverter(_convert$_first, _second) {
    this._convert$_first = _convert$_first;
    this._second = _second;
  }
  _FusedConverter.builtin$cls = "_FusedConverter";
  if (!"name" in _FusedConverter)
    _FusedConverter.name = "_FusedConverter";
  $desc = $collectedClasses._FusedConverter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _FusedConverter.prototype = $desc;
  _FusedConverter.prototype.get$_convert$_first = function() {
    return this._convert$_first;
  };
  _FusedConverter.prototype.get$_convert$_first.$reflectable = 1;
  _FusedConverter.prototype.get$_second = function() {
    return this._second;
  };
  _FusedConverter.prototype.get$_second.$reflectable = 1;
  function Encoding() {
  }
  Encoding.builtin$cls = "Encoding";
  if (!"name" in Encoding)
    Encoding.name = "Encoding";
  $desc = $collectedClasses.Encoding;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Encoding.prototype = $desc;
  function Encoding_decodeStream_closure() {
  }
  Encoding_decodeStream_closure.builtin$cls = "Encoding_decodeStream_closure";
  if (!"name" in Encoding_decodeStream_closure)
    Encoding_decodeStream_closure.name = "Encoding_decodeStream_closure";
  $desc = $collectedClasses.Encoding_decodeStream_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Encoding_decodeStream_closure.prototype = $desc;
  function Encoding_decodeStream_closure0() {
  }
  Encoding_decodeStream_closure0.builtin$cls = "Encoding_decodeStream_closure0";
  if (!"name" in Encoding_decodeStream_closure0)
    Encoding_decodeStream_closure0.name = "Encoding_decodeStream_closure0";
  $desc = $collectedClasses.Encoding_decodeStream_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Encoding_decodeStream_closure0.prototype = $desc;
  function HtmlEscapeMode(_convert$_name, escapeLtGt, escapeQuot, escapeApos, escapeSlash) {
    this._convert$_name = _convert$_name;
    this.escapeLtGt = escapeLtGt;
    this.escapeQuot = escapeQuot;
    this.escapeApos = escapeApos;
    this.escapeSlash = escapeSlash;
  }
  HtmlEscapeMode.builtin$cls = "HtmlEscapeMode";
  if (!"name" in HtmlEscapeMode)
    HtmlEscapeMode.name = "HtmlEscapeMode";
  $desc = $collectedClasses.HtmlEscapeMode;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HtmlEscapeMode.prototype = $desc;
  HtmlEscapeMode.prototype.get$_convert$_name = function() {
    return this._convert$_name;
  };
  HtmlEscapeMode.prototype.get$_convert$_name.$reflectable = 1;
  HtmlEscapeMode.prototype.get$escapeLtGt = function() {
    return this.escapeLtGt;
  };
  HtmlEscapeMode.prototype.get$escapeLtGt.$reflectable = 1;
  HtmlEscapeMode.prototype.get$escapeQuot = function() {
    return this.escapeQuot;
  };
  HtmlEscapeMode.prototype.get$escapeQuot.$reflectable = 1;
  HtmlEscapeMode.prototype.get$escapeApos = function() {
    return this.escapeApos;
  };
  HtmlEscapeMode.prototype.get$escapeApos.$reflectable = 1;
  HtmlEscapeMode.prototype.get$escapeSlash = function() {
    return this.escapeSlash;
  };
  HtmlEscapeMode.prototype.get$escapeSlash.$reflectable = 1;
  function HtmlEscape(mode) {
    this.mode = mode;
  }
  HtmlEscape.builtin$cls = "HtmlEscape";
  if (!"name" in HtmlEscape)
    HtmlEscape.name = "HtmlEscape";
  $desc = $collectedClasses.HtmlEscape;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HtmlEscape.prototype = $desc;
  HtmlEscape.prototype.get$mode = function() {
    return this.mode;
  };
  HtmlEscape.prototype.get$mode.$reflectable = 1;
  function _HtmlEscapeSink(_escape, _convert$_sink) {
    this._escape = _escape;
    this._convert$_sink = _convert$_sink;
  }
  _HtmlEscapeSink.builtin$cls = "_HtmlEscapeSink";
  if (!"name" in _HtmlEscapeSink)
    _HtmlEscapeSink.name = "_HtmlEscapeSink";
  $desc = $collectedClasses._HtmlEscapeSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HtmlEscapeSink.prototype = $desc;
  _HtmlEscapeSink.prototype.get$_escape = function() {
    return this._escape;
  };
  _HtmlEscapeSink.prototype.get$_escape.$reflectable = 1;
  _HtmlEscapeSink.prototype.get$_convert$_sink = function() {
    return this._convert$_sink;
  };
  _HtmlEscapeSink.prototype.get$_convert$_sink.$reflectable = 1;
  function JsonUnsupportedObjectError(unsupportedObject, cause) {
    this.unsupportedObject = unsupportedObject;
    this.cause = cause;
  }
  JsonUnsupportedObjectError.builtin$cls = "JsonUnsupportedObjectError";
  if (!"name" in JsonUnsupportedObjectError)
    JsonUnsupportedObjectError.name = "JsonUnsupportedObjectError";
  $desc = $collectedClasses.JsonUnsupportedObjectError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsonUnsupportedObjectError.prototype = $desc;
  JsonUnsupportedObjectError.prototype.get$unsupportedObject = function() {
    return this.unsupportedObject;
  };
  JsonUnsupportedObjectError.prototype.get$unsupportedObject.$reflectable = 1;
  JsonUnsupportedObjectError.prototype.get$cause = function() {
    return this.cause;
  };
  JsonUnsupportedObjectError.prototype.get$cause.$reflectable = 1;
  function JsonCyclicError(unsupportedObject, cause) {
    this.unsupportedObject = unsupportedObject;
    this.cause = cause;
  }
  JsonCyclicError.builtin$cls = "JsonCyclicError";
  if (!"name" in JsonCyclicError)
    JsonCyclicError.name = "JsonCyclicError";
  $desc = $collectedClasses.JsonCyclicError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsonCyclicError.prototype = $desc;
  function JsonCodec() {
  }
  JsonCodec.builtin$cls = "JsonCodec";
  if (!"name" in JsonCodec)
    JsonCodec.name = "JsonCodec";
  $desc = $collectedClasses.JsonCodec;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsonCodec.prototype = $desc;
  function _ReviverJsonCodec(_reviver) {
    this._reviver = _reviver;
  }
  _ReviverJsonCodec.builtin$cls = "_ReviverJsonCodec";
  if (!"name" in _ReviverJsonCodec)
    _ReviverJsonCodec.name = "_ReviverJsonCodec";
  $desc = $collectedClasses._ReviverJsonCodec;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ReviverJsonCodec.prototype = $desc;
  _ReviverJsonCodec.prototype.get$_reviver = function() {
    return this._reviver;
  };
  _ReviverJsonCodec.prototype.get$_reviver.$reflectable = 1;
  function JsonEncoder(_toEncodableFunction) {
    this._toEncodableFunction = _toEncodableFunction;
  }
  JsonEncoder.builtin$cls = "JsonEncoder";
  if (!"name" in JsonEncoder)
    JsonEncoder.name = "JsonEncoder";
  $desc = $collectedClasses.JsonEncoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsonEncoder.prototype = $desc;
  JsonEncoder.prototype.get$_toEncodableFunction = function() {
    return this._toEncodableFunction;
  };
  JsonEncoder.prototype.get$_toEncodableFunction.$reflectable = 1;
  function _JsonEncoderSink(_toEncodableFunction, _convert$_sink, _isDone) {
    this._toEncodableFunction = _toEncodableFunction;
    this._convert$_sink = _convert$_sink;
    this._isDone = _isDone;
  }
  _JsonEncoderSink.builtin$cls = "_JsonEncoderSink";
  if (!"name" in _JsonEncoderSink)
    _JsonEncoderSink.name = "_JsonEncoderSink";
  $desc = $collectedClasses._JsonEncoderSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _JsonEncoderSink.prototype = $desc;
  _JsonEncoderSink.prototype.get$_toEncodableFunction = function() {
    return this._toEncodableFunction;
  };
  _JsonEncoderSink.prototype.get$_toEncodableFunction.$reflectable = 1;
  _JsonEncoderSink.prototype.get$_convert$_sink = function() {
    return this._convert$_sink;
  };
  _JsonEncoderSink.prototype.get$_convert$_sink.$reflectable = 1;
  _JsonEncoderSink.prototype.get$_isDone = function() {
    return this._isDone;
  };
  _JsonEncoderSink.prototype.get$_isDone.$reflectable = 1;
  _JsonEncoderSink.prototype.set$_isDone = function(v) {
    return this._isDone = v;
  };
  _JsonEncoderSink.prototype.set$_isDone.$reflectable = 1;
  function JsonDecoder(_reviver) {
    this._reviver = _reviver;
  }
  JsonDecoder.builtin$cls = "JsonDecoder";
  if (!"name" in JsonDecoder)
    JsonDecoder.name = "JsonDecoder";
  $desc = $collectedClasses.JsonDecoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsonDecoder.prototype = $desc;
  JsonDecoder.prototype.get$_reviver = function() {
    return this._reviver;
  };
  JsonDecoder.prototype.get$_reviver.$reflectable = 1;
  function _JsonDecoderSink(_reviver, _chunkedSink, _stringSink) {
    this._reviver = _reviver;
    this._chunkedSink = _chunkedSink;
    this._stringSink = _stringSink;
  }
  _JsonDecoderSink.builtin$cls = "_JsonDecoderSink";
  if (!"name" in _JsonDecoderSink)
    _JsonDecoderSink.name = "_JsonDecoderSink";
  $desc = $collectedClasses._JsonDecoderSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _JsonDecoderSink.prototype = $desc;
  _JsonDecoderSink.prototype.get$_reviver = function() {
    return this._reviver;
  };
  _JsonDecoderSink.prototype.get$_reviver.$reflectable = 1;
  _JsonDecoderSink.prototype.get$_chunkedSink = function() {
    return this._chunkedSink;
  };
  _JsonDecoderSink.prototype.get$_chunkedSink.$reflectable = 1;
  function _JsonStringifier(toEncodable, sink, seen) {
    this.toEncodable = toEncodable;
    this.sink = sink;
    this.seen = seen;
  }
  _JsonStringifier.builtin$cls = "_JsonStringifier";
  if (!"name" in _JsonStringifier)
    _JsonStringifier.name = "_JsonStringifier";
  $desc = $collectedClasses._JsonStringifier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _JsonStringifier.prototype = $desc;
  _JsonStringifier.prototype.get$toEncodable = function() {
    return this.toEncodable;
  };
  _JsonStringifier.prototype.get$toEncodable.$reflectable = 1;
  _JsonStringifier.prototype.get$sink = function() {
    return this.sink;
  };
  _JsonStringifier.prototype.get$sink.$reflectable = 1;
  _JsonStringifier.prototype.get$seen = function() {
    return this.seen;
  };
  _JsonStringifier.prototype.get$seen.$reflectable = 1;
  function _JsonStringifier_stringifyJsonValue_closure(box_0, this_1) {
    this.box_0 = box_0;
    this.this_1 = this_1;
  }
  _JsonStringifier_stringifyJsonValue_closure.builtin$cls = "_JsonStringifier_stringifyJsonValue_closure";
  if (!"name" in _JsonStringifier_stringifyJsonValue_closure)
    _JsonStringifier_stringifyJsonValue_closure.name = "_JsonStringifier_stringifyJsonValue_closure";
  $desc = $collectedClasses._JsonStringifier_stringifyJsonValue_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _JsonStringifier_stringifyJsonValue_closure.prototype = $desc;
  function Latin1Codec(_allowInvalid) {
    this._allowInvalid = _allowInvalid;
  }
  Latin1Codec.builtin$cls = "Latin1Codec";
  if (!"name" in Latin1Codec)
    Latin1Codec.name = "Latin1Codec";
  $desc = $collectedClasses.Latin1Codec;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Latin1Codec.prototype = $desc;
  Latin1Codec.prototype.get$_allowInvalid = function() {
    return this._allowInvalid;
  };
  Latin1Codec.prototype.get$_allowInvalid.$reflectable = 1;
  function Latin1Encoder(_subsetMask) {
    this._subsetMask = _subsetMask;
  }
  Latin1Encoder.builtin$cls = "Latin1Encoder";
  if (!"name" in Latin1Encoder)
    Latin1Encoder.name = "Latin1Encoder";
  $desc = $collectedClasses.Latin1Encoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Latin1Encoder.prototype = $desc;
  function Latin1Decoder(_allowInvalid, _subsetMask) {
    this._allowInvalid = _allowInvalid;
    this._subsetMask = _subsetMask;
  }
  Latin1Decoder.builtin$cls = "Latin1Decoder";
  if (!"name" in Latin1Decoder)
    Latin1Decoder.name = "Latin1Decoder";
  $desc = $collectedClasses.Latin1Decoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Latin1Decoder.prototype = $desc;
  function _Latin1DecoderSink(_allowInvalid, _convert$_sink) {
    this._allowInvalid = _allowInvalid;
    this._convert$_sink = _convert$_sink;
  }
  _Latin1DecoderSink.builtin$cls = "_Latin1DecoderSink";
  if (!"name" in _Latin1DecoderSink)
    _Latin1DecoderSink.name = "_Latin1DecoderSink";
  $desc = $collectedClasses._Latin1DecoderSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Latin1DecoderSink.prototype = $desc;
  _Latin1DecoderSink.prototype.get$_allowInvalid = function() {
    return this._allowInvalid;
  };
  _Latin1DecoderSink.prototype.get$_allowInvalid.$reflectable = 1;
  _Latin1DecoderSink.prototype.get$_convert$_sink = function() {
    return this._convert$_sink;
  };
  _Latin1DecoderSink.prototype.get$_convert$_sink.$reflectable = 1;
  _Latin1DecoderSink.prototype.set$_convert$_sink = function(v) {
    return this._convert$_sink = v;
  };
  _Latin1DecoderSink.prototype.set$_convert$_sink.$reflectable = 1;
  function LineSplitter() {
  }
  LineSplitter.builtin$cls = "LineSplitter";
  if (!"name" in LineSplitter)
    LineSplitter.name = "LineSplitter";
  $desc = $collectedClasses.LineSplitter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LineSplitter.prototype = $desc;
  function _LineSplitterSink(_convert$_sink, _carry) {
    this._convert$_sink = _convert$_sink;
    this._carry = _carry;
  }
  _LineSplitterSink.builtin$cls = "_LineSplitterSink";
  if (!"name" in _LineSplitterSink)
    _LineSplitterSink.name = "_LineSplitterSink";
  $desc = $collectedClasses._LineSplitterSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LineSplitterSink.prototype = $desc;
  _LineSplitterSink.prototype.get$_convert$_sink = function() {
    return this._convert$_sink;
  };
  _LineSplitterSink.prototype.get$_convert$_sink.$reflectable = 1;
  _LineSplitterSink.prototype.get$_carry = function() {
    return this._carry;
  };
  _LineSplitterSink.prototype.get$_carry.$reflectable = 1;
  _LineSplitterSink.prototype.set$_carry = function(v) {
    return this._carry = v;
  };
  _LineSplitterSink.prototype.set$_carry.$reflectable = 1;
  function StringConversionSink() {
  }
  StringConversionSink.builtin$cls = "StringConversionSink";
  if (!"name" in StringConversionSink)
    StringConversionSink.name = "StringConversionSink";
  $desc = $collectedClasses.StringConversionSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StringConversionSink.prototype = $desc;
  function ClosableStringSink() {
  }
  ClosableStringSink.builtin$cls = "ClosableStringSink";
  if (!"name" in ClosableStringSink)
    ClosableStringSink.name = "ClosableStringSink";
  $desc = $collectedClasses.ClosableStringSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ClosableStringSink.prototype = $desc;
  function _ClosableStringSink(_callback, _convert$_sink) {
    this._callback = _callback;
    this._convert$_sink = _convert$_sink;
  }
  _ClosableStringSink.builtin$cls = "_ClosableStringSink";
  if (!"name" in _ClosableStringSink)
    _ClosableStringSink.name = "_ClosableStringSink";
  $desc = $collectedClasses._ClosableStringSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ClosableStringSink.prototype = $desc;
  _ClosableStringSink.prototype.get$_callback = function() {
    return this._callback;
  };
  _ClosableStringSink.prototype.get$_callback.$reflectable = 1;
  _ClosableStringSink.prototype.get$_convert$_sink = function() {
    return this._convert$_sink;
  };
  _ClosableStringSink.prototype.get$_convert$_sink.$reflectable = 1;
  function _StringConversionSinkAsStringSinkAdapter(_buffer, _chunkedSink) {
    this._buffer = _buffer;
    this._chunkedSink = _chunkedSink;
  }
  _StringConversionSinkAsStringSinkAdapter.builtin$cls = "_StringConversionSinkAsStringSinkAdapter";
  if (!"name" in _StringConversionSinkAsStringSinkAdapter)
    _StringConversionSinkAsStringSinkAdapter.name = "_StringConversionSinkAsStringSinkAdapter";
  $desc = $collectedClasses._StringConversionSinkAsStringSinkAdapter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StringConversionSinkAsStringSinkAdapter.prototype = $desc;
  _StringConversionSinkAsStringSinkAdapter.prototype.get$_buffer = function() {
    return this._buffer;
  };
  _StringConversionSinkAsStringSinkAdapter.prototype.get$_buffer.$reflectable = 1;
  _StringConversionSinkAsStringSinkAdapter.prototype.set$_buffer = function(v) {
    return this._buffer = v;
  };
  _StringConversionSinkAsStringSinkAdapter.prototype.set$_buffer.$reflectable = 1;
  _StringConversionSinkAsStringSinkAdapter.prototype.get$_chunkedSink = function() {
    return this._chunkedSink;
  };
  _StringConversionSinkAsStringSinkAdapter.prototype.get$_chunkedSink.$reflectable = 1;
  _StringConversionSinkAsStringSinkAdapter.prototype.set$_chunkedSink = function(v) {
    return this._chunkedSink = v;
  };
  _StringConversionSinkAsStringSinkAdapter.prototype.set$_chunkedSink.$reflectable = 1;
  function StringConversionSinkBase() {
  }
  StringConversionSinkBase.builtin$cls = "StringConversionSinkBase";
  if (!"name" in StringConversionSinkBase)
    StringConversionSinkBase.name = "StringConversionSinkBase";
  $desc = $collectedClasses.StringConversionSinkBase;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StringConversionSinkBase.prototype = $desc;
  function StringConversionSinkMixin() {
  }
  StringConversionSinkMixin.builtin$cls = "StringConversionSinkMixin";
  if (!"name" in StringConversionSinkMixin)
    StringConversionSinkMixin.name = "StringConversionSinkMixin";
  $desc = $collectedClasses.StringConversionSinkMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StringConversionSinkMixin.prototype = $desc;
  function _StringSinkConversionSink(_stringSink) {
    this._stringSink = _stringSink;
  }
  _StringSinkConversionSink.builtin$cls = "_StringSinkConversionSink";
  if (!"name" in _StringSinkConversionSink)
    _StringSinkConversionSink.name = "_StringSinkConversionSink";
  $desc = $collectedClasses._StringSinkConversionSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StringSinkConversionSink.prototype = $desc;
  _StringSinkConversionSink.prototype.get$_stringSink = function() {
    return this._stringSink;
  };
  _StringSinkConversionSink.prototype.get$_stringSink.$reflectable = 1;
  _StringSinkConversionSink.prototype.set$_stringSink = function(v) {
    return this._stringSink = v;
  };
  _StringSinkConversionSink.prototype.set$_stringSink.$reflectable = 1;
  function _StringCallbackSink(_callback, _stringSink) {
    this._callback = _callback;
    this._stringSink = _stringSink;
  }
  _StringCallbackSink.builtin$cls = "_StringCallbackSink";
  if (!"name" in _StringCallbackSink)
    _StringCallbackSink.name = "_StringCallbackSink";
  $desc = $collectedClasses._StringCallbackSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StringCallbackSink.prototype = $desc;
  _StringCallbackSink.prototype.get$_callback = function() {
    return this._callback;
  };
  _StringCallbackSink.prototype.get$_callback.$reflectable = 1;
  function _StringAdapterSink(_convert$_sink) {
    this._convert$_sink = _convert$_sink;
  }
  _StringAdapterSink.builtin$cls = "_StringAdapterSink";
  if (!"name" in _StringAdapterSink)
    _StringAdapterSink.name = "_StringAdapterSink";
  $desc = $collectedClasses._StringAdapterSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StringAdapterSink.prototype = $desc;
  _StringAdapterSink.prototype.get$_convert$_sink = function() {
    return this._convert$_sink;
  };
  _StringAdapterSink.prototype.get$_convert$_sink.$reflectable = 1;
  function _Utf8StringSinkAdapter(_decoder, _chunkedSink) {
    this._decoder = _decoder;
    this._chunkedSink = _chunkedSink;
  }
  _Utf8StringSinkAdapter.builtin$cls = "_Utf8StringSinkAdapter";
  if (!"name" in _Utf8StringSinkAdapter)
    _Utf8StringSinkAdapter.name = "_Utf8StringSinkAdapter";
  $desc = $collectedClasses._Utf8StringSinkAdapter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Utf8StringSinkAdapter.prototype = $desc;
  _Utf8StringSinkAdapter.prototype.get$_decoder = function() {
    return this._decoder;
  };
  _Utf8StringSinkAdapter.prototype.get$_decoder.$reflectable = 1;
  _Utf8StringSinkAdapter.prototype.get$_chunkedSink = function() {
    return this._chunkedSink;
  };
  _Utf8StringSinkAdapter.prototype.get$_chunkedSink.$reflectable = 1;
  function _Utf8ConversionSink(_decoder, _chunkedSink, _buffer) {
    this._decoder = _decoder;
    this._chunkedSink = _chunkedSink;
    this._buffer = _buffer;
  }
  _Utf8ConversionSink.builtin$cls = "_Utf8ConversionSink";
  if (!"name" in _Utf8ConversionSink)
    _Utf8ConversionSink.name = "_Utf8ConversionSink";
  $desc = $collectedClasses._Utf8ConversionSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Utf8ConversionSink.prototype = $desc;
  _Utf8ConversionSink.prototype.get$_decoder = function() {
    return this._decoder;
  };
  _Utf8ConversionSink.prototype.get$_decoder.$reflectable = 1;
  _Utf8ConversionSink.prototype.get$_chunkedSink = function() {
    return this._chunkedSink;
  };
  _Utf8ConversionSink.prototype.get$_chunkedSink.$reflectable = 1;
  _Utf8ConversionSink.prototype.get$_buffer = function() {
    return this._buffer;
  };
  _Utf8ConversionSink.prototype.get$_buffer.$reflectable = 1;
  function Utf8Codec(_allowMalformed) {
    this._allowMalformed = _allowMalformed;
  }
  Utf8Codec.builtin$cls = "Utf8Codec";
  if (!"name" in Utf8Codec)
    Utf8Codec.name = "Utf8Codec";
  $desc = $collectedClasses.Utf8Codec;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Utf8Codec.prototype = $desc;
  Utf8Codec.prototype.get$_allowMalformed = function() {
    return this._allowMalformed;
  };
  Utf8Codec.prototype.get$_allowMalformed.$reflectable = 1;
  function Utf8Encoder() {
  }
  Utf8Encoder.builtin$cls = "Utf8Encoder";
  if (!"name" in Utf8Encoder)
    Utf8Encoder.name = "Utf8Encoder";
  $desc = $collectedClasses.Utf8Encoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Utf8Encoder.prototype = $desc;
  function _Utf8Encoder(_carry, _bufferIndex, _buffer) {
    this._carry = _carry;
    this._bufferIndex = _bufferIndex;
    this._buffer = _buffer;
  }
  _Utf8Encoder.builtin$cls = "_Utf8Encoder";
  if (!"name" in _Utf8Encoder)
    _Utf8Encoder.name = "_Utf8Encoder";
  $desc = $collectedClasses._Utf8Encoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Utf8Encoder.prototype = $desc;
  _Utf8Encoder.prototype.get$_carry = function() {
    return this._carry;
  };
  _Utf8Encoder.prototype.get$_carry.$reflectable = 1;
  _Utf8Encoder.prototype.set$_carry = function(v) {
    return this._carry = v;
  };
  _Utf8Encoder.prototype.set$_carry.$reflectable = 1;
  _Utf8Encoder.prototype.get$_bufferIndex = function() {
    return this._bufferIndex;
  };
  _Utf8Encoder.prototype.get$_bufferIndex.$reflectable = 1;
  _Utf8Encoder.prototype.set$_bufferIndex = function(v) {
    return this._bufferIndex = v;
  };
  _Utf8Encoder.prototype.set$_bufferIndex.$reflectable = 1;
  _Utf8Encoder.prototype.get$_buffer = function() {
    return this._buffer;
  };
  _Utf8Encoder.prototype.get$_buffer.$reflectable = 1;
  function _Utf8EncoderSink(_convert$_sink, _carry, _bufferIndex, _buffer) {
    this._convert$_sink = _convert$_sink;
    this._carry = _carry;
    this._bufferIndex = _bufferIndex;
    this._buffer = _buffer;
  }
  _Utf8EncoderSink.builtin$cls = "_Utf8EncoderSink";
  if (!"name" in _Utf8EncoderSink)
    _Utf8EncoderSink.name = "_Utf8EncoderSink";
  $desc = $collectedClasses._Utf8EncoderSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Utf8EncoderSink.prototype = $desc;
  _Utf8EncoderSink.prototype.get$_convert$_sink = function() {
    return this._convert$_sink;
  };
  _Utf8EncoderSink.prototype.get$_convert$_sink.$reflectable = 1;
  function _Utf8Encoder_StringConversionSinkMixin() {
  }
  _Utf8Encoder_StringConversionSinkMixin.builtin$cls = "_Utf8Encoder_StringConversionSinkMixin";
  if (!"name" in _Utf8Encoder_StringConversionSinkMixin)
    _Utf8Encoder_StringConversionSinkMixin.name = "_Utf8Encoder_StringConversionSinkMixin";
  $desc = $collectedClasses._Utf8Encoder_StringConversionSinkMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Utf8Encoder_StringConversionSinkMixin.prototype = $desc;
  function Utf8Decoder(_allowMalformed) {
    this._allowMalformed = _allowMalformed;
  }
  Utf8Decoder.builtin$cls = "Utf8Decoder";
  if (!"name" in Utf8Decoder)
    Utf8Decoder.name = "Utf8Decoder";
  $desc = $collectedClasses.Utf8Decoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Utf8Decoder.prototype = $desc;
  Utf8Decoder.prototype.get$_allowMalformed = function() {
    return this._allowMalformed;
  };
  Utf8Decoder.prototype.get$_allowMalformed.$reflectable = 1;
  function _Utf8Decoder(_allowMalformed, _stringSink, _isFirstCharacter, _convert$_value, _expectedUnits, _extraUnits) {
    this._allowMalformed = _allowMalformed;
    this._stringSink = _stringSink;
    this._isFirstCharacter = _isFirstCharacter;
    this._convert$_value = _convert$_value;
    this._expectedUnits = _expectedUnits;
    this._extraUnits = _extraUnits;
  }
  _Utf8Decoder.builtin$cls = "_Utf8Decoder";
  if (!"name" in _Utf8Decoder)
    _Utf8Decoder.name = "_Utf8Decoder";
  $desc = $collectedClasses._Utf8Decoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Utf8Decoder.prototype = $desc;
  _Utf8Decoder.prototype.get$_allowMalformed = function() {
    return this._allowMalformed;
  };
  _Utf8Decoder.prototype.get$_allowMalformed.$reflectable = 1;
  _Utf8Decoder.prototype.get$_stringSink = function() {
    return this._stringSink;
  };
  _Utf8Decoder.prototype.get$_stringSink.$reflectable = 1;
  _Utf8Decoder.prototype.get$_isFirstCharacter = function() {
    return this._isFirstCharacter;
  };
  _Utf8Decoder.prototype.get$_isFirstCharacter.$reflectable = 1;
  _Utf8Decoder.prototype.set$_isFirstCharacter = function(v) {
    return this._isFirstCharacter = v;
  };
  _Utf8Decoder.prototype.set$_isFirstCharacter.$reflectable = 1;
  _Utf8Decoder.prototype.get$_convert$_value = function() {
    return this._convert$_value;
  };
  _Utf8Decoder.prototype.get$_convert$_value.$reflectable = 1;
  _Utf8Decoder.prototype.set$_convert$_value = function(v) {
    return this._convert$_value = v;
  };
  _Utf8Decoder.prototype.set$_convert$_value.$reflectable = 1;
  _Utf8Decoder.prototype.get$_expectedUnits = function() {
    return this._expectedUnits;
  };
  _Utf8Decoder.prototype.get$_expectedUnits.$reflectable = 1;
  _Utf8Decoder.prototype.set$_expectedUnits = function(v) {
    return this._expectedUnits = v;
  };
  _Utf8Decoder.prototype.set$_expectedUnits.$reflectable = 1;
  _Utf8Decoder.prototype.get$_extraUnits = function() {
    return this._extraUnits;
  };
  _Utf8Decoder.prototype.get$_extraUnits.$reflectable = 1;
  _Utf8Decoder.prototype.set$_extraUnits = function(v) {
    return this._extraUnits = v;
  };
  _Utf8Decoder.prototype.set$_extraUnits.$reflectable = 1;
  function Function__toMangledNames_closure(result_0) {
    this.result_0 = result_0;
  }
  Function__toMangledNames_closure.builtin$cls = "Function__toMangledNames_closure";
  if (!"name" in Function__toMangledNames_closure)
    Function__toMangledNames_closure.name = "Function__toMangledNames_closure";
  $desc = $collectedClasses.Function__toMangledNames_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Function__toMangledNames_closure.prototype = $desc;
  function _ListConstructorSentinel() {
  }
  _ListConstructorSentinel.builtin$cls = "_ListConstructorSentinel";
  if (!"name" in _ListConstructorSentinel)
    _ListConstructorSentinel.name = "_ListConstructorSentinel";
  $desc = $collectedClasses._ListConstructorSentinel;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ListConstructorSentinel.prototype = $desc;
  function NoSuchMethodError_toString_closure(box_0) {
    this.box_0 = box_0;
  }
  NoSuchMethodError_toString_closure.builtin$cls = "NoSuchMethodError_toString_closure";
  if (!"name" in NoSuchMethodError_toString_closure)
    NoSuchMethodError_toString_closure.name = "NoSuchMethodError_toString_closure";
  $desc = $collectedClasses.NoSuchMethodError_toString_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NoSuchMethodError_toString_closure.prototype = $desc;
  function Deprecated(expires) {
    this.expires = expires;
  }
  Deprecated.builtin$cls = "Deprecated";
  if (!"name" in Deprecated)
    Deprecated.name = "Deprecated";
  $desc = $collectedClasses.Deprecated;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Deprecated.prototype = $desc;
  Deprecated.prototype.get$expires = function() {
    return this.expires;
  };
  Deprecated.prototype.get$expires.$reflectable = 1;
  function _Override() {
  }
  _Override.builtin$cls = "_Override";
  if (!"name" in _Override)
    _Override.name = "_Override";
  $desc = $collectedClasses._Override;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Override.prototype = $desc;
  function _Proxy() {
  }
  _Proxy.builtin$cls = "_Proxy";
  if (!"name" in _Proxy)
    _Proxy.name = "_Proxy";
  $desc = $collectedClasses._Proxy;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Proxy.prototype = $desc;
  function bool() {
  }
  bool.builtin$cls = "bool";
  if (!"name" in bool)
    bool.name = "bool";
  $desc = $collectedClasses.bool;
  if ($desc instanceof Array)
    $desc = $desc[1];
  bool.prototype = $desc;
  function Comparable() {
  }
  Comparable.builtin$cls = "Comparable";
  if (!"name" in Comparable)
    Comparable.name = "Comparable";
  $desc = $collectedClasses.Comparable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Comparable.prototype = $desc;
  function DateTime(millisecondsSinceEpoch, isUtc) {
    this.millisecondsSinceEpoch = millisecondsSinceEpoch;
    this.isUtc = isUtc;
  }
  DateTime.builtin$cls = "DateTime";
  if (!"name" in DateTime)
    DateTime.name = "DateTime";
  $desc = $collectedClasses.DateTime;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DateTime.prototype = $desc;
  DateTime.prototype.get$millisecondsSinceEpoch = function() {
    return this.millisecondsSinceEpoch;
  };
  DateTime.prototype.get$millisecondsSinceEpoch.$reflectable = 1;
  DateTime.prototype.get$isUtc = function() {
    return this.isUtc;
  };
  DateTime.prototype.get$isUtc.$reflectable = 1;
  function DateTime_parse_parseIntOrZero() {
  }
  DateTime_parse_parseIntOrZero.builtin$cls = "DateTime_parse_parseIntOrZero";
  if (!"name" in DateTime_parse_parseIntOrZero)
    DateTime_parse_parseIntOrZero.name = "DateTime_parse_parseIntOrZero";
  $desc = $collectedClasses.DateTime_parse_parseIntOrZero;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DateTime_parse_parseIntOrZero.prototype = $desc;
  function DateTime_parse_parseDoubleOrZero() {
  }
  DateTime_parse_parseDoubleOrZero.builtin$cls = "DateTime_parse_parseDoubleOrZero";
  if (!"name" in DateTime_parse_parseDoubleOrZero)
    DateTime_parse_parseDoubleOrZero.name = "DateTime_parse_parseDoubleOrZero";
  $desc = $collectedClasses.DateTime_parse_parseDoubleOrZero;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DateTime_parse_parseDoubleOrZero.prototype = $desc;
  function DateTime_toString_fourDigits() {
  }
  DateTime_toString_fourDigits.builtin$cls = "DateTime_toString_fourDigits";
  if (!"name" in DateTime_toString_fourDigits)
    DateTime_toString_fourDigits.name = "DateTime_toString_fourDigits";
  $desc = $collectedClasses.DateTime_toString_fourDigits;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DateTime_toString_fourDigits.prototype = $desc;
  function DateTime_toString_threeDigits() {
  }
  DateTime_toString_threeDigits.builtin$cls = "DateTime_toString_threeDigits";
  if (!"name" in DateTime_toString_threeDigits)
    DateTime_toString_threeDigits.name = "DateTime_toString_threeDigits";
  $desc = $collectedClasses.DateTime_toString_threeDigits;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DateTime_toString_threeDigits.prototype = $desc;
  function DateTime_toString_twoDigits() {
  }
  DateTime_toString_twoDigits.builtin$cls = "DateTime_toString_twoDigits";
  if (!"name" in DateTime_toString_twoDigits)
    DateTime_toString_twoDigits.name = "DateTime_toString_twoDigits";
  $desc = $collectedClasses.DateTime_toString_twoDigits;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DateTime_toString_twoDigits.prototype = $desc;
  function $double() {
  }
  $double.builtin$cls = "$double";
  if (!"name" in $double)
    $double.name = "$double";
  $desc = $collectedClasses.$double;
  if ($desc instanceof Array)
    $desc = $desc[1];
  $double.prototype = $desc;
  function Duration(_duration) {
    this._duration = _duration;
  }
  Duration.builtin$cls = "Duration";
  if (!"name" in Duration)
    Duration.name = "Duration";
  $desc = $collectedClasses.Duration;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Duration.prototype = $desc;
  Duration.prototype.get$_duration = function() {
    return this._duration;
  };
  Duration.prototype.get$_duration.$reflectable = 1;
  function Duration_toString_sixDigits() {
  }
  Duration_toString_sixDigits.builtin$cls = "Duration_toString_sixDigits";
  if (!"name" in Duration_toString_sixDigits)
    Duration_toString_sixDigits.name = "Duration_toString_sixDigits";
  $desc = $collectedClasses.Duration_toString_sixDigits;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Duration_toString_sixDigits.prototype = $desc;
  function Duration_toString_twoDigits() {
  }
  Duration_toString_twoDigits.builtin$cls = "Duration_toString_twoDigits";
  if (!"name" in Duration_toString_twoDigits)
    Duration_toString_twoDigits.name = "Duration_toString_twoDigits";
  $desc = $collectedClasses.Duration_toString_twoDigits;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Duration_toString_twoDigits.prototype = $desc;
  function Error() {
  }
  Error.builtin$cls = "Error";
  if (!"name" in Error)
    Error.name = "Error";
  $desc = $collectedClasses.Error;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Error.prototype = $desc;
  function AssertionError() {
  }
  AssertionError.builtin$cls = "AssertionError";
  if (!"name" in AssertionError)
    AssertionError.name = "AssertionError";
  $desc = $collectedClasses.AssertionError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AssertionError.prototype = $desc;
  function TypeError() {
  }
  TypeError.builtin$cls = "TypeError";
  if (!"name" in TypeError)
    TypeError.name = "TypeError";
  $desc = $collectedClasses.TypeError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TypeError.prototype = $desc;
  function CastError() {
  }
  CastError.builtin$cls = "CastError";
  if (!"name" in CastError)
    CastError.name = "CastError";
  $desc = $collectedClasses.CastError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CastError.prototype = $desc;
  function NullThrownError() {
  }
  NullThrownError.builtin$cls = "NullThrownError";
  if (!"name" in NullThrownError)
    NullThrownError.name = "NullThrownError";
  $desc = $collectedClasses.NullThrownError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NullThrownError.prototype = $desc;
  function ArgumentError(message) {
    this.message = message;
  }
  ArgumentError.builtin$cls = "ArgumentError";
  if (!"name" in ArgumentError)
    ArgumentError.name = "ArgumentError";
  $desc = $collectedClasses.ArgumentError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ArgumentError.prototype = $desc;
  ArgumentError.prototype.get$message = function() {
    return this.message;
  };
  ArgumentError.prototype.get$message.$reflectable = 1;
  function RangeError(message) {
    this.message = message;
  }
  RangeError.builtin$cls = "RangeError";
  if (!"name" in RangeError)
    RangeError.name = "RangeError";
  $desc = $collectedClasses.RangeError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RangeError.prototype = $desc;
  function FallThroughError() {
  }
  FallThroughError.builtin$cls = "FallThroughError";
  if (!"name" in FallThroughError)
    FallThroughError.name = "FallThroughError";
  $desc = $collectedClasses.FallThroughError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FallThroughError.prototype = $desc;
  function AbstractClassInstantiationError(_className) {
    this._className = _className;
  }
  AbstractClassInstantiationError.builtin$cls = "AbstractClassInstantiationError";
  if (!"name" in AbstractClassInstantiationError)
    AbstractClassInstantiationError.name = "AbstractClassInstantiationError";
  $desc = $collectedClasses.AbstractClassInstantiationError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AbstractClassInstantiationError.prototype = $desc;
  AbstractClassInstantiationError.prototype.get$_className = function() {
    return this._className;
  };
  AbstractClassInstantiationError.prototype.get$_className.$reflectable = 1;
  function NoSuchMethodError(_core$_receiver, _memberName, _core$_arguments, _namedArguments, _existingArgumentNames) {
    this._core$_receiver = _core$_receiver;
    this._memberName = _memberName;
    this._core$_arguments = _core$_arguments;
    this._namedArguments = _namedArguments;
    this._existingArgumentNames = _existingArgumentNames;
  }
  NoSuchMethodError.builtin$cls = "NoSuchMethodError";
  if (!"name" in NoSuchMethodError)
    NoSuchMethodError.name = "NoSuchMethodError";
  $desc = $collectedClasses.NoSuchMethodError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NoSuchMethodError.prototype = $desc;
  NoSuchMethodError.prototype.get$_core$_receiver = function() {
    return this._core$_receiver;
  };
  NoSuchMethodError.prototype.get$_core$_receiver.$reflectable = 1;
  NoSuchMethodError.prototype.get$_memberName = function() {
    return this._memberName;
  };
  NoSuchMethodError.prototype.get$_memberName.$reflectable = 1;
  NoSuchMethodError.prototype.get$_core$_arguments = function() {
    return this._core$_arguments;
  };
  NoSuchMethodError.prototype.get$_core$_arguments.$reflectable = 1;
  NoSuchMethodError.prototype.get$_namedArguments = function() {
    return this._namedArguments;
  };
  NoSuchMethodError.prototype.get$_namedArguments.$reflectable = 1;
  NoSuchMethodError.prototype.get$_existingArgumentNames = function() {
    return this._existingArgumentNames;
  };
  NoSuchMethodError.prototype.get$_existingArgumentNames.$reflectable = 1;
  function UnsupportedError(message) {
    this.message = message;
  }
  UnsupportedError.builtin$cls = "UnsupportedError";
  if (!"name" in UnsupportedError)
    UnsupportedError.name = "UnsupportedError";
  $desc = $collectedClasses.UnsupportedError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnsupportedError.prototype = $desc;
  UnsupportedError.prototype.get$message = function() {
    return this.message;
  };
  UnsupportedError.prototype.get$message.$reflectable = 1;
  function UnimplementedError(message) {
    this.message = message;
  }
  UnimplementedError.builtin$cls = "UnimplementedError";
  if (!"name" in UnimplementedError)
    UnimplementedError.name = "UnimplementedError";
  $desc = $collectedClasses.UnimplementedError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnimplementedError.prototype = $desc;
  UnimplementedError.prototype.get$message = function() {
    return this.message;
  };
  UnimplementedError.prototype.get$message.$reflectable = 1;
  function StateError(message) {
    this.message = message;
  }
  StateError.builtin$cls = "StateError";
  if (!"name" in StateError)
    StateError.name = "StateError";
  $desc = $collectedClasses.StateError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StateError.prototype = $desc;
  StateError.prototype.get$message = function() {
    return this.message;
  };
  StateError.prototype.get$message.$reflectable = 1;
  function ConcurrentModificationError(modifiedObject) {
    this.modifiedObject = modifiedObject;
  }
  ConcurrentModificationError.builtin$cls = "ConcurrentModificationError";
  if (!"name" in ConcurrentModificationError)
    ConcurrentModificationError.name = "ConcurrentModificationError";
  $desc = $collectedClasses.ConcurrentModificationError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ConcurrentModificationError.prototype = $desc;
  ConcurrentModificationError.prototype.get$modifiedObject = function() {
    return this.modifiedObject;
  };
  ConcurrentModificationError.prototype.get$modifiedObject.$reflectable = 1;
  function OutOfMemoryError() {
  }
  OutOfMemoryError.builtin$cls = "OutOfMemoryError";
  if (!"name" in OutOfMemoryError)
    OutOfMemoryError.name = "OutOfMemoryError";
  $desc = $collectedClasses.OutOfMemoryError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  OutOfMemoryError.prototype = $desc;
  function StackOverflowError() {
  }
  StackOverflowError.builtin$cls = "StackOverflowError";
  if (!"name" in StackOverflowError)
    StackOverflowError.name = "StackOverflowError";
  $desc = $collectedClasses.StackOverflowError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StackOverflowError.prototype = $desc;
  function CyclicInitializationError(variableName) {
    this.variableName = variableName;
  }
  CyclicInitializationError.builtin$cls = "CyclicInitializationError";
  if (!"name" in CyclicInitializationError)
    CyclicInitializationError.name = "CyclicInitializationError";
  $desc = $collectedClasses.CyclicInitializationError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CyclicInitializationError.prototype = $desc;
  CyclicInitializationError.prototype.get$variableName = function() {
    return this.variableName;
  };
  CyclicInitializationError.prototype.get$variableName.$reflectable = 1;
  function Exception() {
  }
  Exception.builtin$cls = "Exception";
  if (!"name" in Exception)
    Exception.name = "Exception";
  $desc = $collectedClasses.Exception;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Exception.prototype = $desc;
  function _ExceptionImplementation(message) {
    this.message = message;
  }
  _ExceptionImplementation.builtin$cls = "_ExceptionImplementation";
  if (!"name" in _ExceptionImplementation)
    _ExceptionImplementation.name = "_ExceptionImplementation";
  $desc = $collectedClasses._ExceptionImplementation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ExceptionImplementation.prototype = $desc;
  _ExceptionImplementation.prototype.get$message = function() {
    return this.message;
  };
  _ExceptionImplementation.prototype.get$message.$reflectable = 1;
  function FormatException(message) {
    this.message = message;
  }
  FormatException.builtin$cls = "FormatException";
  if (!"name" in FormatException)
    FormatException.name = "FormatException";
  $desc = $collectedClasses.FormatException;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FormatException.prototype = $desc;
  FormatException.prototype.get$message = function() {
    return this.message;
  };
  FormatException.prototype.get$message.$reflectable = 1;
  function IntegerDivisionByZeroException() {
  }
  IntegerDivisionByZeroException.builtin$cls = "IntegerDivisionByZeroException";
  if (!"name" in IntegerDivisionByZeroException)
    IntegerDivisionByZeroException.name = "IntegerDivisionByZeroException";
  $desc = $collectedClasses.IntegerDivisionByZeroException;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IntegerDivisionByZeroException.prototype = $desc;
  function Expando(name) {
    this.name = name;
  }
  Expando.builtin$cls = "Expando";
  if (!"name" in Expando)
    Expando.name = "Expando";
  $desc = $collectedClasses.Expando;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Expando.prototype = $desc;
  Expando.prototype.get$name = function() {
    return this.name;
  };
  Expando.prototype.get$name.$reflectable = 1;
  function Function() {
  }
  Function.builtin$cls = "Function";
  if (!"name" in Function)
    Function.name = "Function";
  $desc = $collectedClasses.Function;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Function.prototype = $desc;
  function $int() {
  }
  $int.builtin$cls = "$int";
  if (!"name" in $int)
    $int.name = "$int";
  $desc = $collectedClasses.$int;
  if ($desc instanceof Array)
    $desc = $desc[1];
  $int.prototype = $desc;
  function Invocation() {
  }
  Invocation.builtin$cls = "Invocation";
  if (!"name" in Invocation)
    Invocation.name = "Invocation";
  $desc = $collectedClasses.Invocation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Invocation.prototype = $desc;
  function Iterable() {
  }
  Iterable.builtin$cls = "Iterable";
  if (!"name" in Iterable)
    Iterable.name = "Iterable";
  $desc = $collectedClasses.Iterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Iterable.prototype = $desc;
  function _GeneratorIterable(_core$_count, _generator) {
    this._core$_count = _core$_count;
    this._generator = _generator;
  }
  _GeneratorIterable.builtin$cls = "_GeneratorIterable";
  if (!"name" in _GeneratorIterable)
    _GeneratorIterable.name = "_GeneratorIterable";
  $desc = $collectedClasses._GeneratorIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _GeneratorIterable.prototype = $desc;
  _GeneratorIterable.prototype.get$_core$_count = function() {
    return this._core$_count;
  };
  _GeneratorIterable.prototype.get$_core$_count.$reflectable = 1;
  _GeneratorIterable.prototype.get$_generator = function() {
    return this._generator;
  };
  _GeneratorIterable.prototype.get$_generator.$reflectable = 1;
  function _GeneratorIterator(_core$_count, _generator, _core$_index, _core$_current) {
    this._core$_count = _core$_count;
    this._generator = _generator;
    this._core$_index = _core$_index;
    this._core$_current = _core$_current;
  }
  _GeneratorIterator.builtin$cls = "_GeneratorIterator";
  if (!"name" in _GeneratorIterator)
    _GeneratorIterator.name = "_GeneratorIterator";
  $desc = $collectedClasses._GeneratorIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _GeneratorIterator.prototype = $desc;
  _GeneratorIterator.prototype.get$_core$_count = function() {
    return this._core$_count;
  };
  _GeneratorIterator.prototype.get$_core$_count.$reflectable = 1;
  _GeneratorIterator.prototype.get$_generator = function() {
    return this._generator;
  };
  _GeneratorIterator.prototype.get$_generator.$reflectable = 1;
  _GeneratorIterator.prototype.get$_core$_index = function() {
    return this._core$_index;
  };
  _GeneratorIterator.prototype.get$_core$_index.$reflectable = 1;
  _GeneratorIterator.prototype.set$_core$_index = function(v) {
    return this._core$_index = v;
  };
  _GeneratorIterator.prototype.set$_core$_index.$reflectable = 1;
  _GeneratorIterator.prototype.get$_core$_current = function() {
    return this._core$_current;
  };
  _GeneratorIterator.prototype.get$_core$_current.$reflectable = 1;
  _GeneratorIterator.prototype.set$_core$_current = function(v) {
    return this._core$_current = v;
  };
  _GeneratorIterator.prototype.set$_core$_current.$reflectable = 1;
  function BidirectionalIterator() {
  }
  BidirectionalIterator.builtin$cls = "BidirectionalIterator";
  if (!"name" in BidirectionalIterator)
    BidirectionalIterator.name = "BidirectionalIterator";
  $desc = $collectedClasses.BidirectionalIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  BidirectionalIterator.prototype = $desc;
  function Iterator() {
  }
  Iterator.builtin$cls = "Iterator";
  if (!"name" in Iterator)
    Iterator.name = "Iterator";
  $desc = $collectedClasses.Iterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Iterator.prototype = $desc;
  function List() {
  }
  List.builtin$cls = "List";
  if (!"name" in List)
    List.name = "List";
  $desc = $collectedClasses.List;
  if ($desc instanceof Array)
    $desc = $desc[1];
  List.prototype = $desc;
  function Map() {
  }
  Map.builtin$cls = "Map";
  if (!"name" in Map)
    Map.name = "Map";
  $desc = $collectedClasses.Map;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Map.prototype = $desc;
  function Null() {
  }
  Null.builtin$cls = "Null";
  if (!"name" in Null)
    Null.name = "Null";
  $desc = $collectedClasses.Null;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Null.prototype = $desc;
  function num() {
  }
  num.builtin$cls = "num";
  if (!"name" in num)
    num.name = "num";
  $desc = $collectedClasses.num;
  if ($desc instanceof Array)
    $desc = $desc[1];
  num.prototype = $desc;
  function Object() {
  }
  Object.builtin$cls = "Object";
  if (!"name" in Object)
    Object.name = "Object";
  $desc = $collectedClasses.Object;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Object.prototype = $desc;
  function Pattern() {
  }
  Pattern.builtin$cls = "Pattern";
  if (!"name" in Pattern)
    Pattern.name = "Pattern";
  $desc = $collectedClasses.Pattern;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Pattern.prototype = $desc;
  function Match() {
  }
  Match.builtin$cls = "Match";
  if (!"name" in Match)
    Match.name = "Match";
  $desc = $collectedClasses.Match;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Match.prototype = $desc;
  function RegExp() {
  }
  RegExp.builtin$cls = "RegExp";
  if (!"name" in RegExp)
    RegExp.name = "RegExp";
  $desc = $collectedClasses.RegExp;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RegExp.prototype = $desc;
  function Set() {
  }
  Set.builtin$cls = "Set";
  if (!"name" in Set)
    Set.name = "Set";
  $desc = $collectedClasses.Set;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Set.prototype = $desc;
  function StackTrace() {
  }
  StackTrace.builtin$cls = "StackTrace";
  if (!"name" in StackTrace)
    StackTrace.name = "StackTrace";
  $desc = $collectedClasses.StackTrace;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StackTrace.prototype = $desc;
  function Stopwatch(_start, _stop) {
    this._start = _start;
    this._stop = _stop;
  }
  Stopwatch.builtin$cls = "Stopwatch";
  if (!"name" in Stopwatch)
    Stopwatch.name = "Stopwatch";
  $desc = $collectedClasses.Stopwatch;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stopwatch.prototype = $desc;
  Stopwatch.prototype.get$_start = function() {
    return this._start;
  };
  Stopwatch.prototype.get$_start.$reflectable = 1;
  Stopwatch.prototype.set$_start = function(v) {
    return this._start = v;
  };
  Stopwatch.prototype.set$_start.$reflectable = 1;
  Stopwatch.prototype.get$_stop = function() {
    return this._stop;
  };
  Stopwatch.prototype.get$_stop.$reflectable = 1;
  Stopwatch.prototype.set$_stop = function(v) {
    return this._stop = v;
  };
  Stopwatch.prototype.set$_stop.$reflectable = 1;
  function String() {
  }
  String.builtin$cls = "String";
  if (!"name" in String)
    String.name = "String";
  $desc = $collectedClasses.String;
  if ($desc instanceof Array)
    $desc = $desc[1];
  String.prototype = $desc;
  function Runes(string) {
    this.string = string;
  }
  Runes.builtin$cls = "Runes";
  if (!"name" in Runes)
    Runes.name = "Runes";
  $desc = $collectedClasses.Runes;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Runes.prototype = $desc;
  Runes.prototype.get$string = function() {
    return this.string;
  };
  Runes.prototype.get$string.$reflectable = 1;
  function RuneIterator(string, _core$_position, _nextPosition, _currentCodePoint) {
    this.string = string;
    this._core$_position = _core$_position;
    this._nextPosition = _nextPosition;
    this._currentCodePoint = _currentCodePoint;
  }
  RuneIterator.builtin$cls = "RuneIterator";
  if (!"name" in RuneIterator)
    RuneIterator.name = "RuneIterator";
  $desc = $collectedClasses.RuneIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RuneIterator.prototype = $desc;
  RuneIterator.prototype.get$string = function() {
    return this.string;
  };
  RuneIterator.prototype.get$string.$reflectable = 1;
  RuneIterator.prototype.get$_core$_position = function() {
    return this._core$_position;
  };
  RuneIterator.prototype.get$_core$_position.$reflectable = 1;
  RuneIterator.prototype.set$_core$_position = function(v) {
    return this._core$_position = v;
  };
  RuneIterator.prototype.set$_core$_position.$reflectable = 1;
  RuneIterator.prototype.get$_nextPosition = function() {
    return this._nextPosition;
  };
  RuneIterator.prototype.get$_nextPosition.$reflectable = 1;
  RuneIterator.prototype.set$_nextPosition = function(v) {
    return this._nextPosition = v;
  };
  RuneIterator.prototype.set$_nextPosition.$reflectable = 1;
  RuneIterator.prototype.get$_currentCodePoint = function() {
    return this._currentCodePoint;
  };
  RuneIterator.prototype.get$_currentCodePoint.$reflectable = 1;
  RuneIterator.prototype.set$_currentCodePoint = function(v) {
    return this._currentCodePoint = v;
  };
  RuneIterator.prototype.set$_currentCodePoint.$reflectable = 1;
  function StringBuffer(_contents) {
    this._contents = _contents;
  }
  StringBuffer.builtin$cls = "StringBuffer";
  if (!"name" in StringBuffer)
    StringBuffer.name = "StringBuffer";
  $desc = $collectedClasses.StringBuffer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StringBuffer.prototype = $desc;
  StringBuffer.prototype.get$_contents = function() {
    return this._contents;
  };
  StringBuffer.prototype.get$_contents.$reflectable = 1;
  StringBuffer.prototype.set$_contents = function(v) {
    return this._contents = v;
  };
  StringBuffer.prototype.set$_contents.$reflectable = 1;
  function StringSink() {
  }
  StringSink.builtin$cls = "StringSink";
  if (!"name" in StringSink)
    StringSink.name = "StringSink";
  $desc = $collectedClasses.StringSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StringSink.prototype = $desc;
  function Symbol0() {
  }
  Symbol0.builtin$cls = "Symbol0";
  if (!"name" in Symbol0)
    Symbol0.name = "Symbol0";
  $desc = $collectedClasses.Symbol0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Symbol0.prototype = $desc;
  function Type() {
  }
  Type.builtin$cls = "Type";
  if (!"name" in Type)
    Type.name = "Type";
  $desc = $collectedClasses.Type;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Type.prototype = $desc;
  function Uri(_host, _port, _path, scheme, userInfo, query, fragment, _pathSegments, _queryParameters) {
    this._host = _host;
    this._port = _port;
    this._path = _path;
    this.scheme = scheme;
    this.userInfo = userInfo;
    this.query = query;
    this.fragment = fragment;
    this._pathSegments = _pathSegments;
    this._queryParameters = _queryParameters;
  }
  Uri.builtin$cls = "Uri";
  if (!"name" in Uri)
    Uri.name = "Uri";
  $desc = $collectedClasses.Uri;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri.prototype = $desc;
  Uri.prototype.get$_host = function() {
    return this._host;
  };
  Uri.prototype.get$_host.$reflectable = 1;
  Uri.prototype.get$_port = function() {
    return this._port;
  };
  Uri.prototype.get$_port.$reflectable = 1;
  Uri.prototype.set$_port = function(v) {
    return this._port = v;
  };
  Uri.prototype.set$_port.$reflectable = 1;
  Uri.prototype.get$_path = function() {
    return this._path;
  };
  Uri.prototype.get$_path.$reflectable = 1;
  Uri.prototype.set$_path = function(v) {
    return this._path = v;
  };
  Uri.prototype.set$_path.$reflectable = 1;
  Uri.prototype.get$scheme = function() {
    return this.scheme;
  };
  Uri.prototype.get$scheme.$reflectable = 1;
  Uri.prototype.get$userInfo = function() {
    return this.userInfo;
  };
  Uri.prototype.get$userInfo.$reflectable = 1;
  Uri.prototype.get$query = function() {
    return this.query;
  };
  Uri.prototype.get$query.$reflectable = 1;
  Uri.prototype.get$fragment = function() {
    return this.fragment;
  };
  Uri.prototype.get$fragment.$reflectable = 1;
  Uri.prototype.get$_pathSegments = function() {
    return this._pathSegments;
  };
  Uri.prototype.get$_pathSegments.$reflectable = 1;
  Uri.prototype.set$_pathSegments = function(v) {
    return this._pathSegments = v;
  };
  Uri.prototype.set$_pathSegments.$reflectable = 1;
  Uri.prototype.get$_queryParameters = function() {
    return this._queryParameters;
  };
  Uri.prototype.get$_queryParameters.$reflectable = 1;
  Uri.prototype.set$_queryParameters = function(v) {
    return this._queryParameters = v;
  };
  Uri.prototype.set$_queryParameters.$reflectable = 1;
  function Uri__checkNonWindowsPathReservedCharacters_closure(argumentError_0) {
    this.argumentError_0 = argumentError_0;
  }
  Uri__checkNonWindowsPathReservedCharacters_closure.builtin$cls = "Uri__checkNonWindowsPathReservedCharacters_closure";
  if (!"name" in Uri__checkNonWindowsPathReservedCharacters_closure)
    Uri__checkNonWindowsPathReservedCharacters_closure.name = "Uri__checkNonWindowsPathReservedCharacters_closure";
  $desc = $collectedClasses.Uri__checkNonWindowsPathReservedCharacters_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__checkNonWindowsPathReservedCharacters_closure.prototype = $desc;
  function Uri__checkWindowsPathReservedCharacters_closure(argumentError_0) {
    this.argumentError_0 = argumentError_0;
  }
  Uri__checkWindowsPathReservedCharacters_closure.builtin$cls = "Uri__checkWindowsPathReservedCharacters_closure";
  if (!"name" in Uri__checkWindowsPathReservedCharacters_closure)
    Uri__checkWindowsPathReservedCharacters_closure.name = "Uri__checkWindowsPathReservedCharacters_closure";
  $desc = $collectedClasses.Uri__checkWindowsPathReservedCharacters_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__checkWindowsPathReservedCharacters_closure.prototype = $desc;
  function Uri__makeScheme_isSchemeLowerCharacter() {
  }
  Uri__makeScheme_isSchemeLowerCharacter.builtin$cls = "Uri__makeScheme_isSchemeLowerCharacter";
  if (!"name" in Uri__makeScheme_isSchemeLowerCharacter)
    Uri__makeScheme_isSchemeLowerCharacter.name = "Uri__makeScheme_isSchemeLowerCharacter";
  $desc = $collectedClasses.Uri__makeScheme_isSchemeLowerCharacter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__makeScheme_isSchemeLowerCharacter.prototype = $desc;
  function Uri__makeScheme_isSchemeCharacter() {
  }
  Uri__makeScheme_isSchemeCharacter.builtin$cls = "Uri__makeScheme_isSchemeCharacter";
  if (!"name" in Uri__makeScheme_isSchemeCharacter)
    Uri__makeScheme_isSchemeCharacter.name = "Uri__makeScheme_isSchemeCharacter";
  $desc = $collectedClasses.Uri__makeScheme_isSchemeCharacter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__makeScheme_isSchemeCharacter.prototype = $desc;
  function Uri__makePath_closure() {
  }
  Uri__makePath_closure.builtin$cls = "Uri__makePath_closure";
  if (!"name" in Uri__makePath_closure)
    Uri__makePath_closure.name = "Uri__makePath_closure";
  $desc = $collectedClasses.Uri__makePath_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__makePath_closure.prototype = $desc;
  function Uri__makeQuery_closure(box_0, result_1) {
    this.box_0 = box_0;
    this.result_1 = result_1;
  }
  Uri__makeQuery_closure.builtin$cls = "Uri__makeQuery_closure";
  if (!"name" in Uri__makeQuery_closure)
    Uri__makeQuery_closure.name = "Uri__makeQuery_closure";
  $desc = $collectedClasses.Uri__makeQuery_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__makeQuery_closure.prototype = $desc;
  function Uri__normalize_isNormalizedHexDigit() {
  }
  Uri__normalize_isNormalizedHexDigit.builtin$cls = "Uri__normalize_isNormalizedHexDigit";
  if (!"name" in Uri__normalize_isNormalizedHexDigit)
    Uri__normalize_isNormalizedHexDigit.name = "Uri__normalize_isNormalizedHexDigit";
  $desc = $collectedClasses.Uri__normalize_isNormalizedHexDigit;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__normalize_isNormalizedHexDigit.prototype = $desc;
  function Uri__normalize_isLowerCaseHexDigit() {
  }
  Uri__normalize_isLowerCaseHexDigit.builtin$cls = "Uri__normalize_isLowerCaseHexDigit";
  if (!"name" in Uri__normalize_isLowerCaseHexDigit)
    Uri__normalize_isLowerCaseHexDigit.name = "Uri__normalize_isLowerCaseHexDigit";
  $desc = $collectedClasses.Uri__normalize_isLowerCaseHexDigit;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__normalize_isLowerCaseHexDigit.prototype = $desc;
  function Uri__normalize_isUnreserved() {
  }
  Uri__normalize_isUnreserved.builtin$cls = "Uri__normalize_isUnreserved";
  if (!"name" in Uri__normalize_isUnreserved)
    Uri__normalize_isUnreserved.name = "Uri__normalize_isUnreserved";
  $desc = $collectedClasses.Uri__normalize_isUnreserved;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__normalize_isUnreserved.prototype = $desc;
  function Uri__normalize_normalizeHexDigit(component_1, isNormalizedHexDigit_2, isLowerCaseHexDigit_3) {
    this.component_1 = component_1;
    this.isNormalizedHexDigit_2 = isNormalizedHexDigit_2;
    this.isLowerCaseHexDigit_3 = isLowerCaseHexDigit_3;
  }
  Uri__normalize_normalizeHexDigit.builtin$cls = "Uri__normalize_normalizeHexDigit";
  if (!"name" in Uri__normalize_normalizeHexDigit)
    Uri__normalize_normalizeHexDigit.name = "Uri__normalize_normalizeHexDigit";
  $desc = $collectedClasses.Uri__normalize_normalizeHexDigit;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__normalize_normalizeHexDigit.prototype = $desc;
  function Uri__normalize_decodeHexDigitPair(component_4) {
    this.component_4 = component_4;
  }
  Uri__normalize_decodeHexDigitPair.builtin$cls = "Uri__normalize_decodeHexDigitPair";
  if (!"name" in Uri__normalize_decodeHexDigitPair)
    Uri__normalize_decodeHexDigitPair.name = "Uri__normalize_decodeHexDigitPair";
  $desc = $collectedClasses.Uri__normalize_decodeHexDigitPair;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__normalize_decodeHexDigitPair.prototype = $desc;
  function Uri__normalize_fillResult(box_0, component_5) {
    this.box_0 = box_0;
    this.component_5 = component_5;
  }
  Uri__normalize_fillResult.builtin$cls = "Uri__normalize_fillResult";
  if (!"name" in Uri__normalize_fillResult)
    Uri__normalize_fillResult.name = "Uri__normalize_fillResult";
  $desc = $collectedClasses.Uri__normalize_fillResult;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__normalize_fillResult.prototype = $desc;
  function Uri_hashCode_combine() {
  }
  Uri_hashCode_combine.builtin$cls = "Uri_hashCode_combine";
  if (!"name" in Uri_hashCode_combine)
    Uri_hashCode_combine.name = "Uri_hashCode_combine";
  $desc = $collectedClasses.Uri_hashCode_combine;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri_hashCode_combine.prototype = $desc;
  function Uri_splitQueryString_closure(encoding_0) {
    this.encoding_0 = encoding_0;
  }
  Uri_splitQueryString_closure.builtin$cls = "Uri_splitQueryString_closure";
  if (!"name" in Uri_splitQueryString_closure)
    Uri_splitQueryString_closure.name = "Uri_splitQueryString_closure";
  $desc = $collectedClasses.Uri_splitQueryString_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri_splitQueryString_closure.prototype = $desc;
  function Uri_parseIPv4Address_error() {
  }
  Uri_parseIPv4Address_error.builtin$cls = "Uri_parseIPv4Address_error";
  if (!"name" in Uri_parseIPv4Address_error)
    Uri_parseIPv4Address_error.name = "Uri_parseIPv4Address_error";
  $desc = $collectedClasses.Uri_parseIPv4Address_error;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri_parseIPv4Address_error.prototype = $desc;
  function Uri_parseIPv4Address_closure(error_0) {
    this.error_0 = error_0;
  }
  Uri_parseIPv4Address_closure.builtin$cls = "Uri_parseIPv4Address_closure";
  if (!"name" in Uri_parseIPv4Address_closure)
    Uri_parseIPv4Address_closure.name = "Uri_parseIPv4Address_closure";
  $desc = $collectedClasses.Uri_parseIPv4Address_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri_parseIPv4Address_closure.prototype = $desc;
  function Uri_parseIPv6Address_error() {
  }
  Uri_parseIPv6Address_error.builtin$cls = "Uri_parseIPv6Address_error";
  if (!"name" in Uri_parseIPv6Address_error)
    Uri_parseIPv6Address_error.name = "Uri_parseIPv6Address_error";
  $desc = $collectedClasses.Uri_parseIPv6Address_error;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri_parseIPv6Address_error.prototype = $desc;
  function Uri_parseIPv6Address_parseHex(host_0, error_1) {
    this.host_0 = host_0;
    this.error_1 = error_1;
  }
  Uri_parseIPv6Address_parseHex.builtin$cls = "Uri_parseIPv6Address_parseHex";
  if (!"name" in Uri_parseIPv6Address_parseHex)
    Uri_parseIPv6Address_parseHex.name = "Uri_parseIPv6Address_parseHex";
  $desc = $collectedClasses.Uri_parseIPv6Address_parseHex;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri_parseIPv6Address_parseHex.prototype = $desc;
  function Uri_parseIPv6Address_closure(parts_2) {
    this.parts_2 = parts_2;
  }
  Uri_parseIPv6Address_closure.builtin$cls = "Uri_parseIPv6Address_closure";
  if (!"name" in Uri_parseIPv6Address_closure)
    Uri_parseIPv6Address_closure.name = "Uri_parseIPv6Address_closure";
  $desc = $collectedClasses.Uri_parseIPv6Address_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri_parseIPv6Address_closure.prototype = $desc;
  function Uri__uriEncode_byteToHex() {
  }
  Uri__uriEncode_byteToHex.builtin$cls = "Uri__uriEncode_byteToHex";
  if (!"name" in Uri__uriEncode_byteToHex)
    Uri__uriEncode_byteToHex.name = "Uri__uriEncode_byteToHex";
  $desc = $collectedClasses.Uri__uriEncode_byteToHex;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__uriEncode_byteToHex.prototype = $desc;
  function _UnmodifiableMap(_core$_map) {
    this._core$_map = _core$_map;
  }
  _UnmodifiableMap.builtin$cls = "_UnmodifiableMap";
  if (!"name" in _UnmodifiableMap)
    _UnmodifiableMap.name = "_UnmodifiableMap";
  $desc = $collectedClasses._UnmodifiableMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _UnmodifiableMap.prototype = $desc;
  _UnmodifiableMap.prototype.get$_core$_map = function() {
    return this._core$_map;
  };
  _UnmodifiableMap.prototype.get$_core$_map.$reflectable = 1;
  function Isolate_spawn_closure() {
  }
  Isolate_spawn_closure.builtin$cls = "Isolate_spawn_closure";
  if (!"name" in Isolate_spawn_closure)
    Isolate_spawn_closure.name = "Isolate_spawn_closure";
  $desc = $collectedClasses.Isolate_spawn_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Isolate_spawn_closure.prototype = $desc;
  function Isolate_spawnUri_closure() {
  }
  Isolate_spawnUri_closure.builtin$cls = "Isolate_spawnUri_closure";
  if (!"name" in Isolate_spawnUri_closure)
    Isolate_spawnUri_closure.name = "Isolate_spawnUri_closure";
  $desc = $collectedClasses.Isolate_spawnUri_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Isolate_spawnUri_closure.prototype = $desc;
  function IsolateSpawnException(_s) {
    this._s = _s;
  }
  IsolateSpawnException.builtin$cls = "IsolateSpawnException";
  if (!"name" in IsolateSpawnException)
    IsolateSpawnException.name = "IsolateSpawnException";
  $desc = $collectedClasses.IsolateSpawnException;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IsolateSpawnException.prototype = $desc;
  IsolateSpawnException.prototype.get$_s = function() {
    return this._s;
  };
  IsolateSpawnException.prototype.get$_s.$reflectable = 1;
  function Isolate(_controlPort) {
    this._controlPort = _controlPort;
  }
  Isolate.builtin$cls = "Isolate";
  if (!"name" in Isolate)
    Isolate.name = "Isolate";
  $desc = $collectedClasses.Isolate;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Isolate.prototype = $desc;
  Isolate.prototype.get$_controlPort = function() {
    return this._controlPort;
  };
  Isolate.prototype.get$_controlPort.$reflectable = 1;
  function SendPort() {
  }
  SendPort.builtin$cls = "SendPort";
  if (!"name" in SendPort)
    SendPort.name = "SendPort";
  $desc = $collectedClasses.SendPort;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SendPort.prototype = $desc;
  function ReceivePort() {
  }
  ReceivePort.builtin$cls = "ReceivePort";
  if (!"name" in ReceivePort)
    ReceivePort.name = "ReceivePort";
  $desc = $collectedClasses.ReceivePort;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ReceivePort.prototype = $desc;
  function RawReceivePort() {
  }
  RawReceivePort.builtin$cls = "RawReceivePort";
  if (!"name" in RawReceivePort)
    RawReceivePort.name = "RawReceivePort";
  $desc = $collectedClasses.RawReceivePort;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RawReceivePort.prototype = $desc;
  function _IsolateUnhandledException(message, source, stackTrace) {
    this.message = message;
    this.source = source;
    this.stackTrace = stackTrace;
  }
  _IsolateUnhandledException.builtin$cls = "_IsolateUnhandledException";
  if (!"name" in _IsolateUnhandledException)
    _IsolateUnhandledException.name = "_IsolateUnhandledException";
  $desc = $collectedClasses._IsolateUnhandledException;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _IsolateUnhandledException.prototype = $desc;
  _IsolateUnhandledException.prototype.get$message = function() {
    return this.message;
  };
  _IsolateUnhandledException.prototype.get$message.$reflectable = 1;
  _IsolateUnhandledException.prototype.get$source = function() {
    return this.source;
  };
  _IsolateUnhandledException.prototype.get$source.$reflectable = 1;
  _IsolateUnhandledException.prototype.get$stackTrace = function() {
    return this.stackTrace;
  };
  _IsolateUnhandledException.prototype.get$stackTrace.$reflectable = 1;
  function _JSRandom() {
  }
  _JSRandom.builtin$cls = "_JSRandom";
  if (!"name" in _JSRandom)
    _JSRandom.name = "_JSRandom";
  $desc = $collectedClasses._JSRandom;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _JSRandom.prototype = $desc;
  function _Random(_lo, _hi) {
    this._lo = _lo;
    this._hi = _hi;
  }
  _Random.builtin$cls = "_Random";
  if (!"name" in _Random)
    _Random.name = "_Random";
  $desc = $collectedClasses._Random;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Random.prototype = $desc;
  _Random.prototype.get$_lo = function() {
    return this._lo;
  };
  _Random.prototype.get$_lo.$reflectable = 1;
  _Random.prototype.set$_lo = function(v) {
    return this._lo = v;
  };
  _Random.prototype.set$_lo.$reflectable = 1;
  _Random.prototype.get$_hi = function() {
    return this._hi;
  };
  _Random.prototype.get$_hi.$reflectable = 1;
  _Random.prototype.set$_hi = function(v) {
    return this._hi = v;
  };
  _Random.prototype.set$_hi.$reflectable = 1;
  function _JenkinsSmiHash() {
  }
  _JenkinsSmiHash.builtin$cls = "_JenkinsSmiHash";
  if (!"name" in _JenkinsSmiHash)
    _JenkinsSmiHash.name = "_JenkinsSmiHash";
  $desc = $collectedClasses._JenkinsSmiHash;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _JenkinsSmiHash.prototype = $desc;
  function Point(x, y) {
    this.x = x;
    this.y = y;
  }
  Point.builtin$cls = "Point";
  if (!"name" in Point)
    Point.name = "Point";
  $desc = $collectedClasses.Point;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Point.prototype = $desc;
  Point.prototype.get$x = function() {
    return this.x;
  };
  Point.prototype.get$x.$reflectable = 1;
  Point.prototype.get$y = function() {
    return this.y;
  };
  Point.prototype.get$y.$reflectable = 1;
  function Random() {
  }
  Random.builtin$cls = "Random";
  if (!"name" in Random)
    Random.name = "Random";
  $desc = $collectedClasses.Random;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Random.prototype = $desc;
  function _RectangleBase() {
  }
  _RectangleBase.builtin$cls = "_RectangleBase";
  if (!"name" in _RectangleBase)
    _RectangleBase.name = "_RectangleBase";
  $desc = $collectedClasses._RectangleBase;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _RectangleBase.prototype = $desc;
  function Rectangle(left, top, width, height) {
    this.left = left;
    this.top = top;
    this.width = width;
    this.height = height;
  }
  Rectangle.builtin$cls = "Rectangle";
  if (!"name" in Rectangle)
    Rectangle.name = "Rectangle";
  $desc = $collectedClasses.Rectangle;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Rectangle.prototype = $desc;
  Rectangle.prototype.get$left = function() {
    return this.left;
  };
  Rectangle.prototype.get$left.$reflectable = 1;
  Rectangle.prototype.get$top = function() {
    return this.top;
  };
  Rectangle.prototype.get$top.$reflectable = 1;
  Rectangle.prototype.get$width = function() {
    return this.width;
  };
  Rectangle.prototype.get$width.$reflectable = 1;
  Rectangle.prototype.get$height = function() {
    return this.height;
  };
  Rectangle.prototype.get$height.$reflectable = 1;
  function MutableRectangle(left, top, width, height) {
    this.left = left;
    this.top = top;
    this.width = width;
    this.height = height;
  }
  MutableRectangle.builtin$cls = "MutableRectangle";
  if (!"name" in MutableRectangle)
    MutableRectangle.name = "MutableRectangle";
  $desc = $collectedClasses.MutableRectangle;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MutableRectangle.prototype = $desc;
  MutableRectangle.prototype.get$left = function() {
    return this.left;
  };
  MutableRectangle.prototype.get$left.$reflectable = 1;
  MutableRectangle.prototype.set$left = function(v) {
    return this.left = v;
  };
  MutableRectangle.prototype.set$left.$reflectable = 1;
  MutableRectangle.prototype.get$top = function() {
    return this.top;
  };
  MutableRectangle.prototype.get$top.$reflectable = 1;
  MutableRectangle.prototype.set$top = function(v) {
    return this.top = v;
  };
  MutableRectangle.prototype.set$top.$reflectable = 1;
  MutableRectangle.prototype.get$width = function() {
    return this.width;
  };
  MutableRectangle.prototype.get$width.$reflectable = 1;
  MutableRectangle.prototype.set$width = function(v) {
    return this.width = v;
  };
  MutableRectangle.prototype.set$width.$reflectable = 1;
  MutableRectangle.prototype.get$height = function() {
    return this.height;
  };
  MutableRectangle.prototype.get$height.$reflectable = 1;
  MutableRectangle.prototype.set$height = function(v) {
    return this.height = v;
  };
  MutableRectangle.prototype.set$height.$reflectable = 1;
  function MirrorSystem() {
  }
  MirrorSystem.builtin$cls = "MirrorSystem";
  if (!"name" in MirrorSystem)
    MirrorSystem.name = "MirrorSystem";
  $desc = $collectedClasses.MirrorSystem;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MirrorSystem.prototype = $desc;
  function MirrorSystem_findLibrary_closure(libraryName_0) {
    this.libraryName_0 = libraryName_0;
  }
  MirrorSystem_findLibrary_closure.builtin$cls = "MirrorSystem_findLibrary_closure";
  if (!"name" in MirrorSystem_findLibrary_closure)
    MirrorSystem_findLibrary_closure.name = "MirrorSystem_findLibrary_closure";
  $desc = $collectedClasses.MirrorSystem_findLibrary_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MirrorSystem_findLibrary_closure.prototype = $desc;
  function Mirror() {
  }
  Mirror.builtin$cls = "Mirror";
  if (!"name" in Mirror)
    Mirror.name = "Mirror";
  $desc = $collectedClasses.Mirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Mirror.prototype = $desc;
  function IsolateMirror() {
  }
  IsolateMirror.builtin$cls = "IsolateMirror";
  if (!"name" in IsolateMirror)
    IsolateMirror.name = "IsolateMirror";
  $desc = $collectedClasses.IsolateMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IsolateMirror.prototype = $desc;
  function DeclarationMirror() {
  }
  DeclarationMirror.builtin$cls = "DeclarationMirror";
  if (!"name" in DeclarationMirror)
    DeclarationMirror.name = "DeclarationMirror";
  $desc = $collectedClasses.DeclarationMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DeclarationMirror.prototype = $desc;
  function ObjectMirror() {
  }
  ObjectMirror.builtin$cls = "ObjectMirror";
  if (!"name" in ObjectMirror)
    ObjectMirror.name = "ObjectMirror";
  $desc = $collectedClasses.ObjectMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObjectMirror.prototype = $desc;
  function InstanceMirror() {
  }
  InstanceMirror.builtin$cls = "InstanceMirror";
  if (!"name" in InstanceMirror)
    InstanceMirror.name = "InstanceMirror";
  $desc = $collectedClasses.InstanceMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  InstanceMirror.prototype = $desc;
  function ClosureMirror() {
  }
  ClosureMirror.builtin$cls = "ClosureMirror";
  if (!"name" in ClosureMirror)
    ClosureMirror.name = "ClosureMirror";
  $desc = $collectedClasses.ClosureMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ClosureMirror.prototype = $desc;
  function LibraryMirror() {
  }
  LibraryMirror.builtin$cls = "LibraryMirror";
  if (!"name" in LibraryMirror)
    LibraryMirror.name = "LibraryMirror";
  $desc = $collectedClasses.LibraryMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LibraryMirror.prototype = $desc;
  function TypeMirror() {
  }
  TypeMirror.builtin$cls = "TypeMirror";
  if (!"name" in TypeMirror)
    TypeMirror.name = "TypeMirror";
  $desc = $collectedClasses.TypeMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TypeMirror.prototype = $desc;
  function ClassMirror() {
  }
  ClassMirror.builtin$cls = "ClassMirror";
  if (!"name" in ClassMirror)
    ClassMirror.name = "ClassMirror";
  $desc = $collectedClasses.ClassMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ClassMirror.prototype = $desc;
  function FunctionTypeMirror() {
  }
  FunctionTypeMirror.builtin$cls = "FunctionTypeMirror";
  if (!"name" in FunctionTypeMirror)
    FunctionTypeMirror.name = "FunctionTypeMirror";
  $desc = $collectedClasses.FunctionTypeMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FunctionTypeMirror.prototype = $desc;
  function TypeVariableMirror() {
  }
  TypeVariableMirror.builtin$cls = "TypeVariableMirror";
  if (!"name" in TypeVariableMirror)
    TypeVariableMirror.name = "TypeVariableMirror";
  $desc = $collectedClasses.TypeVariableMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TypeVariableMirror.prototype = $desc;
  function TypedefMirror() {
  }
  TypedefMirror.builtin$cls = "TypedefMirror";
  if (!"name" in TypedefMirror)
    TypedefMirror.name = "TypedefMirror";
  $desc = $collectedClasses.TypedefMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TypedefMirror.prototype = $desc;
  function MethodMirror() {
  }
  MethodMirror.builtin$cls = "MethodMirror";
  if (!"name" in MethodMirror)
    MethodMirror.name = "MethodMirror";
  $desc = $collectedClasses.MethodMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MethodMirror.prototype = $desc;
  function VariableMirror() {
  }
  VariableMirror.builtin$cls = "VariableMirror";
  if (!"name" in VariableMirror)
    VariableMirror.name = "VariableMirror";
  $desc = $collectedClasses.VariableMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  VariableMirror.prototype = $desc;
  function ParameterMirror() {
  }
  ParameterMirror.builtin$cls = "ParameterMirror";
  if (!"name" in ParameterMirror)
    ParameterMirror.name = "ParameterMirror";
  $desc = $collectedClasses.ParameterMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ParameterMirror.prototype = $desc;
  function SourceLocation() {
  }
  SourceLocation.builtin$cls = "SourceLocation";
  if (!"name" in SourceLocation)
    SourceLocation.name = "SourceLocation";
  $desc = $collectedClasses.SourceLocation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SourceLocation.prototype = $desc;
  function Comment(text, trimmedText, isDocComment) {
    this.text = text;
    this.trimmedText = trimmedText;
    this.isDocComment = isDocComment;
  }
  Comment.builtin$cls = "Comment";
  if (!"name" in Comment)
    Comment.name = "Comment";
  $desc = $collectedClasses.Comment;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Comment.prototype = $desc;
  Comment.prototype.get$text = function() {
    return this.text;
  };
  Comment.prototype.get$text.$reflectable = 1;
  Comment.prototype.get$trimmedText = function() {
    return this.trimmedText;
  };
  Comment.prototype.get$trimmedText.$reflectable = 1;
  Comment.prototype.get$isDocComment = function() {
    return this.isDocComment;
  };
  Comment.prototype.get$isDocComment.$reflectable = 1;
  function MirrorsUsed(symbols, targets, metaTargets, override) {
    this.symbols = symbols;
    this.targets = targets;
    this.metaTargets = metaTargets;
    this.override = override;
  }
  MirrorsUsed.builtin$cls = "MirrorsUsed";
  if (!"name" in MirrorsUsed)
    MirrorsUsed.name = "MirrorsUsed";
  $desc = $collectedClasses.MirrorsUsed;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MirrorsUsed.prototype = $desc;
  MirrorsUsed.prototype.get$symbols = function() {
    return this.symbols;
  };
  MirrorsUsed.prototype.get$symbols.$reflectable = 1;
  MirrorsUsed.prototype.get$targets = function() {
    return this.targets;
  };
  MirrorsUsed.prototype.get$targets.$reflectable = 1;
  MirrorsUsed.prototype.get$metaTargets = function() {
    return this.metaTargets;
  };
  MirrorsUsed.prototype.get$metaTargets.$reflectable = 1;
  MirrorsUsed.prototype.get$override = function() {
    return this.override;
  };
  MirrorsUsed.prototype.get$override.$reflectable = 1;
  function SerializerBase(dorm$SerializerMixin$_convertors) {
    this.dorm$SerializerMixin$_convertors = dorm$SerializerMixin$_convertors;
  }
  SerializerBase.builtin$cls = "SerializerBase";
  if (!"name" in SerializerBase)
    SerializerBase.name = "SerializerBase";
  $desc = $collectedClasses.SerializerBase;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SerializerBase.prototype = $desc;
  SerializerMixin.prototype.get$_convertors = function() {
    return this.dorm$SerializerMixin$_convertors;
  };
  SerializerMixin.prototype.get$_convertors.$reflectable = 1;
  SerializerMixin.prototype.set$_convertors = function(v) {
    return this.dorm$SerializerMixin$_convertors = v;
  };
  SerializerMixin.prototype.set$_convertors.$reflectable = 1;
  function ConflictManager(type) {
    this.type = type;
  }
  ConflictManager.builtin$cls = "ConflictManager";
  if (!"name" in ConflictManager)
    ConflictManager.name = "ConflictManager";
  $desc = $collectedClasses.ConflictManager;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ConflictManager.prototype = $desc;
  ConflictManager.prototype.get$type = function() {
    return this.type;
  };
  ConflictManager.prototype.get$type.$reflectable = 1;
  function DormError(message) {
    this.message = message;
  }
  DormError.builtin$cls = "DormError";
  if (!"name" in DormError)
    DormError.name = "DormError";
  $desc = $collectedClasses.DormError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DormError.prototype = $desc;
  DormError.prototype.get$message = function() {
    return this.message;
  };
  DormError.prototype.get$message.$reflectable = 1;
  function DormManager(_observeList, _dorm$_queue, _deleteQueue, _forcedDirtyStatus, id, _isCommitRequired, _changes, _mirror, _values, _records) {
    this._observeList = _observeList;
    this._dorm$_queue = _dorm$_queue;
    this._deleteQueue = _deleteQueue;
    this._forcedDirtyStatus = _forcedDirtyStatus;
    this.id = id;
    this._isCommitRequired = _isCommitRequired;
    this._changes = _changes;
    this._mirror = _mirror;
    this._values = _values;
    this._records = _records;
  }
  DormManager.builtin$cls = "DormManager";
  if (!"name" in DormManager)
    DormManager.name = "DormManager";
  $desc = $collectedClasses.DormManager;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DormManager.prototype = $desc;
  DormManager.prototype.get$_observeList = function() {
    return this._observeList;
  };
  DormManager.prototype.get$_observeList.$reflectable = 1;
  DormManager.prototype.set$_observeList = function(v) {
    return this._observeList = v;
  };
  DormManager.prototype.set$_observeList.$reflectable = 1;
  DormManager.prototype.get$_dorm$_queue = function() {
    return this._dorm$_queue;
  };
  DormManager.prototype.get$_dorm$_queue.$reflectable = 1;
  DormManager.prototype.set$_dorm$_queue = function(v) {
    return this._dorm$_queue = v;
  };
  DormManager.prototype.set$_dorm$_queue.$reflectable = 1;
  DormManager.prototype.get$_deleteQueue = function() {
    return this._deleteQueue;
  };
  DormManager.prototype.get$_deleteQueue.$reflectable = 1;
  DormManager.prototype.set$_deleteQueue = function(v) {
    return this._deleteQueue = v;
  };
  DormManager.prototype.set$_deleteQueue.$reflectable = 1;
  DormManager.prototype.get$_forcedDirtyStatus = function() {
    return this._forcedDirtyStatus;
  };
  DormManager.prototype.get$_forcedDirtyStatus.$reflectable = 1;
  DormManager.prototype.set$_forcedDirtyStatus = function(v) {
    return this._forcedDirtyStatus = v;
  };
  DormManager.prototype.set$_forcedDirtyStatus.$reflectable = 1;
  DormManager.prototype.get$id = function() {
    return this.id;
  };
  DormManager.prototype.get$id.$reflectable = 1;
  DormManager.prototype.set$id = function(v) {
    return this.id = v;
  };
  DormManager.prototype.set$id.$reflectable = 1;
  DormManager.prototype.get$_isCommitRequired = function() {
    return this._isCommitRequired;
  };
  DormManager.prototype.get$_isCommitRequired.$reflectable = 1;
  DormManager.prototype.set$_isCommitRequired = function(v) {
    return this._isCommitRequired = v;
  };
  DormManager.prototype.set$_isCommitRequired.$reflectable = 1;
  function DormManager_queueAll_closure(this_0, asDeleted_1) {
    this.this_0 = this_0;
    this.asDeleted_1 = asDeleted_1;
  }
  DormManager_queueAll_closure.builtin$cls = "DormManager_queueAll_closure";
  if (!"name" in DormManager_queueAll_closure)
    DormManager_queueAll_closure.name = "DormManager_queueAll_closure";
  $desc = $collectedClasses.DormManager_queueAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DormManager_queueAll_closure.prototype = $desc;
  function DormManager_unqueueAll_closure(this_0) {
    this.this_0 = this_0;
  }
  DormManager_unqueueAll_closure.builtin$cls = "DormManager_unqueueAll_closure";
  if (!"name" in DormManager_unqueueAll_closure)
    DormManager_unqueueAll_closure.name = "DormManager_unqueueAll_closure";
  $desc = $collectedClasses.DormManager_unqueueAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DormManager_unqueueAll_closure.prototype = $desc;
  function DormManager_drain_closure(this_0, queueRecursive_1) {
    this.this_0 = this_0;
    this.queueRecursive_1 = queueRecursive_1;
  }
  DormManager_drain_closure.builtin$cls = "DormManager_drain_closure";
  if (!"name" in DormManager_drain_closure)
    DormManager_drain_closure.name = "DormManager_drain_closure";
  $desc = $collectedClasses.DormManager_drain_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DormManager_drain_closure.prototype = $desc;
  function DormManager_drain_closure0(this_2, deleteQueueRecursive_3) {
    this.this_2 = this_2;
    this.deleteQueueRecursive_3 = deleteQueueRecursive_3;
  }
  DormManager_drain_closure0.builtin$cls = "DormManager_drain_closure0";
  if (!"name" in DormManager_drain_closure0)
    DormManager_drain_closure0.name = "DormManager_drain_closure0";
  $desc = $collectedClasses.DormManager_drain_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DormManager_drain_closure0.prototype = $desc;
  function DormManager_drain_closure1() {
  }
  DormManager_drain_closure1.builtin$cls = "DormManager_drain_closure1";
  if (!"name" in DormManager_drain_closure1)
    DormManager_drain_closure1.name = "DormManager_drain_closure1";
  $desc = $collectedClasses.DormManager_drain_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DormManager_drain_closure1.prototype = $desc;
  function DormManager_drain_closure2() {
  }
  DormManager_drain_closure2.builtin$cls = "DormManager_drain_closure2";
  if (!"name" in DormManager_drain_closure2)
    DormManager_drain_closure2.name = "DormManager_drain_closure2";
  $desc = $collectedClasses.DormManager_drain_closure2;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DormManager_drain_closure2.prototype = $desc;
  function DormManager__scanRecursively_closure(this_0, list_1) {
    this.this_0 = this_0;
    this.list_1 = list_1;
  }
  DormManager__scanRecursively_closure.builtin$cls = "DormManager__scanRecursively_closure";
  if (!"name" in DormManager__scanRecursively_closure)
    DormManager__scanRecursively_closure.name = "DormManager__scanRecursively_closure";
  $desc = $collectedClasses.DormManager__scanRecursively_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DormManager__scanRecursively_closure.prototype = $desc;
  function DormManager__scanRecursively__closure(this_2, list_3) {
    this.this_2 = this_2;
    this.list_3 = list_3;
  }
  DormManager__scanRecursively__closure.builtin$cls = "DormManager__scanRecursively__closure";
  if (!"name" in DormManager__scanRecursively__closure)
    DormManager__scanRecursively__closure.name = "DormManager__scanRecursively__closure";
  $desc = $collectedClasses.DormManager__scanRecursively__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DormManager__scanRecursively__closure.prototype = $desc;
  function DormManagerCommitStructure(manager, dataToCommit, dataToDelete, rollbackCommit, rollbackDelete) {
    this.manager = manager;
    this.dataToCommit = dataToCommit;
    this.dataToDelete = dataToDelete;
    this.rollbackCommit = rollbackCommit;
    this.rollbackDelete = rollbackDelete;
  }
  DormManagerCommitStructure.builtin$cls = "DormManagerCommitStructure";
  if (!"name" in DormManagerCommitStructure)
    DormManagerCommitStructure.name = "DormManagerCommitStructure";
  $desc = $collectedClasses.DormManagerCommitStructure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DormManagerCommitStructure.prototype = $desc;
  DormManagerCommitStructure.prototype.get$manager = function() {
    return this.manager;
  };
  DormManagerCommitStructure.prototype.get$manager.$reflectable = 1;
  DormManagerCommitStructure.prototype.get$dataToCommit = function() {
    return this.dataToCommit;
  };
  DormManagerCommitStructure.prototype.get$dataToCommit.$reflectable = 1;
  DormManagerCommitStructure.prototype.get$dataToDelete = function() {
    return this.dataToDelete;
  };
  DormManagerCommitStructure.prototype.get$dataToDelete.$reflectable = 1;
  DormManagerCommitStructure.prototype.get$rollbackCommit = function() {
    return this.rollbackCommit;
  };
  DormManagerCommitStructure.prototype.get$rollbackCommit.$reflectable = 1;
  DormManagerCommitStructure.prototype.get$rollbackDelete = function() {
    return this.rollbackDelete;
  };
  DormManagerCommitStructure.prototype.get$rollbackDelete.$reflectable = 1;
  function DormProxy(_insertValue, _defaultValue, _dorm$_value, _lazyFuture, _property, _propertySymbol, owner, hasDelta, isId, isTransient, isMutable, isNullable, isLabelField, isLazy, dataType) {
    this._insertValue = _insertValue;
    this._defaultValue = _defaultValue;
    this._dorm$_value = _dorm$_value;
    this._lazyFuture = _lazyFuture;
    this._property = _property;
    this._propertySymbol = _propertySymbol;
    this.owner = owner;
    this.hasDelta = hasDelta;
    this.isId = isId;
    this.isTransient = isTransient;
    this.isMutable = isMutable;
    this.isNullable = isNullable;
    this.isLabelField = isLabelField;
    this.isLazy = isLazy;
    this.dataType = dataType;
  }
  DormProxy.builtin$cls = "DormProxy";
  if (!"name" in DormProxy)
    DormProxy.name = "DormProxy";
  $desc = $collectedClasses.DormProxy;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DormProxy.prototype = $desc;
  DormProxy.prototype.get$_insertValue = function() {
    return this._insertValue;
  };
  DormProxy.prototype.get$_insertValue.$reflectable = 1;
  DormProxy.prototype.set$_insertValue = function(v) {
    return this._insertValue = v;
  };
  DormProxy.prototype.set$_insertValue.$reflectable = 1;
  DormProxy.prototype.get$_defaultValue = function() {
    return this._defaultValue;
  };
  DormProxy.prototype.get$_defaultValue.$reflectable = 1;
  DormProxy.prototype.set$_defaultValue = function(v) {
    return this._defaultValue = v;
  };
  DormProxy.prototype.set$_defaultValue.$reflectable = 1;
  DormProxy.prototype.get$_dorm$_value = function() {
    return this._dorm$_value;
  };
  DormProxy.prototype.get$_dorm$_value.$reflectable = 1;
  DormProxy.prototype.set$_dorm$_value = function(v) {
    return this._dorm$_value = v;
  };
  DormProxy.prototype.set$_dorm$_value.$reflectable = 1;
  DormProxy.prototype.get$_lazyFuture = function() {
    return this._lazyFuture;
  };
  DormProxy.prototype.get$_lazyFuture.$reflectable = 1;
  DormProxy.prototype.set$_lazyFuture = function(v) {
    return this._lazyFuture = v;
  };
  DormProxy.prototype.set$_lazyFuture.$reflectable = 1;
  DormProxy.prototype.get$_property = function() {
    return this._property;
  };
  DormProxy.prototype.get$_property.$reflectable = 1;
  DormProxy.prototype.get$_propertySymbol = function() {
    return this._propertySymbol;
  };
  DormProxy.prototype.get$_propertySymbol.$reflectable = 1;
  DormProxy.prototype.get$owner = function() {
    return this.owner;
  };
  DormProxy.prototype.get$owner.$reflectable = 1;
  DormProxy.prototype.set$owner = function(v) {
    return this.owner = v;
  };
  DormProxy.prototype.set$owner.$reflectable = 1;
  DormProxy.prototype.get$hasDelta = function() {
    return this.hasDelta;
  };
  DormProxy.prototype.get$hasDelta.$reflectable = 1;
  DormProxy.prototype.set$hasDelta = function(v) {
    return this.hasDelta = v;
  };
  DormProxy.prototype.set$hasDelta.$reflectable = 1;
  DormProxy.prototype.get$isId = function() {
    return this.isId;
  };
  DormProxy.prototype.get$isId.$reflectable = 1;
  DormProxy.prototype.set$isId = function(v) {
    return this.isId = v;
  };
  DormProxy.prototype.set$isId.$reflectable = 1;
  DormProxy.prototype.get$isTransient = function() {
    return this.isTransient;
  };
  DormProxy.prototype.get$isTransient.$reflectable = 1;
  DormProxy.prototype.set$isTransient = function(v) {
    return this.isTransient = v;
  };
  DormProxy.prototype.set$isTransient.$reflectable = 1;
  DormProxy.prototype.get$isMutable = function() {
    return this.isMutable;
  };
  DormProxy.prototype.get$isMutable.$reflectable = 1;
  DormProxy.prototype.set$isMutable = function(v) {
    return this.isMutable = v;
  };
  DormProxy.prototype.set$isMutable.$reflectable = 1;
  DormProxy.prototype.get$isNullable = function() {
    return this.isNullable;
  };
  DormProxy.prototype.get$isNullable.$reflectable = 1;
  DormProxy.prototype.set$isNullable = function(v) {
    return this.isNullable = v;
  };
  DormProxy.prototype.set$isNullable.$reflectable = 1;
  DormProxy.prototype.get$isLabelField = function() {
    return this.isLabelField;
  };
  DormProxy.prototype.get$isLabelField.$reflectable = 1;
  DormProxy.prototype.set$isLabelField = function(v) {
    return this.isLabelField = v;
  };
  DormProxy.prototype.set$isLabelField.$reflectable = 1;
  DormProxy.prototype.get$isLazy = function() {
    return this.isLazy;
  };
  DormProxy.prototype.get$isLazy.$reflectable = 1;
  DormProxy.prototype.set$isLazy = function(v) {
    return this.isLazy = v;
  };
  DormProxy.prototype.set$isLazy.$reflectable = 1;
  DormProxy.prototype.get$dataType = function() {
    return this.dataType;
  };
  DormProxy.prototype.get$dataType.$reflectable = 1;
  DormProxy.prototype.set$dataType = function(v) {
    return this.dataType = v;
  };
  DormProxy.prototype.set$dataType.$reflectable = 1;
  function EntityAssembler(_entityScans, _collections, _pendingProxies, _keyChain) {
    this._entityScans = _entityScans;
    this._collections = _collections;
    this._pendingProxies = _pendingProxies;
    this._keyChain = _keyChain;
  }
  EntityAssembler.builtin$cls = "EntityAssembler";
  if (!"name" in EntityAssembler)
    EntityAssembler.name = "EntityAssembler";
  $desc = $collectedClasses.EntityAssembler;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityAssembler.prototype = $desc;
  EntityAssembler.prototype.get$_entityScans = function() {
    return this._entityScans;
  };
  EntityAssembler.prototype.get$_entityScans.$reflectable = 1;
  EntityAssembler.prototype.get$_collections = function() {
    return this._collections;
  };
  EntityAssembler.prototype.get$_collections.$reflectable = 1;
  EntityAssembler.prototype.get$_pendingProxies = function() {
    return this._pendingProxies;
  };
  EntityAssembler.prototype.get$_pendingProxies.$reflectable = 1;
  EntityAssembler.prototype.get$_keyChain = function() {
    return this._keyChain;
  };
  EntityAssembler.prototype.get$_keyChain.$reflectable = 1;
  function EntityAssembler_scan_closure(box_0) {
    this.box_0 = box_0;
  }
  EntityAssembler_scan_closure.builtin$cls = "EntityAssembler_scan_closure";
  if (!"name" in EntityAssembler_scan_closure)
    EntityAssembler_scan_closure.name = "EntityAssembler_scan_closure";
  $desc = $collectedClasses.EntityAssembler_scan_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityAssembler_scan_closure.prototype = $desc;
  function EntityAssembler_registerProxies_closure(box_0) {
    this.box_0 = box_0;
  }
  EntityAssembler_registerProxies_closure.builtin$cls = "EntityAssembler_registerProxies_closure";
  if (!"name" in EntityAssembler_registerProxies_closure)
    EntityAssembler_registerProxies_closure.name = "EntityAssembler_registerProxies_closure";
  $desc = $collectedClasses.EntityAssembler_registerProxies_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityAssembler_registerProxies_closure.prototype = $desc;
  function EntityAssembler_registerProxies_closure0() {
  }
  EntityAssembler_registerProxies_closure0.builtin$cls = "EntityAssembler_registerProxies_closure0";
  if (!"name" in EntityAssembler_registerProxies_closure0)
    EntityAssembler_registerProxies_closure0.name = "EntityAssembler_registerProxies_closure0";
  $desc = $collectedClasses.EntityAssembler_registerProxies_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityAssembler_registerProxies_closure0.prototype = $desc;
  function EntityAssembler__assemble_closure(this_0) {
    this.this_0 = this_0;
  }
  EntityAssembler__assemble_closure.builtin$cls = "EntityAssembler__assemble_closure";
  if (!"name" in EntityAssembler__assemble_closure)
    EntityAssembler__assemble_closure.name = "EntityAssembler__assemble_closure";
  $desc = $collectedClasses.EntityAssembler__assemble_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityAssembler__assemble_closure.prototype = $desc;
  function EntityAssembler__solveConflictsIfAny_closure(spawnee_0, existingEntity_1) {
    this.spawnee_0 = spawnee_0;
    this.existingEntity_1 = existingEntity_1;
  }
  EntityAssembler__solveConflictsIfAny_closure.builtin$cls = "EntityAssembler__solveConflictsIfAny_closure";
  if (!"name" in EntityAssembler__solveConflictsIfAny_closure)
    EntityAssembler__solveConflictsIfAny_closure.name = "EntityAssembler__solveConflictsIfAny_closure";
  $desc = $collectedClasses.EntityAssembler__solveConflictsIfAny_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityAssembler__solveConflictsIfAny_closure.prototype = $desc;
  function EntityAssembler__solveConflictsIfAny__closure(entryA_2) {
    this.entryA_2 = entryA_2;
  }
  EntityAssembler__solveConflictsIfAny__closure.builtin$cls = "EntityAssembler__solveConflictsIfAny__closure";
  if (!"name" in EntityAssembler__solveConflictsIfAny__closure)
    EntityAssembler__solveConflictsIfAny__closure.name = "EntityAssembler__solveConflictsIfAny__closure";
  $desc = $collectedClasses.EntityAssembler__solveConflictsIfAny__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityAssembler__solveConflictsIfAny__closure.prototype = $desc;
  function EntityAssembler__solveConflictsIfAny__closure0() {
  }
  EntityAssembler__solveConflictsIfAny__closure0.builtin$cls = "EntityAssembler__solveConflictsIfAny__closure0";
  if (!"name" in EntityAssembler__solveConflictsIfAny__closure0)
    EntityAssembler__solveConflictsIfAny__closure0.name = "EntityAssembler__solveConflictsIfAny__closure0";
  $desc = $collectedClasses.EntityAssembler__solveConflictsIfAny__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityAssembler__solveConflictsIfAny__closure0.prototype = $desc;
  function EntityAssembler__updateCollectionsWith_closure(box_0, this_1, actualEntity_2) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.actualEntity_2 = actualEntity_2;
  }
  EntityAssembler__updateCollectionsWith_closure.builtin$cls = "EntityAssembler__updateCollectionsWith_closure";
  if (!"name" in EntityAssembler__updateCollectionsWith_closure)
    EntityAssembler__updateCollectionsWith_closure.name = "EntityAssembler__updateCollectionsWith_closure";
  $desc = $collectedClasses.EntityAssembler__updateCollectionsWith_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityAssembler__updateCollectionsWith_closure.prototype = $desc;
  function EntityAssembler__existingFromScanRegistry_closure(refClassName_0) {
    this.refClassName_0 = refClassName_0;
  }
  EntityAssembler__existingFromScanRegistry_closure.builtin$cls = "EntityAssembler__existingFromScanRegistry_closure";
  if (!"name" in EntityAssembler__existingFromScanRegistry_closure)
    EntityAssembler__existingFromScanRegistry_closure.name = "EntityAssembler__existingFromScanRegistry_closure";
  $desc = $collectedClasses.EntityAssembler__existingFromScanRegistry_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityAssembler__existingFromScanRegistry_closure.prototype = $desc;
  function EntityAssembler__existingFromScanRegistry_closure0() {
  }
  EntityAssembler__existingFromScanRegistry_closure0.builtin$cls = "EntityAssembler__existingFromScanRegistry_closure0";
  if (!"name" in EntityAssembler__existingFromScanRegistry_closure0)
    EntityAssembler__existingFromScanRegistry_closure0.name = "EntityAssembler__existingFromScanRegistry_closure0";
  $desc = $collectedClasses.EntityAssembler__existingFromScanRegistry_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityAssembler__existingFromScanRegistry_closure0.prototype = $desc;
  function EntityFactory(_assembler, _postProcessors) {
    this._assembler = _assembler;
    this._postProcessors = _postProcessors;
  }
  EntityFactory.builtin$cls = "EntityFactory";
  if (!"name" in EntityFactory)
    EntityFactory.name = "EntityFactory";
  $desc = $collectedClasses.EntityFactory;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityFactory.prototype = $desc;
  EntityFactory.prototype.get$_assembler = function() {
    return this._assembler;
  };
  EntityFactory.prototype.get$_assembler.$reflectable = 1;
  EntityFactory.prototype.get$_postProcessors = function() {
    return this._postProcessors;
  };
  EntityFactory.prototype.get$_postProcessors.$reflectable = 1;
  function EntityFactory_removePostProcessor_closure(postProcessor_0) {
    this.postProcessor_0 = postProcessor_0;
  }
  EntityFactory_removePostProcessor_closure.builtin$cls = "EntityFactory_removePostProcessor_closure";
  if (!"name" in EntityFactory_removePostProcessor_closure)
    EntityFactory_removePostProcessor_closure.name = "EntityFactory_removePostProcessor_closure";
  $desc = $collectedClasses.EntityFactory_removePostProcessor_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityFactory_removePostProcessor_closure.prototype = $desc;
  function EntityFactory_spawn_closure(this_0, serializer_1, onConflict_2, proxy_3, results_4) {
    this.this_0 = this_0;
    this.serializer_1 = serializer_1;
    this.onConflict_2 = onConflict_2;
    this.proxy_3 = proxy_3;
    this.results_4 = results_4;
  }
  EntityFactory_spawn_closure.builtin$cls = "EntityFactory_spawn_closure";
  if (!"name" in EntityFactory_spawn_closure)
    EntityFactory_spawn_closure.name = "EntityFactory_spawn_closure";
  $desc = $collectedClasses.EntityFactory_spawn_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityFactory_spawn_closure.prototype = $desc;
  function EntityFactory_spawn__closure(entity_5) {
    this.entity_5 = entity_5;
  }
  EntityFactory_spawn__closure.builtin$cls = "EntityFactory_spawn__closure";
  if (!"name" in EntityFactory_spawn__closure)
    EntityFactory_spawn__closure.name = "EntityFactory_spawn__closure";
  $desc = $collectedClasses.EntityFactory_spawn__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityFactory_spawn__closure.prototype = $desc;
  function EntityFactory_spawnSingle_closure(entity_0) {
    this.entity_0 = entity_0;
  }
  EntityFactory_spawnSingle_closure.builtin$cls = "EntityFactory_spawnSingle_closure";
  if (!"name" in EntityFactory_spawnSingle_closure)
    EntityFactory_spawnSingle_closure.name = "EntityFactory_spawnSingle_closure";
  $desc = $collectedClasses.EntityFactory_spawnSingle_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityFactory_spawnSingle_closure.prototype = $desc;
  function EntityPostProcessor(handler) {
    this.handler = handler;
  }
  EntityPostProcessor.builtin$cls = "EntityPostProcessor";
  if (!"name" in EntityPostProcessor)
    EntityPostProcessor.name = "EntityPostProcessor";
  $desc = $collectedClasses.EntityPostProcessor;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityPostProcessor.prototype = $desc;
  EntityPostProcessor.prototype.get$handler = function() {
    return this.handler;
  };
  EntityPostProcessor.prototype.get$handler.$reflectable = 1;
  function EntityKey(_map, entityScans) {
    this._map = _map;
    this.entityScans = entityScans;
  }
  EntityKey.builtin$cls = "EntityKey";
  if (!"name" in EntityKey)
    EntityKey.name = "EntityKey";
  $desc = $collectedClasses.EntityKey;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityKey.prototype = $desc;
  EntityKey.prototype.get$_map = function() {
    return this._map;
  };
  EntityKey.prototype.get$_map.$reflectable = 1;
  EntityKey.prototype.get$entityScans = function() {
    return this.entityScans;
  };
  EntityKey.prototype.get$entityScans.$reflectable = 1;
  function EntityKey_getFirstSibling_closure(forEntity_0, allowPointers_1) {
    this.forEntity_0 = forEntity_0;
    this.allowPointers_1 = allowPointers_1;
  }
  EntityKey_getFirstSibling_closure.builtin$cls = "EntityKey_getFirstSibling_closure";
  if (!"name" in EntityKey_getFirstSibling_closure)
    EntityKey_getFirstSibling_closure.name = "EntityKey_getFirstSibling_closure";
  $desc = $collectedClasses.EntityKey_getFirstSibling_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityKey_getFirstSibling_closure.prototype = $desc;
  function EntityKey_getFirstSibling_closure0() {
  }
  EntityKey_getFirstSibling_closure0.builtin$cls = "EntityKey_getFirstSibling_closure0";
  if (!"name" in EntityKey_getFirstSibling_closure0)
    EntityKey_getFirstSibling_closure0.name = "EntityKey_getFirstSibling_closure0";
  $desc = $collectedClasses.EntityKey_getFirstSibling_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityKey_getFirstSibling_closure0.prototype = $desc;
  function EntityKey_getSiblings_closure(forEntity_0) {
    this.forEntity_0 = forEntity_0;
  }
  EntityKey_getSiblings_closure.builtin$cls = "EntityKey_getSiblings_closure";
  if (!"name" in EntityKey_getSiblings_closure)
    EntityKey_getSiblings_closure.name = "EntityKey_getSiblings_closure";
  $desc = $collectedClasses.EntityKey_getSiblings_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityKey_getSiblings_closure.prototype = $desc;
  function EntityScan(_original, _entityCtor, _unusedInstance, _keyCollection, _metadataCache, _identityProxies, _proxies, entity, refClassName, isMutableEntity) {
    this._original = _original;
    this._entityCtor = _entityCtor;
    this._unusedInstance = _unusedInstance;
    this._keyCollection = _keyCollection;
    this._metadataCache = _metadataCache;
    this._identityProxies = _identityProxies;
    this._proxies = _proxies;
    this.entity = entity;
    this.refClassName = refClassName;
    this.isMutableEntity = isMutableEntity;
  }
  EntityScan.builtin$cls = "EntityScan";
  if (!"name" in EntityScan)
    EntityScan.name = "EntityScan";
  $desc = $collectedClasses.EntityScan;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityScan.prototype = $desc;
  EntityScan.prototype.get$_original = function() {
    return this._original;
  };
  EntityScan.prototype.get$_original.$reflectable = 1;
  EntityScan.prototype.set$_original = function(v) {
    return this._original = v;
  };
  EntityScan.prototype.set$_original.$reflectable = 1;
  EntityScan.prototype.get$_entityCtor = function() {
    return this._entityCtor;
  };
  EntityScan.prototype.get$_entityCtor.$reflectable = 1;
  EntityScan.prototype.set$_entityCtor = function(v) {
    return this._entityCtor = v;
  };
  EntityScan.prototype.set$_entityCtor.$reflectable = 1;
  EntityScan.prototype.get$_unusedInstance = function() {
    return this._unusedInstance;
  };
  EntityScan.prototype.get$_unusedInstance.$reflectable = 1;
  EntityScan.prototype.set$_unusedInstance = function(v) {
    return this._unusedInstance = v;
  };
  EntityScan.prototype.set$_unusedInstance.$reflectable = 1;
  EntityScan.prototype.get$_keyCollection = function() {
    return this._keyCollection;
  };
  EntityScan.prototype.get$_keyCollection.$reflectable = 1;
  EntityScan.prototype.set$_keyCollection = function(v) {
    return this._keyCollection = v;
  };
  EntityScan.prototype.set$_keyCollection.$reflectable = 1;
  EntityScan.prototype.get$_metadataCache = function() {
    return this._metadataCache;
  };
  EntityScan.prototype.get$_metadataCache.$reflectable = 1;
  EntityScan.prototype.set$_metadataCache = function(v) {
    return this._metadataCache = v;
  };
  EntityScan.prototype.set$_metadataCache.$reflectable = 1;
  EntityScan.prototype.get$_identityProxies = function() {
    return this._identityProxies;
  };
  EntityScan.prototype.get$_identityProxies.$reflectable = 1;
  EntityScan.prototype.get$_proxies = function() {
    return this._proxies;
  };
  EntityScan.prototype.get$_proxies.$reflectable = 1;
  EntityScan.prototype.get$entity = function() {
    return this.entity;
  };
  EntityScan.prototype.get$entity.$reflectable = 1;
  EntityScan.prototype.set$entity = function(v) {
    return this.entity = v;
  };
  EntityScan.prototype.set$entity.$reflectable = 1;
  EntityScan.prototype.get$refClassName = function() {
    return this.refClassName;
  };
  EntityScan.prototype.get$refClassName.$reflectable = 1;
  EntityScan.prototype.set$refClassName = function(v) {
    return this.refClassName = v;
  };
  EntityScan.prototype.set$refClassName.$reflectable = 1;
  EntityScan.prototype.get$isMutableEntity = function() {
    return this.isMutableEntity;
  };
  EntityScan.prototype.get$isMutableEntity.$reflectable = 1;
  EntityScan.prototype.set$isMutableEntity = function(v) {
    return this.isMutableEntity = v;
  };
  EntityScan.prototype.set$isMutableEntity.$reflectable = 1;
  function EntityScan_buildKey_closure(box_0) {
    this.box_0 = box_0;
  }
  EntityScan_buildKey_closure.builtin$cls = "EntityScan_buildKey_closure";
  if (!"name" in EntityScan_buildKey_closure)
    EntityScan_buildKey_closure.name = "EntityScan_buildKey_closure";
  $desc = $collectedClasses.EntityScan_buildKey_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityScan_buildKey_closure.prototype = $desc;
  function EntityScan_EntityScan$fromScan_closure(box_0, newScan_1) {
    this.box_0 = box_0;
    this.newScan_1 = newScan_1;
  }
  EntityScan_EntityScan$fromScan_closure.builtin$cls = "EntityScan_EntityScan$fromScan_closure";
  if (!"name" in EntityScan_EntityScan$fromScan_closure)
    EntityScan_EntityScan$fromScan_closure.name = "EntityScan_EntityScan$fromScan_closure";
  $desc = $collectedClasses.EntityScan_EntityScan$fromScan_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityScan_EntityScan$fromScan_closure.prototype = $desc;
  function EntityScan_detectIfMutable_closure() {
  }
  EntityScan_detectIfMutable_closure.builtin$cls = "EntityScan_detectIfMutable_closure";
  if (!"name" in EntityScan_detectIfMutable_closure)
    EntityScan_detectIfMutable_closure.name = "EntityScan_detectIfMutable_closure";
  $desc = $collectedClasses.EntityScan_detectIfMutable_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityScan_detectIfMutable_closure.prototype = $desc;
  function EntityScan_detectIfMutable_closure0() {
  }
  EntityScan_detectIfMutable_closure0.builtin$cls = "EntityScan_detectIfMutable_closure0";
  if (!"name" in EntityScan_detectIfMutable_closure0)
    EntityScan_detectIfMutable_closure0.name = "EntityScan_detectIfMutable_closure0";
  $desc = $collectedClasses.EntityScan_detectIfMutable_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityScan_detectIfMutable_closure0.prototype = $desc;
  function EntityScan__entity_changeHandler_closure() {
  }
  EntityScan__entity_changeHandler_closure.builtin$cls = "EntityScan__entity_changeHandler_closure";
  if (!"name" in EntityScan__entity_changeHandler_closure)
    EntityScan__entity_changeHandler_closure.name = "EntityScan__entity_changeHandler_closure";
  $desc = $collectedClasses.EntityScan__entity_changeHandler_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityScan__entity_changeHandler_closure.prototype = $desc;
  function EntityScan__entity_changeHandler_closure0() {
  }
  EntityScan__entity_changeHandler_closure0.builtin$cls = "EntityScan__entity_changeHandler_closure0";
  if (!"name" in EntityScan__entity_changeHandler_closure0)
    EntityScan__entity_changeHandler_closure0.name = "EntityScan__entity_changeHandler_closure0";
  $desc = $collectedClasses.EntityScan__entity_changeHandler_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EntityScan__entity_changeHandler_closure0.prototype = $desc;
  function _DormProxyListEntry(property, propertySymbol, type, metadataCache, proxy) {
    this.property = property;
    this.propertySymbol = propertySymbol;
    this.type = type;
    this.metadataCache = metadataCache;
    this.proxy = proxy;
  }
  _DormProxyListEntry.builtin$cls = "_DormProxyListEntry";
  if (!"name" in _DormProxyListEntry)
    _DormProxyListEntry.name = "_DormProxyListEntry";
  $desc = $collectedClasses._DormProxyListEntry;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DormProxyListEntry.prototype = $desc;
  _DormProxyListEntry.prototype.get$property = function() {
    return this.property;
  };
  _DormProxyListEntry.prototype.get$property.$reflectable = 1;
  _DormProxyListEntry.prototype.get$propertySymbol = function() {
    return this.propertySymbol;
  };
  _DormProxyListEntry.prototype.get$propertySymbol.$reflectable = 1;
  _DormProxyListEntry.prototype.get$type = function() {
    return this.type;
  };
  _DormProxyListEntry.prototype.get$type.$reflectable = 1;
  _DormProxyListEntry.prototype.get$metadataCache = function() {
    return this.metadataCache;
  };
  _DormProxyListEntry.prototype.get$metadataCache.$reflectable = 1;
  _DormProxyListEntry.prototype.get$proxy = function() {
    return this.proxy;
  };
  _DormProxyListEntry.prototype.get$proxy.$reflectable = 1;
  _DormProxyListEntry.prototype.set$proxy = function(v) {
    return this.proxy = v;
  };
  _DormProxyListEntry.prototype.set$proxy.$reflectable = 1;
  function LazyLoader(_handlers) {
    this._handlers = _handlers;
  }
  LazyLoader.builtin$cls = "LazyLoader";
  if (!"name" in LazyLoader)
    LazyLoader.name = "LazyLoader";
  $desc = $collectedClasses.LazyLoader;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LazyLoader.prototype = $desc;
  LazyLoader.prototype.get$_handlers = function() {
    return this._handlers;
  };
  LazyLoader.prototype.get$_handlers.$reflectable = 1;
  LazyLoader.prototype.set$_handlers = function(v) {
    return this._handlers = v;
  };
  LazyLoader.prototype.set$_handlers.$reflectable = 1;
  function LazyLoader_removeHandler_closure(forSymbol_0) {
    this.forSymbol_0 = forSymbol_0;
  }
  LazyLoader_removeHandler_closure.builtin$cls = "LazyLoader_removeHandler_closure";
  if (!"name" in LazyLoader_removeHandler_closure)
    LazyLoader_removeHandler_closure.name = "LazyLoader_removeHandler_closure";
  $desc = $collectedClasses.LazyLoader_removeHandler_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LazyLoader_removeHandler_closure.prototype = $desc;
  function LazyLoader_load_closure(forSymbol_0) {
    this.forSymbol_0 = forSymbol_0;
  }
  LazyLoader_load_closure.builtin$cls = "LazyLoader_load_closure";
  if (!"name" in LazyLoader_load_closure)
    LazyLoader_load_closure.name = "LazyLoader_load_closure";
  $desc = $collectedClasses.LazyLoader_load_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LazyLoader_load_closure.prototype = $desc;
  function LazyLoader_load_closure0() {
  }
  LazyLoader_load_closure0.builtin$cls = "LazyLoader_load_closure0";
  if (!"name" in LazyLoader_load_closure0)
    LazyLoader_load_closure0.name = "LazyLoader_load_closure0";
  $desc = $collectedClasses.LazyLoader_load_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LazyLoader_load_closure0.prototype = $desc;
  function _InternalLazyLoaderHandler(forSymbol, method) {
    this.forSymbol = forSymbol;
    this.method = method;
  }
  _InternalLazyLoaderHandler.builtin$cls = "_InternalLazyLoaderHandler";
  if (!"name" in _InternalLazyLoaderHandler)
    _InternalLazyLoaderHandler.name = "_InternalLazyLoaderHandler";
  $desc = $collectedClasses._InternalLazyLoaderHandler;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _InternalLazyLoaderHandler.prototype = $desc;
  _InternalLazyLoaderHandler.prototype.get$forSymbol = function() {
    return this.forSymbol;
  };
  _InternalLazyLoaderHandler.prototype.get$forSymbol.$reflectable = 1;
  _InternalLazyLoaderHandler.prototype.get$method = function() {
    return this.method;
  };
  _InternalLazyLoaderHandler.prototype.get$method.$reflectable = 1;
  function MetadataCache() {
  }
  MetadataCache.builtin$cls = "MetadataCache";
  if (!"name" in MetadataCache)
    MetadataCache.name = "MetadataCache";
  $desc = $collectedClasses.MetadataCache;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MetadataCache.prototype = $desc;
  function _PropertyMetadataCache(property, isId, isTransient, isNullable, isLabelField, isMutable, isLazy, insertValue, initialValue) {
    this.property = property;
    this.isId = isId;
    this.isTransient = isTransient;
    this.isNullable = isNullable;
    this.isLabelField = isLabelField;
    this.isMutable = isMutable;
    this.isLazy = isLazy;
    this.insertValue = insertValue;
    this.initialValue = initialValue;
  }
  _PropertyMetadataCache.builtin$cls = "_PropertyMetadataCache";
  if (!"name" in _PropertyMetadataCache)
    _PropertyMetadataCache.name = "_PropertyMetadataCache";
  $desc = $collectedClasses._PropertyMetadataCache;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _PropertyMetadataCache.prototype = $desc;
  _PropertyMetadataCache.prototype.get$property = function() {
    return this.property;
  };
  _PropertyMetadataCache.prototype.get$property.$reflectable = 1;
  _PropertyMetadataCache.prototype.get$isId = function() {
    return this.isId;
  };
  _PropertyMetadataCache.prototype.get$isId.$reflectable = 1;
  _PropertyMetadataCache.prototype.set$isId = function(v) {
    return this.isId = v;
  };
  _PropertyMetadataCache.prototype.set$isId.$reflectable = 1;
  _PropertyMetadataCache.prototype.get$isTransient = function() {
    return this.isTransient;
  };
  _PropertyMetadataCache.prototype.get$isTransient.$reflectable = 1;
  _PropertyMetadataCache.prototype.set$isTransient = function(v) {
    return this.isTransient = v;
  };
  _PropertyMetadataCache.prototype.set$isTransient.$reflectable = 1;
  _PropertyMetadataCache.prototype.get$isNullable = function() {
    return this.isNullable;
  };
  _PropertyMetadataCache.prototype.get$isNullable.$reflectable = 1;
  _PropertyMetadataCache.prototype.set$isNullable = function(v) {
    return this.isNullable = v;
  };
  _PropertyMetadataCache.prototype.set$isNullable.$reflectable = 1;
  _PropertyMetadataCache.prototype.get$isLabelField = function() {
    return this.isLabelField;
  };
  _PropertyMetadataCache.prototype.get$isLabelField.$reflectable = 1;
  _PropertyMetadataCache.prototype.set$isLabelField = function(v) {
    return this.isLabelField = v;
  };
  _PropertyMetadataCache.prototype.set$isLabelField.$reflectable = 1;
  _PropertyMetadataCache.prototype.get$isMutable = function() {
    return this.isMutable;
  };
  _PropertyMetadataCache.prototype.get$isMutable.$reflectable = 1;
  _PropertyMetadataCache.prototype.set$isMutable = function(v) {
    return this.isMutable = v;
  };
  _PropertyMetadataCache.prototype.set$isMutable.$reflectable = 1;
  _PropertyMetadataCache.prototype.get$isLazy = function() {
    return this.isLazy;
  };
  _PropertyMetadataCache.prototype.get$isLazy.$reflectable = 1;
  _PropertyMetadataCache.prototype.set$isLazy = function(v) {
    return this.isLazy = v;
  };
  _PropertyMetadataCache.prototype.set$isLazy.$reflectable = 1;
  _PropertyMetadataCache.prototype.get$insertValue = function() {
    return this.insertValue;
  };
  _PropertyMetadataCache.prototype.get$insertValue.$reflectable = 1;
  _PropertyMetadataCache.prototype.set$insertValue = function(v) {
    return this.insertValue = v;
  };
  _PropertyMetadataCache.prototype.set$insertValue.$reflectable = 1;
  _PropertyMetadataCache.prototype.get$initialValue = function() {
    return this.initialValue;
  };
  _PropertyMetadataCache.prototype.get$initialValue.$reflectable = 1;
  _PropertyMetadataCache.prototype.set$initialValue = function(v) {
    return this.initialValue = v;
  };
  _PropertyMetadataCache.prototype.set$initialValue.$reflectable = 1;
  function MetadataExternalized(isId, isTransient, isNullable, isLabelField, isMutable, isLazy) {
    this.isId = isId;
    this.isTransient = isTransient;
    this.isNullable = isNullable;
    this.isLabelField = isLabelField;
    this.isMutable = isMutable;
    this.isLazy = isLazy;
  }
  MetadataExternalized.builtin$cls = "MetadataExternalized";
  if (!"name" in MetadataExternalized)
    MetadataExternalized.name = "MetadataExternalized";
  $desc = $collectedClasses.MetadataExternalized;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MetadataExternalized.prototype = $desc;
  MetadataExternalized.prototype.get$isId = function() {
    return this.isId;
  };
  MetadataExternalized.prototype.get$isId.$reflectable = 1;
  MetadataExternalized.prototype.get$isTransient = function() {
    return this.isTransient;
  };
  MetadataExternalized.prototype.get$isTransient.$reflectable = 1;
  MetadataExternalized.prototype.get$isNullable = function() {
    return this.isNullable;
  };
  MetadataExternalized.prototype.get$isNullable.$reflectable = 1;
  MetadataExternalized.prototype.get$isLabelField = function() {
    return this.isLabelField;
  };
  MetadataExternalized.prototype.get$isLabelField.$reflectable = 1;
  MetadataExternalized.prototype.get$isMutable = function() {
    return this.isMutable;
  };
  MetadataExternalized.prototype.get$isMutable.$reflectable = 1;
  MetadataExternalized.prototype.get$isLazy = function() {
    return this.isLazy;
  };
  MetadataExternalized.prototype.get$isLazy.$reflectable = 1;
  function MetadataValidationReason() {
  }
  MetadataValidationReason.builtin$cls = "MetadataValidationReason";
  if (!"name" in MetadataValidationReason)
    MetadataValidationReason.name = "MetadataValidationReason";
  $desc = $collectedClasses.MetadataValidationReason;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MetadataValidationReason.prototype = $desc;
  function MetadataValidationResult(entity, reasonFailed, property, propertyField) {
    this.entity = entity;
    this.reasonFailed = reasonFailed;
    this.property = property;
    this.propertyField = propertyField;
  }
  MetadataValidationResult.builtin$cls = "MetadataValidationResult";
  if (!"name" in MetadataValidationResult)
    MetadataValidationResult.name = "MetadataValidationResult";
  $desc = $collectedClasses.MetadataValidationResult;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MetadataValidationResult.prototype = $desc;
  MetadataValidationResult.prototype.get$entity = function() {
    return this.entity;
  };
  MetadataValidationResult.prototype.get$entity.$reflectable = 1;
  MetadataValidationResult.prototype.get$reasonFailed = function() {
    return this.reasonFailed;
  };
  MetadataValidationResult.prototype.get$reasonFailed.$reflectable = 1;
  MetadataValidationResult.prototype.get$property = function() {
    return this.property;
  };
  MetadataValidationResult.prototype.get$property.$reflectable = 1;
  MetadataValidationResult.prototype.get$propertyField = function() {
    return this.propertyField;
  };
  MetadataValidationResult.prototype.get$propertyField.$reflectable = 1;
  function Entity(_scan, _isPointer, _changes, _mirror, _values, _records) {
    this._scan = _scan;
    this._isPointer = _isPointer;
    this._changes = _changes;
    this._mirror = _mirror;
    this._values = _values;
    this._records = _records;
  }
  Entity.builtin$cls = "Entity";
  if (!"name" in Entity)
    Entity.name = "Entity";
  $desc = $collectedClasses.Entity;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity.prototype = $desc;
  Entity.prototype.get$_scan = function() {
    return this._scan;
  };
  Entity.prototype.get$_scan.$reflectable = 1;
  Entity.prototype.set$_scan = function(v) {
    return this._scan = v;
  };
  Entity.prototype.set$_scan.$reflectable = 1;
  Entity.prototype.get$_isPointer = function() {
    return this._isPointer;
  };
  Entity.prototype.get$_isPointer.$reflectable = 1;
  Entity.prototype.set$_isPointer = function(v) {
    return this._isPointer = v;
  };
  Entity.prototype.set$_isPointer.$reflectable = 1;
  function Entity_operator$index_closure(propertyField_0) {
    this.propertyField_0 = propertyField_0;
  }
  Entity_operator$index_closure.builtin$cls = "Entity_operator$index_closure";
  if (!"name" in Entity_operator$index_closure)
    Entity_operator$index_closure.name = "Entity_operator$index_closure";
  $desc = $collectedClasses.Entity_operator$index_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_operator$index_closure.prototype = $desc;
  function Entity_operator$index_closure0() {
  }
  Entity_operator$index_closure0.builtin$cls = "Entity_operator$index_closure0";
  if (!"name" in Entity_operator$index_closure0)
    Entity_operator$index_closure0.name = "Entity_operator$index_closure0";
  $desc = $collectedClasses.Entity_operator$index_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_operator$index_closure0.prototype = $desc;
  function Entity_operator$indexSet_closure(propertyField_0) {
    this.propertyField_0 = propertyField_0;
  }
  Entity_operator$indexSet_closure.builtin$cls = "Entity_operator$indexSet_closure";
  if (!"name" in Entity_operator$indexSet_closure)
    Entity_operator$indexSet_closure.name = "Entity_operator$indexSet_closure";
  $desc = $collectedClasses.Entity_operator$indexSet_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_operator$indexSet_closure.prototype = $desc;
  function Entity_operator$indexSet_closure0() {
  }
  Entity_operator$indexSet_closure0.builtin$cls = "Entity_operator$indexSet_closure0";
  if (!"name" in Entity_operator$indexSet_closure0)
    Entity_operator$indexSet_closure0.name = "Entity_operator$indexSet_closure0";
  $desc = $collectedClasses.Entity_operator$indexSet_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_operator$indexSet_closure0.prototype = $desc;
  function Entity_setDefaultPropertyValue_closure(propertyField_0) {
    this.propertyField_0 = propertyField_0;
  }
  Entity_setDefaultPropertyValue_closure.builtin$cls = "Entity_setDefaultPropertyValue_closure";
  if (!"name" in Entity_setDefaultPropertyValue_closure)
    Entity_setDefaultPropertyValue_closure.name = "Entity_setDefaultPropertyValue_closure";
  $desc = $collectedClasses.Entity_setDefaultPropertyValue_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_setDefaultPropertyValue_closure.prototype = $desc;
  function Entity_setDefaultPropertyValue_closure0() {
  }
  Entity_setDefaultPropertyValue_closure0.builtin$cls = "Entity_setDefaultPropertyValue_closure0";
  if (!"name" in Entity_setDefaultPropertyValue_closure0)
    Entity_setDefaultPropertyValue_closure0.name = "Entity_setDefaultPropertyValue_closure0";
  $desc = $collectedClasses.Entity_setDefaultPropertyValue_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_setDefaultPropertyValue_closure0.prototype = $desc;
  function Entity_setCurrentStatusIsDefaultStatus_closure() {
  }
  Entity_setCurrentStatusIsDefaultStatus_closure.builtin$cls = "Entity_setCurrentStatusIsDefaultStatus_closure";
  if (!"name" in Entity_setCurrentStatusIsDefaultStatus_closure)
    Entity_setCurrentStatusIsDefaultStatus_closure.name = "Entity_setCurrentStatusIsDefaultStatus_closure";
  $desc = $collectedClasses.Entity_setCurrentStatusIsDefaultStatus_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_setCurrentStatusIsDefaultStatus_closure.prototype = $desc;
  function Entity_revertChanges_closure(this_0) {
    this.this_0 = this_0;
  }
  Entity_revertChanges_closure.builtin$cls = "Entity_revertChanges_closure";
  if (!"name" in Entity_revertChanges_closure)
    Entity_revertChanges_closure.name = "Entity_revertChanges_closure";
  $desc = $collectedClasses.Entity_revertChanges_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_revertChanges_closure.prototype = $desc;
  function Entity_getEntityTree_closure(tree_0) {
    this.tree_0 = tree_0;
  }
  Entity_getEntityTree_closure.builtin$cls = "Entity_getEntityTree_closure";
  if (!"name" in Entity_getEntityTree_closure)
    Entity_getEntityTree_closure.name = "Entity_getEntityTree_closure";
  $desc = $collectedClasses.Entity_getEntityTree_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_getEntityTree_closure.prototype = $desc;
  function Entity_getEntityTree__closure(tree_1) {
    this.tree_1 = tree_1;
  }
  Entity_getEntityTree__closure.builtin$cls = "Entity_getEntityTree__closure";
  if (!"name" in Entity_getEntityTree__closure)
    Entity_getEntityTree__closure.name = "Entity_getEntityTree__closure";
  $desc = $collectedClasses.Entity_getEntityTree__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_getEntityTree__closure.prototype = $desc;
  function Entity_getIdentityFields_closure(result_0) {
    this.result_0 = result_0;
  }
  Entity_getIdentityFields_closure.builtin$cls = "Entity_getIdentityFields_closure";
  if (!"name" in Entity_getIdentityFields_closure)
    Entity_getIdentityFields_closure.name = "Entity_getIdentityFields_closure";
  $desc = $collectedClasses.Entity_getIdentityFields_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_getIdentityFields_closure.prototype = $desc;
  function Entity_getInsertValues_closure(result_0) {
    this.result_0 = result_0;
  }
  Entity_getInsertValues_closure.builtin$cls = "Entity_getInsertValues_closure";
  if (!"name" in Entity_getInsertValues_closure)
    Entity_getInsertValues_closure.name = "Entity_getInsertValues_closure";
  $desc = $collectedClasses.Entity_getInsertValues_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_getInsertValues_closure.prototype = $desc;
  function Entity_isUnsaved_closure() {
  }
  Entity_isUnsaved_closure.builtin$cls = "Entity_isUnsaved_closure";
  if (!"name" in Entity_isUnsaved_closure)
    Entity_isUnsaved_closure.name = "Entity_isUnsaved_closure";
  $desc = $collectedClasses.Entity_isUnsaved_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_isUnsaved_closure.prototype = $desc;
  function Entity_isUnsaved_closure0() {
  }
  Entity_isUnsaved_closure0.builtin$cls = "Entity_isUnsaved_closure0";
  if (!"name" in Entity_isUnsaved_closure0)
    Entity_isUnsaved_closure0.name = "Entity_isUnsaved_closure0";
  $desc = $collectedClasses.Entity_isUnsaved_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_isUnsaved_closure0.prototype = $desc;
  function Entity_setUnsaved_closure(this_0) {
    this.this_0 = this_0;
  }
  Entity_setUnsaved_closure.builtin$cls = "Entity_setUnsaved_closure";
  if (!"name" in Entity_setUnsaved_closure)
    Entity_setUnsaved_closure.name = "Entity_setUnsaved_closure";
  $desc = $collectedClasses.Entity_setUnsaved_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_setUnsaved_closure.prototype = $desc;
  function Entity_getPropertyList_closure(result_0) {
    this.result_0 = result_0;
  }
  Entity_getPropertyList_closure.builtin$cls = "Entity_getPropertyList_closure";
  if (!"name" in Entity_getPropertyList_closure)
    Entity_getPropertyList_closure.name = "Entity_getPropertyList_closure";
  $desc = $collectedClasses.Entity_getPropertyList_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_getPropertyList_closure.prototype = $desc;
  function Entity_getMetadata_closure(propertyField_0) {
    this.propertyField_0 = propertyField_0;
  }
  Entity_getMetadata_closure.builtin$cls = "Entity_getMetadata_closure";
  if (!"name" in Entity_getMetadata_closure)
    Entity_getMetadata_closure.name = "Entity_getMetadata_closure";
  $desc = $collectedClasses.Entity_getMetadata_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_getMetadata_closure.prototype = $desc;
  function Entity_getMetadata_closure0() {
  }
  Entity_getMetadata_closure0.builtin$cls = "Entity_getMetadata_closure0";
  if (!"name" in Entity_getMetadata_closure0)
    Entity_getMetadata_closure0.name = "Entity_getMetadata_closure0";
  $desc = $collectedClasses.Entity_getMetadata_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_getMetadata_closure0.prototype = $desc;
  function Entity_validate_closure(box_0, this_1, validationResultList_2) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.validationResultList_2 = validationResultList_2;
  }
  Entity_validate_closure.builtin$cls = "Entity_validate_closure";
  if (!"name" in Entity_validate_closure)
    Entity_validate_closure.name = "Entity_validate_closure";
  $desc = $collectedClasses.Entity_validate_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_validate_closure.prototype = $desc;
  function Entity_isDirty_closure() {
  }
  Entity_isDirty_closure.builtin$cls = "Entity_isDirty_closure";
  if (!"name" in Entity_isDirty_closure)
    Entity_isDirty_closure.name = "Entity_isDirty_closure";
  $desc = $collectedClasses.Entity_isDirty_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_isDirty_closure.prototype = $desc;
  function Entity_isDirty_closure0() {
  }
  Entity_isDirty_closure0.builtin$cls = "Entity_isDirty_closure0";
  if (!"name" in Entity_isDirty_closure0)
    Entity_isDirty_closure0.name = "Entity_isDirty_closure0";
  $desc = $collectedClasses.Entity_isDirty_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_isDirty_closure0.prototype = $desc;
  function Entity_readExternal_closure(data_0, serializer_1, onConflict_2) {
    this.data_0 = data_0;
    this.serializer_1 = serializer_1;
    this.onConflict_2 = onConflict_2;
  }
  Entity_readExternal_closure.builtin$cls = "Entity_readExternal_closure";
  if (!"name" in Entity_readExternal_closure)
    Entity_readExternal_closure.name = "Entity_readExternal_closure";
  $desc = $collectedClasses.Entity_readExternal_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_readExternal_closure.prototype = $desc;
  function Entity_toString_closure(result_0) {
    this.result_0 = result_0;
  }
  Entity_toString_closure.builtin$cls = "Entity_toString_closure";
  if (!"name" in Entity_toString_closure)
    Entity_toString_closure.name = "Entity_toString_closure";
  $desc = $collectedClasses.Entity_toString_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity_toString_closure.prototype = $desc;
  function Entity__scheduleDirtyCheck_closure() {
  }
  Entity__scheduleDirtyCheck_closure.builtin$cls = "Entity__scheduleDirtyCheck_closure";
  if (!"name" in Entity__scheduleDirtyCheck_closure)
    Entity__scheduleDirtyCheck_closure.name = "Entity__scheduleDirtyCheck_closure";
  $desc = $collectedClasses.Entity__scheduleDirtyCheck_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity__scheduleDirtyCheck_closure.prototype = $desc;
  function Entity__duplicateImpl_closure(this_0) {
    this.this_0 = this_0;
  }
  Entity__duplicateImpl_closure.builtin$cls = "Entity__duplicateImpl_closure";
  if (!"name" in Entity__duplicateImpl_closure)
    Entity__duplicateImpl_closure.name = "Entity__duplicateImpl_closure";
  $desc = $collectedClasses.Entity__duplicateImpl_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity__duplicateImpl_closure.prototype = $desc;
  function Entity__duplicateImpl_closure0() {
  }
  Entity__duplicateImpl_closure0.builtin$cls = "Entity__duplicateImpl_closure0";
  if (!"name" in Entity__duplicateImpl_closure0)
    Entity__duplicateImpl_closure0.name = "Entity__duplicateImpl_closure0";
  $desc = $collectedClasses.Entity__duplicateImpl_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity__duplicateImpl_closure0.prototype = $desc;
  function Entity__duplicateImpl_closure1(this_1, clonedEntities_2) {
    this.this_1 = this_1;
    this.clonedEntities_2 = clonedEntities_2;
  }
  Entity__duplicateImpl_closure1.builtin$cls = "Entity__duplicateImpl_closure1";
  if (!"name" in Entity__duplicateImpl_closure1)
    Entity__duplicateImpl_closure1.name = "Entity__duplicateImpl_closure1";
  $desc = $collectedClasses.Entity__duplicateImpl_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity__duplicateImpl_closure1.prototype = $desc;
  function Entity__duplicateImpl__closure(clonedEntities_3, listClone_4) {
    this.clonedEntities_3 = clonedEntities_3;
    this.listClone_4 = listClone_4;
  }
  Entity__duplicateImpl__closure.builtin$cls = "Entity__duplicateImpl__closure";
  if (!"name" in Entity__duplicateImpl__closure)
    Entity__duplicateImpl__closure.name = "Entity__duplicateImpl__closure";
  $desc = $collectedClasses.Entity__duplicateImpl__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity__duplicateImpl__closure.prototype = $desc;
  function Entity__writeExternalImpl_closure(box_0, data_1, serializer_2) {
    this.box_0 = box_0;
    this.data_1 = data_1;
    this.serializer_2 = serializer_2;
  }
  Entity__writeExternalImpl_closure.builtin$cls = "Entity__writeExternalImpl_closure";
  if (!"name" in Entity__writeExternalImpl_closure)
    Entity__writeExternalImpl_closure.name = "Entity__writeExternalImpl_closure";
  $desc = $collectedClasses.Entity__writeExternalImpl_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity__writeExternalImpl_closure.prototype = $desc;
  function Entity__writeExternalImpl__closure(pointerMap_3) {
    this.pointerMap_3 = pointerMap_3;
  }
  Entity__writeExternalImpl__closure.builtin$cls = "Entity__writeExternalImpl__closure";
  if (!"name" in Entity__writeExternalImpl__closure)
    Entity__writeExternalImpl__closure.name = "Entity__writeExternalImpl__closure";
  $desc = $collectedClasses.Entity__writeExternalImpl__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity__writeExternalImpl__closure.prototype = $desc;
  function Entity__writeExternalImpl__closure0(box_0, serializer_4, entry_5, dataList_6) {
    this.box_0 = box_0;
    this.serializer_4 = serializer_4;
    this.entry_5 = entry_5;
    this.dataList_6 = dataList_6;
  }
  Entity__writeExternalImpl__closure0.builtin$cls = "Entity__writeExternalImpl__closure0";
  if (!"name" in Entity__writeExternalImpl__closure0)
    Entity__writeExternalImpl__closure0.name = "Entity__writeExternalImpl__closure0";
  $desc = $collectedClasses.Entity__writeExternalImpl__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity__writeExternalImpl__closure0.prototype = $desc;
  function Entity__writeExternalImpl___closure(pointerMap_7) {
    this.pointerMap_7 = pointerMap_7;
  }
  Entity__writeExternalImpl___closure.builtin$cls = "Entity__writeExternalImpl___closure";
  if (!"name" in Entity__writeExternalImpl___closure)
    Entity__writeExternalImpl___closure.name = "Entity__writeExternalImpl___closure";
  $desc = $collectedClasses.Entity__writeExternalImpl___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entity__writeExternalImpl___closure.prototype = $desc;
  function _ClonedEntityEntry(original, clone) {
    this.original = original;
    this.clone = clone;
  }
  _ClonedEntityEntry.builtin$cls = "_ClonedEntityEntry";
  if (!"name" in _ClonedEntityEntry)
    _ClonedEntityEntry.name = "_ClonedEntityEntry";
  $desc = $collectedClasses._ClonedEntityEntry;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ClonedEntityEntry.prototype = $desc;
  _ClonedEntityEntry.prototype.get$original = function() {
    return this.original;
  };
  _ClonedEntityEntry.prototype.get$original.$reflectable = 1;
  _ClonedEntityEntry.prototype.get$clone = function() {
    return this.clone;
  };
  _ClonedEntityEntry.prototype.get$clone.$reflectable = 1;
  function Ref(path) {
    this.path = path;
  }
  Ref.builtin$cls = "Ref";
  if (!"name" in Ref)
    Ref.name = "Ref";
  $desc = $collectedClasses.Ref;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Ref.prototype = $desc;
  Ref.prototype.get$path = function() {
    return this.path;
  };
  Ref.prototype.get$path.$reflectable = 1;
  function Property(propertySymbol, property, type) {
    this.propertySymbol = propertySymbol;
    this.property = property;
    this.type = type;
  }
  Property.builtin$cls = "Property";
  if (!"name" in Property)
    Property.name = "Property";
  $desc = $collectedClasses.Property;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Property.prototype = $desc;
  Property.prototype.get$propertySymbol = function() {
    return this.propertySymbol;
  };
  Property.prototype.get$propertySymbol.$reflectable = 1;
  Property.prototype.get$property = function() {
    return this.property;
  };
  Property.prototype.get$property.$reflectable = 1;
  Property.prototype.get$type = function() {
    return this.type;
  };
  Property.prototype.get$type.$reflectable = 1;
  function NotNullable() {
  }
  NotNullable.builtin$cls = "NotNullable";
  if (!"name" in NotNullable)
    NotNullable.name = "NotNullable";
  $desc = $collectedClasses.NotNullable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NotNullable.prototype = $desc;
  function DefaultValue(value) {
    this.value = value;
  }
  DefaultValue.builtin$cls = "DefaultValue";
  if (!"name" in DefaultValue)
    DefaultValue.name = "DefaultValue";
  $desc = $collectedClasses.DefaultValue;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DefaultValue.prototype = $desc;
  DefaultValue.prototype.get$value = function() {
    return this.value;
  };
  DefaultValue.prototype.get$value.$reflectable = 1;
  function Transient() {
  }
  Transient.builtin$cls = "Transient";
  if (!"name" in Transient)
    Transient.name = "Transient";
  $desc = $collectedClasses.Transient;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Transient.prototype = $desc;
  function Id(insertValue) {
    this.insertValue = insertValue;
  }
  Id.builtin$cls = "Id";
  if (!"name" in Id)
    Id.name = "Id";
  $desc = $collectedClasses.Id;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Id.prototype = $desc;
  Id.prototype.get$insertValue = function() {
    return this.insertValue;
  };
  Id.prototype.get$insertValue.$reflectable = 1;
  function Immutable() {
  }
  Immutable.builtin$cls = "Immutable";
  if (!"name" in Immutable)
    Immutable.name = "Immutable";
  $desc = $collectedClasses.Immutable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Immutable.prototype = $desc;
  function Lazy() {
  }
  Lazy.builtin$cls = "Lazy";
  if (!"name" in Lazy)
    Lazy.name = "Lazy";
  $desc = $collectedClasses.Lazy;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Lazy.prototype = $desc;
  function LabelField() {
  }
  LabelField.builtin$cls = "LabelField";
  if (!"name" in LabelField)
    LabelField.name = "LabelField";
  $desc = $collectedClasses.LabelField;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LabelField.prototype = $desc;
  function Annotation(maxStringLength) {
    this.maxStringLength = maxStringLength;
  }
  Annotation.builtin$cls = "Annotation";
  if (!"name" in Annotation)
    Annotation.name = "Annotation";
  $desc = $collectedClasses.Annotation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Annotation.prototype = $desc;
  Annotation.prototype.get$maxStringLength = function() {
    return this.maxStringLength;
  };
  Annotation.prototype.get$maxStringLength.$reflectable = 1;
  function Externalizable() {
  }
  Externalizable.builtin$cls = "Externalizable";
  if (!"name" in Externalizable)
    Externalizable.name = "Externalizable";
  $desc = $collectedClasses.Externalizable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Externalizable.prototype = $desc;
  function SerializationType() {
  }
  SerializationType.builtin$cls = "SerializationType";
  if (!"name" in SerializationType)
    SerializationType.name = "SerializationType";
  $desc = $collectedClasses.SerializationType;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SerializationType.prototype = $desc;
  function Serializer() {
  }
  Serializer.builtin$cls = "Serializer";
  if (!"name" in Serializer)
    Serializer.name = "Serializer";
  $desc = $collectedClasses.Serializer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Serializer.prototype = $desc;
  function SerializerMixin(dorm$SerializerMixin$_convertors) {
    this.dorm$SerializerMixin$_convertors = dorm$SerializerMixin$_convertors;
  }
  SerializerMixin.builtin$cls = "SerializerMixin";
  if (!"name" in SerializerMixin)
    SerializerMixin.name = "SerializerMixin";
  $desc = $collectedClasses.SerializerMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SerializerMixin.prototype = $desc;
  SerializerMixin.prototype.get$_convertors = function() {
    return this.dorm$SerializerMixin$_convertors;
  };
  SerializerMixin.prototype.get$_convertors.$reflectable = 1;
  SerializerMixin.prototype.set$_convertors = function(v) {
    return this.dorm$SerializerMixin$_convertors = v;
  };
  SerializerMixin.prototype.set$_convertors.$reflectable = 1;
  function SerializerMixin_removeRule_closure(forType_0) {
    this.forType_0 = forType_0;
  }
  SerializerMixin_removeRule_closure.builtin$cls = "SerializerMixin_removeRule_closure";
  if (!"name" in SerializerMixin_removeRule_closure)
    SerializerMixin_removeRule_closure.name = "SerializerMixin_removeRule_closure";
  $desc = $collectedClasses.SerializerMixin_removeRule_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SerializerMixin_removeRule_closure.prototype = $desc;
  function _InternalConvertor(forType, incoming, outgoing) {
    this.forType = forType;
    this.incoming = incoming;
    this.outgoing = outgoing;
  }
  _InternalConvertor.builtin$cls = "_InternalConvertor";
  if (!"name" in _InternalConvertor)
    _InternalConvertor.name = "_InternalConvertor";
  $desc = $collectedClasses._InternalConvertor;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _InternalConvertor.prototype = $desc;
  _InternalConvertor.prototype.get$forType = function() {
    return this.forType;
  };
  _InternalConvertor.prototype.get$forType.$reflectable = 1;
  _InternalConvertor.prototype.get$incoming = function() {
    return this.incoming;
  };
  _InternalConvertor.prototype.get$incoming.$reflectable = 1;
  _InternalConvertor.prototype.get$outgoing = function() {
    return this.outgoing;
  };
  _InternalConvertor.prototype.get$outgoing.$reflectable = 1;
  function SerializerJson(dorm$SerializerMixin$_convertors) {
    this.dorm$SerializerMixin$_convertors = dorm$SerializerMixin$_convertors;
  }
  SerializerJson.builtin$cls = "SerializerJson";
  if (!"name" in SerializerJson)
    SerializerJson.name = "SerializerJson";
  $desc = $collectedClasses.SerializerJson;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SerializerJson.prototype = $desc;
  function SerializerJson_convertIn_closure(forType_0) {
    this.forType_0 = forType_0;
  }
  SerializerJson_convertIn_closure.builtin$cls = "SerializerJson_convertIn_closure";
  if (!"name" in SerializerJson_convertIn_closure)
    SerializerJson_convertIn_closure.name = "SerializerJson_convertIn_closure";
  $desc = $collectedClasses.SerializerJson_convertIn_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SerializerJson_convertIn_closure.prototype = $desc;
  function SerializerJson_convertIn_closure0() {
  }
  SerializerJson_convertIn_closure0.builtin$cls = "SerializerJson_convertIn_closure0";
  if (!"name" in SerializerJson_convertIn_closure0)
    SerializerJson_convertIn_closure0.name = "SerializerJson_convertIn_closure0";
  $desc = $collectedClasses.SerializerJson_convertIn_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SerializerJson_convertIn_closure0.prototype = $desc;
  function SerializerJson_convertOut_closure(forType_0) {
    this.forType_0 = forType_0;
  }
  SerializerJson_convertOut_closure.builtin$cls = "SerializerJson_convertOut_closure";
  if (!"name" in SerializerJson_convertOut_closure)
    SerializerJson_convertOut_closure.name = "SerializerJson_convertOut_closure";
  $desc = $collectedClasses.SerializerJson_convertOut_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SerializerJson_convertOut_closure.prototype = $desc;
  function SerializerJson_convertOut_closure0() {
  }
  SerializerJson_convertOut_closure0.builtin$cls = "SerializerJson_convertOut_closure0";
  if (!"name" in SerializerJson_convertOut_closure0)
    SerializerJson_convertOut_closure0.name = "SerializerJson_convertOut_closure0";
  $desc = $collectedClasses.SerializerJson_convertOut_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SerializerJson_convertOut_closure0.prototype = $desc;
  function TemplateBenchmark(name) {
    this.name = name;
  }
  TemplateBenchmark.builtin$cls = "TemplateBenchmark";
  if (!"name" in TemplateBenchmark)
    TemplateBenchmark.name = "TemplateBenchmark";
  $desc = $collectedClasses.TemplateBenchmark;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TemplateBenchmark.prototype = $desc;
  function _runBenchmark_closure() {
  }
  _runBenchmark_closure.builtin$cls = "_runBenchmark_closure";
  if (!"name" in _runBenchmark_closure)
    _runBenchmark_closure.name = "_runBenchmark_closure";
  $desc = $collectedClasses._runBenchmark_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _runBenchmark_closure.prototype = $desc;
  function TestEntitySuperClass(_id, _scan, _isPointer, _changes, _mirror, _values, _records) {
    this._id = _id;
    this._scan = _scan;
    this._isPointer = _isPointer;
    this._changes = _changes;
    this._mirror = _mirror;
    this._values = _values;
    this._records = _records;
  }
  TestEntitySuperClass.builtin$cls = "TestEntitySuperClass";
  if (!"name" in TestEntitySuperClass)
    TestEntitySuperClass.name = "TestEntitySuperClass";
  $desc = $collectedClasses.TestEntitySuperClass;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TestEntitySuperClass.prototype = $desc;
  TestEntitySuperClass.prototype.get$_id = function() {
    return this._id;
  };
  TestEntitySuperClass.prototype.get$_id.$reflectable = 1;
  function TestEntity(_dorm_test$_name, _date, _cyclicReference, _id, _scan, _isPointer, _changes, _mirror, _values, _records) {
    this._dorm_test$_name = _dorm_test$_name;
    this._date = _date;
    this._cyclicReference = _cyclicReference;
    this._id = _id;
    this._scan = _scan;
    this._isPointer = _isPointer;
    this._changes = _changes;
    this._mirror = _mirror;
    this._values = _values;
    this._records = _records;
  }
  TestEntity.builtin$cls = "TestEntity";
  if (!"name" in TestEntity)
    TestEntity.name = "TestEntity";
  $desc = $collectedClasses.TestEntity;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TestEntity.prototype = $desc;
  TestEntity.prototype.get$_dorm_test$_name = function() {
    return this._dorm_test$_name;
  };
  TestEntity.prototype.get$_dorm_test$_name.$reflectable = 1;
  TestEntity.prototype.get$_date = function() {
    return this._date;
  };
  TestEntity.prototype.get$_date.$reflectable = 1;
  TestEntity.prototype.get$_cyclicReference = function() {
    return this._cyclicReference;
  };
  TestEntity.prototype.get$_cyclicReference.$reflectable = 1;
  function Logger(name, parent, _level, _children, children, _controller) {
    this.name = name;
    this.parent = parent;
    this._level = _level;
    this._children = _children;
    this.children = children;
    this._controller = _controller;
  }
  Logger.builtin$cls = "Logger";
  if (!"name" in Logger)
    Logger.name = "Logger";
  $desc = $collectedClasses.Logger;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Logger.prototype = $desc;
  Logger.prototype.get$name = function() {
    return this.name;
  };
  Logger.prototype.get$name.$reflectable = 1;
  Logger.prototype.get$parent = function() {
    return this.parent;
  };
  Logger.prototype.get$parent.$reflectable = 1;
  Logger.prototype.get$_level = function() {
    return this._level;
  };
  Logger.prototype.get$_level.$reflectable = 1;
  Logger.prototype.set$_level = function(v) {
    return this._level = v;
  };
  Logger.prototype.set$_level.$reflectable = 1;
  Logger.prototype.get$_children = function() {
    return this._children;
  };
  Logger.prototype.get$_children.$reflectable = 1;
  Logger.prototype.get$children = function() {
    return this.children;
  };
  Logger.prototype.get$children.$reflectable = 1;
  Logger.prototype.get$_controller = function() {
    return this._controller;
  };
  Logger.prototype.get$_controller.$reflectable = 1;
  Logger.prototype.set$_controller = function(v) {
    return this._controller = v;
  };
  Logger.prototype.set$_controller.$reflectable = 1;
  function Logger_Logger_closure(name_0) {
    this.name_0 = name_0;
  }
  Logger_Logger_closure.builtin$cls = "Logger_Logger_closure";
  if (!"name" in Logger_Logger_closure)
    Logger_Logger_closure.name = "Logger_Logger_closure";
  $desc = $collectedClasses.Logger_Logger_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Logger_Logger_closure.prototype = $desc;
  function Level(name, value) {
    this.name = name;
    this.value = value;
  }
  Level.builtin$cls = "Level";
  if (!"name" in Level)
    Level.name = "Level";
  $desc = $collectedClasses.Level;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Level.prototype = $desc;
  Level.prototype.get$name = function() {
    return this.name;
  };
  Level.prototype.get$name.$reflectable = 1;
  Level.prototype.get$value = function() {
    return this.value;
  };
  Level.prototype.get$value.$reflectable = 1;
  function LogRecord(level, message, loggerName, time, sequenceNumber, error, stackTrace) {
    this.level = level;
    this.message = message;
    this.loggerName = loggerName;
    this.time = time;
    this.sequenceNumber = sequenceNumber;
    this.error = error;
    this.stackTrace = stackTrace;
  }
  LogRecord.builtin$cls = "LogRecord";
  if (!"name" in LogRecord)
    LogRecord.name = "LogRecord";
  $desc = $collectedClasses.LogRecord;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LogRecord.prototype = $desc;
  LogRecord.prototype.get$level = function() {
    return this.level;
  };
  LogRecord.prototype.get$level.$reflectable = 1;
  LogRecord.prototype.get$message = function() {
    return this.message;
  };
  LogRecord.prototype.get$message.$reflectable = 1;
  LogRecord.prototype.get$loggerName = function() {
    return this.loggerName;
  };
  LogRecord.prototype.get$loggerName.$reflectable = 1;
  LogRecord.prototype.get$time = function() {
    return this.time;
  };
  LogRecord.prototype.get$time.$reflectable = 1;
  LogRecord.prototype.get$sequenceNumber = function() {
    return this.sequenceNumber;
  };
  LogRecord.prototype.get$sequenceNumber.$reflectable = 1;
  LogRecord.prototype.get$error = function() {
    return this.error;
  };
  LogRecord.prototype.get$error.$reflectable = 1;
  LogRecord.prototype.get$stackTrace = function() {
    return this.stackTrace;
  };
  LogRecord.prototype.get$stackTrace.$reflectable = 1;
  function onPropertyChange_closure(sourceName_0, callback_1) {
    this.sourceName_0 = sourceName_0;
    this.callback_1 = callback_1;
  }
  onPropertyChange_closure.builtin$cls = "onPropertyChange_closure";
  if (!"name" in onPropertyChange_closure)
    onPropertyChange_closure.name = "onPropertyChange_closure";
  $desc = $collectedClasses.onPropertyChange_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  onPropertyChange_closure.prototype = $desc;
  function ChangeNotifier(change_notifier$ChangeNotifier$_change_notifier$_changes, change_notifier$ChangeNotifier$_change_notifier$_records) {
    this.change_notifier$ChangeNotifier$_change_notifier$_changes = change_notifier$ChangeNotifier$_change_notifier$_changes;
    this.change_notifier$ChangeNotifier$_change_notifier$_records = change_notifier$ChangeNotifier$_change_notifier$_records;
  }
  ChangeNotifier.builtin$cls = "ChangeNotifier";
  if (!"name" in ChangeNotifier)
    ChangeNotifier.name = "ChangeNotifier";
  $desc = $collectedClasses.ChangeNotifier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ChangeNotifier.prototype = $desc;
  ChangeNotifier.prototype.get$_change_notifier$_changes = function() {
    return this.change_notifier$ChangeNotifier$_change_notifier$_changes;
  };
  ChangeNotifier.prototype.get$_change_notifier$_changes.$reflectable = 1;
  ChangeNotifier.prototype.set$_change_notifier$_changes = function(v) {
    return this.change_notifier$ChangeNotifier$_change_notifier$_changes = v;
  };
  ChangeNotifier.prototype.set$_change_notifier$_changes.$reflectable = 1;
  ChangeNotifier.prototype.get$_change_notifier$_records = function() {
    return this.change_notifier$ChangeNotifier$_change_notifier$_records;
  };
  ChangeNotifier.prototype.get$_change_notifier$_records.$reflectable = 1;
  ChangeNotifier.prototype.set$_change_notifier$_records = function(v) {
    return this.change_notifier$ChangeNotifier$_change_notifier$_records = v;
  };
  ChangeNotifier.prototype.set$_change_notifier$_records.$reflectable = 1;
  function ChangeRecord() {
  }
  ChangeRecord.builtin$cls = "ChangeRecord";
  if (!"name" in ChangeRecord)
    ChangeRecord.name = "ChangeRecord";
  $desc = $collectedClasses.ChangeRecord;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ChangeRecord.prototype = $desc;
  function PropertyChangeRecord(object, name, oldValue, newValue) {
    this.object = object;
    this.name = name;
    this.oldValue = oldValue;
    this.newValue = newValue;
  }
  PropertyChangeRecord.builtin$cls = "PropertyChangeRecord";
  if (!"name" in PropertyChangeRecord)
    PropertyChangeRecord.name = "PropertyChangeRecord";
  $desc = $collectedClasses.PropertyChangeRecord;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PropertyChangeRecord.prototype = $desc;
  PropertyChangeRecord.prototype.get$object = function() {
    return this.object;
  };
  PropertyChangeRecord.prototype.get$object.$reflectable = 1;
  PropertyChangeRecord.prototype.get$name = function() {
    return this.name;
  };
  PropertyChangeRecord.prototype.get$name.$reflectable = 1;
  PropertyChangeRecord.prototype.get$oldValue = function() {
    return this.oldValue;
  };
  PropertyChangeRecord.prototype.get$oldValue.$reflectable = 1;
  PropertyChangeRecord.prototype.get$newValue = function() {
    return this.newValue;
  };
  PropertyChangeRecord.prototype.get$newValue.$reflectable = 1;
  function CompoundPathObserver(_compound_path_observer$_observers, _compound_path_observer$_subs, _compound_path_observer$_value, _compound_path_observer$_computeValue, _started, _compound_path_observer$_scheduled, change_notifier$ChangeNotifier$_change_notifier$_changes, change_notifier$ChangeNotifier$_change_notifier$_records) {
    this._compound_path_observer$_observers = _compound_path_observer$_observers;
    this._compound_path_observer$_subs = _compound_path_observer$_subs;
    this._compound_path_observer$_value = _compound_path_observer$_value;
    this._compound_path_observer$_computeValue = _compound_path_observer$_computeValue;
    this._started = _started;
    this._compound_path_observer$_scheduled = _compound_path_observer$_scheduled;
    this.change_notifier$ChangeNotifier$_change_notifier$_changes = change_notifier$ChangeNotifier$_change_notifier$_changes;
    this.change_notifier$ChangeNotifier$_change_notifier$_records = change_notifier$ChangeNotifier$_change_notifier$_records;
  }
  CompoundPathObserver.builtin$cls = "CompoundPathObserver";
  if (!"name" in CompoundPathObserver)
    CompoundPathObserver.name = "CompoundPathObserver";
  $desc = $collectedClasses.CompoundPathObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CompoundPathObserver.prototype = $desc;
  CompoundPathObserver.prototype.get$_compound_path_observer$_observers = function() {
    return this._compound_path_observer$_observers;
  };
  CompoundPathObserver.prototype.get$_compound_path_observer$_observers.$reflectable = 1;
  CompoundPathObserver.prototype.set$_compound_path_observer$_observers = function(v) {
    return this._compound_path_observer$_observers = v;
  };
  CompoundPathObserver.prototype.set$_compound_path_observer$_observers.$reflectable = 1;
  CompoundPathObserver.prototype.get$_compound_path_observer$_subs = function() {
    return this._compound_path_observer$_subs;
  };
  CompoundPathObserver.prototype.get$_compound_path_observer$_subs.$reflectable = 1;
  CompoundPathObserver.prototype.set$_compound_path_observer$_subs = function(v) {
    return this._compound_path_observer$_subs = v;
  };
  CompoundPathObserver.prototype.set$_compound_path_observer$_subs.$reflectable = 1;
  CompoundPathObserver.prototype.get$_compound_path_observer$_value = function() {
    return this._compound_path_observer$_value;
  };
  CompoundPathObserver.prototype.get$_compound_path_observer$_value.$reflectable = 1;
  CompoundPathObserver.prototype.set$_compound_path_observer$_value = function(v) {
    return this._compound_path_observer$_value = v;
  };
  CompoundPathObserver.prototype.set$_compound_path_observer$_value.$reflectable = 1;
  CompoundPathObserver.prototype.get$_compound_path_observer$_computeValue = function() {
    return this._compound_path_observer$_computeValue;
  };
  CompoundPathObserver.prototype.get$_compound_path_observer$_computeValue.$reflectable = 1;
  CompoundPathObserver.prototype.get$_started = function() {
    return this._started;
  };
  CompoundPathObserver.prototype.get$_started.$reflectable = 1;
  CompoundPathObserver.prototype.set$_started = function(v) {
    return this._started = v;
  };
  CompoundPathObserver.prototype.set$_started.$reflectable = 1;
  CompoundPathObserver.prototype.get$_compound_path_observer$_scheduled = function() {
    return this._compound_path_observer$_scheduled;
  };
  CompoundPathObserver.prototype.get$_compound_path_observer$_scheduled.$reflectable = 1;
  CompoundPathObserver.prototype.set$_compound_path_observer$_scheduled = function(v) {
    return this._compound_path_observer$_scheduled = v;
  };
  CompoundPathObserver.prototype.set$_compound_path_observer$_scheduled.$reflectable = 1;
  function CompoundPathObserver__resolve_closure() {
  }
  CompoundPathObserver__resolve_closure.builtin$cls = "CompoundPathObserver__resolve_closure";
  if (!"name" in CompoundPathObserver__resolve_closure)
    CompoundPathObserver__resolve_closure.name = "CompoundPathObserver__resolve_closure";
  $desc = $collectedClasses.CompoundPathObserver__resolve_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CompoundPathObserver__resolve_closure.prototype = $desc;
  function dirtyCheckZoneSpec_enqueueDirtyCheck(box_0) {
    this.box_0 = box_0;
  }
  dirtyCheckZoneSpec_enqueueDirtyCheck.builtin$cls = "dirtyCheckZoneSpec_enqueueDirtyCheck";
  if (!"name" in dirtyCheckZoneSpec_enqueueDirtyCheck)
    dirtyCheckZoneSpec_enqueueDirtyCheck.name = "dirtyCheckZoneSpec_enqueueDirtyCheck";
  $desc = $collectedClasses.dirtyCheckZoneSpec_enqueueDirtyCheck;
  if ($desc instanceof Array)
    $desc = $desc[1];
  dirtyCheckZoneSpec_enqueueDirtyCheck.prototype = $desc;
  function dirtyCheckZoneSpec_enqueueDirtyCheck_closure(box_0) {
    this.box_0 = box_0;
  }
  dirtyCheckZoneSpec_enqueueDirtyCheck_closure.builtin$cls = "dirtyCheckZoneSpec_enqueueDirtyCheck_closure";
  if (!"name" in dirtyCheckZoneSpec_enqueueDirtyCheck_closure)
    dirtyCheckZoneSpec_enqueueDirtyCheck_closure.name = "dirtyCheckZoneSpec_enqueueDirtyCheck_closure";
  $desc = $collectedClasses.dirtyCheckZoneSpec_enqueueDirtyCheck_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  dirtyCheckZoneSpec_enqueueDirtyCheck_closure.prototype = $desc;
  function dirtyCheckZoneSpec_wrapCallback(enqueueDirtyCheck_1) {
    this.enqueueDirtyCheck_1 = enqueueDirtyCheck_1;
  }
  dirtyCheckZoneSpec_wrapCallback.builtin$cls = "dirtyCheckZoneSpec_wrapCallback";
  if (!"name" in dirtyCheckZoneSpec_wrapCallback)
    dirtyCheckZoneSpec_wrapCallback.name = "dirtyCheckZoneSpec_wrapCallback";
  $desc = $collectedClasses.dirtyCheckZoneSpec_wrapCallback;
  if ($desc instanceof Array)
    $desc = $desc[1];
  dirtyCheckZoneSpec_wrapCallback.prototype = $desc;
  function dirtyCheckZoneSpec_wrapCallback_closure(enqueueDirtyCheck_2, parent_3, zone_4, f_5) {
    this.enqueueDirtyCheck_2 = enqueueDirtyCheck_2;
    this.parent_3 = parent_3;
    this.zone_4 = zone_4;
    this.f_5 = f_5;
  }
  dirtyCheckZoneSpec_wrapCallback_closure.builtin$cls = "dirtyCheckZoneSpec_wrapCallback_closure";
  if (!"name" in dirtyCheckZoneSpec_wrapCallback_closure)
    dirtyCheckZoneSpec_wrapCallback_closure.name = "dirtyCheckZoneSpec_wrapCallback_closure";
  $desc = $collectedClasses.dirtyCheckZoneSpec_wrapCallback_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  dirtyCheckZoneSpec_wrapCallback_closure.prototype = $desc;
  function dirtyCheckZoneSpec_wrapUnaryCallback(enqueueDirtyCheck_6) {
    this.enqueueDirtyCheck_6 = enqueueDirtyCheck_6;
  }
  dirtyCheckZoneSpec_wrapUnaryCallback.builtin$cls = "dirtyCheckZoneSpec_wrapUnaryCallback";
  if (!"name" in dirtyCheckZoneSpec_wrapUnaryCallback)
    dirtyCheckZoneSpec_wrapUnaryCallback.name = "dirtyCheckZoneSpec_wrapUnaryCallback";
  $desc = $collectedClasses.dirtyCheckZoneSpec_wrapUnaryCallback;
  if ($desc instanceof Array)
    $desc = $desc[1];
  dirtyCheckZoneSpec_wrapUnaryCallback.prototype = $desc;
  function dirtyCheckZoneSpec_wrapUnaryCallback_closure(enqueueDirtyCheck_7, parent_8, zone_9, f_10) {
    this.enqueueDirtyCheck_7 = enqueueDirtyCheck_7;
    this.parent_8 = parent_8;
    this.zone_9 = zone_9;
    this.f_10 = f_10;
  }
  dirtyCheckZoneSpec_wrapUnaryCallback_closure.builtin$cls = "dirtyCheckZoneSpec_wrapUnaryCallback_closure";
  if (!"name" in dirtyCheckZoneSpec_wrapUnaryCallback_closure)
    dirtyCheckZoneSpec_wrapUnaryCallback_closure.name = "dirtyCheckZoneSpec_wrapUnaryCallback_closure";
  $desc = $collectedClasses.dirtyCheckZoneSpec_wrapUnaryCallback_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  dirtyCheckZoneSpec_wrapUnaryCallback_closure.prototype = $desc;
  function ListChangeRecord(object, _unmodifiableRemoved, _removed, _list_diff$_index, _addedCount) {
    this.object = object;
    this._unmodifiableRemoved = _unmodifiableRemoved;
    this._removed = _removed;
    this._list_diff$_index = _list_diff$_index;
    this._addedCount = _addedCount;
  }
  ListChangeRecord.builtin$cls = "ListChangeRecord";
  if (!"name" in ListChangeRecord)
    ListChangeRecord.name = "ListChangeRecord";
  $desc = $collectedClasses.ListChangeRecord;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListChangeRecord.prototype = $desc;
  ListChangeRecord.prototype.get$object = function() {
    return this.object;
  };
  ListChangeRecord.prototype.get$object.$reflectable = 1;
  ListChangeRecord.prototype.get$_unmodifiableRemoved = function() {
    return this._unmodifiableRemoved;
  };
  ListChangeRecord.prototype.get$_unmodifiableRemoved.$reflectable = 1;
  ListChangeRecord.prototype.set$_unmodifiableRemoved = function(v) {
    return this._unmodifiableRemoved = v;
  };
  ListChangeRecord.prototype.set$_unmodifiableRemoved.$reflectable = 1;
  ListChangeRecord.prototype.get$_removed = function() {
    return this._removed;
  };
  ListChangeRecord.prototype.get$_removed.$reflectable = 1;
  ListChangeRecord.prototype.set$_removed = function(v) {
    return this._removed = v;
  };
  ListChangeRecord.prototype.set$_removed.$reflectable = 1;
  ListChangeRecord.prototype.get$_list_diff$_index = function() {
    return this._list_diff$_index;
  };
  ListChangeRecord.prototype.get$_list_diff$_index.$reflectable = 1;
  ListChangeRecord.prototype.set$_list_diff$_index = function(v) {
    return this._list_diff$_index = v;
  };
  ListChangeRecord.prototype.set$_list_diff$_index.$reflectable = 1;
  ListChangeRecord.prototype.get$_addedCount = function() {
    return this._addedCount;
  };
  ListChangeRecord.prototype.get$_addedCount.$reflectable = 1;
  ListChangeRecord.prototype.set$_addedCount = function(v) {
    return this._addedCount = v;
  };
  ListChangeRecord.prototype.set$_addedCount.$reflectable = 1;
  function ListPathObserver(list, _itemPath, _observers, _list_path_observer$_subs, _sub, _scheduled, _list_path_observer$_value, change_notifier$ChangeNotifier$_change_notifier$_changes, change_notifier$ChangeNotifier$_change_notifier$_records) {
    this.list = list;
    this._itemPath = _itemPath;
    this._observers = _observers;
    this._list_path_observer$_subs = _list_path_observer$_subs;
    this._sub = _sub;
    this._scheduled = _scheduled;
    this._list_path_observer$_value = _list_path_observer$_value;
    this.change_notifier$ChangeNotifier$_change_notifier$_changes = change_notifier$ChangeNotifier$_change_notifier$_changes;
    this.change_notifier$ChangeNotifier$_change_notifier$_records = change_notifier$ChangeNotifier$_change_notifier$_records;
  }
  ListPathObserver.builtin$cls = "ListPathObserver";
  if (!"name" in ListPathObserver)
    ListPathObserver.name = "ListPathObserver";
  $desc = $collectedClasses.ListPathObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListPathObserver.prototype = $desc;
  ListPathObserver.prototype.get$list = function() {
    return this.list;
  };
  ListPathObserver.prototype.get$list.$reflectable = 1;
  ListPathObserver.prototype.get$_itemPath = function() {
    return this._itemPath;
  };
  ListPathObserver.prototype.get$_itemPath.$reflectable = 1;
  ListPathObserver.prototype.get$_observers = function() {
    return this._observers;
  };
  ListPathObserver.prototype.get$_observers.$reflectable = 1;
  ListPathObserver.prototype.get$_list_path_observer$_subs = function() {
    return this._list_path_observer$_subs;
  };
  ListPathObserver.prototype.get$_list_path_observer$_subs.$reflectable = 1;
  ListPathObserver.prototype.get$_sub = function() {
    return this._sub;
  };
  ListPathObserver.prototype.get$_sub.$reflectable = 1;
  ListPathObserver.prototype.set$_sub = function(v) {
    return this._sub = v;
  };
  ListPathObserver.prototype.set$_sub.$reflectable = 1;
  ListPathObserver.prototype.get$_scheduled = function() {
    return this._scheduled;
  };
  ListPathObserver.prototype.get$_scheduled.$reflectable = 1;
  ListPathObserver.prototype.set$_scheduled = function(v) {
    return this._scheduled = v;
  };
  ListPathObserver.prototype.set$_scheduled.$reflectable = 1;
  ListPathObserver.prototype.get$_list_path_observer$_value = function() {
    return this._list_path_observer$_value;
  };
  ListPathObserver.prototype.get$_list_path_observer$_value.$reflectable = 1;
  ListPathObserver.prototype.set$_list_path_observer$_value = function(v) {
    return this._list_path_observer$_value = v;
  };
  ListPathObserver.prototype.set$_list_path_observer$_value.$reflectable = 1;
  function ListPathObserver_closure(this_0) {
    this.this_0 = this_0;
  }
  ListPathObserver_closure.builtin$cls = "ListPathObserver_closure";
  if (!"name" in ListPathObserver_closure)
    ListPathObserver_closure.name = "ListPathObserver_closure";
  $desc = $collectedClasses.ListPathObserver_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListPathObserver_closure.prototype = $desc;
  function ListPathObserver_dispose_closure() {
  }
  ListPathObserver_dispose_closure.builtin$cls = "ListPathObserver_dispose_closure";
  if (!"name" in ListPathObserver_dispose_closure)
    ListPathObserver_dispose_closure.name = "ListPathObserver_dispose_closure";
  $desc = $collectedClasses.ListPathObserver_dispose_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListPathObserver_dispose_closure.prototype = $desc;
  function ListPathObserver__reduce_closure() {
  }
  ListPathObserver__reduce_closure.builtin$cls = "ListPathObserver__reduce_closure";
  if (!"name" in ListPathObserver__reduce_closure)
    ListPathObserver__reduce_closure.name = "ListPathObserver__reduce_closure";
  $desc = $collectedClasses.ListPathObserver__reduce_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListPathObserver__reduce_closure.prototype = $desc;
  function ObservableProperty() {
  }
  ObservableProperty.builtin$cls = "ObservableProperty";
  if (!"name" in ObservableProperty)
    ObservableProperty.name = "ObservableProperty";
  $desc = $collectedClasses.ObservableProperty;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObservableProperty.prototype = $desc;
  function Reflectable() {
  }
  Reflectable.builtin$cls = "Reflectable";
  if (!"name" in Reflectable)
    Reflectable.name = "Reflectable";
  $desc = $collectedClasses.Reflectable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Reflectable.prototype = $desc;
  function Observable(_changes, _mirror, _values, _records) {
    this._changes = _changes;
    this._mirror = _mirror;
    this._values = _values;
    this._records = _records;
  }
  Observable.builtin$cls = "Observable";
  if (!"name" in Observable)
    Observable.name = "Observable";
  $desc = $collectedClasses.Observable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Observable.prototype = $desc;
  Observable.prototype.get$_changes = function() {
    return this._changes;
  };
  Observable.prototype.get$_changes.$reflectable = 1;
  Observable.prototype.set$_changes = function(v) {
    return this._changes = v;
  };
  Observable.prototype.set$_changes.$reflectable = 1;
  Observable.prototype.get$_mirror = function() {
    return this._mirror;
  };
  Observable.prototype.get$_mirror.$reflectable = 1;
  Observable.prototype.set$_mirror = function(v) {
    return this._mirror = v;
  };
  Observable.prototype.set$_mirror.$reflectable = 1;
  Observable.prototype.get$_values = function() {
    return this._values;
  };
  Observable.prototype.get$_values.$reflectable = 1;
  Observable.prototype.set$_values = function(v) {
    return this._values = v;
  };
  Observable.prototype.set$_values.$reflectable = 1;
  Observable.prototype.get$_records = function() {
    return this._records;
  };
  Observable.prototype.get$_records.$reflectable = 1;
  Observable.prototype.set$_records = function(v) {
    return this._records = v;
  };
  Observable.prototype.set$_records.$reflectable = 1;
  function Observable_deliverChanges_closure(box_0, this_1) {
    this.box_0 = box_0;
    this.this_1 = this_1;
  }
  Observable_deliverChanges_closure.builtin$cls = "Observable_deliverChanges_closure";
  if (!"name" in Observable_deliverChanges_closure)
    Observable_deliverChanges_closure.name = "Observable_deliverChanges_closure";
  $desc = $collectedClasses.Observable_deliverChanges_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Observable_deliverChanges_closure.prototype = $desc;
  function ObservableBox(_observable_box$_value, change_notifier$ChangeNotifier$_change_notifier$_changes, change_notifier$ChangeNotifier$_change_notifier$_records) {
    this._observable_box$_value = _observable_box$_value;
    this.change_notifier$ChangeNotifier$_change_notifier$_changes = change_notifier$ChangeNotifier$_change_notifier$_changes;
    this.change_notifier$ChangeNotifier$_change_notifier$_records = change_notifier$ChangeNotifier$_change_notifier$_records;
  }
  ObservableBox.builtin$cls = "ObservableBox";
  if (!"name" in ObservableBox)
    ObservableBox.name = "ObservableBox";
  $desc = $collectedClasses.ObservableBox;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObservableBox.prototype = $desc;
  ObservableBox.prototype.get$_observable_box$_value = function() {
    return this._observable_box$_value;
  };
  ObservableBox.prototype.get$_observable_box$_value.$reflectable = 1;
  ObservableBox.prototype.set$_observable_box$_value = function(v) {
    return this._observable_box$_value = v;
  };
  ObservableBox.prototype.set$_observable_box$_value.$reflectable = 1;
  function ObservableList(_listRecords, _listChanges, _list, change_notifier$ChangeNotifier$_change_notifier$_changes, change_notifier$ChangeNotifier$_change_notifier$_records) {
    this._listRecords = _listRecords;
    this._listChanges = _listChanges;
    this._list = _list;
    this.change_notifier$ChangeNotifier$_change_notifier$_changes = change_notifier$ChangeNotifier$_change_notifier$_changes;
    this.change_notifier$ChangeNotifier$_change_notifier$_records = change_notifier$ChangeNotifier$_change_notifier$_records;
  }
  ObservableList.builtin$cls = "ObservableList";
  if (!"name" in ObservableList)
    ObservableList.name = "ObservableList";
  $desc = $collectedClasses.ObservableList;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObservableList.prototype = $desc;
  ObservableList.prototype.get$_listRecords = function() {
    return this._listRecords;
  };
  ObservableList.prototype.get$_listRecords.$reflectable = 1;
  ObservableList.prototype.set$_listRecords = function(v) {
    return this._listRecords = v;
  };
  ObservableList.prototype.set$_listRecords.$reflectable = 1;
  ObservableList.prototype.get$_listChanges = function() {
    return this._listChanges;
  };
  ObservableList.prototype.get$_listChanges.$reflectable = 1;
  ObservableList.prototype.set$_listChanges = function(v) {
    return this._listChanges = v;
  };
  ObservableList.prototype.set$_listChanges.$reflectable = 1;
  ObservableList.prototype.get$_list = function() {
    return this._list;
  };
  ObservableList.prototype.get$_list.$reflectable = 1;
  function ListBase_ChangeNotifier(change_notifier$ChangeNotifier$_change_notifier$_changes, change_notifier$ChangeNotifier$_change_notifier$_records) {
    this.change_notifier$ChangeNotifier$_change_notifier$_changes = change_notifier$ChangeNotifier$_change_notifier$_changes;
    this.change_notifier$ChangeNotifier$_change_notifier$_records = change_notifier$ChangeNotifier$_change_notifier$_records;
  }
  ListBase_ChangeNotifier.builtin$cls = "ListBase_ChangeNotifier";
  if (!"name" in ListBase_ChangeNotifier)
    ListBase_ChangeNotifier.name = "ListBase_ChangeNotifier";
  $desc = $collectedClasses.ListBase_ChangeNotifier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListBase_ChangeNotifier.prototype = $desc;
  ChangeNotifier.prototype.get$_change_notifier$_changes = function() {
    return this.change_notifier$ChangeNotifier$_change_notifier$_changes;
  };
  ChangeNotifier.prototype.get$_change_notifier$_changes.$reflectable = 1;
  ChangeNotifier.prototype.set$_change_notifier$_changes = function(v) {
    return this.change_notifier$ChangeNotifier$_change_notifier$_changes = v;
  };
  ChangeNotifier.prototype.set$_change_notifier$_changes.$reflectable = 1;
  ChangeNotifier.prototype.get$_change_notifier$_records = function() {
    return this.change_notifier$ChangeNotifier$_change_notifier$_records;
  };
  ChangeNotifier.prototype.get$_change_notifier$_records.$reflectable = 1;
  ChangeNotifier.prototype.set$_change_notifier$_records = function(v) {
    return this.change_notifier$ChangeNotifier$_change_notifier$_records = v;
  };
  ChangeNotifier.prototype.set$_change_notifier$_records.$reflectable = 1;
  function ObservableList_listChanges_closure(this_0) {
    this.this_0 = this_0;
  }
  ObservableList_listChanges_closure.builtin$cls = "ObservableList_listChanges_closure";
  if (!"name" in ObservableList_listChanges_closure)
    ObservableList_listChanges_closure.name = "ObservableList_listChanges_closure";
  $desc = $collectedClasses.ObservableList_listChanges_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObservableList_listChanges_closure.prototype = $desc;
  function MapChangeRecord(key, oldValue, newValue, isInsert, isRemove) {
    this.key = key;
    this.oldValue = oldValue;
    this.newValue = newValue;
    this.isInsert = isInsert;
    this.isRemove = isRemove;
  }
  MapChangeRecord.builtin$cls = "MapChangeRecord";
  if (!"name" in MapChangeRecord)
    MapChangeRecord.name = "MapChangeRecord";
  $desc = $collectedClasses.MapChangeRecord;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MapChangeRecord.prototype = $desc;
  MapChangeRecord.prototype.get$key = function() {
    return this.key;
  };
  MapChangeRecord.prototype.get$key.$reflectable = 1;
  MapChangeRecord.prototype.get$oldValue = function() {
    return this.oldValue;
  };
  MapChangeRecord.prototype.get$oldValue.$reflectable = 1;
  MapChangeRecord.prototype.get$newValue = function() {
    return this.newValue;
  };
  MapChangeRecord.prototype.get$newValue.$reflectable = 1;
  MapChangeRecord.prototype.get$isInsert = function() {
    return this.isInsert;
  };
  MapChangeRecord.prototype.get$isInsert.$reflectable = 1;
  MapChangeRecord.prototype.get$isRemove = function() {
    return this.isRemove;
  };
  MapChangeRecord.prototype.get$isRemove.$reflectable = 1;
  function ObservableMap(_observable_map$_map, change_notifier$ChangeNotifier$_change_notifier$_changes, change_notifier$ChangeNotifier$_change_notifier$_records) {
    this._observable_map$_map = _observable_map$_map;
    this.change_notifier$ChangeNotifier$_change_notifier$_changes = change_notifier$ChangeNotifier$_change_notifier$_changes;
    this.change_notifier$ChangeNotifier$_change_notifier$_records = change_notifier$ChangeNotifier$_change_notifier$_records;
  }
  ObservableMap.builtin$cls = "ObservableMap";
  if (!"name" in ObservableMap)
    ObservableMap.name = "ObservableMap";
  $desc = $collectedClasses.ObservableMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObservableMap.prototype = $desc;
  ObservableMap.prototype.get$_observable_map$_map = function() {
    return this._observable_map$_map;
  };
  ObservableMap.prototype.get$_observable_map$_map.$reflectable = 1;
  function ObservableMap_addAll_closure(this_0) {
    this.this_0 = this_0;
  }
  ObservableMap_addAll_closure.builtin$cls = "ObservableMap_addAll_closure";
  if (!"name" in ObservableMap_addAll_closure)
    ObservableMap_addAll_closure.name = "ObservableMap_addAll_closure";
  $desc = $collectedClasses.ObservableMap_addAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObservableMap_addAll_closure.prototype = $desc;
  function ObservableMap_clear_closure(this_0) {
    this.this_0 = this_0;
  }
  ObservableMap_clear_closure.builtin$cls = "ObservableMap_clear_closure";
  if (!"name" in ObservableMap_clear_closure)
    ObservableMap_clear_closure.name = "ObservableMap_clear_closure";
  $desc = $collectedClasses.ObservableMap_clear_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObservableMap_clear_closure.prototype = $desc;
  function PathObserver(path, _isValid, _segments, _path_observer$_values, _subs, _computeValue, change_notifier$ChangeNotifier$_change_notifier$_changes, change_notifier$ChangeNotifier$_change_notifier$_records) {
    this.path = path;
    this._isValid = _isValid;
    this._segments = _segments;
    this._path_observer$_values = _path_observer$_values;
    this._subs = _subs;
    this._computeValue = _computeValue;
    this.change_notifier$ChangeNotifier$_change_notifier$_changes = change_notifier$ChangeNotifier$_change_notifier$_changes;
    this.change_notifier$ChangeNotifier$_change_notifier$_records = change_notifier$ChangeNotifier$_change_notifier$_records;
  }
  PathObserver.builtin$cls = "PathObserver";
  if (!"name" in PathObserver)
    PathObserver.name = "PathObserver";
  $desc = $collectedClasses.PathObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PathObserver.prototype = $desc;
  PathObserver.prototype.get$path = function() {
    return this.path;
  };
  PathObserver.prototype.get$path.$reflectable = 1;
  PathObserver.prototype.get$_isValid = function() {
    return this._isValid;
  };
  PathObserver.prototype.get$_isValid.$reflectable = 1;
  PathObserver.prototype.get$_segments = function() {
    return this._segments;
  };
  PathObserver.prototype.get$_segments.$reflectable = 1;
  PathObserver.prototype.get$_path_observer$_values = function() {
    return this._path_observer$_values;
  };
  PathObserver.prototype.get$_path_observer$_values.$reflectable = 1;
  PathObserver.prototype.set$_path_observer$_values = function(v) {
    return this._path_observer$_values = v;
  };
  PathObserver.prototype.set$_path_observer$_values.$reflectable = 1;
  PathObserver.prototype.get$_subs = function() {
    return this._subs;
  };
  PathObserver.prototype.get$_subs.$reflectable = 1;
  PathObserver.prototype.set$_subs = function(v) {
    return this._subs = v;
  };
  PathObserver.prototype.set$_subs.$reflectable = 1;
  PathObserver.prototype.get$_computeValue = function() {
    return this._computeValue;
  };
  PathObserver.prototype.get$_computeValue.$reflectable = 1;
  function PathObserver_closure() {
  }
  PathObserver_closure.builtin$cls = "PathObserver_closure";
  if (!"name" in PathObserver_closure)
    PathObserver_closure.name = "PathObserver_closure";
  $desc = $collectedClasses.PathObserver_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PathObserver_closure.prototype = $desc;
  function PathObserver_bindSync_closure(this_0, callback_1) {
    this.this_0 = this_0;
    this.callback_1 = callback_1;
  }
  PathObserver_bindSync_closure.builtin$cls = "PathObserver_bindSync_closure";
  if (!"name" in PathObserver_bindSync_closure)
    PathObserver_bindSync_closure.name = "PathObserver_bindSync_closure";
  $desc = $collectedClasses.PathObserver_bindSync_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PathObserver_bindSync_closure.prototype = $desc;
  function PathObserver__observeIndex_closure(this_0, i_1, segment_2) {
    this.this_0 = this_0;
    this.i_1 = i_1;
    this.segment_2 = segment_2;
  }
  PathObserver__observeIndex_closure.builtin$cls = "PathObserver__observeIndex_closure";
  if (!"name" in PathObserver__observeIndex_closure)
    PathObserver__observeIndex_closure.name = "PathObserver__observeIndex_closure";
  $desc = $collectedClasses.PathObserver__observeIndex_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PathObserver__observeIndex_closure.prototype = $desc;
  function PathObserver__observeIndex_closure0(this_3, i_4, segment_5) {
    this.this_3 = this_3;
    this.i_4 = i_4;
    this.segment_5 = segment_5;
  }
  PathObserver__observeIndex_closure0.builtin$cls = "PathObserver__observeIndex_closure0";
  if (!"name" in PathObserver__observeIndex_closure0)
    PathObserver__observeIndex_closure0.name = "PathObserver__observeIndex_closure0";
  $desc = $collectedClasses.PathObserver__observeIndex_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PathObserver__observeIndex_closure0.prototype = $desc;
  function closure() {
  }
  closure.builtin$cls = "closure";
  if (!"name" in closure)
    closure.name = "closure";
  $desc = $collectedClasses.closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure.prototype = $desc;
  function _toObservableDeep_closure(result_0) {
    this.result_0 = result_0;
  }
  _toObservableDeep_closure.builtin$cls = "_toObservableDeep_closure";
  if (!"name" in _toObservableDeep_closure)
    _toObservableDeep_closure.name = "_toObservableDeep_closure";
  $desc = $collectedClasses._toObservableDeep_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _toObservableDeep_closure.prototype = $desc;
  function NonGrowableListView(_unmodifiable_collection$_source) {
    this._unmodifiable_collection$_source = _unmodifiable_collection$_source;
  }
  NonGrowableListView.builtin$cls = "NonGrowableListView";
  if (!"name" in NonGrowableListView)
    NonGrowableListView.name = "NonGrowableListView";
  $desc = $collectedClasses.NonGrowableListView;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NonGrowableListView.prototype = $desc;
  NonGrowableListView.prototype.get$_unmodifiable_collection$_source = function() {
    return this._unmodifiable_collection$_source;
  };
  NonGrowableListView.prototype.get$_unmodifiable_collection$_source.$reflectable = 1;
  NonGrowableListView.prototype.set$_unmodifiable_collection$_source = function(v) {
    return this._unmodifiable_collection$_source = v;
  };
  NonGrowableListView.prototype.set$_unmodifiable_collection$_source.$reflectable = 1;
  function UnmodifiableSetView(_unmodifiable_collection$_source) {
    this._unmodifiable_collection$_source = _unmodifiable_collection$_source;
  }
  UnmodifiableSetView.builtin$cls = "UnmodifiableSetView";
  if (!"name" in UnmodifiableSetView)
    UnmodifiableSetView.name = "UnmodifiableSetView";
  $desc = $collectedClasses.UnmodifiableSetView;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnmodifiableSetView.prototype = $desc;
  UnmodifiableSetView.prototype.get$_unmodifiable_collection$_source = function() {
    return this._unmodifiable_collection$_source;
  };
  UnmodifiableSetView.prototype.get$_unmodifiable_collection$_source.$reflectable = 1;
  UnmodifiableSetView.prototype.set$_unmodifiable_collection$_source = function(v) {
    return this._unmodifiable_collection$_source = v;
  };
  UnmodifiableSetView.prototype.set$_unmodifiable_collection$_source.$reflectable = 1;
  function UnmodifiableMapView(_unmodifiable_collection$_source) {
    this._unmodifiable_collection$_source = _unmodifiable_collection$_source;
  }
  UnmodifiableMapView.builtin$cls = "UnmodifiableMapView";
  if (!"name" in UnmodifiableMapView)
    UnmodifiableMapView.name = "UnmodifiableMapView";
  $desc = $collectedClasses.UnmodifiableMapView;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnmodifiableMapView.prototype = $desc;
  UnmodifiableMapView.prototype.get$_unmodifiable_collection$_source = function() {
    return this._unmodifiable_collection$_source;
  };
  UnmodifiableMapView.prototype.get$_unmodifiable_collection$_source.$reflectable = 1;
  UnmodifiableMapView.prototype.set$_unmodifiable_collection$_source = function(v) {
    return this._unmodifiable_collection$_source = v;
  };
  UnmodifiableMapView.prototype.set$_unmodifiable_collection$_source.$reflectable = 1;
  function _IterableView() {
  }
  _IterableView.builtin$cls = "_IterableView";
  if (!"name" in _IterableView)
    _IterableView.name = "_IterableView";
  $desc = $collectedClasses._IterableView;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _IterableView.prototype = $desc;
  return [JS_CONST, Interceptor, JSBool, JSNull, JavaScriptObject, PlainJavaScriptObject, UnknownJavaScriptObject, JSArray, JSArray_retainWhere_closure, JSMutableArray, JSFixedArray, JSExtendableArray, JSNumber, JSInt, JSDouble, JSPositiveInt, JSUInt32, JSUInt31, JSString, _CodeUnits, startRootIsolate_closure, startRootIsolate_closure0, _Manager, _IsolateContext, _EventLoop, _EventLoop__runHelper_next, _IsolateEvent, _MainManagerStub, IsolateNatives__processWorkerMessage_closure, IsolateNatives_spawn_closure, IsolateNatives__startNonWorker_closure, _BaseSendPort, _NativeJsSendPort, _NativeJsSendPort_send_closure, _WorkerSendPort, RawReceivePortImpl, ReceivePortImpl, _JsSerializer, _JsCopier, _JsDeserializer, _JsVisitedMap, _MessageTraverserVisitedMap, _MessageTraverser, _Copier, _Copier_visitMap_closure, _Serializer, _Deserializer, TimerImpl, TimerImpl_internalCallback, TimerImpl_internalCallback0, TimerImpl$periodic_closure, NoSideEffects, NoThrows, NoInline, JSInvocationMirror, CachedInvocation, CachedCatchAllInvocation, CachedNoSuchMethodInvocation, ReflectionInfo, Primitives_functionNoSuchMethod_closure, Primitives_applyFunction_closure, TypeErrorDecoder, NullError, JsNoSuchMethodError, UnknownJsTypeError, unwrapException_saveStackTrace, _StackTrace, invokeClosure_closure, invokeClosure_closure0, invokeClosure_closure1, invokeClosure_closure2, invokeClosure_closure3, Closure, TearOffClosure, BoundClosure, CastErrorImplementation, RuntimeError, RuntimeType, RuntimeFunctionType, DynamicRuntimeType, UnimplementedNoSuchMethodError, TypeImpl, TypeVariable, JSSyntaxRegExp, _MatchImplementation, _AllMatchesIterable, _AllMatchesIterator, StringMatch, BenchmarkBase, BenchmarkBase_measure_closure, BenchmarkBase_measure_closure0, ListIterable, SubListIterable, ListIterator, MappedIterable, EfficientLengthMappedIterable, MappedIterator, MappedListIterable, WhereIterable, WhereIterator, ExpandIterable, ExpandIterator, TakeIterable, EfficientLengthTakeIterable, TakeIterator, TakeWhileIterable, TakeWhileIterator, SkipIterable, EfficientLengthSkipIterable, SkipIterator, SkipWhileIterable, SkipWhileIterator, EmptyIterator, UnmodifiableListMixin, UnmodifiableListBase, _ListIndicesIterable, ListMapView, ReversedListIterable, Symbol, JsMirrorSystem, JsMirrorSystem_computeLibrariesByName_closure, JsMirror, JsIsolateMirror, JsIsolateMirror_rootLibrary_closure, JsDeclarationMirror, JsTypeVariableMirror, JsTypeMirror, JsLibraryMirror, JsDeclarationMirror_JsObjectMirror, JsLibraryMirror___members_addToResult, JsLibraryMirror_declarations_addToResult, filterMembers_closure, JsMixinApplication, JsTypeMirror_JsObjectMirror, JsObjectMirror, JsInstanceMirror, JsInstanceMirror_invoke_closure, JsTypeBoundClassMirror, JsTypeBoundClassMirror_typeArguments_addTypeArgument, JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure, JsTypeBoundClassMirror_typeArguments_closure, JsTypeBoundClassMirror_declarations_closure, JsTypeBoundClassMirror_newInstance_closure, JsTypeBoundClassMirror__asRuntimeType_closure, JsClassMirror, JsTypeMirror_JsObjectMirror0, JsClassMirror_declarations_addToResult, JsClassMirror_declarations_closure, JsClassMirror__getInvokedInstance_closure, JsClassMirror__getInvokedInstance_closure0, JsClassMirror__getSuperinterfacesWithOwner_lookupType, JsVariableMirror, JsClosureMirror, JsMethodMirror, JsParameterMirror, JsTypedefMirror, BrokenClassMirror, JsFunctionTypeMirror, typeMirrorFromRuntimeTypeRepresentation_getTypeArgument, typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable, extractMetadata_closure, extractMetadata_closure0, UnmodifiableMapView0, computeReflectiveNames_closure, _load_closure, _load_closure0, _load_closure1, _load_closure2, _AsyncError, _UncaughtAsyncError, _BroadcastStream, _BroadcastSubscriptionLink, _BroadcastSubscription, _BroadcastStreamController, _SyncBroadcastStreamController, _SyncBroadcastStreamController__sendData_closure, _SyncBroadcastStreamController__sendError_closure, _SyncBroadcastStreamController__sendDone_closure, _AsyncBroadcastStreamController, _AsBroadcastStreamController, _DoneSubscription, DeferredLibrary, Future, Future_Future_closure, Future_Future$microtask_closure, Future_Future$delayed_closure, Future_Future$delayed_closure0, Future_wait_handleError, Future_wait_closure, Future_forEach_nextElement, Future_forEach_nextElement_closure, TimeoutException, Completer, _Completer, _AsyncCompleter, _SyncCompleter, _Future, _Future__addListener_closure, _Future__chainFutures_closure, _Future__chainFutures_closure0, _Future__asyncComplete_closure, _Future__asyncCompleteError_closure, _Future__propagateToListeners_closure, _Future__propagateToListeners_closure0, _Future__propagateToListeners__closure, _Future__propagateToListeners__closure0, _Future_timeout_closure, _Future_timeout_closure0, _Future_timeout_closure1, _Future_timeout_closure2, _AsyncRun, Stream, Stream_Stream$fromFuture_closure, Stream_Stream$fromFuture_closure0, Stream_Stream$fromIterable_closure, Stream_Stream$periodic_closure, Stream_Stream$periodic_sendEvent, Stream_Stream$periodic_startPeriodicTimer, Stream_Stream$periodic_startPeriodicTimer_closure, Stream_Stream$periodic_closure1, Stream_Stream$periodic_closure2, Stream_Stream$periodic_closure3, Stream_Stream$periodic__closure, Stream_Stream$periodic_closure0, Stream_pipe_closure, Stream_reduce_closure, Stream_reduce__closure, Stream_reduce__closure0, Stream_reduce_closure0, Stream_fold_closure, Stream_fold__closure, Stream_fold__closure0, Stream_fold_closure1, Stream_fold_closure0, Stream_join_closure, Stream_join_closure1, Stream_join_closure0, Stream_contains_closure, Stream_contains__closure, Stream_contains__closure0, Stream_contains_closure0, Stream_forEach_closure, Stream_forEach__closure, Stream_forEach__closure0, Stream_forEach_closure0, Stream_every_closure, Stream_every__closure, Stream_every__closure0, Stream_every_closure0, Stream_any_closure, Stream_any__closure, Stream_any__closure0, Stream_any_closure0, Stream_length_closure, Stream_length_closure0, Stream_isEmpty_closure, Stream_isEmpty_closure0, Stream_toList_closure, Stream_toList_closure0, Stream_toSet_closure, Stream_toSet_closure0, Stream_first_closure, Stream_first_closure0, Stream_last_closure, Stream_last_closure0, Stream_single_closure, Stream_single_closure0, Stream_firstWhere_closure, Stream_firstWhere__closure, Stream_firstWhere__closure0, Stream_firstWhere_closure0, Stream_lastWhere_closure, Stream_lastWhere__closure, Stream_lastWhere__closure0, Stream_lastWhere_closure0, Stream_singleWhere_closure, Stream_singleWhere__closure, Stream_singleWhere__closure0, Stream_singleWhere_closure0, Stream_elementAt_closure, Stream_elementAt_closure0, Stream_timeout_onData, Stream_timeout_onError, Stream_timeout_onDone, Stream_timeout_closure, Stream_timeout__closure, Stream_timeout__closure0, Stream_timeout_closure0, Stream_timeout_closure1, Stream_timeout_closure2, StreamSubscription, EventSink, StreamView, StreamConsumer, StreamSink, StreamTransformer, StreamIterator, _ControllerEventSinkWrapper, StreamController, _StreamControllerLifecycle, _StreamController, _StreamController__subscribe_closure, _StreamController__recordCancel_complete, _SyncStreamControllerDispatch, _AsyncStreamControllerDispatch, _AsyncStreamController, _StreamController__AsyncStreamControllerDispatch, _SyncStreamController, _StreamController__SyncStreamControllerDispatch, _NoCallbacks, _NoCallbackAsyncStreamController, _StreamController__AsyncStreamControllerDispatch0, _NoCallbackSyncStreamController, _StreamController__SyncStreamControllerDispatch0, _ControllerStream, _ControllerSubscription, _StreamSinkWrapper, _AddStreamState, _AddStreamState_makeErrorHandler_closure, _StreamControllerAddStreamState, _EventSink, _EventDispatch, _BufferingStreamSubscription, _BufferingStreamSubscription_asFuture_closure, _BufferingStreamSubscription_asFuture_closure0, _BufferingStreamSubscription__sendError_sendError, _BufferingStreamSubscription__sendDone_sendDone, _StreamImpl, _GeneratedStreamImpl, _IterablePendingEvents, _DelayedEvent, _DelayedData, _DelayedError, _DelayedDone, _PendingEvents, _PendingEvents_schedule_closure, _StreamImplEvents, _BroadcastLinkedList, _DummyStreamSubscription, _DummyStreamSubscription_pause_closure, _AsBroadcastStream, _BroadcastSubscriptionWrapper, _StreamIteratorImpl, _cancelAndError_closure, _cancelAndErrorClosure_closure, _cancelAndValue_closure, _ForwardingStream, _ForwardingStreamSubscription, _WhereStream, _MapStream, _ExpandStream, _HandleErrorStream, _TakeStream, _TakeWhileStream, _SkipStream, _SkipWhileStream, _DistinctStream, _EventSinkWrapper, _SinkTransformerStreamSubscription, _StreamSinkTransformer, _BoundSinkStream, _HandlerEventSink, _StreamHandlerTransformer, _StreamHandlerTransformer_closure, _StreamSubscriptionTransformer, _BoundSubscriptionStream, Timer, ZoneSpecification, _ZoneSpecification, ZoneDelegate, Zone, _ZoneDelegate, _BaseZone, _BaseZone_bindCallback_closure, _BaseZone_bindCallback_closure0, _BaseZone_bindUnaryCallback_closure, _BaseZone_bindUnaryCallback_closure0, _BaseZone_bindBinaryCallback_closure, _BaseZone_bindBinaryCallback_closure0, _CustomizedZone, _rootHandleUncaughtError_closure, _rootHandleUncaughtError__closure, _rootFork_closure, _RootZoneSpecification, _RootZone, runZoned_closure, _HashMap, _HashMap_values_closure, _HashMap_containsValue_closure, _HashMap_addAll_closure, _IdentityHashMap, _CustomHashMap, _CustomHashMap_closure, HashMapKeyIterable, HashMapKeyIterator, _LinkedHashMap, _LinkedHashMap_values_closure, _LinkedHashMap_containsValue_closure, _LinkedHashMap_addAll_closure, _LinkedIdentityHashMap, _LinkedCustomHashMap, _LinkedCustomHashMap_closure, LinkedHashMapCell, LinkedHashMapKeyIterable, LinkedHashMapKeyIterator, _HashSet, _HashSet_retainAll_closure, _HashSet_retainWhere_closure, _IdentityHashSet, _CustomHashSet, _CustomHashSet_closure, HashSetIterator, _LinkedHashSet, _LinkedHashSet_retainAll_closure, _LinkedIdentityHashSet, _LinkedCustomHashSet, _LinkedCustomHashSet_closure, LinkedHashSetCell, LinkedHashSetIterator, UnmodifiableListView, HashMap, _HashSetBase, HashSet, IterableMixin, IterableBase, HasNextIterator, LinkedHashMap, LinkedHashSet, LinkedList, LinkedList_addAll_closure, _LinkedListIterator, _LinkedListLink, LinkedListEntry, ListBase, ListMixin, Maps, Maps_getValues_closure, Maps_mapToString_closure, Queue, DoubleLinkedQueueEntry, _DoubleLinkedQueueEntrySentinel, DoubleLinkedQueue, _DoubleLinkedQueueIterator, ListQueue, _ListQueueIterator, _SplayTreeNode, _SplayTreeMapNode, _SplayTree, _TypeTest, SplayTreeMap, SplayTreeMap_closure, SplayTreeMap_addAll_closure, SplayTreeMap_containsValue_visit, _SplayTreeIterator, _SplayTreeKeyIterable, _SplayTreeValueIterable, _SplayTreeKeyIterator, _SplayTreeValueIterator, _SplayTreeNodeIterator, SplayTreeSet, _SplayTree_IterableMixin, SplayTreeSet_closure, _convertJsonToDart_closure, _convertJsonToDart_walk, AsciiCodec, _UnicodeSubsetEncoder, AsciiEncoder, _UnicodeSubsetEncoderSink, _UnicodeSubsetDecoder, AsciiDecoder, _AsciiDecoderSink, ByteConversionSink, ByteConversionSinkBase, _ByteAdapterSink, _ByteCallbackSink, ChunkedConversionSink, _SimpleCallbackSink, _EventSinkAdapter, _ConverterStreamEventSink, Codec, _FusedCodec, _InvertedCodec, Converter, Converter_bind_closure, _FusedConverter, Encoding, Encoding_decodeStream_closure, Encoding_decodeStream_closure0, HtmlEscapeMode, HtmlEscape, _HtmlEscapeSink, JsonUnsupportedObjectError, JsonCyclicError, JsonCodec, _ReviverJsonCodec, JsonEncoder, _JsonEncoderSink, JsonDecoder, _JsonDecoderSink, _JsonStringifier, _JsonStringifier_stringifyJsonValue_closure, Latin1Codec, Latin1Encoder, Latin1Decoder, _Latin1DecoderSink, LineSplitter, _LineSplitterSink, StringConversionSink, ClosableStringSink, _ClosableStringSink, _StringConversionSinkAsStringSinkAdapter, StringConversionSinkBase, StringConversionSinkMixin, _StringSinkConversionSink, _StringCallbackSink, _StringAdapterSink, _Utf8StringSinkAdapter, _Utf8ConversionSink, Utf8Codec, Utf8Encoder, _Utf8Encoder, _Utf8EncoderSink, _Utf8Encoder_StringConversionSinkMixin, Utf8Decoder, _Utf8Decoder, Function__toMangledNames_closure, _ListConstructorSentinel, NoSuchMethodError_toString_closure, Deprecated, _Override, _Proxy, bool, Comparable, DateTime, DateTime_parse_parseIntOrZero, DateTime_parse_parseDoubleOrZero, DateTime_toString_fourDigits, DateTime_toString_threeDigits, DateTime_toString_twoDigits, $double, Duration, Duration_toString_sixDigits, Duration_toString_twoDigits, Error, AssertionError, TypeError, CastError, NullThrownError, ArgumentError, RangeError, FallThroughError, AbstractClassInstantiationError, NoSuchMethodError, UnsupportedError, UnimplementedError, StateError, ConcurrentModificationError, OutOfMemoryError, StackOverflowError, CyclicInitializationError, Exception, _ExceptionImplementation, FormatException, IntegerDivisionByZeroException, Expando, Function, $int, Invocation, Iterable, _GeneratorIterable, _GeneratorIterator, BidirectionalIterator, Iterator, List, Map, Null, num, Object, Pattern, Match, RegExp, Set, StackTrace, Stopwatch, String, Runes, RuneIterator, StringBuffer, StringSink, Symbol0, Type, Uri, Uri__checkNonWindowsPathReservedCharacters_closure, Uri__checkWindowsPathReservedCharacters_closure, Uri__makeScheme_isSchemeLowerCharacter, Uri__makeScheme_isSchemeCharacter, Uri__makePath_closure, Uri__makeQuery_closure, Uri__normalize_isNormalizedHexDigit, Uri__normalize_isLowerCaseHexDigit, Uri__normalize_isUnreserved, Uri__normalize_normalizeHexDigit, Uri__normalize_decodeHexDigitPair, Uri__normalize_fillResult, Uri_hashCode_combine, Uri_splitQueryString_closure, Uri_parseIPv4Address_error, Uri_parseIPv4Address_closure, Uri_parseIPv6Address_error, Uri_parseIPv6Address_parseHex, Uri_parseIPv6Address_closure, Uri__uriEncode_byteToHex, _UnmodifiableMap, Isolate_spawn_closure, Isolate_spawnUri_closure, IsolateSpawnException, Isolate, SendPort, ReceivePort, RawReceivePort, _IsolateUnhandledException, _JSRandom, _Random, _JenkinsSmiHash, Point, Random, _RectangleBase, Rectangle, MutableRectangle, MirrorSystem, MirrorSystem_findLibrary_closure, Mirror, IsolateMirror, DeclarationMirror, ObjectMirror, InstanceMirror, ClosureMirror, LibraryMirror, TypeMirror, ClassMirror, FunctionTypeMirror, TypeVariableMirror, TypedefMirror, MethodMirror, VariableMirror, ParameterMirror, SourceLocation, Comment, MirrorsUsed, SerializerBase, ConflictManager, DormError, DormManager, DormManager_queueAll_closure, DormManager_unqueueAll_closure, DormManager_drain_closure, DormManager_drain_closure0, DormManager_drain_closure1, DormManager_drain_closure2, DormManager__scanRecursively_closure, DormManager__scanRecursively__closure, DormManagerCommitStructure, DormProxy, EntityAssembler, EntityAssembler_scan_closure, EntityAssembler_registerProxies_closure, EntityAssembler_registerProxies_closure0, EntityAssembler__assemble_closure, EntityAssembler__solveConflictsIfAny_closure, EntityAssembler__solveConflictsIfAny__closure, EntityAssembler__solveConflictsIfAny__closure0, EntityAssembler__updateCollectionsWith_closure, EntityAssembler__existingFromScanRegistry_closure, EntityAssembler__existingFromScanRegistry_closure0, EntityFactory, EntityFactory_removePostProcessor_closure, EntityFactory_spawn_closure, EntityFactory_spawn__closure, EntityFactory_spawnSingle_closure, EntityPostProcessor, EntityKey, EntityKey_getFirstSibling_closure, EntityKey_getFirstSibling_closure0, EntityKey_getSiblings_closure, EntityScan, EntityScan_buildKey_closure, EntityScan_EntityScan$fromScan_closure, EntityScan_detectIfMutable_closure, EntityScan_detectIfMutable_closure0, EntityScan__entity_changeHandler_closure, EntityScan__entity_changeHandler_closure0, _DormProxyListEntry, LazyLoader, LazyLoader_removeHandler_closure, LazyLoader_load_closure, LazyLoader_load_closure0, _InternalLazyLoaderHandler, MetadataCache, _PropertyMetadataCache, MetadataExternalized, MetadataValidationReason, MetadataValidationResult, Entity, Entity_operator$index_closure, Entity_operator$index_closure0, Entity_operator$indexSet_closure, Entity_operator$indexSet_closure0, Entity_setDefaultPropertyValue_closure, Entity_setDefaultPropertyValue_closure0, Entity_setCurrentStatusIsDefaultStatus_closure, Entity_revertChanges_closure, Entity_getEntityTree_closure, Entity_getEntityTree__closure, Entity_getIdentityFields_closure, Entity_getInsertValues_closure, Entity_isUnsaved_closure, Entity_isUnsaved_closure0, Entity_setUnsaved_closure, Entity_getPropertyList_closure, Entity_getMetadata_closure, Entity_getMetadata_closure0, Entity_validate_closure, Entity_isDirty_closure, Entity_isDirty_closure0, Entity_readExternal_closure, Entity_toString_closure, Entity__scheduleDirtyCheck_closure, Entity__duplicateImpl_closure, Entity__duplicateImpl_closure0, Entity__duplicateImpl_closure1, Entity__duplicateImpl__closure, Entity__writeExternalImpl_closure, Entity__writeExternalImpl__closure, Entity__writeExternalImpl__closure0, Entity__writeExternalImpl___closure, _ClonedEntityEntry, Ref, Property, NotNullable, DefaultValue, Transient, Id, Immutable, Lazy, LabelField, Annotation, Externalizable, SerializationType, Serializer, SerializerMixin, SerializerMixin_removeRule_closure, _InternalConvertor, SerializerJson, SerializerJson_convertIn_closure, SerializerJson_convertIn_closure0, SerializerJson_convertOut_closure, SerializerJson_convertOut_closure0, TemplateBenchmark, _runBenchmark_closure, TestEntitySuperClass, TestEntity, Logger, Logger_Logger_closure, Level, LogRecord, onPropertyChange_closure, ChangeNotifier, ChangeRecord, PropertyChangeRecord, CompoundPathObserver, CompoundPathObserver__resolve_closure, dirtyCheckZoneSpec_enqueueDirtyCheck, dirtyCheckZoneSpec_enqueueDirtyCheck_closure, dirtyCheckZoneSpec_wrapCallback, dirtyCheckZoneSpec_wrapCallback_closure, dirtyCheckZoneSpec_wrapUnaryCallback, dirtyCheckZoneSpec_wrapUnaryCallback_closure, ListChangeRecord, ListPathObserver, ListPathObserver_closure, ListPathObserver_dispose_closure, ListPathObserver__reduce_closure, ObservableProperty, Reflectable, Observable, Observable_deliverChanges_closure, ObservableBox, ObservableList, ListBase_ChangeNotifier, ObservableList_listChanges_closure, MapChangeRecord, ObservableMap, ObservableMap_addAll_closure, ObservableMap_clear_closure, PathObserver, PathObserver_closure, PathObserver_bindSync_closure, PathObserver__observeIndex_closure, PathObserver__observeIndex_closure0, closure, _toObservableDeep_closure, NonGrowableListView, UnmodifiableSetView, UnmodifiableMapView, _IterableView];
}
